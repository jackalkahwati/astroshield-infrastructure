server {
    listen 80;
    server_name astroshield.sdataplab.com localhost;
    
    # Create a specific endpoint to test connectivity
    location = /test {
        add_header Content-Type text/plain;
        return 200 "HTTP Test OK";
    }
    
    # Redirect all other HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name astroshield.sdataplab.com localhost;
    
    # Access logs with detailed information
    access_log /var/log/nginx/astroshield-access.log;
    error_log /var/log/nginx/astroshield-error.log debug;
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/astroshield.crt;
    ssl_certificate_key /etc/nginx/ssl/astroshield.key;
    
    # Allow all TLS versions for compatibility
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    
    # Disable client certificate verification (for now, to test connectivity)
    ssl_verify_client off;
    
    # Create a specific endpoint to test connectivity
    location = /test {
        add_header Content-Type text/plain;
        return 200 "HTTPS Test OK";
    }
    
    # Redirect root to settings page
    location = / {
        return 301 /settings;
    }
    
    # Main frontend application
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300;
        proxy_connect_timeout 10;
        proxy_send_timeout 300;
        
        # Fallback in case of errors
        error_page 502 503 504 = @static_fallback;
    }
    
    # Static fallback
    location @static_fallback {
        root /var/www/html;
        try_files /index-static.html =404;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # API endpoints 
    location /api/ {
        proxy_pass http://localhost:8080/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300;
        proxy_connect_timeout 10;
        proxy_send_timeout 300;
    }
    
    # Health endpoint
    location /health {
        proxy_pass http://localhost:8080/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Status endpoint
    location /status {
        proxy_pass http://localhost:8080/api/status;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
} 