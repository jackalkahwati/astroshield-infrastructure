# Force Nixpacks to use Python only
[build]
builder = "nixpacks"

[build.env]
# Official way to skip Node detection
NIXPACKS_IGNORE_STACKS = "node"

# Force Python as the language
NIXPACKS_LANG = "python"

# Set Python code location
NIXPACKS_SUBPATH = "backend"

# Python version
NIXPACKS_PYTHON_VERSION = "3.11"

# Ensure pip and other Python packages are installed
NIXPACKS_PKGS = "python311Packages.python python311Packages.pip python311Packages.setuptools python311Packages.wheel python311Packages.uvicorn"

# Build command from within NIXPACKS_SUBPATH
NIXPACKS_BUILD_CMD = "pip install -r requirements.txt"

# Define how to start the Python application
[run]
startCommand = "uvicorn app.main:app --host 0.0.0.0 --port $PORT --workers 4"

# Health check and deployment configuration
[deploy]
healthcheckPath = "/api/v1/health"
healthcheckTimeout = 100
healthcheckInterval = 15
restartPolicyType = "on_failure"
restartPolicyMaxRetries = 5

# Environment variables for the running application
[deploy.env]
ENVIRONMENT = "production"
PYTHONPATH = "/app/backend"
PYTHONUNBUFFERED = "1"

[phases.setup]
nixPkgs = ["python311", "postgresql_16", "gcc"]

[phases.install]
cmds = ["python -m venv --copies /opt/venv", ". /opt/venv/bin/activate", "pip install -r requirements.txt"]

[phases.start]
cmd = "uvicorn app.main:app --host 0.0.0.0 --port $PORT --workers 4" 