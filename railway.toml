# Force Nixpacks to use Python only
[build]
builder = "nixpacks"

# Core environment configuration
[build.env]
# Tells Nixpacks to ignore Node completely
NIXPACKS_IGNORE_STACKS = "node"

# Forces detection as Python
NIXPACKS_LANG = "python"

# Specifies that Python code is in the "backend" folder
NIXPACKS_SUBPATH = "backend"

# Python version
NIXPACKS_PYTHON_VERSION = "3.11"

# Port for the running application
PORT = "8000"

# Prevent default install behavior
NIXPACKS_NO_INSTALL = "true"

# Define all build phases explicitly
[build.phases.setup]
nixPkgs = [
    "python311Full",  # This includes pip and other essential packages
    "postgresql_16",
    "gcc"
]

[build.phases.install]
cmds = [
    "which python",  # Debug: show which Python we're using
    "python --version",  # Debug: show Python version
    "python -c 'import sys; print(sys.path)'",  # Debug: show Python path
    "python -m ensurepip --upgrade",  # Ensure pip is installed
    "python -m pip install --upgrade pip setuptools wheel",  # Upgrade pip
    "python -m pip install -r requirements.txt"  # Install requirements
]

[build.phases.start]
cmd = "python -m uvicorn app.main:app --host 0.0.0.0 --port $PORT --workers 4"

# Health check and deployment configuration
[deploy]
healthcheckPath = "/api/v1/health"
healthcheckTimeout = 100
healthcheckInterval = 15
restartPolicyType = "on_failure"
restartPolicyMaxRetries = 5

# Environment variables for the running application
[deploy.env]
ENVIRONMENT = "production"
PYTHONPATH = "/app/backend"
PYTHONUNBUFFERED = "1"
TZ = "UTC" 