[build-system]
requires = ["setuptools>=65.5.1", "wheel>=0.40.0"]
build-backend = "setuptools.build_meta"

[project]
name = "asttroshield"
version = "0.1.0"
description = "AstroShield Platform for Space Domain Awareness"
requires-python = ">=3.8"
authors = [
    {name = "AstroShield Team", email = "support@example.com"}
]
dependencies = [
    # Core dependencies
    "fastapi==0.109.0",
    "pydantic==2.5.3",
    "pydantic-settings==2.1.0",
    "uvicorn==0.25.0",
    "python-dotenv==1.0.0",
    "SQLAlchemy==2.0.25",
    "alembic==1.13.1",
    "psycopg2-binary==2.9.10",
    "redis==5.0.1",
    "httpx==0.26.0",
    "websockets==12.0",
    
    # Authentication
    "python-jose==3.3.0",
    "passlib==1.7.4",
    "python-multipart==0.0.6",
    "email_validator==2.2.0",
    "bcrypt==4.2.1",
    
    # Data processing
    "numpy>=1.24.0",
    
    # Messaging
    "kafka-python==2.0.2",
    
    # Monitoring and observability
    "prometheus-client==0.20.0",
    "opentelemetry-api==1.21.0",
    "opentelemetry-sdk==1.21.0",
    "opentelemetry-exporter-jaeger==1.21.0",
    "opentelemetry-instrumentation-fastapi==0.42b0",
    
    # Scheduling
    "APScheduler==3.11.0",
]

[project.optional-dependencies]
dev = [
    "pytest==7.4.4",
    "pytest-asyncio==0.23.3",
    "pytest-cov==4.1.0",
    "coverage==7.6.10",
]
ml = [
    "torch>=2.0.0",
    "scikit-learn>=1.3.0",
    "pandas>=2.0.0",
]

[tool.pytest.ini_options]
testpaths = ["src/tests", "__tests__"]
python_files = "test_*.py"
asyncio_mode = "strict"
addopts = [
    "--verbose",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--no-cov-on-fail",
    "--durations=10",
]

[tool.coverage.run]
branch = true
source = ["src", "backend/app"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:" ,
    "pass",
    "raise ImportError",
]
fail_under = 85
precision = 2
omit = [
    "*/tests/*",
    "*/migrations/*",
    "setup.py",
]
