{
  "openapi": "3.0.3",
  "info": {
    "title": "Unified Data Library Services API",
    "version": "1.30.0 Daiquiri",
    "description": "Unified Data Library Services OpenAPI v3 documentation.",
    "termsOfService": "storefront/storefront/appConfig/useragreement.html",
    "contact": {
      "name": "Sage Andorka, Deputy, Cross-Mission Ground",
      "email": "unifieddatalibrary@bluestaq.com"
    }
  },
  "tags": [
    {
      "name": "Track",
      "description": "These services provide operations for posting and querying of air, space, and ground 'tracks'. A track is a position and optionally a heading/velocity of an object at a particular timestamp."
    }
  ],
  "externalDocs": {
    "url": "udl/openapi.json"
  },
  "servers": [
    {
      "url": "https://unifieddatalibrary.com"
    }
  ],
  "paths": {
    "/filedrop/udl-missiletrack": {
      "post": {
        "tags": [
          "Track"
        ],
        "description": "Service operation to take multiple missile track records as a POST body and ingest into the database. This operation is intended to be used for automated feeds into UDL. A specific role is required to perform this service operation. Please contact the UDL team for assistance.\n",
        "operationId": "filedrop_udl_missiletrack_post_id",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MissileTrack_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/filedrop/udl-orbittrack": {
      "post": {
        "tags": [
          "Track"
        ],
        "description": "Service operation to take multiple orbit track records as a POST body and ingest into the database. This operation is intended to be used for automated feeds into UDL. A specific role is required to perform this service operation. Please contact the UDL team for assistance.\n",
        "operationId": "filedrop_udl_orbittrack_post_id",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrbitTrack_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/filedrop/udl-tracks": {
      "post": {
        "tags": [
          "Track"
        ],
        "description": "Service operation to take multiple tracks as a POST body and ingest into the database. This operation is intended to be used for automated feeds into UDL. A specific role is required to perform this service operation. Please contact the UDL team for assistance.\n",
        "operationId": "filedrop_udl_tracks_post_id",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Track_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/missiletrack": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Track"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MissileTrack_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "ts",
            "description": "The receipt time of the data by the processing system, in ISO8601 UTC format with microsecond precision. (YYYY-MM-DDTHH:MM:SS.ssssssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/missiletrack/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Track"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "ts",
            "description": "The receipt time of the data by the processing system, in ISO8601 UTC format with microsecond precision. (YYYY-MM-DDTHH:MM:SS.ssssssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/missiletrack/createBulk": {
      "post": {
        "description": "Service operation intended for initial integration only, to take a list of MissileTrack records as a POST body and ingest into the database. This operation is not intended to be used for automated feeds into UDL. Data providers should contact the UDL team for specific role assignments and for instructions on setting up a permanent feed through an alternate mechanism.",
        "tags": [
          "Track"
        ],
        "requestBody": {
          "description": "JSON representation of multiple UDL MissileTrack.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MissileTrack_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/missiletrack/history": {
      "get": {
        "description": "Service operation to dynamically query historical data by a variety of query parameters not specified in this API documentation.  See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Track"
        ],
        "parameters": [
          {
            "description": "optional, fields for retrieval. When omitted, ALL fields are assumed. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid query fields that can be selected.",
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ts",
            "description": "The receipt time of the data by the processing system, in ISO8601 UTC format with microsecond precision. (YYYY-MM-DDTHH:MM:SS.ssssssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MissileTrack_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/missiletrack/history/aodr": {
      "get": {
        "description": "Service operation to dynamically query historical data by a variety of query parameters not specified in this API documentation, then write that data to the Secure Content Store.  See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Track"
        ],
        "parameters": [
          {
            "description": "optional, fields for retrieval. When omitted, ALL fields are assumed. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid query fields that can be selected.",
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, notification method for the created file link. When omitted, EMAIL is assumed. Current valid values are: EMAIL, SMS.",
            "name": "notification",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, field delimiter when the created file is not JSON. Must be a single character chosen from this set: (',', ';', ':', '|'). When omitted, \",\" is used. It is strongly encouraged that your field delimiter be a character unlikely to occur within the data.",
            "name": "outputDelimiter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, output format for the file. When omitted, JSON is assumed. Current valid values are: JSON and CSV.",
            "name": "outputFormat",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ts",
            "description": "The receipt time of the data by the processing system, in ISO8601 UTC format with microsecond precision. (YYYY-MM-DDTHH:MM:SS.ssssssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "202": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/missiletrack/history/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Track"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "ts",
            "description": "The receipt time of the data by the processing system, in ISO8601 UTC format with microsecond precision. (YYYY-MM-DDTHH:MM:SS.ssssssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/missiletrack/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "Track"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/missiletrack/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "Track"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ts",
            "description": "The receipt time of the data by the processing system, in ISO8601 UTC format with microsecond precision. (YYYY-MM-DDTHH:MM:SS.ssssssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MissileTrack_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/orbittrack": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Track"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrbitTrack_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "ts",
            "description": "Track timestamp in ISO8601 UTC format, with microsecond precision. (YYYY-MM-DDTHH:MM:SS.ssssssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/orbittrack/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Track"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "ts",
            "description": "Track timestamp in ISO8601 UTC format, with microsecond precision. (YYYY-MM-DDTHH:MM:SS.ssssssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/orbittrack/createBulk": {
      "post": {
        "description": "Service operation intended for initial integration only, to take a list of orbit track records as a POST body and ingest into the database. This operation is not intended to be used for automated feeds into UDL. Data providers should contact the UDL team for specific role assignments and for instructions on setting up a permanent feed through an alternate mechanism.",
        "tags": [
          "Track"
        ],
        "requestBody": {
          "description": "JSON representation of multiple UDL OrbitTrack.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrbitTrack_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/orbittrack/history": {
      "get": {
        "description": "Service operation to dynamically query historical data by a variety of query parameters not specified in this API documentation.  See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Track"
        ],
        "parameters": [
          {
            "description": "optional, fields for retrieval. When omitted, ALL fields are assumed. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid query fields that can be selected.",
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ts",
            "description": "Track timestamp in ISO8601 UTC format, with microsecond precision. (YYYY-MM-DDTHH:MM:SS.ssssssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrbitTrack_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/orbittrack/history/aodr": {
      "get": {
        "description": "Service operation to dynamically query historical data by a variety of query parameters not specified in this API documentation, then write that data to the Secure Content Store.  See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Track"
        ],
        "parameters": [
          {
            "description": "optional, fields for retrieval. When omitted, ALL fields are assumed. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid query fields that can be selected.",
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, notification method for the created file link. When omitted, EMAIL is assumed. Current valid values are: EMAIL, SMS.",
            "name": "notification",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, field delimiter when the created file is not JSON. Must be a single character chosen from this set: (',', ';', ':', '|'). When omitted, \",\" is used. It is strongly encouraged that your field delimiter be a character unlikely to occur within the data.",
            "name": "outputDelimiter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, output format for the file. When omitted, JSON is assumed. Current valid values are: JSON and CSV.",
            "name": "outputFormat",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ts",
            "description": "Track timestamp in ISO8601 UTC format, with microsecond precision. (YYYY-MM-DDTHH:MM:SS.ssssssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "202": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/orbittrack/history/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Track"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "ts",
            "description": "Track timestamp in ISO8601 UTC format, with microsecond precision. (YYYY-MM-DDTHH:MM:SS.ssssssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/orbittrack/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "Track"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/orbittrack/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "Track"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ts",
            "description": "Track timestamp in ISO8601 UTC format, with microsecond precision. (YYYY-MM-DDTHH:MM:SS.ssssssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrbitTrack_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/track": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Track"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Track_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "ts",
            "description": "Track timestamp in ISO8601 UTC format with microsecond precision. (YYYY-MM-DDTHH:MM:SS.ssssssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/track/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Track"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "ts",
            "description": "Track timestamp in ISO8601 UTC format with microsecond precision. (YYYY-MM-DDTHH:MM:SS.ssssssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/track/createBulk": {
      "post": {
        "description": "Service operation intended for initial integration only, to take a list of Track records as a POST body and ingest into the database. This operation is not intended to be used for automated feeds into UDL. Data providers should contact the UDL team for specific role assignments and for instructions on setting up a permanent feed through an alternate mechanism.",
        "tags": [
          "Track"
        ],
        "requestBody": {
          "description": "JSON representation of multiple UDL Tracks.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Track_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/track/history": {
      "get": {
        "description": "Service operation to dynamically query historical data by a variety of query parameters not specified in this API documentation.  See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Track"
        ],
        "parameters": [
          {
            "description": "optional, fields for retrieval. When omitted, ALL fields are assumed. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid query fields that can be selected.",
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ts",
            "description": "Track timestamp in ISO8601 UTC format with microsecond precision. (YYYY-MM-DDTHH:MM:SS.ssssssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Track_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/track/history/aodr": {
      "get": {
        "description": "Service operation to dynamically query historical data by a variety of query parameters not specified in this API documentation, then write that data to the Secure Content Store.  See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Track"
        ],
        "parameters": [
          {
            "description": "optional, fields for retrieval. When omitted, ALL fields are assumed. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid query fields that can be selected.",
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, notification method for the created file link. When omitted, EMAIL is assumed. Current valid values are: EMAIL, SMS.",
            "name": "notification",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, field delimiter when the created file is not JSON. Must be a single character chosen from this set: (',', ';', ':', '|'). When omitted, \",\" is used. It is strongly encouraged that your field delimiter be a character unlikely to occur within the data.",
            "name": "outputDelimiter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, output format for the file. When omitted, JSON is assumed. Current valid values are: JSON and CSV.",
            "name": "outputFormat",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ts",
            "description": "Track timestamp in ISO8601 UTC format with microsecond precision. (YYYY-MM-DDTHH:MM:SS.ssssssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "202": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/track/history/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Track"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "ts",
            "description": "Track timestamp in ISO8601 UTC format with microsecond precision. (YYYY-MM-DDTHH:MM:SS.ssssssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/track/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "Track"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/track/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "Track"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ts",
            "description": "Track timestamp in ISO8601 UTC format with microsecond precision. (YYYY-MM-DDTHH:MM:SS.ssssssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Track_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/trackdetails": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Track"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrackDetails_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "ts",
            "description": "Track timestamp in ISO8601 UTC format with microsecond precision. (YYYY-MM-DDTHH:MM:SS.ssssssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/trackdetails/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Track"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "ts",
            "description": "Track timestamp in ISO8601 UTC format with microsecond precision. (YYYY-MM-DDTHH:MM:SS.ssssssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/trackdetails/createBulk": {
      "post": {
        "description": "Service operation intended for initial integration only, to take a list of Track Details records as a POST body and ingest into the database. This operation is not intended to be used for automated feeds into UDL. Data providers should contact the UDL team for specific role assignments and for instructions on setting up a permanent feed through an alternate mechanism.",
        "tags": [
          "Track"
        ],
        "requestBody": {
          "description": "JSON representation of multiple UDL TrackDetails.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TrackDetails_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/trackdetails/history": {
      "get": {
        "description": "Service operation to dynamically query historical data by a variety of query parameters not specified in this API documentation.  See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Track"
        ],
        "parameters": [
          {
            "description": "optional, fields for retrieval. When omitted, ALL fields are assumed. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid query fields that can be selected.",
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ts",
            "description": "Track timestamp in ISO8601 UTC format with microsecond precision. (YYYY-MM-DDTHH:MM:SS.ssssssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrackDetails_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/trackdetails/history/aodr": {
      "get": {
        "description": "Service operation to dynamically query historical data by a variety of query parameters not specified in this API documentation, then write that data to the Secure Content Store.  See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Track"
        ],
        "parameters": [
          {
            "description": "optional, fields for retrieval. When omitted, ALL fields are assumed. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid query fields that can be selected.",
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, notification method for the created file link. When omitted, EMAIL is assumed. Current valid values are: EMAIL, SMS.",
            "name": "notification",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, field delimiter when the created file is not JSON. Must be a single character chosen from this set: (',', ';', ':', '|'). When omitted, \",\" is used. It is strongly encouraged that your field delimiter be a character unlikely to occur within the data.",
            "name": "outputDelimiter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, output format for the file. When omitted, JSON is assumed. Current valid values are: JSON and CSV.",
            "name": "outputFormat",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ts",
            "description": "Track timestamp in ISO8601 UTC format with microsecond precision. (YYYY-MM-DDTHH:MM:SS.ssssssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "202": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/trackdetails/history/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Track"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "ts",
            "description": "Track timestamp in ISO8601 UTC format with microsecond precision. (YYYY-MM-DDTHH:MM:SS.ssssssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/trackdetails/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "Track"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/trackdetails/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "Track"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ts",
            "description": "Track timestamp in ISO8601 UTC format with microsecond precision. (YYYY-MM-DDTHH:MM:SS.ssssssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrackDetails_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Antenna_Full": {
        "description": "Model representation of information on on-orbit/spacecraft communication antennas. A spacecraft may have multiple antennas and each antenna can have multiple 'details' records compiled by different sources.",
        "required": [
          "name",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ANTENNA-ID"
          },
          "name": {
            "description": "Antenna name.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "IRIDIUM NEXT 121-ANTENNA-10075"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "antennaDetails": {
            "description": "Read-only collection of additional AntennaDetails by various sources for this organization, ignored on create/update. These details must be created separately via the /udl/antennadetails operations.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AntennaDetails_Full"
            },
            "readOnly": true
          }
        }
      },
      "AntennaDetails_Full": {
        "description": "Detailed information for a spacecraft communication antenna. One antenna may have multiple AntennaDetails records, compiled by various sources.",
        "required": [
          "idAntenna",
          "classificationMarking",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ANTENNADETAILS-ID"
          },
          "idAntenna": {
            "description": "Unique identifier of the parent Antenna.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ANTENNA-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "type": {
            "description": "Type of antenna (e.g. Reflector, Double Reflector, Shaped Reflector, Horn, Parabolic, etc.).",
            "maxLength": 64,
            "type": "string",
            "example": "Reflector"
          },
          "position": {
            "description": "Antenna position (e.g. Top, Nadir, Side).",
            "maxLength": 128,
            "type": "string",
            "example": "Top"
          },
          "mode": {
            "description": "Antenna mode (e.g. TX,RX).",
            "maxLength": 4,
            "enum": [
              "TX",
              "RX"
            ],
            "type": "string",
            "example": "TX"
          },
          "steerable": {
            "description": "Boolean indicating if this antenna is steerable.",
            "type": "boolean",
            "example": false
          },
          "beamForming": {
            "description": "Boolean indicating if this is a beam forming antenna.",
            "type": "boolean",
            "example": false
          },
          "manufacturerOrgId": {
            "description": "ID of the organization that manufactures the antenna.",
            "maxLength": 36,
            "type": "string",
            "example": "MANUFACTUREORG-ID"
          },
          "diameter": {
            "format": "double",
            "description": "Antenna diameter in meters.",
            "type": "number",
            "example": 0.01
          },
          "size": {
            "description": "Array with 1-2 values specifying the length and width (for rectangular) and just length for dipole antennas in meters.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              0.03,
              0.05
            ]
          },
          "startFrequency": {
            "format": "double",
            "description": "Antenna start of frequency range in Mhz.",
            "type": "number",
            "example": 2.1
          },
          "endFrequency": {
            "format": "double",
            "description": "Antenna end of frequency range in Mhz.",
            "type": "number",
            "example": 3.3
          },
          "beamwidth": {
            "format": "double",
            "description": "Array of angles between the half-power (-3 dB) points of the main lobe of the antenna, in degrees.",
            "type": "number",
            "example": 14.1
          },
          "gain": {
            "format": "double",
            "description": "Antenna maximum gain in dBi.",
            "type": "number",
            "example": 20.1
          },
          "gainTolerance": {
            "format": "double",
            "description": "Antenna gain tolerance in dB.",
            "type": "number",
            "example": 5.1
          },
          "polarization": {
            "format": "double",
            "description": "Antenna polarization in degrees.",
            "type": "number",
            "example": 45.1
          },
          "description": {
            "description": "Antenna description.",
            "maxLength": 512,
            "type": "string",
            "example": "Description of antenna A"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "tags": {
            "description": "Optional array of provider/source specific tags for this data, where each element is no longer than 32 characters, used for implementing data owner conditional access controls to restrict access to the data. Should be left null by data providers unless conditional access controls are coordinated with the UDL team.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "PROVIDER_TAG1",
              "PROVIDER_TAG2"
            ]
          },
          "manufacturerOrg": {
            "$ref": "#/components/schemas/Organization_Full"
          }
        }
      },
      "Battery_Full": {
        "description": "Model representation of specific spacecraft battery types.",
        "required": [
          "name",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "BATTERY-ID"
          },
          "name": {
            "description": "Battery name.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "JAK-BATTERY-1479"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "batteryDetails": {
            "description": "Read-only collection of additional BatteryDetails by various sources for this organization, ignored on create/update. These details must be created separately via the /udl/batterydetails operations.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatteryDetails_Full"
            },
            "readOnly": true
          }
        }
      },
      "BatteryDetails_Full": {
        "description": "Detailed information on a spacecraft battery type compiled by a particular source. A Battery record may have multiple details records from several sources.",
        "required": [
          "idBattery",
          "classificationMarking",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "BATTERYDETAILS-ID"
          },
          "idBattery": {
            "description": "Identifier of the parent battery type record.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "BATTERY-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "technology": {
            "description": "Type of battery technology (e.g. Ni-Cd, Ni-H2, Li-ion, etc.).",
            "maxLength": 32,
            "type": "string",
            "example": "Ni-Cd"
          },
          "capacity": {
            "format": "double",
            "description": "Battery capacity in Ah.",
            "type": "number",
            "example": 10.1
          },
          "dischargeDepth": {
            "format": "double",
            "description": "Depth of discharge as a percentage/fraction.",
            "type": "number",
            "example": 0.2
          },
          "model": {
            "description": "Battery model number or name.",
            "maxLength": 128,
            "type": "string",
            "example": "11212"
          },
          "description": {
            "description": "Battery description/notes.",
            "maxLength": 1024,
            "type": "string",
            "example": "example notes"
          },
          "manufacturerOrgId": {
            "description": "ID of the organization that manufactures the battery.",
            "maxLength": 36,
            "type": "string",
            "example": "MANUFACTURERORG-ID"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "tags": {
            "description": "Optional array of provider/source specific tags for this data, where each element is no longer than 32 characters, used for implementing data owner conditional access controls to restrict access to the data. Should be left null by data providers unless conditional access controls are coordinated with the UDL team.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "PROVIDER_TAG1",
              "PROVIDER_TAG2"
            ]
          },
          "manufacturerOrg": {
            "$ref": "#/components/schemas/Organization_Full"
          }
        }
      },
      "Engine_Full": {
        "description": "Known launch vehicle engines and their performance characteristics and limits.  A launch vehicle has 1 to many engines per stage.",
        "required": [
          "name",
          "classificationMarking",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ENGINE-ID"
          },
          "name": {
            "description": "Engine name/variant.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "ENGINE_VARIANT1"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "engineDetails": {
            "description": "Read-only collection of additional EngineDetails by various sources for this engine, ignored on create/update. These details must be created separately via the /udl/enginedetails operations.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EngineDetails_Full"
            },
            "readOnly": true
          }
        }
      },
      "EngineDetails_Full": {
        "description": "Known launch vehicle engine details and performance characteristics and limits compiled by a particular source.  A launch vehicle engine may have several details records from multiple sources.",
        "required": [
          "idEngine",
          "classificationMarking",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ENGINEDETAILS-ID"
          },
          "idEngine": {
            "description": "Identifier of the parent engine record.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ENGINE-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "family": {
            "description": "Engine type or family.",
            "maxLength": 64,
            "type": "string",
            "example": "ENGINE_TYPE1"
          },
          "cycleType": {
            "description": "Engine cycle type (e.g. Electrostatic Ion, Pressure Fed, Hall, Catalytic Decomposition, etc.).",
            "maxLength": 64,
            "type": "string",
            "example": "Pressure Fed"
          },
          "characteristicType": {
            "description": "Engine characteristic type (e.g. Electric, Mono-propellant, Bi-propellant, etc.).",
            "maxLength": 64,
            "type": "string",
            "example": "Electric"
          },
          "manufacturerOrgId": {
            "description": "Organization ID of the engine manufacturer.",
            "maxLength": 36,
            "type": "string",
            "example": "MANUFACTURERORG-ID"
          },
          "specificImpulse": {
            "format": "double",
            "description": "Launch engine specific impulse in seconds.",
            "type": "number",
            "example": 1.1
          },
          "burnTime": {
            "format": "double",
            "description": "Launch engine maximum burn time in seconds.",
            "type": "number",
            "example": 1.1
          },
          "seaLevelThrust": {
            "format": "double",
            "description": "Engine maximum thrust at sea level in Kilo-Newtons.",
            "type": "number",
            "example": 1.1
          },
          "vacuumThrust": {
            "format": "double",
            "description": "Engine maximum thrust in a vacuum in Kilo-Newtons.",
            "type": "number",
            "example": 1.1
          },
          "chamberPressure": {
            "format": "double",
            "description": "Engine chamber pressure in bars.",
            "type": "number",
            "example": 1.1
          },
          "nozzleExpansionRatio": {
            "format": "double",
            "description": "Engine nozzle expansion ratio.",
            "type": "number",
            "example": 1.1
          },
          "maxFirings": {
            "format": "int32",
            "description": "Engine maximum number of firings.",
            "type": "integer",
            "example": 5
          },
          "propellant": {
            "description": "Propellant/fuel type of the engine (e.g. Liquid Hydrogen, Kerosene, Aerozine, etc).",
            "maxLength": 64,
            "type": "string",
            "example": "Liquid"
          },
          "oxidizer": {
            "description": "Oxidizer type (e.g. Nitrogen Tetroxide, Liquid Oxygen, etc).",
            "maxLength": 64,
            "type": "string",
            "example": "Liquid Oxygen"
          },
          "notes": {
            "description": "Notes/Description of the engine.",
            "maxLength": 1024,
            "type": "string",
            "example": "Example notes"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "tags": {
            "description": "Optional array of provider/source specific tags for this data, where each element is no longer than 32 characters, used for implementing data owner conditional access controls to restrict access to the data. Should be left null by data providers unless conditional access controls are coordinated with the UDL team.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "PROVIDER_TAG1",
              "PROVIDER_TAG2"
            ]
          }
        }
      },
      "Location_Full": {
        "description": "Model representation of a location, which is a specific fixed point on the earth and is used to denote the locations of fixed sensors, operating units, etc.",
        "required": [
          "classificationMarking",
          "name",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "idLocation": {
            "description": "Unique identifier of the location, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "LOCATION-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "name": {
            "description": "Location name.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "Example location"
          },
          "countryCode": {
            "description": "The country code. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDL’s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.",
            "maxLength": 16,
            "type": "string",
            "example": "US"
          },
          "lat": {
            "format": "double",
            "description": "WGS84 latitude of the location, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 45.23
          },
          "lon": {
            "format": "double",
            "description": "WGS84 longitude of the location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 179.1
          },
          "altitude": {
            "format": "double",
            "description": "Altitude of the location, in kilometers.",
            "type": "number",
            "example": 10.23
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          }
        }
      },
      "MissileTrack_Abridged": {
        "description": "These services provide operations for querying of all available missile track details and amplifying missile data. A missile track is a position and optionally a heading/velocity of an object across all environments at a particular timestamp. It also includes optional information regarding the identity/type of missile, impact location, launch location and other amplifying object data, if known.",
        "required": [
          "classificationMarking",
          "ts",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system if not provided on create operations.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "MissileTrack_ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "msgType": {
            "description": "The type of external message from which this request originated.",
            "maxLength": 16,
            "type": "string",
            "example": "MSG-TYPE"
          },
          "msgSubType": {
            "description": "The message subtype is a finer grain categorization of message types as many messages can contain a variety of data content within the same structure.  Examples include but are not limited to Initial, Final, Launch, Update, etc.  Users should consult the appropriate documentation, based on the message type, for the definitions of the subtypes that apply to that message.",
            "maxLength": 32,
            "type": "string",
            "example": "Update"
          },
          "msgCreateDate": {
            "format": "date-time",
            "description": "The timestamp of the external message from which this request originated, if applicable, in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-04-25T08:17:01.346Z"
          },
          "env": {
            "description": "The track environment type (AIR, LAND, SPACE, SUBSURFACE, SURFACE, UNKNOWN):\n\n AIR: Between sea level and the Kármán line, which has an altitude of 100 kilometers (62 miles).\n\n LAND: On the surface of dry land.\n\n SPACE: Above the Kármán line, which has an altitude of 100 kilometers (62 miles).\n\n SURFACE: On the surface of a body of water.\n\n SUBSURFACE: Below the surface of a body of water.\n\n UNKNOWN: Environment is not known.\n\n",
            "maxLength": 16,
            "enum": [
              "AIR",
              "LAND",
              "SPACE",
              "SURFACE",
              "SUBSURFACE",
              "UNKNOWN"
            ],
            "type": "string",
            "example": "AIR"
          },
          "objType": {
            "description": "The type of object to which this record refers. The object type may be updated in later records based on assessment of additional data.",
            "maxLength": 32,
            "type": "string",
            "example": "Ballistic"
          },
          "objTypeConf": {
            "format": "int32",
            "description": "Confidence of the object type, 0-100.",
            "type": "integer",
            "example": 90
          },
          "objPlat": {
            "description": "Space Platform field along with the Space Activity field further defines the identity of a Space track (examples: SATELLITE, WEAPON, PATROL). The object platform type. Intended as, but not constrained to, MIL-STD-6016 environment dependent platform type designations. The platform type can be reported as either a combination of the code and environment (e.g. 14/LAND) or as the descriptive representations (e.g. COMBAT VEHICLE), which are equivalent.",
            "maxLength": 32,
            "type": "string",
            "example": "WEAPON"
          },
          "objIdent": {
            "description": "The estimated identity of the track object (ASSUMED FRIEND, FRIEND, HOSTILE, NEUTRAL, PENDING, SUSPECT, UNKNOWN):\n\n ASSUMED FRIEND: Track assumed to be a friend due to the object characteristics, behavior, and/or origin.\n\n FRIEND: Track object supporting friendly forces and belonging to a declared friendly nation or entity.\n\n HOSTILE: Track object belonging to an opposing nation, party, group, or entity deemed to contribute to a threat to friendly forces or their mission due to its behavior, characteristics, nationality, or origin.\n\n NEUTRAL: Track object whose characteristics, behavior, nationality, and/or origin indicate that it is neither supporting nor opposing friendly forces or their mission.\n\n PENDING: Track object which has not been evaluated.\n\n SUSPECT: Track object deemed potentially hostile due to the object characteristics, behavior, nationality, and/or origin.\n\n UNKNOWN: Track object which has been evaluated and does not meet criteria for any standard identity.\n\n",
            "maxLength": 32,
            "enum": [
              "ASSUMED FRIEND",
              "FRIEND",
              "HOSTILE",
              "NEUTRAL",
              "PENDING",
              "SUSPECT",
              "UNKNOWN"
            ],
            "type": "string",
            "example": "FRIEND"
          },
          "spaceAmp": {
            "description": "Space amplification indicates additional information on the space environment being reported (examples: NUCLEAR WARHEAD, FUEL-AIR EXPLOSIVE WARHEAD, DEBRIS).",
            "maxLength": 32,
            "type": "string",
            "example": "NUCLEAR WARHEAD"
          },
          "objAct": {
            "description": "Space activity (examples: RECONNAISSANCE, ANTISPACE WARFARE, TELEVISION). The activity in which the track object is engaged. Intended as, but not constrained to, MIL-STD-6016 environment dependent activity designations. The activity can be reported as either a combination of the code and environment (e.g. 65/AIR) or as the descriptive enumeration (e.g. DIVERTING), which are equivalent.",
            "maxLength": 32,
            "type": "string",
            "example": "HOLDING"
          },
          "spaceSpecType": {
            "description": "Specific type of point or track with an environment of space.",
            "maxLength": 32,
            "type": "string",
            "example": "SS-21_MOD_2_CRBM"
          },
          "acftSubType": {
            "description": "Subtype is a finer grain categorization of missile types. Examples include but are not limited to SRBM, MRBM, IRBM, LRBM, ICBM, SLBM. \n\n&nbsp;SRBM - Short-Range Ballistic Missile\n\n&nbsp;MRBM - Medium-Range Ballistic Missile\n\n&nbsp;IRBM - Intermediate-Range Ballistic Missile\n\n&nbsp;LRBM - Long-Range Ballistic Missile\n\n&nbsp;ICBM - Intercontinental Ballistic Missile\n\n&nbsp;SLBM - Submarine-Launched Ballistic Missile.\n\n",
            "maxLength": 16,
            "type": "string",
            "example": "SLBM"
          },
          "name": {
            "description": "Track name.",
            "maxLength": 48,
            "type": "string",
            "example": "TRACK-NAME"
          },
          "callSign": {
            "description": "The call sign currently assigned to the track object.",
            "maxLength": 24,
            "type": "string",
            "example": "Charlie"
          },
          "lostTrkInd": {
            "description": "Indicates whether or not the missile is considered lost.",
            "type": "boolean",
            "example": false
          },
          "trackId": {
            "description": "Track ID within the originating system.",
            "maxLength": 36,
            "type": "string",
            "example": "102288"
          },
          "parentTrackId": {
            "description": "Track ID of the parent track, within the originating system, from which the track was developed.",
            "maxLength": 36,
            "type": "string",
            "example": "102288"
          },
          "muidSrcTrk": {
            "description": "Track ID for the source of the missile-unique identifier.",
            "maxLength": 36,
            "type": "string",
            "example": "MUID-SRC-ID"
          },
          "muidSrc": {
            "description": "Source of the missile-unique identifier (MUID).",
            "maxLength": 36,
            "type": "string",
            "example": "MUID-SRC"
          },
          "alert": {
            "description": "A track may be designated as a non-alert track or an alert track.\n\nExamples include but are not limited to:\n\n&nbsp;Non-alert tracks – choose None (Blank).\n\n&nbsp;Alert tracks – enter the proper alert classification:\n\n&nbsp;HIT - High Interest Track\n\n&nbsp;TGT - Target\n\n&nbsp;SUS - Suspect Carrier\n\n&nbsp;NSP - Cleared Suspect.\n\n",
            "maxLength": 4,
            "type": "string",
            "example": "HIT"
          },
          "mslStatus": {
            "description": "Missile status enumeration examples include but are not limited to:\n\n&nbsp;AT LAUNCH \n\n&nbsp;AT OBSERVATION \n\n&nbsp;FLYING \n\n&nbsp;IMPACTED \n\n&nbsp;LOST \n\n&nbsp;STALE\n\n&nbsp;DEBRIS.\n\n",
            "maxLength": 32,
            "type": "string",
            "example": "AT LAUNCH"
          },
          "ts": {
            "format": "date-time",
            "description": "The receipt time of the data by the processing system, in ISO8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "aouRptType": {
            "description": "The Area of Uncertainty (AoU) type (BEARING, ELLIPSE, OTHER) definition. This type defines the elements of the aouEllp array and is required if aouEllp is not null. See the aouEllp field definition for specific information.",
            "maxLength": 40,
            "type": "string",
            "example": "ELLIPSE"
          },
          "aouRptData": {
            "description": "Three element array representing an Area of Uncertainty (AoU). The array element definitions and units are type specific depending on the aouType specified in this record:\n\n\n\n&nbsp;ELLIPSE:\n\n&nbsp;&nbsp;brg - orientation in degrees of the ellipse\n\n&nbsp;&nbsp;a1 - semi-major axis in kilometers\n\n&nbsp;&nbsp;a2 - semi-minor axis in kilometers\n\n\n\n&nbsp;BEARING (BEARING BOX or MTST BEARING BOX):\n\n&nbsp;&nbsp;brg - orientation in degrees of the bearing box\n\n&nbsp;&nbsp;a1 - length of bearing box in kilometers\n\n&nbsp;&nbsp;a2 - half-width of bearing box in kilometers\n\n\n\n&nbsp;OTHER (All other type values):\n\n&nbsp;&nbsp;brg - line of bearing in degrees true\n\n&nbsp;&nbsp;a1 - bearing error in degrees\n\n&nbsp;&nbsp;a2 - estimated range in kilometers.",
            "maxItems": 3,
            "minItems": 3,
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              34.3,
              26.5,
              1.2
            ]
          },
          "containment": {
            "format": "double",
            "description": "The percentage of time that the estimated AoU will \"cover\" the true position of the track.",
            "type": "number",
            "example": 90.64
          },
          "trkConf": {
            "format": "double",
            "description": "Overall track confidence estimate (not standardized, but typically a value between 0 and 1, with 0 indicating lowest confidence).",
            "type": "number",
            "example": 0.95
          },
          "trkQual": {
            "format": "int32",
            "description": "Track Quality is reported as an integer from 0-15. Track Quality specifies the reliability of the positional information of a reported track, with higher values indicating higher track quality; i.e., lower errors in reported position.",
            "type": "integer",
            "example": 1
          },
          "angElev": {
            "format": "double",
            "description": "Angle of elevation/depression between observer and missile in degrees.",
            "type": "number",
            "example": 15.2
          },
          "senMode": {
            "description": "Last report type received from the sensor (for example, OBSBO = observation burnout).",
            "maxLength": 64,
            "type": "string",
            "example": "OBSBO"
          },
          "infoSource": {
            "description": "Source code for source of information used to detect track.",
            "maxLength": 64,
            "type": "string",
            "example": "S1"
          },
          "boosting": {
            "description": "Indicates whether or not the missile is currently in a state of boosting.",
            "type": "boolean",
            "example": true
          },
          "polarSingLocLat": {
            "format": "double",
            "description": "Azimuth corridor reference point latitude.",
            "type": "number",
            "example": 19.88550102
          },
          "polarSingLocLon": {
            "format": "double",
            "description": "Azimuth corridor reference point longitude.",
            "type": "number",
            "example": 46.74596844
          },
          "emgInd": {
            "description": "Indicates whether or not a track has an emergency.",
            "type": "boolean",
            "example": true
          },
          "dropPtInd": {
            "description": "The drop-point indicator setting.",
            "type": "boolean",
            "example": true
          },
          "spaceAmpConf": {
            "format": "int32",
            "description": "Confidence level of the amplifying characteristics. Values range from 0 to 6.",
            "type": "integer",
            "example": 6
          },
          "launchTime": {
            "format": "date-time",
            "description": "Missile launch timestamp in ISO8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "launchLat": {
            "format": "double",
            "description": "WGS-84 latitude of the missile launch point, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 19.88550102
          },
          "launchLon": {
            "format": "double",
            "description": "WGS-84 longitude of the missile launch point, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": 46.74596844
          },
          "azCorr": {
            "format": "double",
            "description": "Missile azimuth corridor data.",
            "type": "number",
            "example": 12.876
          },
          "burnoutAlt": {
            "format": "double",
            "description": "Track point burnout altitude relative to WGS-84 ellipsoid, in kilometers.",
            "type": "number",
            "example": 30567.452
          },
          "launchAouType": {
            "description": "The Area of Uncertainty (AoU) type (BEARING, ELLIPSE, OTHER) definition. This type defines the elements of the aouEllp array and is required if aouEllp is not null. See the aouEllp field definition for specific information.",
            "maxLength": 40,
            "type": "string",
            "example": "ELLIPSE"
          },
          "launchAouData": {
            "description": "Three element array representing an Area of Uncertainty (AoU). The array element definitions and units are type specific depending on the aouType specified in this record:\n\n\n\n&nbsp;ELLIPSE:\n\n&nbsp;&nbsp;brg - orientation in degrees of the ellipse\n\n&nbsp;&nbsp;a1 - semi-major axis in kilometers\n\n&nbsp;&nbsp;a2 - semi-minor axis in kilometers\n\n\n\n&nbsp;BEARING (BEARING BOX or MTST BEARING BOX):\n\n&nbsp;&nbsp;brg - orientation in degrees of the bearing box\n\n&nbsp;&nbsp;a1 - length of bearing box in kilometers\n\n&nbsp;&nbsp;a2 - half-width of bearing box in kilometers\n\n\n\n&nbsp;OTHER (All other type values):\n\n&nbsp;&nbsp;brg - line of bearing in degrees true\n\n&nbsp;&nbsp;a1 - bearing error in degrees\n\n&nbsp;&nbsp;a2 - estimated range in kilometers.",
            "maxItems": 3,
            "minItems": 3,
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "impactTime": {
            "format": "date-time",
            "description": "Estimated time of impact timestamp in ISO8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "impactLat": {
            "format": "double",
            "description": "WGS-84 latitude of the missile object impact point, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 19.88550102
          },
          "impactLon": {
            "format": "double",
            "description": "WGS-84 longitude of the missile object impact point, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": 46.74596844
          },
          "impactAouType": {
            "description": "The Area of Uncertainty (AoU) type (BEARING, ELLIPSE, OTHER) definition. This type defines the elements of the aouEllp array and is required if aouEllp is not null. See the aouEllp field definition for specific information.",
            "maxLength": 40,
            "type": "string",
            "example": "ELLIPSE"
          },
          "impactAouData": {
            "description": "Three element array representing an Area of Uncertainty (AoU). The array element definitions and units are type specific depending on the aouType specified in this record:\n\n\n\n&nbsp;ELLIPSE:\n\n&nbsp;&nbsp;brg - orientation in degrees of the ellipse\n\n&nbsp;&nbsp;a1 - semi-major axis in kilometers\n\n&nbsp;&nbsp;a2 - semi-minor axis in kilometers\n\n\n\n&nbsp;BEARING (BEARING BOX or MTST BEARING BOX):\n\n&nbsp;&nbsp;brg - orientation in degrees of the bearing box\n\n&nbsp;&nbsp;a1 - length of bearing box in kilometers\n\n&nbsp;&nbsp;a2 - half-width of bearing box in kilometers\n\n\n\n&nbsp;OTHER (All other type values):\n\n&nbsp;&nbsp;brg - line of bearing in degrees true\n\n&nbsp;&nbsp;a1 - bearing error in degrees\n\n&nbsp;&nbsp;a2 - estimated range in kilometers.",
            "maxItems": 3,
            "minItems": 3,
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              34.3,
              26.5,
              1.2
            ]
          },
          "vectors": {
            "description": "Array of MissileTrackVector objects. Missile track vectors are cartesian vectors of position, velocity, and acceleration that, together with their time, 'epoch', uniquely determine the trajectory of the missile. ECEF is the preferred coordinate frame but in some cases data may be in another frame as specified by 'referenceFrame', depending on the provider.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MissileTrackVector_Abridged"
            }
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database.",
            "type": "string",
            "readOnly": true,
            "example": "2021-02-25T12:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "MissileTrack_Full": {
        "description": "These services provide operations for querying of all available missile track details and amplifying missile data. A missile track is a position and optionally a heading/velocity of an object across all environments at a particular timestamp. It also includes optional information regarding the identity/type of missile, impact location, launch location and other amplifying object data, if known.",
        "required": [
          "classificationMarking",
          "ts",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system if not provided on create operations.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "MissileTrack_ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "msgType": {
            "description": "The type of external message from which this request originated.",
            "maxLength": 16,
            "type": "string",
            "example": "MSG-TYPE"
          },
          "msgSubType": {
            "description": "The message subtype is a finer grain categorization of message types as many messages can contain a variety of data content within the same structure.  Examples include but are not limited to Initial, Final, Launch, Update, etc.  Users should consult the appropriate documentation, based on the message type, for the definitions of the subtypes that apply to that message.",
            "maxLength": 32,
            "type": "string",
            "example": "Update"
          },
          "msgCreateDate": {
            "format": "date-time",
            "description": "The timestamp of the external message from which this request originated, if applicable, in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-04-25T08:17:01.346Z"
          },
          "env": {
            "description": "The track environment type (AIR, LAND, SPACE, SUBSURFACE, SURFACE, UNKNOWN):\n\n AIR: Between sea level and the Kármán line, which has an altitude of 100 kilometers (62 miles).\n\n LAND: On the surface of dry land.\n\n SPACE: Above the Kármán line, which has an altitude of 100 kilometers (62 miles).\n\n SURFACE: On the surface of a body of water.\n\n SUBSURFACE: Below the surface of a body of water.\n\n UNKNOWN: Environment is not known.\n\n",
            "maxLength": 16,
            "enum": [
              "AIR",
              "LAND",
              "SPACE",
              "SURFACE",
              "SUBSURFACE",
              "UNKNOWN"
            ],
            "type": "string",
            "example": "AIR"
          },
          "objType": {
            "description": "The type of object to which this record refers. The object type may be updated in later records based on assessment of additional data.",
            "maxLength": 32,
            "type": "string",
            "example": "Ballistic"
          },
          "objTypeConf": {
            "format": "int32",
            "description": "Confidence of the object type, 0-100.",
            "type": "integer",
            "example": 90
          },
          "objPlat": {
            "description": "Space Platform field along with the Space Activity field further defines the identity of a Space track (examples: SATELLITE, WEAPON, PATROL). The object platform type. Intended as, but not constrained to, MIL-STD-6016 environment dependent platform type designations. The platform type can be reported as either a combination of the code and environment (e.g. 14/LAND) or as the descriptive representations (e.g. COMBAT VEHICLE), which are equivalent.",
            "maxLength": 32,
            "type": "string",
            "example": "WEAPON"
          },
          "objIdent": {
            "description": "The estimated identity of the track object (ASSUMED FRIEND, FRIEND, HOSTILE, NEUTRAL, PENDING, SUSPECT, UNKNOWN):\n\n ASSUMED FRIEND: Track assumed to be a friend due to the object characteristics, behavior, and/or origin.\n\n FRIEND: Track object supporting friendly forces and belonging to a declared friendly nation or entity.\n\n HOSTILE: Track object belonging to an opposing nation, party, group, or entity deemed to contribute to a threat to friendly forces or their mission due to its behavior, characteristics, nationality, or origin.\n\n NEUTRAL: Track object whose characteristics, behavior, nationality, and/or origin indicate that it is neither supporting nor opposing friendly forces or their mission.\n\n PENDING: Track object which has not been evaluated.\n\n SUSPECT: Track object deemed potentially hostile due to the object characteristics, behavior, nationality, and/or origin.\n\n UNKNOWN: Track object which has been evaluated and does not meet criteria for any standard identity.\n\n",
            "maxLength": 32,
            "enum": [
              "ASSUMED FRIEND",
              "FRIEND",
              "HOSTILE",
              "NEUTRAL",
              "PENDING",
              "SUSPECT",
              "UNKNOWN"
            ],
            "type": "string",
            "example": "FRIEND"
          },
          "spaceAmp": {
            "description": "Space amplification indicates additional information on the space environment being reported (examples: NUCLEAR WARHEAD, FUEL-AIR EXPLOSIVE WARHEAD, DEBRIS).",
            "maxLength": 32,
            "type": "string",
            "example": "NUCLEAR WARHEAD"
          },
          "objAct": {
            "description": "Space activity (examples: RECONNAISSANCE, ANTISPACE WARFARE, TELEVISION). The activity in which the track object is engaged. Intended as, but not constrained to, MIL-STD-6016 environment dependent activity designations. The activity can be reported as either a combination of the code and environment (e.g. 65/AIR) or as the descriptive enumeration (e.g. DIVERTING), which are equivalent.",
            "maxLength": 32,
            "type": "string",
            "example": "HOLDING"
          },
          "spaceSpecType": {
            "description": "Specific type of point or track with an environment of space.",
            "maxLength": 32,
            "type": "string",
            "example": "SS-21_MOD_2_CRBM"
          },
          "acftSubType": {
            "description": "Subtype is a finer grain categorization of missile types. Examples include but are not limited to SRBM, MRBM, IRBM, LRBM, ICBM, SLBM. \n\n&nbsp;SRBM - Short-Range Ballistic Missile\n\n&nbsp;MRBM - Medium-Range Ballistic Missile\n\n&nbsp;IRBM - Intermediate-Range Ballistic Missile\n\n&nbsp;LRBM - Long-Range Ballistic Missile\n\n&nbsp;ICBM - Intercontinental Ballistic Missile\n\n&nbsp;SLBM - Submarine-Launched Ballistic Missile.\n\n",
            "maxLength": 16,
            "type": "string",
            "example": "SLBM"
          },
          "name": {
            "description": "Track name.",
            "maxLength": 48,
            "type": "string",
            "example": "TRACK-NAME"
          },
          "callSign": {
            "description": "The call sign currently assigned to the track object.",
            "maxLength": 24,
            "type": "string",
            "example": "Charlie"
          },
          "lostTrkInd": {
            "description": "Indicates whether or not the missile is considered lost.",
            "type": "boolean",
            "example": false
          },
          "trackId": {
            "description": "Track ID within the originating system.",
            "maxLength": 36,
            "type": "string",
            "example": "102288"
          },
          "parentTrackId": {
            "description": "Track ID of the parent track, within the originating system, from which the track was developed.",
            "maxLength": 36,
            "type": "string",
            "example": "102288"
          },
          "muidSrcTrk": {
            "description": "Track ID for the source of the missile-unique identifier.",
            "maxLength": 36,
            "type": "string",
            "example": "MUID-SRC-ID"
          },
          "muidSrc": {
            "description": "Source of the missile-unique identifier (MUID).",
            "maxLength": 36,
            "type": "string",
            "example": "MUID-SRC"
          },
          "alert": {
            "description": "A track may be designated as a non-alert track or an alert track.\n\nExamples include but are not limited to:\n\n&nbsp;Non-alert tracks – choose None (Blank).\n\n&nbsp;Alert tracks – enter the proper alert classification:\n\n&nbsp;HIT - High Interest Track\n\n&nbsp;TGT - Target\n\n&nbsp;SUS - Suspect Carrier\n\n&nbsp;NSP - Cleared Suspect.\n\n",
            "maxLength": 4,
            "type": "string",
            "example": "HIT"
          },
          "mslStatus": {
            "description": "Missile status enumeration examples include but are not limited to:\n\n&nbsp;AT LAUNCH \n\n&nbsp;AT OBSERVATION \n\n&nbsp;FLYING \n\n&nbsp;IMPACTED \n\n&nbsp;LOST \n\n&nbsp;STALE\n\n&nbsp;DEBRIS.\n\n",
            "maxLength": 32,
            "type": "string",
            "example": "AT LAUNCH"
          },
          "ts": {
            "format": "date-time",
            "description": "The receipt time of the data by the processing system, in ISO8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "aouRptType": {
            "description": "The Area of Uncertainty (AoU) type (BEARING, ELLIPSE, OTHER) definition. This type defines the elements of the aouEllp array and is required if aouEllp is not null. See the aouEllp field definition for specific information.",
            "maxLength": 40,
            "type": "string",
            "example": "ELLIPSE"
          },
          "aouRptData": {
            "description": "Three element array representing an Area of Uncertainty (AoU). The array element definitions and units are type specific depending on the aouType specified in this record:\n\n\n\n&nbsp;ELLIPSE:\n\n&nbsp;&nbsp;brg - orientation in degrees of the ellipse\n\n&nbsp;&nbsp;a1 - semi-major axis in kilometers\n\n&nbsp;&nbsp;a2 - semi-minor axis in kilometers\n\n\n\n&nbsp;BEARING (BEARING BOX or MTST BEARING BOX):\n\n&nbsp;&nbsp;brg - orientation in degrees of the bearing box\n\n&nbsp;&nbsp;a1 - length of bearing box in kilometers\n\n&nbsp;&nbsp;a2 - half-width of bearing box in kilometers\n\n\n\n&nbsp;OTHER (All other type values):\n\n&nbsp;&nbsp;brg - line of bearing in degrees true\n\n&nbsp;&nbsp;a1 - bearing error in degrees\n\n&nbsp;&nbsp;a2 - estimated range in kilometers.",
            "maxItems": 3,
            "minItems": 3,
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              34.3,
              26.5,
              1.2
            ]
          },
          "containment": {
            "format": "double",
            "description": "The percentage of time that the estimated AoU will \"cover\" the true position of the track.",
            "type": "number",
            "example": 90.64
          },
          "trkConf": {
            "format": "double",
            "description": "Overall track confidence estimate (not standardized, but typically a value between 0 and 1, with 0 indicating lowest confidence).",
            "type": "number",
            "example": 0.95
          },
          "trkQual": {
            "format": "int32",
            "description": "Track Quality is reported as an integer from 0-15. Track Quality specifies the reliability of the positional information of a reported track, with higher values indicating higher track quality; i.e., lower errors in reported position.",
            "type": "integer",
            "example": 1
          },
          "angElev": {
            "format": "double",
            "description": "Angle of elevation/depression between observer and missile in degrees.",
            "type": "number",
            "example": 15.2
          },
          "senMode": {
            "description": "Last report type received from the sensor (for example, OBSBO = observation burnout).",
            "maxLength": 64,
            "type": "string",
            "example": "OBSBO"
          },
          "infoSource": {
            "description": "Source code for source of information used to detect track.",
            "maxLength": 64,
            "type": "string",
            "example": "S1"
          },
          "boosting": {
            "description": "Indicates whether or not the missile is currently in a state of boosting.",
            "type": "boolean",
            "example": true
          },
          "polarSingLocLat": {
            "format": "double",
            "description": "Azimuth corridor reference point latitude.",
            "type": "number",
            "example": 19.88550102
          },
          "polarSingLocLon": {
            "format": "double",
            "description": "Azimuth corridor reference point longitude.",
            "type": "number",
            "example": 46.74596844
          },
          "emgInd": {
            "description": "Indicates whether or not a track has an emergency.",
            "type": "boolean",
            "example": true
          },
          "dropPtInd": {
            "description": "The drop-point indicator setting.",
            "type": "boolean",
            "example": true
          },
          "spaceAmpConf": {
            "format": "int32",
            "description": "Confidence level of the amplifying characteristics. Values range from 0 to 6.",
            "type": "integer",
            "example": 6
          },
          "launchTime": {
            "format": "date-time",
            "description": "Missile launch timestamp in ISO8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "launchLat": {
            "format": "double",
            "description": "WGS-84 latitude of the missile launch point, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 19.88550102
          },
          "launchLon": {
            "format": "double",
            "description": "WGS-84 longitude of the missile launch point, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": 46.74596844
          },
          "azCorr": {
            "format": "double",
            "description": "Missile azimuth corridor data.",
            "type": "number",
            "example": 12.876
          },
          "burnoutAlt": {
            "format": "double",
            "description": "Track point burnout altitude relative to WGS-84 ellipsoid, in kilometers.",
            "type": "number",
            "example": 30567.452
          },
          "launchAouType": {
            "description": "The Area of Uncertainty (AoU) type (BEARING, ELLIPSE, OTHER) definition. This type defines the elements of the aouEllp array and is required if aouEllp is not null. See the aouEllp field definition for specific information.",
            "maxLength": 40,
            "type": "string",
            "example": "ELLIPSE"
          },
          "launchAouData": {
            "description": "Three element array representing an Area of Uncertainty (AoU). The array element definitions and units are type specific depending on the aouType specified in this record:\n\n\n\n&nbsp;ELLIPSE:\n\n&nbsp;&nbsp;brg - orientation in degrees of the ellipse\n\n&nbsp;&nbsp;a1 - semi-major axis in kilometers\n\n&nbsp;&nbsp;a2 - semi-minor axis in kilometers\n\n\n\n&nbsp;BEARING (BEARING BOX or MTST BEARING BOX):\n\n&nbsp;&nbsp;brg - orientation in degrees of the bearing box\n\n&nbsp;&nbsp;a1 - length of bearing box in kilometers\n\n&nbsp;&nbsp;a2 - half-width of bearing box in kilometers\n\n\n\n&nbsp;OTHER (All other type values):\n\n&nbsp;&nbsp;brg - line of bearing in degrees true\n\n&nbsp;&nbsp;a1 - bearing error in degrees\n\n&nbsp;&nbsp;a2 - estimated range in kilometers.",
            "maxItems": 3,
            "minItems": 3,
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "impactTime": {
            "format": "date-time",
            "description": "Estimated time of impact timestamp in ISO8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "impactLat": {
            "format": "double",
            "description": "WGS-84 latitude of the missile object impact point, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 19.88550102
          },
          "impactLon": {
            "format": "double",
            "description": "WGS-84 longitude of the missile object impact point, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": 46.74596844
          },
          "impactAouType": {
            "description": "The Area of Uncertainty (AoU) type (BEARING, ELLIPSE, OTHER) definition. This type defines the elements of the aouEllp array and is required if aouEllp is not null. See the aouEllp field definition for specific information.",
            "maxLength": 40,
            "type": "string",
            "example": "ELLIPSE"
          },
          "impactAouData": {
            "description": "Three element array representing an Area of Uncertainty (AoU). The array element definitions and units are type specific depending on the aouType specified in this record:\n\n\n\n&nbsp;ELLIPSE:\n\n&nbsp;&nbsp;brg - orientation in degrees of the ellipse\n\n&nbsp;&nbsp;a1 - semi-major axis in kilometers\n\n&nbsp;&nbsp;a2 - semi-minor axis in kilometers\n\n\n\n&nbsp;BEARING (BEARING BOX or MTST BEARING BOX):\n\n&nbsp;&nbsp;brg - orientation in degrees of the bearing box\n\n&nbsp;&nbsp;a1 - length of bearing box in kilometers\n\n&nbsp;&nbsp;a2 - half-width of bearing box in kilometers\n\n\n\n&nbsp;OTHER (All other type values):\n\n&nbsp;&nbsp;brg - line of bearing in degrees true\n\n&nbsp;&nbsp;a1 - bearing error in degrees\n\n&nbsp;&nbsp;a2 - estimated range in kilometers.",
            "maxItems": 3,
            "minItems": 3,
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              34.3,
              26.5,
              1.2
            ]
          },
          "vectors": {
            "description": "Array of MissileTrackVector objects. Missile track vectors are cartesian vectors of position, velocity, and acceleration that, together with their time, 'epoch', uniquely determine the trajectory of the missile. ECEF is the preferred coordinate frame but in some cases data may be in another frame as specified by 'referenceFrame', depending on the provider.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MissileTrackVector_Full"
            }
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database.",
            "type": "string",
            "readOnly": true,
            "example": "2021-02-25T12:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "MissileTrack_Ingest": {
        "description": "These services provide operations for querying of all available missile track details and amplifying missile data. A missile track is a position and optionally a heading/velocity of an object across all environments at a particular timestamp. It also includes optional information regarding the identity/type of missile, impact location, launch location and other amplifying object data, if known.",
        "required": [
          "classificationMarking",
          "ts",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system if not provided on create operations.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "MissileTrack_ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "msgType": {
            "description": "The type of external message from which this request originated.",
            "maxLength": 16,
            "type": "string",
            "example": "MSG-TYPE"
          },
          "msgSubType": {
            "description": "The message subtype is a finer grain categorization of message types as many messages can contain a variety of data content within the same structure.  Examples include but are not limited to Initial, Final, Launch, Update, etc.  Users should consult the appropriate documentation, based on the message type, for the definitions of the subtypes that apply to that message.",
            "maxLength": 32,
            "type": "string",
            "example": "Update"
          },
          "msgCreateDate": {
            "format": "date-time",
            "description": "The timestamp of the external message from which this request originated, if applicable, in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-04-25T08:17:01.346Z"
          },
          "env": {
            "description": "The track environment type (AIR, LAND, SPACE, SUBSURFACE, SURFACE, UNKNOWN):\n\n AIR: Between sea level and the Kármán line, which has an altitude of 100 kilometers (62 miles).\n\n LAND: On the surface of dry land.\n\n SPACE: Above the Kármán line, which has an altitude of 100 kilometers (62 miles).\n\n SURFACE: On the surface of a body of water.\n\n SUBSURFACE: Below the surface of a body of water.\n\n UNKNOWN: Environment is not known.\n\n",
            "maxLength": 16,
            "enum": [
              "AIR",
              "LAND",
              "SPACE",
              "SURFACE",
              "SUBSURFACE",
              "UNKNOWN"
            ],
            "type": "string",
            "example": "AIR"
          },
          "objType": {
            "description": "The type of object to which this record refers. The object type may be updated in later records based on assessment of additional data.",
            "maxLength": 32,
            "type": "string",
            "example": "Ballistic"
          },
          "objTypeConf": {
            "format": "int32",
            "description": "Confidence of the object type, 0-100.",
            "type": "integer",
            "example": 90
          },
          "objPlat": {
            "description": "Space Platform field along with the Space Activity field further defines the identity of a Space track (examples: SATELLITE, WEAPON, PATROL). The object platform type. Intended as, but not constrained to, MIL-STD-6016 environment dependent platform type designations. The platform type can be reported as either a combination of the code and environment (e.g. 14/LAND) or as the descriptive representations (e.g. COMBAT VEHICLE), which are equivalent.",
            "maxLength": 32,
            "type": "string",
            "example": "WEAPON"
          },
          "objIdent": {
            "description": "The estimated identity of the track object (ASSUMED FRIEND, FRIEND, HOSTILE, NEUTRAL, PENDING, SUSPECT, UNKNOWN):\n\n ASSUMED FRIEND: Track assumed to be a friend due to the object characteristics, behavior, and/or origin.\n\n FRIEND: Track object supporting friendly forces and belonging to a declared friendly nation or entity.\n\n HOSTILE: Track object belonging to an opposing nation, party, group, or entity deemed to contribute to a threat to friendly forces or their mission due to its behavior, characteristics, nationality, or origin.\n\n NEUTRAL: Track object whose characteristics, behavior, nationality, and/or origin indicate that it is neither supporting nor opposing friendly forces or their mission.\n\n PENDING: Track object which has not been evaluated.\n\n SUSPECT: Track object deemed potentially hostile due to the object characteristics, behavior, nationality, and/or origin.\n\n UNKNOWN: Track object which has been evaluated and does not meet criteria for any standard identity.\n\n",
            "maxLength": 32,
            "enum": [
              "ASSUMED FRIEND",
              "FRIEND",
              "HOSTILE",
              "NEUTRAL",
              "PENDING",
              "SUSPECT",
              "UNKNOWN"
            ],
            "type": "string",
            "example": "FRIEND"
          },
          "spaceAmp": {
            "description": "Space amplification indicates additional information on the space environment being reported (examples: NUCLEAR WARHEAD, FUEL-AIR EXPLOSIVE WARHEAD, DEBRIS).",
            "maxLength": 32,
            "type": "string",
            "example": "NUCLEAR WARHEAD"
          },
          "objAct": {
            "description": "Space activity (examples: RECONNAISSANCE, ANTISPACE WARFARE, TELEVISION). The activity in which the track object is engaged. Intended as, but not constrained to, MIL-STD-6016 environment dependent activity designations. The activity can be reported as either a combination of the code and environment (e.g. 65/AIR) or as the descriptive enumeration (e.g. DIVERTING), which are equivalent.",
            "maxLength": 32,
            "type": "string",
            "example": "HOLDING"
          },
          "spaceSpecType": {
            "description": "Specific type of point or track with an environment of space.",
            "maxLength": 32,
            "type": "string",
            "example": "SS-21_MOD_2_CRBM"
          },
          "acftSubType": {
            "description": "Subtype is a finer grain categorization of missile types. Examples include but are not limited to SRBM, MRBM, IRBM, LRBM, ICBM, SLBM. \n\n&nbsp;SRBM - Short-Range Ballistic Missile\n\n&nbsp;MRBM - Medium-Range Ballistic Missile\n\n&nbsp;IRBM - Intermediate-Range Ballistic Missile\n\n&nbsp;LRBM - Long-Range Ballistic Missile\n\n&nbsp;ICBM - Intercontinental Ballistic Missile\n\n&nbsp;SLBM - Submarine-Launched Ballistic Missile.\n\n",
            "maxLength": 16,
            "type": "string",
            "example": "SLBM"
          },
          "name": {
            "description": "Track name.",
            "maxLength": 48,
            "type": "string",
            "example": "TRACK-NAME"
          },
          "callSign": {
            "description": "The call sign currently assigned to the track object.",
            "maxLength": 24,
            "type": "string",
            "example": "Charlie"
          },
          "lostTrkInd": {
            "description": "Indicates whether or not the missile is considered lost.",
            "type": "boolean",
            "example": false
          },
          "trackId": {
            "description": "Track ID within the originating system.",
            "maxLength": 36,
            "type": "string",
            "example": "102288"
          },
          "parentTrackId": {
            "description": "Track ID of the parent track, within the originating system, from which the track was developed.",
            "maxLength": 36,
            "type": "string",
            "example": "102288"
          },
          "muidSrcTrk": {
            "description": "Track ID for the source of the missile-unique identifier.",
            "maxLength": 36,
            "type": "string",
            "example": "MUID-SRC-ID"
          },
          "muidSrc": {
            "description": "Source of the missile-unique identifier (MUID).",
            "maxLength": 36,
            "type": "string",
            "example": "MUID-SRC"
          },
          "alert": {
            "description": "A track may be designated as a non-alert track or an alert track.\n\nExamples include but are not limited to:\n\n&nbsp;Non-alert tracks – choose None (Blank).\n\n&nbsp;Alert tracks – enter the proper alert classification:\n\n&nbsp;HIT - High Interest Track\n\n&nbsp;TGT - Target\n\n&nbsp;SUS - Suspect Carrier\n\n&nbsp;NSP - Cleared Suspect.\n\n",
            "maxLength": 4,
            "type": "string",
            "example": "HIT"
          },
          "mslStatus": {
            "description": "Missile status enumeration examples include but are not limited to:\n\n&nbsp;AT LAUNCH \n\n&nbsp;AT OBSERVATION \n\n&nbsp;FLYING \n\n&nbsp;IMPACTED \n\n&nbsp;LOST \n\n&nbsp;STALE\n\n&nbsp;DEBRIS.\n\n",
            "maxLength": 32,
            "type": "string",
            "example": "AT LAUNCH"
          },
          "ts": {
            "format": "date-time",
            "description": "The receipt time of the data by the processing system, in ISO8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "aouRptType": {
            "description": "The Area of Uncertainty (AoU) type (BEARING, ELLIPSE, OTHER) definition. This type defines the elements of the aouEllp array and is required if aouEllp is not null. See the aouEllp field definition for specific information.",
            "maxLength": 40,
            "type": "string",
            "example": "ELLIPSE"
          },
          "aouRptData": {
            "description": "Three element array representing an Area of Uncertainty (AoU). The array element definitions and units are type specific depending on the aouType specified in this record:\n\n\n\n&nbsp;ELLIPSE:\n\n&nbsp;&nbsp;brg - orientation in degrees of the ellipse\n\n&nbsp;&nbsp;a1 - semi-major axis in kilometers\n\n&nbsp;&nbsp;a2 - semi-minor axis in kilometers\n\n\n\n&nbsp;BEARING (BEARING BOX or MTST BEARING BOX):\n\n&nbsp;&nbsp;brg - orientation in degrees of the bearing box\n\n&nbsp;&nbsp;a1 - length of bearing box in kilometers\n\n&nbsp;&nbsp;a2 - half-width of bearing box in kilometers\n\n\n\n&nbsp;OTHER (All other type values):\n\n&nbsp;&nbsp;brg - line of bearing in degrees true\n\n&nbsp;&nbsp;a1 - bearing error in degrees\n\n&nbsp;&nbsp;a2 - estimated range in kilometers.",
            "maxItems": 3,
            "minItems": 3,
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              34.3,
              26.5,
              1.2
            ]
          },
          "containment": {
            "format": "double",
            "description": "The percentage of time that the estimated AoU will \"cover\" the true position of the track.",
            "type": "number",
            "example": 90.64
          },
          "trkConf": {
            "format": "double",
            "description": "Overall track confidence estimate (not standardized, but typically a value between 0 and 1, with 0 indicating lowest confidence).",
            "type": "number",
            "example": 0.95
          },
          "trkQual": {
            "format": "int32",
            "description": "Track Quality is reported as an integer from 0-15. Track Quality specifies the reliability of the positional information of a reported track, with higher values indicating higher track quality; i.e., lower errors in reported position.",
            "type": "integer",
            "example": 1
          },
          "angElev": {
            "format": "double",
            "description": "Angle of elevation/depression between observer and missile in degrees.",
            "type": "number",
            "example": 15.2
          },
          "senMode": {
            "description": "Last report type received from the sensor (for example, OBSBO = observation burnout).",
            "maxLength": 64,
            "type": "string",
            "example": "OBSBO"
          },
          "infoSource": {
            "description": "Source code for source of information used to detect track.",
            "maxLength": 64,
            "type": "string",
            "example": "S1"
          },
          "boosting": {
            "description": "Indicates whether or not the missile is currently in a state of boosting.",
            "type": "boolean",
            "example": true
          },
          "polarSingLocLat": {
            "format": "double",
            "description": "Azimuth corridor reference point latitude.",
            "type": "number",
            "example": 19.88550102
          },
          "polarSingLocLon": {
            "format": "double",
            "description": "Azimuth corridor reference point longitude.",
            "type": "number",
            "example": 46.74596844
          },
          "emgInd": {
            "description": "Indicates whether or not a track has an emergency.",
            "type": "boolean",
            "example": true
          },
          "dropPtInd": {
            "description": "The drop-point indicator setting.",
            "type": "boolean",
            "example": true
          },
          "spaceAmpConf": {
            "format": "int32",
            "description": "Confidence level of the amplifying characteristics. Values range from 0 to 6.",
            "type": "integer",
            "example": 6
          },
          "launchTime": {
            "format": "date-time",
            "description": "Missile launch timestamp in ISO8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "launchLat": {
            "format": "double",
            "description": "WGS-84 latitude of the missile launch point, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 19.88550102
          },
          "launchLon": {
            "format": "double",
            "description": "WGS-84 longitude of the missile launch point, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": 46.74596844
          },
          "azCorr": {
            "format": "double",
            "description": "Missile azimuth corridor data.",
            "type": "number",
            "example": 12.876
          },
          "burnoutAlt": {
            "format": "double",
            "description": "Track point burnout altitude relative to WGS-84 ellipsoid, in kilometers.",
            "type": "number",
            "example": 30567.452
          },
          "launchAouType": {
            "description": "The Area of Uncertainty (AoU) type (BEARING, ELLIPSE, OTHER) definition. This type defines the elements of the aouEllp array and is required if aouEllp is not null. See the aouEllp field definition for specific information.",
            "maxLength": 40,
            "type": "string",
            "example": "ELLIPSE"
          },
          "launchAouData": {
            "description": "Three element array representing an Area of Uncertainty (AoU). The array element definitions and units are type specific depending on the aouType specified in this record:\n\n\n\n&nbsp;ELLIPSE:\n\n&nbsp;&nbsp;brg - orientation in degrees of the ellipse\n\n&nbsp;&nbsp;a1 - semi-major axis in kilometers\n\n&nbsp;&nbsp;a2 - semi-minor axis in kilometers\n\n\n\n&nbsp;BEARING (BEARING BOX or MTST BEARING BOX):\n\n&nbsp;&nbsp;brg - orientation in degrees of the bearing box\n\n&nbsp;&nbsp;a1 - length of bearing box in kilometers\n\n&nbsp;&nbsp;a2 - half-width of bearing box in kilometers\n\n\n\n&nbsp;OTHER (All other type values):\n\n&nbsp;&nbsp;brg - line of bearing in degrees true\n\n&nbsp;&nbsp;a1 - bearing error in degrees\n\n&nbsp;&nbsp;a2 - estimated range in kilometers.",
            "maxItems": 3,
            "minItems": 3,
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "impactTime": {
            "format": "date-time",
            "description": "Estimated time of impact timestamp in ISO8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "impactLat": {
            "format": "double",
            "description": "WGS-84 latitude of the missile object impact point, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 19.88550102
          },
          "impactLon": {
            "format": "double",
            "description": "WGS-84 longitude of the missile object impact point, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": 46.74596844
          },
          "impactAouType": {
            "description": "The Area of Uncertainty (AoU) type (BEARING, ELLIPSE, OTHER) definition. This type defines the elements of the aouEllp array and is required if aouEllp is not null. See the aouEllp field definition for specific information.",
            "maxLength": 40,
            "type": "string",
            "example": "ELLIPSE"
          },
          "impactAouData": {
            "description": "Three element array representing an Area of Uncertainty (AoU). The array element definitions and units are type specific depending on the aouType specified in this record:\n\n\n\n&nbsp;ELLIPSE:\n\n&nbsp;&nbsp;brg - orientation in degrees of the ellipse\n\n&nbsp;&nbsp;a1 - semi-major axis in kilometers\n\n&nbsp;&nbsp;a2 - semi-minor axis in kilometers\n\n\n\n&nbsp;BEARING (BEARING BOX or MTST BEARING BOX):\n\n&nbsp;&nbsp;brg - orientation in degrees of the bearing box\n\n&nbsp;&nbsp;a1 - length of bearing box in kilometers\n\n&nbsp;&nbsp;a2 - half-width of bearing box in kilometers\n\n\n\n&nbsp;OTHER (All other type values):\n\n&nbsp;&nbsp;brg - line of bearing in degrees true\n\n&nbsp;&nbsp;a1 - bearing error in degrees\n\n&nbsp;&nbsp;a2 - estimated range in kilometers.",
            "maxItems": 3,
            "minItems": 3,
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              34.3,
              26.5,
              1.2
            ]
          },
          "vectors": {
            "description": "Array of MissileTrackVector objects. Missile track vectors are cartesian vectors of position, velocity, and acceleration that, together with their time, 'epoch', uniquely determine the trajectory of the missile. ECEF is the preferred coordinate frame but in some cases data may be in another frame as specified by 'referenceFrame', depending on the provider.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MissileTrackVector_Ingest"
            }
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database.",
            "type": "string",
            "readOnly": true,
            "example": "2021-02-25T12:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "MissileTrackVector_Abridged": {
        "description": "Schema for Missile Track Vector data.",
        "required": [
          "epoch"
        ],
        "type": "object",
        "properties": {
          "type": {
            "description": "Type of vector represented (e.g. LOS, PREDICTED, STATE).",
            "maxLength": 16,
            "type": "string",
            "example": "STATE"
          },
          "object": {
            "description": "Object to which this vector applies.",
            "maxLength": 16,
            "type": "string",
            "example": "TARGET"
          },
          "epoch": {
            "format": "date-time",
            "description": "Vector timestamp in ISO8601 UTC format, with microsecond precision.",
            "type": "string",
            "example": "2024-03-30T15:02:39.346768Z"
          },
          "idSensor": {
            "description": "Unique identifier of the reporting sensor of the object.",
            "maxLength": 36,
            "type": "string",
            "example": "a7e99418-b6d6-29ab-e767-440a989cce26"
          },
          "origSensorId": {
            "description": "Optional identifier provided by the source to indicate the reporting sensor of the object. This may be an internal identifier and not necessarily a valid sensor ID.",
            "maxLength": 46,
            "type": "string",
            "example": "ORIGSENSOR-ID"
          },
          "pos": {
            "description": "Three element array, expressing the cartesian position vector of the target object, in kilometers, in the specified referenceFrame. If referenceFrame is null then ECEF should be assumed. The array element order is [x, y, z].",
            "maxItems": 3,
            "minItems": 3,
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              -1456.91592,
              -2883.54041,
              6165.55186
            ]
          },
          "vel": {
            "description": "Three element array, expressing the cartesian velocity vector of the target object, in kilometers/second, in the specified referenceFrame. If referenceFrame is null then ECEF should be assumed. The array element order is [x', y', z'].",
            "maxItems": 3,
            "minItems": 3,
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              -1.21981,
              -6.60208,
              -3.36515
            ]
          },
          "accel": {
            "description": "Three element array, expressing the cartesian acceleration vector of the target object, in kilometers/second^2, in the specified referenceFrame. If referenceFrame is null then ECEF should be assumed. The array element order is [x'', y'', z''].",
            "maxItems": 3,
            "minItems": 3,
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              0.59236,
              -0.03537,
              0.35675
            ]
          },
          "course": {
            "format": "double",
            "description": "Track object course, in degrees clockwise from true north.",
            "type": "number",
            "example": 7.3580153
          },
          "spd": {
            "format": "double",
            "description": "Track object speed, in kilometers/sec.",
            "type": "number",
            "example": 15.03443
          },
          "referenceFrame": {
            "description": "The reference frame of the cartesian vector (ECEF, J2000). If the referenceFrame is null it is assumed to be ECEF.",
            "maxLength": 24,
            "type": "string",
            "example": "ECEF"
          },
          "cov": {
            "description": "Covariance matrix, in kilometer and second based units, in the specified covReferenceFrame.\n\n\nIf the covReferenceFrame is null it is assumed to be UVW. The array values (1-45) represent the upper triangular half of the position-velocity-acceleration covariance matrix.\n\n\nThe covariance elements are position dependent within the array with values ordered as follows:\n\n\n\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;z&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y'&nbsp;&nbsp;&nbsp;&nbsp;z'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x\"&nbsp;&nbsp;&nbsp;&nbsp;y\"&nbsp;&nbsp;&nbsp;&nbsp;z\"\n\n\nx&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9\n\n\ny&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10&nbsp;&nbsp;&nbsp;11&nbsp;&nbsp;&nbsp;12&nbsp;&nbsp;&nbsp;13&nbsp;&nbsp;&nbsp;14&nbsp;&nbsp;&nbsp;15&nbsp;&nbsp;&nbsp;16&nbsp;&nbsp;&nbsp;17\n\n\nz&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;18&nbsp;&nbsp;&nbsp;19&nbsp;&nbsp;&nbsp;20&nbsp;&nbsp;&nbsp;21&nbsp;&nbsp;&nbsp;22&nbsp;&nbsp;&nbsp;23&nbsp;&nbsp;&nbsp;24\n\n\nx'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;25&nbsp;&nbsp;&nbsp;26&nbsp;&nbsp;&nbsp;27&nbsp;&nbsp;&nbsp;28&nbsp;&nbsp;&nbsp;29&nbsp;&nbsp;&nbsp;30\n\n\ny'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;31&nbsp;&nbsp;&nbsp;32&nbsp;&nbsp;&nbsp;33&nbsp;&nbsp;&nbsp;34&nbsp;&nbsp;&nbsp;35\n\n\nz'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;36&nbsp;&nbsp;&nbsp;37&nbsp;&nbsp;&nbsp;38&nbsp;&nbsp;&nbsp;39\n\n\nx\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;40&nbsp;&nbsp;&nbsp;41&nbsp;&nbsp;&nbsp;42\n\n\ny\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;43&nbsp;&nbsp;&nbsp;44\n\n\nz\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;45\n\n\n\n\n\nThe cov array should contain only the upper right triangle values from top left down to bottom right, in order.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.1,
              2.2,
              3.3
            ]
          },
          "covReferenceFrame": {
            "description": "The reference frame of the covariance elements (ECEF, J2000, UVW). If the referenceFrame is null it is assumed to be UVW.",
            "maxLength": 24,
            "type": "string",
            "example": "ECEF"
          },
          "vectorLat": {
            "format": "double",
            "description": "WGS-84 object latitude subpoint at epoch, represented as -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 45
          },
          "vectorLon": {
            "format": "double",
            "description": "WGS-84 object longitude subpoint at epoch, represented as -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 150
          },
          "vectorAlt": {
            "format": "double",
            "description": "Object altitude at epoch, expressed in kilometers above WGS-84 ellipsoid.",
            "type": "number",
            "example": 25
          },
          "confidence": {
            "format": "int32",
            "description": "Confidence of the vector, 0-100.",
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "example": 100
          },
          "status": {
            "description": "Status of the vector (e.g. INITIAL, UPDATE).",
            "maxLength": 24,
            "type": "string",
            "example": "INITIAL"
          },
          "timeSource": {
            "description": "Source of the time value.",
            "maxLength": 24,
            "type": "string",
            "example": "Sensor 1"
          },
          "quat": {
            "description": "The quaternion describing the attitude of the spacecraft with respect to the reference frame listed in the 'referenceFrame' field. The array element order convention is the three vector components, followed by the scalar component.",
            "maxItems": 4,
            "minItems": 4,
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              0.03,
              0.02,
              0.01,
              0.012
            ]
          },
          "flightAz": {
            "format": "double",
            "description": "The flight azimuth associated with the current state vector (0-360 degrees).",
            "maximum": 360,
            "minimum": 0,
            "type": "number",
            "example": 45.23
          }
        }
      },
      "MissileTrackVector_Full": {
        "description": "Schema for Missile Track Vector data.",
        "required": [
          "epoch"
        ],
        "type": "object",
        "properties": {
          "type": {
            "description": "Type of vector represented (e.g. LOS, PREDICTED, STATE).",
            "maxLength": 16,
            "type": "string",
            "example": "STATE"
          },
          "object": {
            "description": "Object to which this vector applies.",
            "maxLength": 16,
            "type": "string",
            "example": "TARGET"
          },
          "epoch": {
            "format": "date-time",
            "description": "Vector timestamp in ISO8601 UTC format, with microsecond precision.",
            "type": "string",
            "example": "2024-03-30T15:02:39.346768Z"
          },
          "idSensor": {
            "description": "Unique identifier of the reporting sensor of the object.",
            "maxLength": 36,
            "type": "string",
            "example": "a7e99418-b6d6-29ab-e767-440a989cce26"
          },
          "origSensorId": {
            "description": "Optional identifier provided by the source to indicate the reporting sensor of the object. This may be an internal identifier and not necessarily a valid sensor ID.",
            "maxLength": 46,
            "type": "string",
            "example": "ORIGSENSOR-ID"
          },
          "pos": {
            "description": "Three element array, expressing the cartesian position vector of the target object, in kilometers, in the specified referenceFrame. If referenceFrame is null then ECEF should be assumed. The array element order is [x, y, z].",
            "maxItems": 3,
            "minItems": 3,
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              -1456.91592,
              -2883.54041,
              6165.55186
            ]
          },
          "vel": {
            "description": "Three element array, expressing the cartesian velocity vector of the target object, in kilometers/second, in the specified referenceFrame. If referenceFrame is null then ECEF should be assumed. The array element order is [x', y', z'].",
            "maxItems": 3,
            "minItems": 3,
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              -1.21981,
              -6.60208,
              -3.36515
            ]
          },
          "accel": {
            "description": "Three element array, expressing the cartesian acceleration vector of the target object, in kilometers/second^2, in the specified referenceFrame. If referenceFrame is null then ECEF should be assumed. The array element order is [x'', y'', z''].",
            "maxItems": 3,
            "minItems": 3,
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              0.59236,
              -0.03537,
              0.35675
            ]
          },
          "course": {
            "format": "double",
            "description": "Track object course, in degrees clockwise from true north.",
            "type": "number",
            "example": 7.3580153
          },
          "spd": {
            "format": "double",
            "description": "Track object speed, in kilometers/sec.",
            "type": "number",
            "example": 15.03443
          },
          "referenceFrame": {
            "description": "The reference frame of the cartesian vector (ECEF, J2000). If the referenceFrame is null it is assumed to be ECEF.",
            "maxLength": 24,
            "type": "string",
            "example": "ECEF"
          },
          "cov": {
            "description": "Covariance matrix, in kilometer and second based units, in the specified covReferenceFrame.\n\n\nIf the covReferenceFrame is null it is assumed to be UVW. The array values (1-45) represent the upper triangular half of the position-velocity-acceleration covariance matrix.\n\n\nThe covariance elements are position dependent within the array with values ordered as follows:\n\n\n\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;z&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y'&nbsp;&nbsp;&nbsp;&nbsp;z'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x\"&nbsp;&nbsp;&nbsp;&nbsp;y\"&nbsp;&nbsp;&nbsp;&nbsp;z\"\n\n\nx&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9\n\n\ny&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10&nbsp;&nbsp;&nbsp;11&nbsp;&nbsp;&nbsp;12&nbsp;&nbsp;&nbsp;13&nbsp;&nbsp;&nbsp;14&nbsp;&nbsp;&nbsp;15&nbsp;&nbsp;&nbsp;16&nbsp;&nbsp;&nbsp;17\n\n\nz&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;18&nbsp;&nbsp;&nbsp;19&nbsp;&nbsp;&nbsp;20&nbsp;&nbsp;&nbsp;21&nbsp;&nbsp;&nbsp;22&nbsp;&nbsp;&nbsp;23&nbsp;&nbsp;&nbsp;24\n\n\nx'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;25&nbsp;&nbsp;&nbsp;26&nbsp;&nbsp;&nbsp;27&nbsp;&nbsp;&nbsp;28&nbsp;&nbsp;&nbsp;29&nbsp;&nbsp;&nbsp;30\n\n\ny'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;31&nbsp;&nbsp;&nbsp;32&nbsp;&nbsp;&nbsp;33&nbsp;&nbsp;&nbsp;34&nbsp;&nbsp;&nbsp;35\n\n\nz'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;36&nbsp;&nbsp;&nbsp;37&nbsp;&nbsp;&nbsp;38&nbsp;&nbsp;&nbsp;39\n\n\nx\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;40&nbsp;&nbsp;&nbsp;41&nbsp;&nbsp;&nbsp;42\n\n\ny\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;43&nbsp;&nbsp;&nbsp;44\n\n\nz\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;45\n\n\n\n\n\nThe cov array should contain only the upper right triangle values from top left down to bottom right, in order.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.1,
              2.2,
              3.3
            ]
          },
          "covReferenceFrame": {
            "description": "The reference frame of the covariance elements (ECEF, J2000, UVW). If the referenceFrame is null it is assumed to be UVW.",
            "maxLength": 24,
            "type": "string",
            "example": "ECEF"
          },
          "vectorLat": {
            "format": "double",
            "description": "WGS-84 object latitude subpoint at epoch, represented as -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 45
          },
          "vectorLon": {
            "format": "double",
            "description": "WGS-84 object longitude subpoint at epoch, represented as -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 150
          },
          "vectorAlt": {
            "format": "double",
            "description": "Object altitude at epoch, expressed in kilometers above WGS-84 ellipsoid.",
            "type": "number",
            "example": 25
          },
          "confidence": {
            "format": "int32",
            "description": "Confidence of the vector, 0-100.",
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "example": 100
          },
          "status": {
            "description": "Status of the vector (e.g. INITIAL, UPDATE).",
            "maxLength": 24,
            "type": "string",
            "example": "INITIAL"
          },
          "timeSource": {
            "description": "Source of the time value.",
            "maxLength": 24,
            "type": "string",
            "example": "Sensor 1"
          },
          "quat": {
            "description": "The quaternion describing the attitude of the spacecraft with respect to the reference frame listed in the 'referenceFrame' field. The array element order convention is the three vector components, followed by the scalar component.",
            "maxItems": 4,
            "minItems": 4,
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              0.03,
              0.02,
              0.01,
              0.012
            ]
          },
          "flightAz": {
            "format": "double",
            "description": "The flight azimuth associated with the current state vector (0-360 degrees).",
            "maximum": 360,
            "minimum": 0,
            "type": "number",
            "example": 45.23
          }
        }
      },
      "MissileTrackVector_Ingest": {
        "description": "Schema for Missile Track Vector data.",
        "required": [
          "epoch"
        ],
        "type": "object",
        "properties": {
          "type": {
            "description": "Type of vector represented (e.g. LOS, PREDICTED, STATE).",
            "maxLength": 16,
            "type": "string",
            "example": "STATE"
          },
          "object": {
            "description": "Object to which this vector applies.",
            "maxLength": 16,
            "type": "string",
            "example": "TARGET"
          },
          "epoch": {
            "format": "date-time",
            "description": "Vector timestamp in ISO8601 UTC format, with microsecond precision.",
            "type": "string",
            "example": "2024-03-30T15:02:39.346768Z"
          },
          "idSensor": {
            "description": "Unique identifier of the reporting sensor of the object.",
            "maxLength": 36,
            "type": "string",
            "example": "a7e99418-b6d6-29ab-e767-440a989cce26"
          },
          "origSensorId": {
            "description": "Optional identifier provided by the source to indicate the reporting sensor of the object. This may be an internal identifier and not necessarily a valid sensor ID.",
            "maxLength": 46,
            "type": "string",
            "example": "ORIGSENSOR-ID"
          },
          "pos": {
            "description": "Three element array, expressing the cartesian position vector of the target object, in kilometers, in the specified referenceFrame. If referenceFrame is null then ECEF should be assumed. The array element order is [x, y, z].",
            "maxItems": 3,
            "minItems": 3,
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              -1456.91592,
              -2883.54041,
              6165.55186
            ]
          },
          "vel": {
            "description": "Three element array, expressing the cartesian velocity vector of the target object, in kilometers/second, in the specified referenceFrame. If referenceFrame is null then ECEF should be assumed. The array element order is [x', y', z'].",
            "maxItems": 3,
            "minItems": 3,
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              -1.21981,
              -6.60208,
              -3.36515
            ]
          },
          "accel": {
            "description": "Three element array, expressing the cartesian acceleration vector of the target object, in kilometers/second^2, in the specified referenceFrame. If referenceFrame is null then ECEF should be assumed. The array element order is [x'', y'', z''].",
            "maxItems": 3,
            "minItems": 3,
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              0.59236,
              -0.03537,
              0.35675
            ]
          },
          "course": {
            "format": "double",
            "description": "Track object course, in degrees clockwise from true north.",
            "type": "number",
            "example": 7.3580153
          },
          "spd": {
            "format": "double",
            "description": "Track object speed, in kilometers/sec.",
            "type": "number",
            "example": 15.03443
          },
          "referenceFrame": {
            "description": "The reference frame of the cartesian vector (ECEF, J2000). If the referenceFrame is null it is assumed to be ECEF.",
            "maxLength": 24,
            "type": "string",
            "example": "ECEF"
          },
          "cov": {
            "description": "Covariance matrix, in kilometer and second based units, in the specified covReferenceFrame.\n\n\nIf the covReferenceFrame is null it is assumed to be UVW. The array values (1-45) represent the upper triangular half of the position-velocity-acceleration covariance matrix.\n\n\nThe covariance elements are position dependent within the array with values ordered as follows:\n\n\n\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;z&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y'&nbsp;&nbsp;&nbsp;&nbsp;z'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x\"&nbsp;&nbsp;&nbsp;&nbsp;y\"&nbsp;&nbsp;&nbsp;&nbsp;z\"\n\n\nx&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9\n\n\ny&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10&nbsp;&nbsp;&nbsp;11&nbsp;&nbsp;&nbsp;12&nbsp;&nbsp;&nbsp;13&nbsp;&nbsp;&nbsp;14&nbsp;&nbsp;&nbsp;15&nbsp;&nbsp;&nbsp;16&nbsp;&nbsp;&nbsp;17\n\n\nz&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;18&nbsp;&nbsp;&nbsp;19&nbsp;&nbsp;&nbsp;20&nbsp;&nbsp;&nbsp;21&nbsp;&nbsp;&nbsp;22&nbsp;&nbsp;&nbsp;23&nbsp;&nbsp;&nbsp;24\n\n\nx'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;25&nbsp;&nbsp;&nbsp;26&nbsp;&nbsp;&nbsp;27&nbsp;&nbsp;&nbsp;28&nbsp;&nbsp;&nbsp;29&nbsp;&nbsp;&nbsp;30\n\n\ny'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;31&nbsp;&nbsp;&nbsp;32&nbsp;&nbsp;&nbsp;33&nbsp;&nbsp;&nbsp;34&nbsp;&nbsp;&nbsp;35\n\n\nz'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;36&nbsp;&nbsp;&nbsp;37&nbsp;&nbsp;&nbsp;38&nbsp;&nbsp;&nbsp;39\n\n\nx\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;40&nbsp;&nbsp;&nbsp;41&nbsp;&nbsp;&nbsp;42\n\n\ny\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;43&nbsp;&nbsp;&nbsp;44\n\n\nz\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;45\n\n\n\n\n\nThe cov array should contain only the upper right triangle values from top left down to bottom right, in order.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.1,
              2.2,
              3.3
            ]
          },
          "covReferenceFrame": {
            "description": "The reference frame of the covariance elements (ECEF, J2000, UVW). If the referenceFrame is null it is assumed to be UVW.",
            "maxLength": 24,
            "type": "string",
            "example": "ECEF"
          },
          "vectorLat": {
            "format": "double",
            "description": "WGS-84 object latitude subpoint at epoch, represented as -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 45
          },
          "vectorLon": {
            "format": "double",
            "description": "WGS-84 object longitude subpoint at epoch, represented as -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 150
          },
          "vectorAlt": {
            "format": "double",
            "description": "Object altitude at epoch, expressed in kilometers above WGS-84 ellipsoid.",
            "type": "number",
            "example": 25
          },
          "confidence": {
            "format": "int32",
            "description": "Confidence of the vector, 0-100.",
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "example": 100
          },
          "status": {
            "description": "Status of the vector (e.g. INITIAL, UPDATE).",
            "maxLength": 24,
            "type": "string",
            "example": "INITIAL"
          },
          "timeSource": {
            "description": "Source of the time value.",
            "maxLength": 24,
            "type": "string",
            "example": "Sensor 1"
          },
          "quat": {
            "description": "The quaternion describing the attitude of the spacecraft with respect to the reference frame listed in the 'referenceFrame' field. The array element order convention is the three vector components, followed by the scalar component.",
            "maxItems": 4,
            "minItems": 4,
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              0.03,
              0.02,
              0.01,
              0.012
            ]
          },
          "flightAz": {
            "format": "double",
            "description": "The flight azimuth associated with the current state vector (0-360 degrees).",
            "maximum": 360,
            "minimum": 0,
            "type": "number",
            "example": 45.23
          }
        }
      },
      "Onorbit_Full": {
        "description": "Model object representing on-orbit objects or satellites in the system.",
        "required": [
          "classificationMarking",
          "satNo",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "idOnOrbit": {
            "description": "For the public catalog, the idOnOrbit is typically the satellite number as a string, but may be a UUID for analyst or other unknown or untracked satellites, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ONORBIT-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "satNo": {
            "format": "int32",
            "description": "Satellite/Catalog number of the target on-orbit object.",
            "minimum": 0,
            "type": "integer",
            "example": 1
          },
          "commonName": {
            "description": "Common name of the on-orbit object.",
            "maxLength": 128,
            "type": "string",
            "example": "Example common name"
          },
          "constellation": {
            "description": "Constellation to which this satellite belongs.",
            "maxLength": 128,
            "type": "string",
            "example": "Big Dipper"
          },
          "intlDes": {
            "description": "International Designator, typically of the format YYYYLLLAAA, where YYYY is the launch year, LLL is the sequential launch number of that year, and AAA is an optional launch piece designator for the launch.",
            "maxLength": 45,
            "type": "string",
            "example": "2021123ABC"
          },
          "launchDate": {
            "format": "date",
            "description": "Date of launch.",
            "type": "string",
            "example": "2018-01-01"
          },
          "decayDate": {
            "format": "date-time",
            "description": "Date of decay.",
            "type": "string",
            "example": "2018-01-01T16:00:00.123Z"
          },
          "objectType": {
            "description": "Type of on-orbit object: ROCKET BODY, DEBRIS, PAYLOAD, PLATFORM, MANNED, UNKNOWN.",
            "maxLength": 32,
            "enum": [
              "ROCKET BODY",
              "DEBRIS",
              "PAYLOAD",
              "PLATFORM",
              "MANNED",
              "UNKNOWN"
            ],
            "type": "string",
            "example": "PAYLOAD"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "missionNumber": {
            "description": "Mission number of the on-orbit object.",
            "maxLength": 128,
            "type": "string",
            "example": "Expedition 1"
          },
          "category": {
            "description": "Category of the on-orbit object. (Unknown, On-Orbit, Decayed, Cataloged Without State, Launch Nominal, Analyst Satellite, Cislunar, Lunar, Hyperbolic, Heliocentric, Interplanetary, Lagrangian, Docked).",
            "maxLength": 45,
            "enum": [
              "Unknown",
              "On-Orbit",
              "Decayed",
              "Cataloged Without State",
              "Launch Nominal",
              "Analyst Satellite",
              "Cislunar",
              "Lunar",
              "Hyperbolic",
              "Heliocentric",
              "Interplanetary",
              "Lagrangian",
              "Docked"
            ],
            "type": "string",
            "example": "Lunar"
          },
          "lifetimeYears": {
            "format": "int32",
            "description": "Estimated lifetime of the on-orbit payload, if known.",
            "type": "integer",
            "example": 10
          },
          "altName": {
            "description": "Alternate name of the on-orbit object.",
            "maxLength": 64,
            "type": "string",
            "example": "Alternate Name"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "launchSiteId": {
            "description": "Id of the associated launchSite entity.",
            "maxLength": 36,
            "type": "string",
            "example": "LAUNCHSITE-ID"
          },
          "entityCollection": {
            "description": "Read-only entity details (only returned/used on detail queries).",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "description": "An entity is a generic representation of any object within a space/SSA system such as sensors, on-orbit objects, RF Emitters, space craft buses, etc. An entity can have an operating unit, a location (if terrestrial), and statuses.",
              "required": [
                "name",
                "classificationMarking",
                "type",
                "source",
                "dataMode"
              ],
              "type": "object",
              "properties": {
                "idEntity": {
                  "description": "Unique identifier of the record.",
                  "maxLength": 36,
                  "minLength": 1,
                  "type": "string",
                  "example": "ENTITY-ID"
                },
                "name": {
                  "description": "Unique entity name.",
                  "maxLength": 128,
                  "minLength": 1,
                  "type": "string",
                  "example": "Example name"
                },
                "classificationMarking": {
                  "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
                  "maxLength": 128,
                  "minLength": 1,
                  "type": "string",
                  "example": "U"
                },
                "terrestrialId": {
                  "description": "Terrestrial identifier of this entity, if applicable.",
                  "maxLength": 36,
                  "type": "string",
                  "example": "TERRESTRIAL-ID"
                },
                "type": {
                  "description": "The type of entity represented by this record (AIRCRAFT, BUS, COMM, IR, NAVIGATION, ONORBIT, RFEMITTER, SCIENTIFIC, SENSOR, SITE, VESSEL).",
                  "maxLength": 45,
                  "minLength": 1,
                  "enum": [
                    "AIRCRAFT",
                    "BUS",
                    "COMM",
                    "IR",
                    "NAVIGATION",
                    "ONORBIT",
                    "RFEMITTER",
                    "SCIENTIFIC",
                    "SENSOR",
                    "SITE",
                    "VESSEL"
                  ],
                  "type": "string",
                  "example": "ONORBIT"
                },
                "idLocation": {
                  "description": "Unique identifier of the entity location, if terrestrial/fixed.",
                  "maxLength": 36,
                  "type": "string",
                  "example": "LOCATION-ID"
                },
                "countryCode": {
                  "description": "The country code. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDL’s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.",
                  "maxLength": 4,
                  "type": "string",
                  "example": "US"
                },
                "ownerType": {
                  "description": "Type of organization which owns this entity (e.g. Commercial, Government, Academic, Consortium, etc).",
                  "maxLength": 32,
                  "enum": [
                    "Commercial",
                    "Government",
                    "Academic",
                    "Consortium",
                    "Other"
                  ],
                  "type": "string",
                  "example": "Commercial"
                },
                "taskable": {
                  "description": "Boolean indicating if this entity is taskable.",
                  "type": "boolean",
                  "example": false
                },
                "urls": {
                  "description": "List of URLs to additional details/documents for this entity.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "URL1",
                    "URL2"
                  ]
                },
                "createdAt": {
                  "format": "date-time",
                  "description": "Time the row was created in the database, auto-populated by the system.",
                  "type": "string",
                  "readOnly": true,
                  "example": "2018-01-01T16:00:00.123Z"
                },
                "createdBy": {
                  "description": "Application user who created the row in the database, auto-populated by the system.",
                  "maxLength": 64,
                  "minLength": 1,
                  "type": "string",
                  "readOnly": true,
                  "example": "some.user"
                },
                "updatedAt": {
                  "format": "date-time",
                  "description": "Time the row was last updated in the database, auto-populated by the system.",
                  "type": "string",
                  "readOnly": true,
                  "example": "2018-01-01T16:00:00.123Z"
                },
                "updatedBy": {
                  "description": "Application user who updated the row in the database, auto-populated by the system.",
                  "maxLength": 64,
                  "type": "string",
                  "readOnly": true,
                  "example": "some.user"
                },
                "source": {
                  "description": "Source of the data.",
                  "maxLength": 64,
                  "minLength": 1,
                  "type": "string",
                  "example": "Bluestaq"
                },
                "origin": {
                  "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
                  "maxLength": 64,
                  "type": "string",
                  "example": "THIRD_PARTY_DATASOURCE"
                },
                "dataMode": {
                  "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
                  "maxLength": 32,
                  "minLength": 1,
                  "enum": [
                    "REAL",
                    "TEST",
                    "SIMULATED",
                    "EXERCISE"
                  ],
                  "type": "string",
                  "example": "TEST"
                },
                "location": {
                  "$ref": "#/components/schemas/Location_Full"
                },
                "idOnOrbit": {
                  "description": "Onorbit identifier if this entity is part of an on-orbit object. For the public catalog, the idOnOrbit is typically the satellite number as a string, but may be a UUID for analyst or other unknown or untracked satellites.",
                  "maxLength": 36,
                  "type": "string",
                  "example": "ONORBIT-ID"
                },
                "operatingUnit": {
                  "$ref": "#/components/schemas/Operatingunit_Full"
                },
                "idOperatingUnit": {
                  "description": "Unique identifier of the associated operating unit object.",
                  "maxLength": 36,
                  "type": "string",
                  "example": "OPERATINGUNIT-ID"
                },
                "origNetwork": {
                  "description": "The originating source network on which this record was created, auto-populated by the system.",
                  "maxLength": 32,
                  "minLength": 1,
                  "type": "string",
                  "readOnly": true,
                  "example": "OPS1"
                },
                "statusCollection": {
                  "description": "Read-only collection of statuses which can be collected by multiple sources.",
                  "uniqueItems": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Status_Full"
                  },
                  "readOnly": true
                },
                "rfBands": {
                  "description": "Read-only collection of RF bands utilized by this entity for communication and/or operation.",
                  "uniqueItems": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RFBand_Full"
                  },
                  "readOnly": true
                }
              }
            },
            "readOnly": true
          },
          "antennas": {
            "description": "Read-only collection of antennas on this on-orbit object.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnorbitAntenna_Full"
            },
            "readOnly": true
          },
          "batteries": {
            "description": "Read-only collection of batteries on this on-orbit object.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnorbitBattery_Full"
            },
            "readOnly": true
          },
          "solarArrays": {
            "description": "Read-only collection of solar arrays on this on-orbit object.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnorbitSolarArray_Full"
            },
            "readOnly": true
          },
          "thrusters": {
            "description": "Read-only collection of thrusters (engines) on this on-orbit object.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnorbitThruster_Full"
            },
            "readOnly": true
          },
          "onorbitDetails": {
            "description": "Read-only collection of details for this on-orbit object.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnorbitDetails_Full"
            },
            "readOnly": true
          },
          "countryCode": {
            "description": "The country code. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDL’s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.",
            "maxLength": 4,
            "type": "string",
            "example": "US"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          }
        }
      },
      "OnorbitAntenna_Full": {
        "required": [
          "idOnOrbit",
          "idAntenna",
          "classificationMarking",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ONORBITANTENNA-ID"
          },
          "idOnOrbit": {
            "description": "ID of the on-orbit object.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ONORBIT-ID"
          },
          "idAntenna": {
            "description": "ID of the antenna.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ANTENNA-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "antenna": {
            "$ref": "#/components/schemas/Antenna_Full"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          }
        }
      },
      "OnorbitBattery_Full": {
        "required": [
          "idOnOrbit",
          "idBattery",
          "classificationMarking",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ONORBITBATTERY-ID"
          },
          "idOnOrbit": {
            "description": "ID of the on-orbit object.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ONORBIT-ID"
          },
          "idBattery": {
            "description": "ID of the battery.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "BATTERY-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "quantity": {
            "format": "int32",
            "description": "The number of batteries on the spacecraft of the type identified by idBattery.",
            "type": "integer",
            "example": 5
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "battery": {
            "$ref": "#/components/schemas/Battery_Full"
          }
        }
      },
      "OnorbitDetails_Full": {
        "description": "Contains details of the OnOrbit object.",
        "required": [
          "idOnOrbit",
          "classificationMarking",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ONORBITDETAILS-ID"
          },
          "idOnOrbit": {
            "description": "UUID of the parent Onorbit record.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "REF-ONORBIT-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "lastObTime": {
            "format": "date-time",
            "description": "Time of last reported observation for this object in ISO 8601 UTC with microsecond precision.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123456Z"
          },
          "vismag": {
            "format": "double",
            "description": "Current/latest visual magnitude in M.",
            "type": "number",
            "example": 10.23
          },
          "vismagMin": {
            "format": "double",
            "description": "Minimum visual magnitude in M.",
            "type": "number",
            "example": 5.23
          },
          "vismagMax": {
            "format": "double",
            "description": "Maximum visual magnitude in M.",
            "type": "number",
            "example": 15.23
          },
          "vismagMean": {
            "format": "double",
            "description": "Mean visual magnitude in M.",
            "type": "number",
            "example": 10.23
          },
          "rcs": {
            "format": "double",
            "description": "Current/latest radar cross section in meters squared.",
            "type": "number",
            "example": 10.23
          },
          "rcsMin": {
            "format": "double",
            "description": "Minimum radar cross section in meters squared.",
            "type": "number",
            "example": 5.23
          },
          "rcsMax": {
            "format": "double",
            "description": "Maximum radar cross section in meters squared.",
            "type": "number",
            "example": 15.23
          },
          "rcsMean": {
            "format": "double",
            "description": "Mean radar cross section in meters squared.",
            "type": "number",
            "example": 10.23
          },
          "bolDeltaV": {
            "format": "double",
            "description": "The total beginning of life delta V of the spacecraft, in meters per second.",
            "type": "number",
            "example": 1000.1
          },
          "maxDeltaV": {
            "format": "double",
            "description": "Maximum delta V available for this on-orbit spacecraft, in meters per second.",
            "type": "number",
            "example": 10.23
          },
          "deltaVUnc": {
            "format": "double",
            "description": "The 1-sigma uncertainty of the total spacecraft delta V, in meters per second.",
            "type": "number",
            "example": 50.1
          },
          "estDeltaVDuration": {
            "format": "double",
            "description": "Estimated maximum burn duration for the object, in seconds.",
            "type": "number",
            "example": 10.23
          },
          "numMission": {
            "format": "int32",
            "description": "The number of distinct missions the spacecraft performs.",
            "type": "integer",
            "example": 2
          },
          "missionTypes": {
            "description": "Array of the type of missions the spacecraft performs. Must contain the same number of elements as the value of numMission.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Weather",
              "Space Weather"
            ]
          },
          "busType": {
            "description": "Type of the bus on the spacecraft.",
            "maxLength": 32,
            "type": "string",
            "example": "A2100"
          },
          "geoSlot": {
            "format": "double",
            "description": "GEO slot if applicable, in degrees. -180 (West of Prime Meridian) to 180 degrees (East of Prime Meridian). Prime Meridian is 0.",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 90.23
          },
          "driftRate": {
            "format": "double",
            "description": "GEO drift rate, if applicable in degrees per day.",
            "type": "number",
            "example": 1.23
          },
          "dryMass": {
            "format": "double",
            "description": "Spacecraft dry mass (without fuel or disposables) in kilograms.",
            "type": "number",
            "example": 10.23
          },
          "additionalMass": {
            "format": "double",
            "description": "Mass of fuel and disposables at launch time in kilograms.",
            "type": "number",
            "example": 10.23
          },
          "launchMassMin": {
            "format": "double",
            "description": "Minimum (estimated) mass of spacecraft and fuel at launch time, in kilograms.",
            "type": "number",
            "example": 5.23
          },
          "launchMass": {
            "format": "double",
            "description": "Nominal mass of spacecraft and fuel at launch time, in kilograms.",
            "type": "number",
            "example": 10.23
          },
          "launchMassMax": {
            "format": "double",
            "description": "Maximum (estimated) mass of spacecraft and fuel at launch time, in kilograms.",
            "type": "number",
            "example": 15.23
          },
          "bolFuelMass": {
            "format": "double",
            "description": "Spacecraft beginning of life fuel mass, in orbit, in kilograms.",
            "type": "number",
            "example": 10.23
          },
          "currentMass": {
            "format": "double",
            "description": "The estimated total current mass of the spacecraft, in kilograms.",
            "type": "number",
            "example": 500
          },
          "totalMassUnc": {
            "format": "double",
            "description": "The 1-sigma uncertainty of the total spacecraft mass, in kilograms.",
            "type": "number",
            "example": 50.1
          },
          "solarArrayArea": {
            "format": "double",
            "description": "Spacecraft deployed area of solar array in meters squared.",
            "type": "number",
            "example": 10.23
          },
          "maneuverable": {
            "description": "Boolean indicating whether a spacecraft is maneuverable. Note that a spacecraft may have propulsion capability but may not be maneuverable due to lack of fuel, anomalous condition, or other operational constraints.",
            "type": "boolean",
            "example": false
          },
          "fuelRemaining": {
            "format": "double",
            "description": "Estimated remaining fuel for the object in kilograms.",
            "type": "number",
            "example": 10.23
          },
          "crossSection": {
            "format": "double",
            "description": "Average cross sectional area in meters squared.",
            "type": "number",
            "example": 10.23
          },
          "busCrossSection": {
            "format": "double",
            "description": "Average cross sectional area of the bus in meters squared.",
            "type": "number",
            "example": 10.23
          },
          "maxRadius": {
            "format": "double",
            "description": "Maximum dimension across the spacecraft (e.g., tip-to-tip across the solar panel arrays) in meters.",
            "type": "number",
            "example": 10.23
          },
          "colaRadius": {
            "format": "double",
            "description": "Maximum dimension of the box circumscribing the spacecraft (d = sqrt(a*a + b*b + c*c) where a is the tip-to-tip dimension, b and c are perpendicular to that.) in meters.",
            "type": "number",
            "example": 10.23
          },
          "adeptRadius": {
            "format": "double",
            "description": "The radius used for long-term debris environment projection analyses that is not as conservative as COLA Radius, in meters.",
            "type": "number",
            "example": 10.23
          },
          "numDeployable": {
            "format": "int32",
            "description": "The number of sub-satellites or deployable objects on the spacecraft.",
            "type": "integer",
            "example": 2
          },
          "depNames": {
            "description": "Array of satellite deployable objects. Must contain the same number of elements as the value of numDeployable.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "GOES-18A",
              "GOES-18B"
            ]
          },
          "depEstMasses": {
            "description": "Array of the estimated mass of each deployable object, in kilograms. Must contain the same number of elements as the value of numDeployable.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              20,
              21
            ]
          },
          "depMassUncs": {
            "description": "Array of the 1-sigma uncertainty of the mass for each deployable object, in kilograms. Must contain the same number of elements as the value of numDeployable.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              10,
              5
            ]
          },
          "refSource": {
            "description": "The reference source, sources, or URL from which the data in this record was obtained.",
            "maxLength": 256,
            "type": "string",
            "example": "Wikipedia"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "lastObSource": {
            "description": "The name of the source who last provided an observation for this idOnOrbit.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          }
        }
      },
      "OnorbitSolarArray_Full": {
        "required": [
          "idOnOrbit",
          "idSolarArray",
          "classificationMarking",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ONORBITSOLARARRAY-ID"
          },
          "idOnOrbit": {
            "description": "ID of the on-orbit object.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ONORBIT-ID"
          },
          "idSolarArray": {
            "description": "ID of the SolarArray.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "SOLARARRAY-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "quantity": {
            "format": "int32",
            "description": "The number of solar arrays on the spacecraft of the type identified by idSolarArray.",
            "type": "integer",
            "example": 10
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "solarArray": {
            "$ref": "#/components/schemas/SolarArray_Full"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          }
        }
      },
      "OnorbitThruster_Full": {
        "required": [
          "idOnOrbit",
          "idEngine",
          "classificationMarking",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ONORBITTHRUSTER-ID"
          },
          "idOnOrbit": {
            "description": "ID of the on-orbit object.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ONORBIT-ID"
          },
          "idEngine": {
            "description": "ID of the Engine.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ENGINE-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "type": {
            "description": "The type of thruster associated with this record (e.g. LAE, Hydrazine REA, etc.).",
            "maxLength": 32,
            "type": "string",
            "example": "Hydrazine REA"
          },
          "quantity": {
            "format": "int32",
            "description": "The number of engines/thrusters on the spacecraft of the type identified by idEngine.",
            "type": "integer",
            "example": 10
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "engine": {
            "$ref": "#/components/schemas/Engine_Full"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          }
        }
      },
      "Operatingunit_Full": {
        "description": "Model representation of a unit or organization which operates or controls an space-related Entity such as an on-orbit payload, a sensor, etc.  A contact may belong to an organization.",
        "required": [
          "classificationMarking",
          "name",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "idOperatingUnit": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "OPERATINGUNIT-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "altOperatingUnitId": {
            "description": "Unique identifier of the operating unit record from the originating system.",
            "maxLength": 36,
            "type": "string",
            "example": "32100000000021"
          },
          "name": {
            "description": "Name of the operating unit.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "SOME_NAME"
          },
          "description": {
            "description": "Description of the operating unit.",
            "maxLength": 256,
            "type": "string",
            "example": "Description of unit"
          },
          "idLocation": {
            "description": "Unique identifier of the location record for this operating unit.",
            "maxLength": 36,
            "type": "string",
            "example": "LOCATION-ID"
          },
          "idContact": {
            "description": "Unique identifier of the contact for this operating unit.",
            "maxLength": 36,
            "type": "string",
            "example": "CONTACT-ID"
          },
          "idOrganization": {
            "description": "Unique identifier of the organization record for this operating unit.",
            "maxLength": 36,
            "type": "string",
            "example": "ORGANIZATION-ID"
          },
          "unitIdentifier": {
            "description": "An optional identifier for this operating unit that may be composed from items such as the originating organization, allegiance, one-up number, etc.",
            "maxLength": 10,
            "type": "string",
            "example": "AZXAZ12345"
          },
          "countryCode": {
            "description": "The DoD Standard country code designator for the country or political entity to which the operating unit geographic coordinates reside . This field will be set to \"OTHR\" if the source value does not match a UDL country code value (ISO-3166-ALPHA-2).",
            "maxLength": 4,
            "type": "string",
            "example": "IQ"
          },
          "altCountryCode": {
            "description": "Specifies an alternate country code if the data provider code is not part of an official Country Code standard such as ISO-3166 or FIPS. This field will be set to the value provided by the source and should be used for all Queries specifying a Country Code.",
            "maxLength": 4,
            "type": "string",
            "example": "IZ"
          },
          "wac": {
            "description": "World Aeronautical Chart identifier for the area in which a designated operating unit is located.",
            "maxLength": 4,
            "type": "string",
            "example": "0427"
          },
          "operStatus": {
            "description": "The Degree to which an operating unit is ready to perform the overall operational mission(s) for which it was organized and equipped.  The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 3,
            "type": "string",
            "example": "OPR"
          },
          "condition": {
            "description": "The physical manner of being or state of existence of the operating unit.  A physical condition that must be considered in the determining of a course of action.  The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "RDY"
          },
          "conditionAvail": {
            "description": "Availability of the operating unit relative to its condition.  Indicates the reason the operating unit is not fully operational.  The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "A"
          },
          "eval": {
            "format": "int32",
            "description": "The Intelligence Confidence Level or the Reliability/degree of confidence that the analyst has assigned to the data within this record. The numerical range is from 1 to 9 with 1 representing the highest confidence level.",
            "type": "integer",
            "example": 7
          },
          "fpa": {
            "description": "Functional Production Area (FPA) under the Shared Production Program (SPP). Producers are defined per country per FPA.  The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 5,
            "type": "string",
            "example": "EOB"
          },
          "ident": {
            "description": "Estimated identity of the Site (ASSUMED FRIEND, FRIEND, HOSTILE, FAKER, JOKER, NEUTRAL, PENDING, SUSPECT, UNKNOWN): \n\nASSUMED FRIEND: Track assumed to be a friend due to the object characteristics, behavior, and/or origin.\n\nFRIEND: Track object supporting friendly forces and belonging to a declared friendly nation or entity.\n\nHOSTILE: Track object belonging to an opposing nation, party, group, or entity deemed to contribute to a threat to friendly forces or their mission due to its behavior, characteristics, nationality, or origin.\n\nFAKER: Friendly track, object, or entity acting as an exercise hostile.\n\nJOKER: Friendly track, object, or entity acting as an exercise suspect.\n\nNEUTRAL: Track object whose characteristics, behavior, nationality, and/or origin indicate that it is neither supporting nor opposing friendly forces or their mission.\n\nPENDING: Track object which has not been evaluated.\n\nSUSPECT: Track object deemed potentially hostile due to the object characteristics, behavior, nationality, and/or origin.\n\nUNKNOWN: Track object which has been evaluated and does not meet criteria for any standard identity.",
            "maxLength": 32,
            "type": "string",
            "example": "FRIEND"
          },
          "allegiance": {
            "description": "The DoD Standard country code designator for the country or political entity to which the operating unit owes its allegiance.  This field will be set to \"OTHR\" if the source value does not match a UDL country code value (ISO-3166-ALPHA-2).",
            "maxLength": 4,
            "type": "string",
            "example": "OTHR"
          },
          "altAllegiance": {
            "description": "Specifies an alternate allegiance code if the data provider code is not part of an official Country Code standard such as ISO-3166 or FIPS. This field will be set to the value provided by the source and should be used for all Queries specifying allegiance.",
            "maxLength": 4,
            "type": "string",
            "example": "HL"
          },
          "locName": {
            "description": "Location name for the coordinates.",
            "maxLength": 54,
            "type": "string",
            "example": "LOCATION_NAME"
          },
          "locReason": {
            "description": "Indicates the reason that the operating unit is at that location.  The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 9,
            "type": "string",
            "example": "GR"
          },
          "force": {
            "description": "An aggregation of military units within a single service (i.e., ARMY, AIR FORCE, etc.) which operates under a single authority to accomplish a common mission. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "NV"
          },
          "forceName": {
            "description": "The specific name for a given force.  For example, Force = ADF (Air Defense Force) and Force Name = Army Air Defense Force.",
            "maxLength": 54,
            "type": "string",
            "example": "FORCE-NAME"
          },
          "functRole": {
            "description": "Principal combat-related role that an operating unit is organized, structured and equipped to perform.  Or, the specialized military or paramilitary branch in which an individual serves, their specialization.  The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 3,
            "type": "string",
            "example": "MIL"
          },
          "msnPrimary": {
            "description": "Indicates the principal type of mission that an operating unit is organized and equipped to perform.  The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "W6"
          },
          "msnPrimarySpecialty": {
            "description": "Indicates the principal specialty type of mission that an operating unit is organized and equipped to perform.  The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "QK"
          },
          "masterUnit": {
            "description": "This field contains a value indicating whether the record is a master unit record (True) or a detail record (False).  Master records contain basic information that does not change over time for each unit that has been selected to be projected.",
            "type": "boolean",
            "example": true
          },
          "stylizedUnit": {
            "description": "This field contains a value indicating whether the record is a stylized operating unit record (True) or a regular operating unit  record (False).  A stylized operating unit is a type of operating unit with one set of equipment that can be assigned to one or more superiors.  A stylized operating unit is generally useful for lower echelon operating units where the number of operating units and types of equipment are equal for multiple organizations.  In lieu of creating unique operating unit records for each operating unit, a template is created for the operating unit and its equipment.  This template enables the user to assign the operating unit to multiple organizations.",
            "type": "boolean",
            "example": true
          },
          "divCat": {
            "description": "Combat status of a divisional or equivalent operating unit.  Currently, this data element applies only to operating units of the Former Soviet Union.  The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 1,
            "type": "string",
            "example": "5"
          },
          "echelon": {
            "description": "Organizational level of the operating unit.  The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "SHIP"
          },
          "echelonTier": {
            "description": "Indicates the major group or level to which an echelon belongs.   The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 2,
            "type": "string",
            "example": "68"
          },
          "fleetId": {
            "description": "Naval fleet to which an operating unit is assigned.   The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 1,
            "type": "string",
            "example": "A"
          },
          "deployStatus": {
            "description": "A code describing the amount of operating unit participation in a deployment.   The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 2,
            "type": "string",
            "example": "ND"
          },
          "flagFlown": {
            "description": "The country code of the observed flag flown.",
            "maxLength": 4,
            "type": "string",
            "example": "IZ"
          },
          "coordDatum": {
            "description": "A mathematical model of the earth used to calculate coordinates on a map.  US Forces use the World Geodetic System 1984 (WGS 84), but also use maps by allied countries with local datums.  The datum must be specified to ensure accuracy of coordinates.  The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 16,
            "type": "string",
            "example": "WGS"
          },
          "coord": {
            "description": "\"Indicates any of the magnitudes that serve to define the position of a point by reference to a fixed figure, system of lines, etc.\nPos. 1-2.  Latitude Degrees     [00-90]\nPos. 3-4.  Latitude Minutes     [00-59]\nPos. 5-6.  Latitude Seconds     [00-59]\nPos. 7-9.  Latitude Thousandths Of Seconds   [000-999]  \nPos. 10. Latitude Hemisphere       [NS] \nPos. 11-13. Longitude Degrees     [00-180] \nPos. 14-15. Longitude Minutes     [00-59] \nPos. 16-17. Longitude Seconds     [00-59] \nPos. 18-20. Longitude Thousandths Of Seconds      [000-999]\nPos. 21. Longitude Hemisphere     [EW]\nPos. 1-21.  Unknown Latitude and Unknown Longitude [000000000U000000000U]]\".\n",
            "maxLength": 21,
            "type": "string",
            "example": "340000000N0430000000E"
          },
          "coordDerivAcc": {
            "format": "double",
            "description": "Indicates the plus or minus error assessed against the method used to derive the coordinate.",
            "type": "number",
            "example": 12.345
          },
          "lat": {
            "format": "double",
            "description": "WGS84 latitude of the location, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 45.23
          },
          "lon": {
            "format": "double",
            "description": "WGS84 longitude of the location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": 179.1
          },
          "elevMsl": {
            "format": "double",
            "description": "Ground elevation of the geographic coordinates referenced to (above or below) Mean Sea Level (MSL) vertical datum.",
            "type": "number",
            "example": 123.45
          },
          "elevMslConfLvl": {
            "format": "int32",
            "description": "Indicates the confidence level expressed as a percent that a specific geometric spatial element, ELEVATION_MSL linear accuracy, has been vertically positioned to within a specified vertical accuracy.",
            "type": "integer",
            "example": 50
          },
          "elevMslDerivAcc": {
            "format": "double",
            "description": "Indicates the plus or minus error assessed against the method used to derive the elevation.",
            "type": "number",
            "example": 12.34
          },
          "geoidalMslSep": {
            "format": "double",
            "description": "The distance between Mean Sea Level and a referenced ellipsoid.",
            "type": "number",
            "example": 12.34
          },
          "milGridSys": {
            "description": "\"Indicates the grid system used in the development of the milGrid coordinates. Values are:\nUPS - Universal Polar System\nUTM - Universal Transverse Mercator\".",
            "maxLength": 3,
            "type": "string",
            "example": "UTM"
          },
          "milGrid": {
            "description": "The Military Grid Reference System is the geocoordinate standard used by NATO militaries for locating points on Earth. The MGRS is derived from the Universal Transverse Mercator (UTM) grid system and the Universal Polar Stereographic (UPS) grid system, but uses a different labeling convention. The MGRS is used as geocode for the entire Earth. Example of an milgrid coordinate, or grid reference, would be 4QFJ12345678, which consists of three parts:\n4Q (grid zone designator, GZD)\nFJ (the 100,000-meter square identifier)\n12345678 (numerical location; easting is 1234 and northing is 5678, in this case specifying a location with 10 m resolution).",
            "maxLength": 15,
            "type": "string",
            "example": "4QFJ12345678"
          },
          "utm": {
            "description": "Universal Transverse Mercator (UTM) grid coordinates.\nPos. 1-2, UTM Zone Column   [01-60\nPos. 3, UTM Zone Row   [C-HJ-NP-X]\nPos. 4, UTM False Easting   [0-9]\nPos. 5-9, UTM Meter Easting    [0-9][0-9][0-9][0-9][0-9]\nPos. 10-11, UTM False Northing    [0-9][0-9]\nPos. 12-16, UTM Meter Northing    [0-9][0-9][0-9][0-9][0-9].",
            "maxLength": 16,
            "type": "string",
            "example": "19P4390691376966"
          },
          "airDefArea": {
            "description": "Air Defense District (ADD) or Air Defense Area (ADA) in which the geographic coordinates reside.",
            "maxLength": 5,
            "type": "string",
            "example": "AL006"
          },
          "polSubdiv": {
            "description": "Political subdivision in which the geographic coordinates reside.  The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 7,
            "type": "string",
            "example": "IZ07"
          },
          "symCode": {
            "description": "A standard scheme for symbol coding enabling the transfer, display and use of symbols and graphics among information systems, as per MIL-STD 2525B, and supported by the element AFFILIATION.",
            "maxLength": 15,
            "type": "string",
            "example": "SOGPU----------"
          },
          "classRating": {
            "description": "Indicates the importance of the operating unit to the OES or MIR system.  This data element is restricted to update by DIA (DB-4). Valid values are:\n0 - Does not meet criteria above\n1 - Primary importance to system\n2 - Secondary importance to system\n3 - Tertiary importance to system\nO - Other. Explain in Remarks.",
            "maxLength": 1,
            "type": "string",
            "example": "1"
          },
          "recStatus": {
            "description": "Validity and currency of the data in the record to be used in conjunction with the other elements in the record as defined by SOPs. Values are:\nA - Active\nI - Inactive\nK - Acknowledged\nL - Local\nQ - A nominated (NOM) or Data Change Request (DCR) record\nR - Production reduced by CMD decision\nW - Working Record.",
            "maxLength": 1,
            "type": "string",
            "example": "A"
          },
          "reviewDate": {
            "format": "date",
            "description": "Date on which the data in the record was last reviewed by the responsible analyst for accuracy and currency.  This date cannot be greater than the current date.",
            "type": "string",
            "example": "2008-06-10"
          },
          "resProd": {
            "description": "Responsible Producer - Organization that is responsible for the maintenance of the record.",
            "maxLength": 4,
            "type": "string",
            "example": "RT"
          },
          "referenceDoc": {
            "description": "The reference documentiation that specifies the usage and enumerations contained in this record. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 128,
            "type": "string",
            "example": "Provider Reference Documentation"
          },
          "operatingUnitRemarks": {
            "description": "Remarks contain amplifying information for a specific service. The information may contain context and interpretations for consumer use.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OperatingUnitRemark_Full"
            },
            "readOnly": true
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "some.user"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization_Full"
          },
          "location": {
            "$ref": "#/components/schemas/Location_Full"
          }
        }
      },
      "OperatingUnitRemark_Full": {
        "description": "Remarks contain amplifying information for a specific service. The information may contain context and interpretations for consumer use.",
        "required": [
          "classificationMarking",
          "idOperatingUnit",
          "text",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "0167f577-e06c-358e-85aa-0a07a730bdd0"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idOperatingUnit": {
            "description": "The ID of the operating unit to which this remark applies.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "OperatingUnit-ID"
          },
          "altRmkId": {
            "description": "Unique identifier of the unit remark record from the originating system.",
            "maxLength": 36,
            "type": "string",
            "example": "123456ABC"
          },
          "name": {
            "description": "The name of the remark.",
            "maxLength": 64,
            "type": "string",
            "example": "Remark name"
          },
          "type": {
            "description": "The remark type (e.g. Caution, Information, Misc, Restriction, etc.).",
            "maxLength": 64,
            "type": "string",
            "example": "Restriction"
          },
          "text": {
            "description": "The text of the remark.",
            "maxLength": 16384,
            "minLength": 1,
            "type": "string",
            "example": "This is a remark"
          },
          "code": {
            "description": "The remark type identifier. For example, the Mobility Air Forces (MAF) remark code, defined in the Airfield Suitability and Restriction Report (ASRR).",
            "maxLength": 16,
            "type": "string",
            "example": "M"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "some.user"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "OrbitTrack_Abridged": {
        "description": "Keplerian orbital elements describing an orbit for a particular on-orbit satellite and applicable sensor data aiding in the orbit prediction.",
        "required": [
          "classificationMarking",
          "ts",
          "lat",
          "lon",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system if not provided on create operations.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ORBIT_TRACK_ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idOnOrbit": {
            "description": "Unique identifier of the target on-orbit object, if correlated.",
            "maxLength": 36,
            "type": "string",
            "example": "32375"
          },
          "satNo": {
            "format": "int32",
            "description": "Satellite/catalog number of the target on-orbit object.",
            "type": "integer",
            "example": 37375
          },
          "origObjectId": {
            "description": "Optional identifier provided by observation source to indicate the target on-orbit object of this track. This may be an internal identifier and not necessarily a valid satellite number.",
            "maxLength": 64,
            "type": "string",
            "example": "L2045"
          },
          "idElset": {
            "description": "Unique identifier of the Elset associated with this object.",
            "maxLength": 36,
            "type": "string",
            "example": "c715a619-8695-44d2-9e7d-effd257b4843"
          },
          "ts": {
            "format": "date-time",
            "description": "Track timestamp in ISO8601 UTC format, with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "lat": {
            "format": "double",
            "description": "WGS-84 latitude of the track object subpoint, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 19.88550102
          },
          "lon": {
            "format": "double",
            "description": "WGS-84 longitude of the track object subpoint, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 46.74596844
          },
          "alt": {
            "format": "double",
            "description": "Track point altitude relative to WGS-84 ellipsoid, in meters.",
            "type": "number",
            "example": 585.71
          },
          "rdfRF": {
            "format": "double",
            "description": "Radio frequency of the track, measured in megahertz (MHz).",
            "type": "number",
            "example": 1.5273
          },
          "callSign": {
            "description": "International radio call sign assigned to the track. This is an 8-character alphanumeric code.",
            "maxLength": 8,
            "type": "string",
            "example": "Charlie"
          },
          "rptNum": {
            "description": "Report number received from the reporting source for this track.",
            "maxLength": 32,
            "type": "string",
            "example": "123"
          },
          "objIdent": {
            "description": "The estimated identity of the track object (ASSUMED FRIEND, FRIEND, HOSTILE, NEUTRAL, PENDING, SUSPECT, UNKNOWN):\n\n ASSUMED FRIEND: Track assumed to be a friend due to the object characteristics, behavior, and/or origin.\n\n FRIEND: Track object supporting friendly forces and belonging to a declared friendly nation or entity.\n\n HOSTILE: Track object belonging to an opposing nation, party, group, or entity deemed to contribute to a threat to friendly forces or their mission due to its behavior, characteristics, nationality, or origin.\n\n NEUTRAL: Track object whose characteristics, behavior, nationality, and/or origin indicate that it is neither supporting nor opposing friendly forces or their mission.\n\n PENDING: Track object which has not been evaluated.\n\n SUSPECT: Track object deemed potentially hostile due to the object characteristics, behavior, nationality, and/or origin.\n\n UNKNOWN: Track object which has been evaluated and does not meet criteria for any standard identity.\n\n",
            "maxLength": 32,
            "enum": [
              "ASSUMED FRIEND",
              "FRIEND",
              "HOSTILE",
              "NEUTRAL",
              "PENDING",
              "SUSPECT",
              "UNKNOWN"
            ],
            "type": "string",
            "example": "FRIEND"
          },
          "identAmp": {
            "description": "Additional track object identity/status information, typically used for EXERCISE identity amplification (FAKER, JOKER, KILO, TRAVELLER, ZOMBIE):\n\n FAKER: Friendly track, object, or entity acting as an exercise hostile.\n\n JOKER: Friendly track, object, or entity acting as an exercise suspect.\n\n KILO: Friendly high-value object.\n\n TRAVELLER: Suspect land or surface track following a recognized traffic route.\n\n ZOMBIE: Suspect track, object, or entity of special interest.\n\n",
            "maxLength": 32,
            "type": "string",
            "example": "JOKER"
          },
          "satStatus": {
            "description": "Status of the satellite.",
            "maxLength": 64,
            "type": "string",
            "example": "INACTIVE"
          },
          "objectType": {
            "description": "The on-orbit category assigned to this track object (DEBRIS, MANNED, PAYLOAD, PLATFORM, ROCKET BODY, UNKNOWN).",
            "maxLength": 32,
            "enum": [
              "DEBRIS",
              "MANNED",
              "PAYLOAD",
              "PLATFORM",
              "ROCKET BODY",
              "UNKNOWN"
            ],
            "type": "string",
            "example": "PAYLOAD"
          },
          "countryCode": {
            "description": "The country code. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDL’s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.",
            "maxLength": 8,
            "type": "string",
            "example": "US"
          },
          "decay": {
            "format": "double",
            "description": "Predicted change in Mean Motion (velocity) in radians/herg^2.  herg is a unit of time measure equal to 806.8120769 seconds, and is the orbital period of an imaginary satellite rotating about the Earth at zero altitude.",
            "type": "number",
            "example": 0.5868
          },
          "charlieLine": {
            "description": "One-line Charlie elements set.",
            "maxLength": 100,
            "type": "string",
            "example": "323751332255940400010000003635829600010200072500098205001150"
          },
          "aouType": {
            "description": "The Area of Uncertainty (AoU) type (BEARING, ELLIPSE, OTHER) definition. This type defines the elements of the aouData array and is required if aouData is not null. See the aouData field definition for specific information.",
            "maxLength": 16,
            "type": "string",
            "example": "ELLIPSE"
          },
          "aouData": {
            "description": "Three element array representing an Area of Uncertainty (AoU).  The array element definitions and units are type specific depending on the aouType specified in this record:\n\n\n\nELLIPSE:\n\n   brg - orientation in degrees of the ellipse\n\n   a1 - semi-major axis in meters\n\n   a2 - semi-minor axis in meters\n\nBEARING (BEARING BOX or MTST BEARING BOX):\n\n   brg - orientation in degrees of the bearing box \n\n   a1 - length of bearing box in meters \n\n   a2 - half-width of bearing box in meters \n\nOTHER (All other type values):\n\n   brg - line of bearing in degrees true \n\n   a1 - bearing error in degrees \n\n   a2 - estimated range in meters.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              34.3,
              26.5,
              1.2
            ]
          },
          "spd": {
            "format": "double",
            "description": "Track object speed, in km/sec.",
            "type": "number",
            "example": 15.03443
          },
          "angElev": {
            "format": "double",
            "description": "The angle formed between the line of sight of the observer and the horizon at track timestamp, in degrees.  The angular range is -90 to 90, with negative values representing angle of depression.",
            "type": "number",
            "example": 15.2
          },
          "cntnmnt": {
            "format": "double",
            "description": "The Area Of Uncertainty (AOU) percentage (0 - 100) containment value. The percentage of time (90%) that the estimated area of uncertainty will cover the true position of the track object.",
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "example": 90
          },
          "xref": {
            "description": "Source cross-reference code for the command that originated the track report.",
            "maxLength": 8,
            "type": "string",
            "example": "XE"
          },
          "chXRef": {
            "description": "The cross-reference code of the channel on which this track report was received, if the report came over a comms channel.",
            "maxLength": 32,
            "type": "string",
            "example": "FHKX"
          },
          "amplification": {
            "description": "Free-form remarks entered for the satellite.",
            "maxLength": 256,
            "type": "string",
            "example": "A note regarding this spacecraft"
          },
          "iff": {
            "description": "A text aplifier displaying IFF/SIF/AIS Identification modes and codes.",
            "maxLength": 64,
            "type": "string",
            "example": "ID Mode"
          },
          "reinforced": {
            "description": "Flag indicating that this track represents a reinforced object or group.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "reduced": {
            "description": "Flag indicating that this track represents a reduced object or group.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "hq": {
            "description": "Flag indicating that this track represents a headquarters object.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "dummy": {
            "description": "Flag indicating that this track represents a dummy object or group.  Identifies offensive or defensive units, equipment and/or installations intended to draw the enemy's attention away from the area of the main attack.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "taskForce": {
            "description": "Flag indicating that this track represents a task force.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "feint": {
            "description": "Flag indicating that this track represents a feint object or group.  Identifies offensive or defensive units, equipment and/or installations intended to draw the enemy's attention away from the area of the main attack.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "installation": {
            "description": "Flag indicating that this track represents an installation.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "vehType": {
            "description": "The type of vehicle with which the device is associated.  Based on MIL-STD-2525 symbology definitions.",
            "maxLength": 10,
            "type": "string",
            "example": "SPACE"
          },
          "trkId": {
            "description": "UUID identifying the track, which should remain the same on subsequent tracks of the same object.",
            "maxLength": 36,
            "type": "string",
            "example": "3668f135-fcba-4630-a43d-e7782e11d988"
          },
          "trackSensors": {
            "description": "TrackSensor Collection.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackSensor_Abridged"
            }
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database.",
            "type": "string",
            "readOnly": true,
            "example": "2021-02-25T12:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          }
        }
      },
      "OrbitTrack_Full": {
        "description": "Keplerian orbital elements describing an orbit for a particular on-orbit satellite and applicable sensor data aiding in the orbit prediction.",
        "required": [
          "classificationMarking",
          "ts",
          "lat",
          "lon",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system if not provided on create operations.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ORBIT_TRACK_ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idOnOrbit": {
            "description": "Unique identifier of the target on-orbit object, if correlated.",
            "maxLength": 36,
            "type": "string",
            "example": "32375"
          },
          "satNo": {
            "format": "int32",
            "description": "Satellite/catalog number of the target on-orbit object.",
            "type": "integer",
            "example": 37375
          },
          "onOrbit": {
            "$ref": "#/components/schemas/Onorbit_Full"
          },
          "origObjectId": {
            "description": "Optional identifier provided by observation source to indicate the target on-orbit object of this track. This may be an internal identifier and not necessarily a valid satellite number.",
            "maxLength": 64,
            "type": "string",
            "example": "L2045"
          },
          "idElset": {
            "description": "Unique identifier of the Elset associated with this object.",
            "maxLength": 36,
            "type": "string",
            "example": "c715a619-8695-44d2-9e7d-effd257b4843"
          },
          "ts": {
            "format": "date-time",
            "description": "Track timestamp in ISO8601 UTC format, with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "lat": {
            "format": "double",
            "description": "WGS-84 latitude of the track object subpoint, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 19.88550102
          },
          "lon": {
            "format": "double",
            "description": "WGS-84 longitude of the track object subpoint, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 46.74596844
          },
          "alt": {
            "format": "double",
            "description": "Track point altitude relative to WGS-84 ellipsoid, in meters.",
            "type": "number",
            "example": 585.71
          },
          "rdfRF": {
            "format": "double",
            "description": "Radio frequency of the track, measured in megahertz (MHz).",
            "type": "number",
            "example": 1.5273
          },
          "callSign": {
            "description": "International radio call sign assigned to the track. This is an 8-character alphanumeric code.",
            "maxLength": 8,
            "type": "string",
            "example": "Charlie"
          },
          "rptNum": {
            "description": "Report number received from the reporting source for this track.",
            "maxLength": 32,
            "type": "string",
            "example": "123"
          },
          "objIdent": {
            "description": "The estimated identity of the track object (ASSUMED FRIEND, FRIEND, HOSTILE, NEUTRAL, PENDING, SUSPECT, UNKNOWN):\n\n ASSUMED FRIEND: Track assumed to be a friend due to the object characteristics, behavior, and/or origin.\n\n FRIEND: Track object supporting friendly forces and belonging to a declared friendly nation or entity.\n\n HOSTILE: Track object belonging to an opposing nation, party, group, or entity deemed to contribute to a threat to friendly forces or their mission due to its behavior, characteristics, nationality, or origin.\n\n NEUTRAL: Track object whose characteristics, behavior, nationality, and/or origin indicate that it is neither supporting nor opposing friendly forces or their mission.\n\n PENDING: Track object which has not been evaluated.\n\n SUSPECT: Track object deemed potentially hostile due to the object characteristics, behavior, nationality, and/or origin.\n\n UNKNOWN: Track object which has been evaluated and does not meet criteria for any standard identity.\n\n",
            "maxLength": 32,
            "enum": [
              "ASSUMED FRIEND",
              "FRIEND",
              "HOSTILE",
              "NEUTRAL",
              "PENDING",
              "SUSPECT",
              "UNKNOWN"
            ],
            "type": "string",
            "example": "FRIEND"
          },
          "identAmp": {
            "description": "Additional track object identity/status information, typically used for EXERCISE identity amplification (FAKER, JOKER, KILO, TRAVELLER, ZOMBIE):\n\n FAKER: Friendly track, object, or entity acting as an exercise hostile.\n\n JOKER: Friendly track, object, or entity acting as an exercise suspect.\n\n KILO: Friendly high-value object.\n\n TRAVELLER: Suspect land or surface track following a recognized traffic route.\n\n ZOMBIE: Suspect track, object, or entity of special interest.\n\n",
            "maxLength": 32,
            "type": "string",
            "example": "JOKER"
          },
          "satStatus": {
            "description": "Status of the satellite.",
            "maxLength": 64,
            "type": "string",
            "example": "INACTIVE"
          },
          "objectType": {
            "description": "The on-orbit category assigned to this track object (DEBRIS, MANNED, PAYLOAD, PLATFORM, ROCKET BODY, UNKNOWN).",
            "maxLength": 32,
            "enum": [
              "DEBRIS",
              "MANNED",
              "PAYLOAD",
              "PLATFORM",
              "ROCKET BODY",
              "UNKNOWN"
            ],
            "type": "string",
            "example": "PAYLOAD"
          },
          "countryCode": {
            "description": "The country code. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDL’s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.",
            "maxLength": 8,
            "type": "string",
            "example": "US"
          },
          "decay": {
            "format": "double",
            "description": "Predicted change in Mean Motion (velocity) in radians/herg^2.  herg is a unit of time measure equal to 806.8120769 seconds, and is the orbital period of an imaginary satellite rotating about the Earth at zero altitude.",
            "type": "number",
            "example": 0.5868
          },
          "charlieLine": {
            "description": "One-line Charlie elements set.",
            "maxLength": 100,
            "type": "string",
            "example": "323751332255940400010000003635829600010200072500098205001150"
          },
          "aouType": {
            "description": "The Area of Uncertainty (AoU) type (BEARING, ELLIPSE, OTHER) definition. This type defines the elements of the aouData array and is required if aouData is not null. See the aouData field definition for specific information.",
            "maxLength": 16,
            "type": "string",
            "example": "ELLIPSE"
          },
          "aouData": {
            "description": "Three element array representing an Area of Uncertainty (AoU).  The array element definitions and units are type specific depending on the aouType specified in this record:\n\n\n\nELLIPSE:\n\n   brg - orientation in degrees of the ellipse\n\n   a1 - semi-major axis in meters\n\n   a2 - semi-minor axis in meters\n\nBEARING (BEARING BOX or MTST BEARING BOX):\n\n   brg - orientation in degrees of the bearing box \n\n   a1 - length of bearing box in meters \n\n   a2 - half-width of bearing box in meters \n\nOTHER (All other type values):\n\n   brg - line of bearing in degrees true \n\n   a1 - bearing error in degrees \n\n   a2 - estimated range in meters.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              34.3,
              26.5,
              1.2
            ]
          },
          "spd": {
            "format": "double",
            "description": "Track object speed, in km/sec.",
            "type": "number",
            "example": 15.03443
          },
          "angElev": {
            "format": "double",
            "description": "The angle formed between the line of sight of the observer and the horizon at track timestamp, in degrees.  The angular range is -90 to 90, with negative values representing angle of depression.",
            "type": "number",
            "example": 15.2
          },
          "cntnmnt": {
            "format": "double",
            "description": "The Area Of Uncertainty (AOU) percentage (0 - 100) containment value. The percentage of time (90%) that the estimated area of uncertainty will cover the true position of the track object.",
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "example": 90
          },
          "xref": {
            "description": "Source cross-reference code for the command that originated the track report.",
            "maxLength": 8,
            "type": "string",
            "example": "XE"
          },
          "chXRef": {
            "description": "The cross-reference code of the channel on which this track report was received, if the report came over a comms channel.",
            "maxLength": 32,
            "type": "string",
            "example": "FHKX"
          },
          "amplification": {
            "description": "Free-form remarks entered for the satellite.",
            "maxLength": 256,
            "type": "string",
            "example": "A note regarding this spacecraft"
          },
          "iff": {
            "description": "A text aplifier displaying IFF/SIF/AIS Identification modes and codes.",
            "maxLength": 64,
            "type": "string",
            "example": "ID Mode"
          },
          "reinforced": {
            "description": "Flag indicating that this track represents a reinforced object or group.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "reduced": {
            "description": "Flag indicating that this track represents a reduced object or group.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "hq": {
            "description": "Flag indicating that this track represents a headquarters object.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "dummy": {
            "description": "Flag indicating that this track represents a dummy object or group.  Identifies offensive or defensive units, equipment and/or installations intended to draw the enemy's attention away from the area of the main attack.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "taskForce": {
            "description": "Flag indicating that this track represents a task force.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "feint": {
            "description": "Flag indicating that this track represents a feint object or group.  Identifies offensive or defensive units, equipment and/or installations intended to draw the enemy's attention away from the area of the main attack.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "installation": {
            "description": "Flag indicating that this track represents an installation.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "vehType": {
            "description": "The type of vehicle with which the device is associated.  Based on MIL-STD-2525 symbology definitions.",
            "maxLength": 10,
            "type": "string",
            "example": "SPACE"
          },
          "trkId": {
            "description": "UUID identifying the track, which should remain the same on subsequent tracks of the same object.",
            "maxLength": 36,
            "type": "string",
            "example": "3668f135-fcba-4630-a43d-e7782e11d988"
          },
          "trackSensors": {
            "description": "TrackSensor Collection.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackSensor_Full"
            }
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database.",
            "type": "string",
            "readOnly": true,
            "example": "2021-02-25T12:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          }
        }
      },
      "OrbitTrack_Ingest": {
        "description": "Keplerian orbital elements describing an orbit for a particular on-orbit satellite and applicable sensor data aiding in the orbit prediction.",
        "required": [
          "classificationMarking",
          "ts",
          "lat",
          "lon",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system if not provided on create operations.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ORBIT_TRACK_ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idOnOrbit": {
            "description": "Unique identifier of the target on-orbit object, if correlated.",
            "maxLength": 36,
            "type": "string",
            "example": "32375"
          },
          "satNo": {
            "format": "int32",
            "description": "Satellite/catalog number of the target on-orbit object.",
            "type": "integer",
            "example": 37375
          },
          "origObjectId": {
            "description": "Optional identifier provided by observation source to indicate the target on-orbit object of this track. This may be an internal identifier and not necessarily a valid satellite number.",
            "maxLength": 64,
            "type": "string",
            "example": "L2045"
          },
          "idElset": {
            "description": "Unique identifier of the Elset associated with this object.",
            "maxLength": 36,
            "type": "string",
            "example": "c715a619-8695-44d2-9e7d-effd257b4843"
          },
          "ts": {
            "format": "date-time",
            "description": "Track timestamp in ISO8601 UTC format, with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "lat": {
            "format": "double",
            "description": "WGS-84 latitude of the track object subpoint, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 19.88550102
          },
          "lon": {
            "format": "double",
            "description": "WGS-84 longitude of the track object subpoint, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 46.74596844
          },
          "alt": {
            "format": "double",
            "description": "Track point altitude relative to WGS-84 ellipsoid, in meters.",
            "type": "number",
            "example": 585.71
          },
          "rdfRF": {
            "format": "double",
            "description": "Radio frequency of the track, measured in megahertz (MHz).",
            "type": "number",
            "example": 1.5273
          },
          "callSign": {
            "description": "International radio call sign assigned to the track. This is an 8-character alphanumeric code.",
            "maxLength": 8,
            "type": "string",
            "example": "Charlie"
          },
          "rptNum": {
            "description": "Report number received from the reporting source for this track.",
            "maxLength": 32,
            "type": "string",
            "example": "123"
          },
          "objIdent": {
            "description": "The estimated identity of the track object (ASSUMED FRIEND, FRIEND, HOSTILE, NEUTRAL, PENDING, SUSPECT, UNKNOWN):\n\n ASSUMED FRIEND: Track assumed to be a friend due to the object characteristics, behavior, and/or origin.\n\n FRIEND: Track object supporting friendly forces and belonging to a declared friendly nation or entity.\n\n HOSTILE: Track object belonging to an opposing nation, party, group, or entity deemed to contribute to a threat to friendly forces or their mission due to its behavior, characteristics, nationality, or origin.\n\n NEUTRAL: Track object whose characteristics, behavior, nationality, and/or origin indicate that it is neither supporting nor opposing friendly forces or their mission.\n\n PENDING: Track object which has not been evaluated.\n\n SUSPECT: Track object deemed potentially hostile due to the object characteristics, behavior, nationality, and/or origin.\n\n UNKNOWN: Track object which has been evaluated and does not meet criteria for any standard identity.\n\n",
            "maxLength": 32,
            "enum": [
              "ASSUMED FRIEND",
              "FRIEND",
              "HOSTILE",
              "NEUTRAL",
              "PENDING",
              "SUSPECT",
              "UNKNOWN"
            ],
            "type": "string",
            "example": "FRIEND"
          },
          "identAmp": {
            "description": "Additional track object identity/status information, typically used for EXERCISE identity amplification (FAKER, JOKER, KILO, TRAVELLER, ZOMBIE):\n\n FAKER: Friendly track, object, or entity acting as an exercise hostile.\n\n JOKER: Friendly track, object, or entity acting as an exercise suspect.\n\n KILO: Friendly high-value object.\n\n TRAVELLER: Suspect land or surface track following a recognized traffic route.\n\n ZOMBIE: Suspect track, object, or entity of special interest.\n\n",
            "maxLength": 32,
            "type": "string",
            "example": "JOKER"
          },
          "satStatus": {
            "description": "Status of the satellite.",
            "maxLength": 64,
            "type": "string",
            "example": "INACTIVE"
          },
          "objectType": {
            "description": "The on-orbit category assigned to this track object (DEBRIS, MANNED, PAYLOAD, PLATFORM, ROCKET BODY, UNKNOWN).",
            "maxLength": 32,
            "enum": [
              "DEBRIS",
              "MANNED",
              "PAYLOAD",
              "PLATFORM",
              "ROCKET BODY",
              "UNKNOWN"
            ],
            "type": "string",
            "example": "PAYLOAD"
          },
          "countryCode": {
            "description": "The country code. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDL’s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.",
            "maxLength": 8,
            "type": "string",
            "example": "US"
          },
          "decay": {
            "format": "double",
            "description": "Predicted change in Mean Motion (velocity) in radians/herg^2.  herg is a unit of time measure equal to 806.8120769 seconds, and is the orbital period of an imaginary satellite rotating about the Earth at zero altitude.",
            "type": "number",
            "example": 0.5868
          },
          "charlieLine": {
            "description": "One-line Charlie elements set.",
            "maxLength": 100,
            "type": "string",
            "example": "323751332255940400010000003635829600010200072500098205001150"
          },
          "aouType": {
            "description": "The Area of Uncertainty (AoU) type (BEARING, ELLIPSE, OTHER) definition. This type defines the elements of the aouData array and is required if aouData is not null. See the aouData field definition for specific information.",
            "maxLength": 16,
            "type": "string",
            "example": "ELLIPSE"
          },
          "aouData": {
            "description": "Three element array representing an Area of Uncertainty (AoU).  The array element definitions and units are type specific depending on the aouType specified in this record:\n\n\n\nELLIPSE:\n\n   brg - orientation in degrees of the ellipse\n\n   a1 - semi-major axis in meters\n\n   a2 - semi-minor axis in meters\n\nBEARING (BEARING BOX or MTST BEARING BOX):\n\n   brg - orientation in degrees of the bearing box \n\n   a1 - length of bearing box in meters \n\n   a2 - half-width of bearing box in meters \n\nOTHER (All other type values):\n\n   brg - line of bearing in degrees true \n\n   a1 - bearing error in degrees \n\n   a2 - estimated range in meters.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              34.3,
              26.5,
              1.2
            ]
          },
          "spd": {
            "format": "double",
            "description": "Track object speed, in km/sec.",
            "type": "number",
            "example": 15.03443
          },
          "angElev": {
            "format": "double",
            "description": "The angle formed between the line of sight of the observer and the horizon at track timestamp, in degrees.  The angular range is -90 to 90, with negative values representing angle of depression.",
            "type": "number",
            "example": 15.2
          },
          "cntnmnt": {
            "format": "double",
            "description": "The Area Of Uncertainty (AOU) percentage (0 - 100) containment value. The percentage of time (90%) that the estimated area of uncertainty will cover the true position of the track object.",
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "example": 90
          },
          "xref": {
            "description": "Source cross-reference code for the command that originated the track report.",
            "maxLength": 8,
            "type": "string",
            "example": "XE"
          },
          "chXRef": {
            "description": "The cross-reference code of the channel on which this track report was received, if the report came over a comms channel.",
            "maxLength": 32,
            "type": "string",
            "example": "FHKX"
          },
          "amplification": {
            "description": "Free-form remarks entered for the satellite.",
            "maxLength": 256,
            "type": "string",
            "example": "A note regarding this spacecraft"
          },
          "iff": {
            "description": "A text aplifier displaying IFF/SIF/AIS Identification modes and codes.",
            "maxLength": 64,
            "type": "string",
            "example": "ID Mode"
          },
          "reinforced": {
            "description": "Flag indicating that this track represents a reinforced object or group.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "reduced": {
            "description": "Flag indicating that this track represents a reduced object or group.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "hq": {
            "description": "Flag indicating that this track represents a headquarters object.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "dummy": {
            "description": "Flag indicating that this track represents a dummy object or group.  Identifies offensive or defensive units, equipment and/or installations intended to draw the enemy's attention away from the area of the main attack.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "taskForce": {
            "description": "Flag indicating that this track represents a task force.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "feint": {
            "description": "Flag indicating that this track represents a feint object or group.  Identifies offensive or defensive units, equipment and/or installations intended to draw the enemy's attention away from the area of the main attack.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "installation": {
            "description": "Flag indicating that this track represents an installation.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "vehType": {
            "description": "The type of vehicle with which the device is associated.  Based on MIL-STD-2525 symbology definitions.",
            "maxLength": 10,
            "type": "string",
            "example": "SPACE"
          },
          "trkId": {
            "description": "UUID identifying the track, which should remain the same on subsequent tracks of the same object.",
            "maxLength": 36,
            "type": "string",
            "example": "3668f135-fcba-4630-a43d-e7782e11d988"
          },
          "trackSensors": {
            "description": "TrackSensor Collection.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackSensor_Ingest"
            }
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database.",
            "type": "string",
            "readOnly": true,
            "example": "2021-02-25T12:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          }
        }
      },
      "Organization_Full": {
        "description": "An organization such as a corporation, manufacturer, consortium, government, etc. An organization may have parent and child organizations as well as link to a former organization if this org previously existed as another organization.",
        "required": [
          "classificationMarking",
          "name",
          "type",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ORGANIZATION-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "name": {
            "description": "Organization name.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "some.user"
          },
          "type": {
            "description": "Type of organization (e.g. GOVERNMENT, CORPORATION, CONSORTIUM, ACADEMIC).",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "GOVERNMENT"
          },
          "category": {
            "description": "Subtype or category of the organization (e.g. Private company, stock market quoted company, subsidiary, goverment department/agency, etc).",
            "maxLength": 128,
            "type": "string",
            "example": "Private company"
          },
          "externalId": {
            "description": "Optional externally provided identifier for this row.",
            "maxLength": 36,
            "type": "string",
            "example": "EXTERNAL-ID"
          },
          "description": {
            "description": "Organization description.",
            "maxLength": 256,
            "type": "string",
            "example": "Example description"
          },
          "countryCode": {
            "description": "Country of the physical location of the organization. This value is typically the ISO 3166 Alpha-2 two-character country code. However, it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDL’s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.",
            "maxLength": 4,
            "type": "string",
            "example": "US"
          },
          "nationality": {
            "description": "Country of registration or ownership of the organization. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDL’s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.",
            "maxLength": 4,
            "type": "string",
            "example": "US"
          },
          "active": {
            "description": "Boolean indicating if this organization is currently active.",
            "type": "boolean",
            "example": false
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "some.user"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "some.user"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "organizationDetails": {
            "description": "Read-only collection of additional OrganizationDetails by various sources for this organization, ignored on create/update. These details must be created separately via the /udl/organizationdetails operations.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationDetails_Full"
            },
            "readOnly": true
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          }
        }
      },
      "OrganizationDetails_Full": {
        "description": "Model representation of additional detailed organization data as collected by a particular source.",
        "required": [
          "idOrganization",
          "classificationMarking",
          "name",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ORGANIZATIONDETAILS-ID"
          },
          "idOrganization": {
            "description": "Unique identifier of the parent organization.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ORGANIZATION-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "name": {
            "description": "Organization details name.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "some.user"
          },
          "email": {
            "description": "Listed contact email address for the organization.",
            "maxLength": 320,
            "type": "string",
            "example": "some_organization@organization.com"
          },
          "address1": {
            "description": "Street number of the organization.",
            "maxLength": 120,
            "type": "string",
            "example": "123 Main Street"
          },
          "address2": {
            "description": "Field for additional organization address information such as PO Box and unit number.",
            "maxLength": 120,
            "type": "string",
            "example": "Apt 4B"
          },
          "address3": {
            "description": "Contains the third line of address information for an organization.",
            "maxLength": 120,
            "type": "string",
            "example": "Colorado Springs CO, 80903"
          },
          "geoAdminLevel1": {
            "description": "Administrative boundaries of the first sub-national level. Level 1 is simply the largest demarcation under whatever demarcation criteria has been determined by the governing body. For example, this may be a state or province.",
            "maxLength": 120,
            "type": "string",
            "example": "Colorado"
          },
          "geoAdminLevel2": {
            "description": "Administrative boundaries of the second sub-national level. Level 2 is simply the second largest demarcation under whatever demarcation criteria has been determined by the governing body. For example, this may be a county or district.",
            "maxLength": 120,
            "type": "string",
            "example": "El Paso County"
          },
          "geoAdminLevel3": {
            "description": "Administrative boundaries of the third sub-national level. Level 3 is simply the third largest demarcation under whatever demarcation criteria has been determined by the governing body. For example, this may be a city or township.",
            "maxLength": 120,
            "type": "string",
            "example": "Colorado Springs"
          },
          "postalCode": {
            "description": "A postal code, such as PIN or ZIP Code, is a series of letters or digits or both included in the postal address of the organization.",
            "maxLength": 32,
            "type": "string",
            "example": "80903"
          },
          "description": {
            "description": "Organization description.",
            "maxLength": 2147483647,
            "type": "string",
            "example": "Example description"
          },
          "formerOrgId": {
            "description": "Former organization ID (if this organization previously existed as another organization).",
            "maxLength": 36,
            "type": "string",
            "example": "FORMERORG-ID"
          },
          "parentOrgId": {
            "description": "Parent organization ID of this organization if it is a child organization.",
            "maxLength": 36,
            "type": "string",
            "example": "PARENTORG-ID"
          },
          "financialYearEndDate": {
            "format": "date-time",
            "description": "For organizations of type CORPORATION, the effective financial year end date for revenue, EBITDA, and profit values.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123Z"
          },
          "revenue": {
            "format": "double",
            "description": "For organizations of type CORPORATION, total annual revenue as of financialYearEndDate in US Dollars.",
            "type": "number",
            "example": 123.4
          },
          "profit": {
            "format": "double",
            "description": "For organizations of type CORPORATION, total annual profit as of financialYearEndDate in US Dollars.",
            "type": "number",
            "example": 123.4
          },
          "ebitda": {
            "format": "double",
            "description": "For organizations of type CORPORATION, the company EBITDA value as of financialYearEndDate in US Dollars.",
            "type": "number",
            "example": 123.4
          },
          "ftes": {
            "format": "int32",
            "description": "Total number of FTEs in this organization.",
            "type": "integer",
            "example": 123
          },
          "broker": {
            "description": "Designated broker for this organization.",
            "maxLength": 128,
            "type": "string",
            "example": "some.user"
          },
          "ceo": {
            "description": "For organizations of type CORPORATION, the name of the Chief Executive Officer.",
            "maxLength": 128,
            "type": "string",
            "example": "some.user"
          },
          "cfo": {
            "description": "For organizations of type CORPORATION, the name of the Chief Financial Officer.",
            "maxLength": 128,
            "type": "string",
            "example": "some.user"
          },
          "cto": {
            "description": "For organizations of type CORPORATION, the name of the Chief Technology Officer.",
            "maxLength": 128,
            "type": "string",
            "example": "some.user"
          },
          "riskManager": {
            "description": "The name of the risk manager for the organization.",
            "maxLength": 128,
            "type": "string",
            "example": "some.user"
          },
          "massRanking": {
            "format": "int32",
            "description": "Mass ranking for this organization.",
            "type": "integer",
            "example": 123
          },
          "revenueRanking": {
            "format": "int32",
            "description": "Revenue ranking for this organization.",
            "type": "integer",
            "example": 123
          },
          "financialNotes": {
            "description": "For organizations of type CORPORATION, notes on company financials.",
            "maxLength": 2147483647,
            "type": "string",
            "example": "Example notes"
          },
          "servicesNotes": {
            "description": "Notes on the services provided by the organization.",
            "maxLength": 2147483647,
            "type": "string",
            "example": "Example notes"
          },
          "fleetPlanNotes": {
            "description": "Satellite fleet planning notes for this organization.",
            "maxLength": 2147483647,
            "type": "string",
            "example": "Example notes"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "some.user"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "some.user"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "tags": {
            "description": "Optional array of provider/source specific tags for this data, where each element is no longer than 32 characters, used for implementing data owner conditional access controls to restrict access to the data. Should be left null by data providers unless conditional access controls are coordinated with the UDL team.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "PROVIDER_TAG1",
              "PROVIDER_TAG2"
            ]
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          }
        }
      },
      "RFBand_Full": {
        "description": "Details on a particular Radio Frequency (RF) band, also known as a carrier, which may be in use by any type of Entity for communications or operations.",
        "required": [
          "idEntity",
          "classificationMarking",
          "name",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "RFBAND-ID"
          },
          "idEntity": {
            "description": "Unique identifier of the parent Entity which uses this band.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ENTITY-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "name": {
            "description": "RF Band name.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "BAND_NAME"
          },
          "band": {
            "description": "Name of the band of this RF range (e.g. X,K,Ku,Ka,L,S,C,UHF,VHF,EHF,SHF,UNK,VLF,HF,E,Q,V,W). See RFBandType for more details and descriptions of each band name.",
            "maxLength": 5,
            "type": "string",
            "example": "Ku"
          },
          "mode": {
            "description": "RF Band mode (e.g. TX, RX).",
            "maxLength": 4,
            "enum": [
              "TX",
              "RX"
            ],
            "type": "string",
            "example": "TX"
          },
          "purpose": {
            "description": "Purpose or use of the RF Band -- COMM = communications, TTC = Telemetry/Tracking/Control, OPS = Operations, OTHER = Other).",
            "maxLength": 16,
            "enum": [
              "COMM",
              "TTC",
              "OPS",
              "OTHER"
            ],
            "type": "string",
            "example": "TTC"
          },
          "freqMin": {
            "format": "double",
            "description": "Start/minimum of transmit RF frequency range, if applicable, in Mhz.",
            "type": "number",
            "example": 50.23
          },
          "freqMax": {
            "format": "double",
            "description": "End/maximum of transmit RF frequency range, if applicable, in Mhz.",
            "type": "number",
            "example": 2000.23
          },
          "centerFreq": {
            "format": "double",
            "description": "Center frequency of RF frequency range, if applicable, in Mhz.",
            "type": "number",
            "example": 1000.23
          },
          "peakGain": {
            "format": "double",
            "description": "RF Range maximum gain, in dBi.",
            "type": "number",
            "example": 120.23
          },
          "edgeGain": {
            "format": "double",
            "description": "RF Range edge gain, in dBi.",
            "type": "number",
            "example": 100.23
          },
          "bandwidth": {
            "format": "double",
            "description": "RF Band frequency range bandwidth in Mhz.",
            "type": "number",
            "example": 100.23
          },
          "beamwidth": {
            "format": "double",
            "description": "Angle between the half-power (-3 dB) points of the main lobe of the antenna, in degrees.",
            "type": "number",
            "example": 45.23
          },
          "polarization": {
            "description": "Transponder polarization e.g. H - (Horizontally Polarized) Perpendicular to Earth's surface, V - (Vertically Polarized) Parallel to Earth's surface, L - (Left Hand Circularly Polarized) Rotating left relative to the Earth's surface, R - (Right Hand Circularly Polarized) Rotating right relative to the Earth's surface.",
            "maxLength": 4,
            "enum": [
              "H",
              "V",
              "R",
              "L"
            ],
            "type": "string",
            "example": "H"
          },
          "erp": {
            "format": "double",
            "description": "Effective Radiated Power (ERP) is the total power in decibel watts radiated by an actual antenna relative to a half-wave dipole rather than a theoretical isotropic antenna. A half-wave dipole has a gain of 2.15 dB compared to an isotropic antenna.  EIRP(dB) = ERP (dB)+2.15 dB or EIRP (W) = 1.64*ERP(W). Effective radiated power and effective isotropic radiated power both measure the amount of power a radio transmitter and antenna (or other source of electromagnetic waves) radiates in a specific direction: in the direction of maximum signal strength (the \"main lobe\") of its radiation pattern.",
            "type": "number",
            "example": 2.23
          },
          "eirp": {
            "format": "double",
            "description": "EIRP is defined as the RMS power input in decibel watts required to a lossless half-wave dipole antenna to give the same maximum power density far from the antenna as the actual transmitter. It is equal to the power input to the transmitter's antenna multiplied by the antenna gain relative to a half-wave dipole. Effective radiated power and effective isotropic radiated power both measure the amount of power a radio transmitter and antenna (or other source of electromagnetic waves) radiates in a specific direction: in the direction of maximum signal strength (the \"main lobe\") of its radiation pattern.",
            "type": "number",
            "example": 2.23
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          }
        }
      },
      "SolarArray_Full": {
        "description": "Model representation of information on on-orbit/spacecraft solar arrays. A spacecraft may have multiple solar arrays and each solar array can have multiple 'details' records compiled by different sources.",
        "required": [
          "name",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "SOLARARRAY-ID"
          },
          "name": {
            "description": "Solar Array name.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "Solar1"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "solarArrayDetails": {
            "description": "Read-only collection of additional SolarArrayDetails by various sources for this organization, ignored on create/update. These details must be created separately via the /udl/solararraydetails operations.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SolarArrayDetails_Full"
            },
            "readOnly": true
          }
        }
      },
      "SolarArrayDetails_Full": {
        "description": "Model representation of Information on spacecraft SolarArrayDetails. A SolarArray may have multiple details records compiled by various sources.",
        "required": [
          "idSolarArray",
          "classificationMarking",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "SOLARARRAYDETAILS-ID"
          },
          "idSolarArray": {
            "description": "Unique identifier of the parent SolarArray.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "SOLARARRAY-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "type": {
            "description": "Type of solar array (e.g. U Shaped).",
            "maxLength": 64,
            "type": "string",
            "example": "U Shaped"
          },
          "technology": {
            "description": "Solar array technology (e.g. Ga-As).",
            "maxLength": 64,
            "type": "string",
            "example": "Ga-As"
          },
          "junctionTechnology": {
            "description": "Solar array junction technology (e.g. Triple).",
            "maxLength": 64,
            "type": "string",
            "example": "Triple"
          },
          "manufacturerOrgId": {
            "description": "Unique identifier of the organization that manufactures the solar array.",
            "maxLength": 36,
            "type": "string",
            "example": "MANUFACTURERORG-ID"
          },
          "span": {
            "format": "double",
            "description": "Solar Array span in meters.",
            "type": "number",
            "example": 123.4
          },
          "area": {
            "format": "double",
            "description": "Solar Array area in square meters.",
            "type": "number",
            "example": 123.4
          },
          "description": {
            "description": "Solar array description/notes.",
            "maxLength": 2147483647,
            "type": "string",
            "example": "Example notes"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "tags": {
            "description": "Optional array of provider/source specific tags for this data, where each element is no longer than 32 characters, used for implementing data owner conditional access controls to restrict access to the data. Should be left null by data providers unless conditional access controls are coordinated with the UDL team.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "TAG1",
              "TAG2"
            ]
          },
          "manufacturerOrg": {
            "$ref": "#/components/schemas/Organization_Full"
          }
        }
      },
      "Status_Full": {
        "description": "Status for a particular Entity. An entity may have multiple status records collected by various sources.",
        "required": [
          "classificationMarking",
          "idEntity",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "STATUS-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "derivedFrom": {
            "description": "The sources or SCG references from which the classification of this data is derived.",
            "maxLength": 128,
            "type": "string",
            "example": "SOME_SOURCE"
          },
          "declassificationDate": {
            "format": "date-time",
            "description": "The declassification date of this data, in ISO 8601 UTC format.",
            "type": "string",
            "example": "2021-01-01T01:02:02.123Z"
          },
          "declassificationString": {
            "description": "Declassification string of this data.",
            "maxLength": 256,
            "type": "string",
            "example": "U"
          },
          "idEntity": {
            "description": "Unique identifier of the parent entity.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ENTITY-ID"
          },
          "state": {
            "description": "Overall state of the entity, if applicable (e.g. UNKNOWN, DEAD, ACTIVE, RF ACTIVE, STANDBY).",
            "maxLength": 16,
            "enum": [
              "UNKNOWN",
              "DEAD",
              "ACTIVE",
              "RF ACTIVE",
              "STANDBY"
            ],
            "type": "string",
            "example": "ACTIVE"
          },
          "sysCap": {
            "description": "System capability of the entity, if applicable (e.g. FMC, NMC, PMC, UNK).",
            "maxLength": 3,
            "enum": [
              "FMC",
              "NMC",
              "PMC",
              "UNK"
            ],
            "type": "string",
            "example": "FMC"
          },
          "opsCap": {
            "description": "Operation capability of the entity, if applicable (e.g. FMC, NMC, PMC, UNK).",
            "maxLength": 3,
            "enum": [
              "FMC",
              "NMC",
              "PMC",
              "UNK"
            ],
            "type": "string",
            "example": "FMC"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "subStatusCollection": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubStatus_Full"
            }
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "notes": {
            "description": "Comments describing the status creation and or updates to an entity.",
            "type": "string",
            "example": "Example Notes"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "TST1"
          }
        }
      },
      "SubStatus_Full": {
        "description": "Additional sub-system or capability status for the parent entity.",
        "required": [
          "type",
          "classificationMarking",
          "statusId",
          "status",
          "notes",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "SUBSTATUS-ID"
          },
          "type": {
            "description": "Parent entity's sub-system or capability status: mwCap, mdCap, ssCap, etc.",
            "maxLength": 16,
            "minLength": 1,
            "enum": [
              "mwCap",
              "ssCap",
              "mdCap"
            ],
            "type": "string",
            "example": "mdCap"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "statusId": {
            "description": "Id of the parent status.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "REF-STATUS-ID"
          },
          "status": {
            "description": "Status of the sub-system/capability, e.g. FMC, NMC, PMC, UNK.",
            "maxLength": 16,
            "minLength": 1,
            "enum": [
              "FMC",
              "NMC",
              "PMC",
              "UNK"
            ],
            "type": "string",
            "example": "FMC"
          },
          "notes": {
            "description": "Descriptions and/or comments associated with the sub-status.",
            "maxLength": 4096,
            "minLength": 1,
            "type": "string",
            "example": "Sample Notes"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "TST1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          }
        }
      },
      "Track_Abridged": {
        "description": "A track is a position and optionally a heading/velocity of an object such as an aircraft at a particular timestamp. It also includes optional information regarding the identity/type of the target object, if known.",
        "required": [
          "classificationMarking",
          "ts",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "TRACK-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "cntct": {
            "description": "Contact information for assets reporting PPLI (Precise Participant Location and Identification). PPLI is a Link 16 message that is used by units to transmit complete location, identification, and limited status information.",
            "maxLength": 64,
            "type": "string",
            "example": "Contact Info"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "msgTs": {
            "format": "date-time",
            "description": "Message Timestamp.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123456Z"
          },
          "msnId": {
            "description": "Mission ID related to the track.",
            "maxLength": 36,
            "type": "string",
            "example": "msnId"
          },
          "assetNat": {
            "description": "Nationality or organization of the tracking/reporting system or platform (e.g. FR, NATO, US, etc.).",
            "maxLength": 64,
            "type": "string",
            "example": "US"
          },
          "asset": {
            "description": "Id/name of the platform providing the track data (i.e., tail number for air platform, tower ID for tower based sensor, site id for fixed radar).",
            "maxLength": 32,
            "type": "string",
            "example": "asset"
          },
          "sen": {
            "description": "Id/name of sensor providing the track data.",
            "maxLength": 32,
            "type": "string",
            "example": "sen"
          },
          "senQual": {
            "description": "Sensor quality.",
            "maxLength": 32,
            "type": "string",
            "example": "senQual"
          },
          "trkId": {
            "description": "UUID identifying the track, which should remain the same on subsequent tracks of the same object.",
            "maxLength": 36,
            "type": "string",
            "example": "trkId"
          },
          "trkNum": {
            "description": "The track number (TN) of a surveillance entity. Intended as, but not constrained to, the J-series track number encoded as five character alpha-numeric characters. Users should refer to J-series documentation for specific TN definitions.",
            "maxLength": 32,
            "type": "string",
            "example": "trkNum"
          },
          "trkStat": {
            "description": "Status of the track (e.g., INITIATING, MAINTAINING, DROPPING, TERMINATED, etc.).",
            "maxLength": 32,
            "type": "string",
            "example": "INITIATING"
          },
          "objNat": {
            "description": "Nationality or organization of the track object (e.g. FR, NATO, US, etc.).",
            "maxLength": 64,
            "type": "string",
            "example": "NATO"
          },
          "objId": {
            "description": "The UID or designation of the tracked object.",
            "maxLength": 36,
            "type": "string",
            "example": "objId"
          },
          "objType": {
            "description": "The generic classification of the track object/group (e.g., HELICOPTER, TRACKED, WATERCRAFT, WHEELED, etc.). Referenced, but not constrained to, NATO STANAG 4676 object type classifications.",
            "maxLength": 32,
            "type": "string",
            "example": "WATERCRAFT"
          },
          "objSpec": {
            "description": "The object specific type. Intended as, but not constrained to, MIL-STD-6016 environment dependent specific type designations. The specific type can be reported as either a combination of the code and environment (e.g. 155/SURFACE) or as the descriptive representation (e.g. AUDACE DDG), which are equivalent.",
            "maxLength": 32,
            "type": "string",
            "example": "LIGHT_TANK"
          },
          "objPlat": {
            "description": "The object platform type. Intended as, but not constrained to, MIL-STD-6016 environment dependent platform type designations. The platform type can be reported as either a combination of the code and environment (e.g. 14/LAND) or as the descriptive representations (e.g. COMBAT VEHICLE), which are equivalent.",
            "maxLength": 32,
            "type": "string",
            "example": "COMBAT_VEHICLE"
          },
          "objAct": {
            "description": "The activity in which the track object is engaged. Intended as, but not constrained to, MIL-STD-6016 environment dependent activity designations. The activity can be reported as either a combination of the code and environment (e.g. 65/AIR) or as the descriptive enumeration (e.g. DIVERTING), which are equivalent.",
            "maxLength": 32,
            "type": "string",
            "example": "HOLDING"
          },
          "modType": {
            "description": "The type of source information from which the track was derived. Intended as, but not constrained to, NATO STANAG 4676 modality types (AIS, BFT, BIOMETRIC, COMINT, DOPPLER, ELINT, HRR, HUMINT, IMAGE, MASINT, MIXED, OSINT, OTHER):\n\nAIS: Derived from an automated identification system source.\n\nBFT: Derived from a blue force tracking source.\n\nBIOMETRICS: Derived from a biometrics source.\n\nCOMINT: Derived from a communications intelligence source.\n\nDOPPLER: Derived from a radar doppler source.\n\nELINT: Derived from an electronics intelligence source.\n\nHRR: Derived from a radar high range resolution source.\n\nHUMINT: Derived from a human intelligence source.\n\nIMAGE: Derived from a still or motion imagery source.\n\nMASINT: Derived from a measurement and signals intelligence source.\n\nMIXED: Derived from a combination of two or more sources.\n\nOSINT: Derived from an open source intelligence source.\n\nOTHER: Derived from other types of unspecified sources.\n\n",
            "maxLength": 32,
            "type": "string",
            "example": "MASINT"
          },
          "trkItmId": {
            "description": "UUID of the track item object, applies to STANAG-4676 messages.",
            "maxLength": 36,
            "type": "string",
            "example": "trkItmId"
          },
          "ts": {
            "format": "date-time",
            "description": "Track timestamp in ISO8601 UTC format.",
            "type": "string",
            "example": "2021-06-07T14:17:39.653043Z"
          },
          "trkQual": {
            "format": "int32",
            "description": "Value indicating track quality (not standardized).",
            "type": "integer",
            "example": 0
          },
          "trkPtType": {
            "description": "Means by which the track data was created (e.g., MEASURED, AUTOMATIC PREDICTED, etc.).",
            "type": "string",
            "example": "MEASURED"
          },
          "objIdent": {
            "description": "The estimated identity of the track object (ASSUMED FRIEND, FRIEND, HOSTILE, NEUTRAL, PENDING, SUSPECT, UNKNOWN):\n\nASSUMED FRIEND: Track assumed to be a friend due to the object characteristics, behavior, and/or origin.\n\nFRIEND: Track object supporting friendly forces and belonging to a declared friendly nation or entity.\n\nHOSTILE: Track object belonging to an opposing nation, party, group, or entity deemed to contribute to a threat to friendly forces or their mission due to its behavior, characteristics, nationality, or origin.\n\nNEUTRAL: Track object whose characteristics, behavior, nationality, and/or origin indicate that it is neither supporting nor opposing friendly forces or their mission.\n\nPENDING: Track object which has not been evaluated.\n\nSUSPECT: Track object deemed potentially hostile due to the object characteristics, behavior, nationality, and/or origin.\n\nUNKNOWN: Track object which has been evaluated and does not meet criteria for any standard identity.\n\n",
            "maxLength": 32,
            "type": "string",
            "example": "FRIEND"
          },
          "identCred": {
            "format": "int32",
            "description": "Track object identity credibility.",
            "type": "integer",
            "example": 0
          },
          "identRel": {
            "format": "int32",
            "description": "Track object identity reliability.",
            "type": "integer",
            "example": 0
          },
          "identAmp": {
            "description": "Additional track object identity/status information, typically used for EXERCISE identity amplification (FAKER, JOKER, KILO, TRAVELLER, ZOMBIE):\n\nFAKER: Friendly track, object, or entity acting as an exercise hostile.\n\nJOKER: Friendly track, object, or entity acting as an exercise suspect.\n\nKILO: Friendly high-value object.\n\nTRAVELLER: Suspect land or surface track following a recognized traffic route.\n\nZOMBIE: Suspect track, object, or entity of special interest.\n\n",
            "maxLength": 32,
            "type": "string",
            "example": "ZOMBIE"
          },
          "env": {
            "description": "The track environment type (AIR, LAND, SPACE, SUBSURFACE, SURFACE, UNKNOWN):\n\nAIR: Between sea level and the Kármán line, which has an altitude of 100 kilometers (62 miles).\n\nLAND: On the surface of dry land.\n\nSPACE: Above the Kármán line, which has an altitude of 100 kilometers (62 miles).\n\nSURFACE: On the surface of a body of water.\n\nSUBSURFACE: Below the surface of a body of water.\n\nUNKNOWN: Environment is not known.\n\n",
            "maxLength": 16,
            "type": "string",
            "example": "LAND"
          },
          "envConf": {
            "format": "double",
            "description": "Track environment confidence estimate (not standardized).",
            "type": "number",
            "example": 1.23
          },
          "trkConf": {
            "format": "double",
            "description": "Overall track confidence estimate (not standardized, but typically a value between 0 and 1, with 0 indicating lowest confidence).",
            "type": "number",
            "example": 1.23
          },
          "ecefPos": {
            "description": "Track object location in ECEF [x, y, z], meters.  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "ecefVel": {
            "description": "Track object velocity in ECEF [x', y', z'], meters/sec.  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "ecefAcc": {
            "description": "Track object acceleration in ECEF [x'', y'', z''], meters/sec^2.  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "lat": {
            "format": "double",
            "description": "WGS-84 latitude of the track object, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 1.23
          },
          "lon": {
            "format": "double",
            "description": "WGS-84 longitude of the track object, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 1.23
          },
          "alt": {
            "format": "double",
            "description": "Track point altitude relative to WGS-84 ellipsoid, in meters. Positive values indicate a track object height above ellipsoid, and negative values indicate a track object below ellipsoid, applicable to the depth estimate for a subsurface track.",
            "type": "number",
            "example": 1.23
          },
          "spd": {
            "format": "double",
            "description": "Track object spd, in meters/sec.",
            "type": "number",
            "example": 1.23
          },
          "hdng": {
            "format": "double",
            "description": "The track object heading, in degrees clockwise from true North at the object location.",
            "type": "number",
            "example": 19.7
          },
          "course": {
            "format": "double",
            "description": "The track object course-over-ground, in degrees clockwise from true North at the object location (0-360 degrees).",
            "type": "number",
            "example": 88.37
          },
          "lco": {
            "description": "Origin of a local coordinate system [lat, lon, altitude].  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "lcs": {
            "description": "x, y, and z-axis rotations about ECEF that define a local cartesian system.  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "lcPos": {
            "description": "Estimate of the position, [x, y, z], of the track object in the defined cartesian system, in meters.  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "lcVel": {
            "description": "Estimate of the velocity, [x', y', z'], of the track object in the defined cartesian system, in meters/sec.  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "lcAcc": {
            "description": "Estimate of the acceleration, [x'', y'', z''], of the track object in the defined cartesian system, in meters/sec^2.  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "eNUVel": {
            "description": "East, North, Up velocity components, in meters/sec.  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "eNUPos": {
            "description": "East, North, Up position components, in meters.  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "cov": {
            "description": "Covariance matrix, in meter and second based units, for the defined cartesian system.\n\nThe array values represent the lower triangular half of the position-velocity covariance matrix.  The size of the covariance matrix is dynamic.  The values are output as an array of values corresponding to the position-velocity covariance element positions, ordered as follows:\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;&nbsp;y&nbsp;&nbsp;z&nbsp;&nbsp;&nbsp;x'&nbsp;&nbsp;y'&nbsp;z'&nbsp;&nbsp;\n\nx&nbsp;&nbsp;&nbsp;&nbsp;1\n\ny&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;3\n\nz&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp;&nbsp;6\n\nx'&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;8&nbsp;&nbsp;&nbsp;9&nbsp;&nbsp;10\n\ny'&nbsp;&nbsp;11&nbsp;&nbsp;12&nbsp;&nbsp;13&nbsp;&nbsp;14&nbsp;&nbsp;15\n\nz'&nbsp;&nbsp;16&nbsp;&nbsp;17&nbsp;&nbsp;18&nbsp;&nbsp;19&nbsp;&nbsp;20&nbsp;&nbsp; 21\n\n\n\n\n\nThe covariance matrix will be as large as the last element needed, and with unused values zero-filled to maintain proper element positioning in the array.  For example, for a 2D (x, y) position-only covariance, the covariance matrix will be 2x2 and the array would contain the 3 elements corresponding to the x, and y position.  Another example, now for a 2D (x, y) position-velocity covariance, the covariance matrix will be 5x5 and the array would contain the 15 elements corresponding to the relevant x, y, x', and y' values (with the z-row and z-column being all zeros). The cov array should contain only the lower left triangle values from top left down to bottom right, in order.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.1,
              2.2,
              3.3
            ]
          },
          "errEllp": {
            "description": "Uncertainty ellipsoid [semi-major axis (m), semi-minor axis (m), orientation (deg)].",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "srcTyps": {
            "description": "Array of UDL record types (POI, MTI, TRACK, GROUNDIMAGE) that contributed to the generation of this fused track.  See the associated 'srcIds' array for the record UUIDs, positionally corresponding to the record types in this array, used in the track fusion. The 'srcTyps' and 'srcIds' arrays must match in size.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "MTI",
              "POI"
            ]
          },
          "srcIds": {
            "description": "Array of UUIDs of the UDL data records that contributed to the generation of this fused track. See the associated 'srcTyps' array for the specific types of data, positionally corresponding to the UUIDs in this array, used in the track fusion.  The 'srcTyps' and 'srcIds' arrays must match in size. See the corresponding srcTyps array element for the data type of the UUID and use the appropriate API operation to retrieve that object (e.g. /udl/poi/{uuid}).",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "f7c70cc8-f9b7-4467-b4ad-3904e360e842",
              "1da3fab000014e3133709830937387405"
            ]
          },
          "callSign": {
            "description": "The call sign currently assigned to this track object.",
            "maxLength": 24,
            "type": "string",
            "example": "callSign"
          },
          "multiSource": {
            "description": "Flag indicating that this track is fused from multiple sensor sources.",
            "type": "boolean",
            "example": true
          },
          "jSeries": {
            "description": "The J-series message type, if this track is derived from a J-series message.",
            "maxLength": 5,
            "type": "string",
            "example": "J12.5"
          },
          "strength": {
            "format": "int32",
            "description": "The number of objects or units moving as a group and represented as a single entity in this track message. If null, the track is assumed to represent a single object. Note that if this track derives from a J-series message then special definitions apply for the following values: 13 indicates an estimated 2-7 units, 14 indicates an estimated more than 7 units, and 15 indicates an estimated more than 12 units.",
            "type": "integer",
            "example": 14
          },
          "m1": {
            "format": "int32",
            "description": "Mode-1 interrogation response (mission code), indicating mission or aircraft type.",
            "type": "integer",
            "example": 1234
          },
          "m1v": {
            "format": "int32",
            "description": "Mode-1 validity status.",
            "type": "integer",
            "example": 1
          },
          "m2": {
            "format": "int32",
            "description": "Mode-2 interrogation response (military identification code).",
            "type": "integer",
            "example": 1234
          },
          "m2v": {
            "format": "int32",
            "description": "Mode-2 validity status.",
            "type": "integer",
            "example": 1
          },
          "m3a": {
            "format": "int32",
            "description": "Mode-3/A interrogation response (aircraft identification), provides a 4-digit octal identification code for the aircraft, assigned by the air traffic controller. Mode-3/A is shared military/civilian use.",
            "type": "integer",
            "example": 2636
          },
          "m3av": {
            "format": "int32",
            "description": "Mode-3/A validity status.",
            "type": "integer",
            "example": 1
          },
          "tags": {
            "description": "Optional array of provider/source specific tags for this data, where each element is no longer than 32 characters, used for implementing data owner conditional access controls to restrict access to the data. Should be left null by data providers unless conditional access controls are coordinated with the UDL team.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "TAG1",
              "TAG2"
            ]
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          }
        }
      },
      "Track_Full": {
        "description": "A track is a position and optionally a heading/velocity of an object such as an aircraft at a particular timestamp. It also includes optional information regarding the identity/type of the target object, if known.",
        "required": [
          "classificationMarking",
          "ts",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "TRACK-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "cntct": {
            "description": "Contact information for assets reporting PPLI (Precise Participant Location and Identification). PPLI is a Link 16 message that is used by units to transmit complete location, identification, and limited status information.",
            "maxLength": 64,
            "type": "string",
            "example": "Contact Info"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "msgTs": {
            "format": "date-time",
            "description": "Message Timestamp.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123456Z"
          },
          "msnId": {
            "description": "Mission ID related to the track.",
            "maxLength": 36,
            "type": "string",
            "example": "msnId"
          },
          "assetNat": {
            "description": "Nationality or organization of the tracking/reporting system or platform (e.g. FR, NATO, US, etc.).",
            "maxLength": 64,
            "type": "string",
            "example": "US"
          },
          "asset": {
            "description": "Id/name of the platform providing the track data (i.e., tail number for air platform, tower ID for tower based sensor, site id for fixed radar).",
            "maxLength": 32,
            "type": "string",
            "example": "asset"
          },
          "sen": {
            "description": "Id/name of sensor providing the track data.",
            "maxLength": 32,
            "type": "string",
            "example": "sen"
          },
          "senQual": {
            "description": "Sensor quality.",
            "maxLength": 32,
            "type": "string",
            "example": "senQual"
          },
          "trkId": {
            "description": "UUID identifying the track, which should remain the same on subsequent tracks of the same object.",
            "maxLength": 36,
            "type": "string",
            "example": "trkId"
          },
          "trkNum": {
            "description": "The track number (TN) of a surveillance entity. Intended as, but not constrained to, the J-series track number encoded as five character alpha-numeric characters. Users should refer to J-series documentation for specific TN definitions.",
            "maxLength": 32,
            "type": "string",
            "example": "trkNum"
          },
          "trkStat": {
            "description": "Status of the track (e.g., INITIATING, MAINTAINING, DROPPING, TERMINATED, etc.).",
            "maxLength": 32,
            "type": "string",
            "example": "INITIATING"
          },
          "objNat": {
            "description": "Nationality or organization of the track object (e.g. FR, NATO, US, etc.).",
            "maxLength": 64,
            "type": "string",
            "example": "NATO"
          },
          "objId": {
            "description": "The UID or designation of the tracked object.",
            "maxLength": 36,
            "type": "string",
            "example": "objId"
          },
          "objType": {
            "description": "The generic classification of the track object/group (e.g., HELICOPTER, TRACKED, WATERCRAFT, WHEELED, etc.). Referenced, but not constrained to, NATO STANAG 4676 object type classifications.",
            "maxLength": 32,
            "type": "string",
            "example": "WATERCRAFT"
          },
          "objSpec": {
            "description": "The object specific type. Intended as, but not constrained to, MIL-STD-6016 environment dependent specific type designations. The specific type can be reported as either a combination of the code and environment (e.g. 155/SURFACE) or as the descriptive representation (e.g. AUDACE DDG), which are equivalent.",
            "maxLength": 32,
            "type": "string",
            "example": "LIGHT_TANK"
          },
          "objPlat": {
            "description": "The object platform type. Intended as, but not constrained to, MIL-STD-6016 environment dependent platform type designations. The platform type can be reported as either a combination of the code and environment (e.g. 14/LAND) or as the descriptive representations (e.g. COMBAT VEHICLE), which are equivalent.",
            "maxLength": 32,
            "type": "string",
            "example": "COMBAT_VEHICLE"
          },
          "objAct": {
            "description": "The activity in which the track object is engaged. Intended as, but not constrained to, MIL-STD-6016 environment dependent activity designations. The activity can be reported as either a combination of the code and environment (e.g. 65/AIR) or as the descriptive enumeration (e.g. DIVERTING), which are equivalent.",
            "maxLength": 32,
            "type": "string",
            "example": "HOLDING"
          },
          "modType": {
            "description": "The type of source information from which the track was derived. Intended as, but not constrained to, NATO STANAG 4676 modality types (AIS, BFT, BIOMETRIC, COMINT, DOPPLER, ELINT, HRR, HUMINT, IMAGE, MASINT, MIXED, OSINT, OTHER):\n\nAIS: Derived from an automated identification system source.\n\nBFT: Derived from a blue force tracking source.\n\nBIOMETRICS: Derived from a biometrics source.\n\nCOMINT: Derived from a communications intelligence source.\n\nDOPPLER: Derived from a radar doppler source.\n\nELINT: Derived from an electronics intelligence source.\n\nHRR: Derived from a radar high range resolution source.\n\nHUMINT: Derived from a human intelligence source.\n\nIMAGE: Derived from a still or motion imagery source.\n\nMASINT: Derived from a measurement and signals intelligence source.\n\nMIXED: Derived from a combination of two or more sources.\n\nOSINT: Derived from an open source intelligence source.\n\nOTHER: Derived from other types of unspecified sources.\n\n",
            "maxLength": 32,
            "type": "string",
            "example": "MASINT"
          },
          "trkItmId": {
            "description": "UUID of the track item object, applies to STANAG-4676 messages.",
            "maxLength": 36,
            "type": "string",
            "example": "trkItmId"
          },
          "ts": {
            "format": "date-time",
            "description": "Track timestamp in ISO8601 UTC format.",
            "type": "string",
            "example": "2021-06-07T14:17:39.653043Z"
          },
          "trkQual": {
            "format": "int32",
            "description": "Value indicating track quality (not standardized).",
            "type": "integer",
            "example": 0
          },
          "trkPtType": {
            "description": "Means by which the track data was created (e.g., MEASURED, AUTOMATIC PREDICTED, etc.).",
            "type": "string",
            "example": "MEASURED"
          },
          "objIdent": {
            "description": "The estimated identity of the track object (ASSUMED FRIEND, FRIEND, HOSTILE, NEUTRAL, PENDING, SUSPECT, UNKNOWN):\n\nASSUMED FRIEND: Track assumed to be a friend due to the object characteristics, behavior, and/or origin.\n\nFRIEND: Track object supporting friendly forces and belonging to a declared friendly nation or entity.\n\nHOSTILE: Track object belonging to an opposing nation, party, group, or entity deemed to contribute to a threat to friendly forces or their mission due to its behavior, characteristics, nationality, or origin.\n\nNEUTRAL: Track object whose characteristics, behavior, nationality, and/or origin indicate that it is neither supporting nor opposing friendly forces or their mission.\n\nPENDING: Track object which has not been evaluated.\n\nSUSPECT: Track object deemed potentially hostile due to the object characteristics, behavior, nationality, and/or origin.\n\nUNKNOWN: Track object which has been evaluated and does not meet criteria for any standard identity.\n\n",
            "maxLength": 32,
            "type": "string",
            "example": "FRIEND"
          },
          "identCred": {
            "format": "int32",
            "description": "Track object identity credibility.",
            "type": "integer",
            "example": 0
          },
          "identRel": {
            "format": "int32",
            "description": "Track object identity reliability.",
            "type": "integer",
            "example": 0
          },
          "identAmp": {
            "description": "Additional track object identity/status information, typically used for EXERCISE identity amplification (FAKER, JOKER, KILO, TRAVELLER, ZOMBIE):\n\nFAKER: Friendly track, object, or entity acting as an exercise hostile.\n\nJOKER: Friendly track, object, or entity acting as an exercise suspect.\n\nKILO: Friendly high-value object.\n\nTRAVELLER: Suspect land or surface track following a recognized traffic route.\n\nZOMBIE: Suspect track, object, or entity of special interest.\n\n",
            "maxLength": 32,
            "type": "string",
            "example": "ZOMBIE"
          },
          "env": {
            "description": "The track environment type (AIR, LAND, SPACE, SUBSURFACE, SURFACE, UNKNOWN):\n\nAIR: Between sea level and the Kármán line, which has an altitude of 100 kilometers (62 miles).\n\nLAND: On the surface of dry land.\n\nSPACE: Above the Kármán line, which has an altitude of 100 kilometers (62 miles).\n\nSURFACE: On the surface of a body of water.\n\nSUBSURFACE: Below the surface of a body of water.\n\nUNKNOWN: Environment is not known.\n\n",
            "maxLength": 16,
            "type": "string",
            "example": "LAND"
          },
          "envConf": {
            "format": "double",
            "description": "Track environment confidence estimate (not standardized).",
            "type": "number",
            "example": 1.23
          },
          "trkConf": {
            "format": "double",
            "description": "Overall track confidence estimate (not standardized, but typically a value between 0 and 1, with 0 indicating lowest confidence).",
            "type": "number",
            "example": 1.23
          },
          "ecefPos": {
            "description": "Track object location in ECEF [x, y, z], meters.  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "ecefVel": {
            "description": "Track object velocity in ECEF [x', y', z'], meters/sec.  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "ecefAcc": {
            "description": "Track object acceleration in ECEF [x'', y'', z''], meters/sec^2.  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "lat": {
            "format": "double",
            "description": "WGS-84 latitude of the track object, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 1.23
          },
          "lon": {
            "format": "double",
            "description": "WGS-84 longitude of the track object, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 1.23
          },
          "alt": {
            "format": "double",
            "description": "Track point altitude relative to WGS-84 ellipsoid, in meters. Positive values indicate a track object height above ellipsoid, and negative values indicate a track object below ellipsoid, applicable to the depth estimate for a subsurface track.",
            "type": "number",
            "example": 1.23
          },
          "spd": {
            "format": "double",
            "description": "Track object spd, in meters/sec.",
            "type": "number",
            "example": 1.23
          },
          "hdng": {
            "format": "double",
            "description": "The track object heading, in degrees clockwise from true North at the object location.",
            "type": "number",
            "example": 19.7
          },
          "course": {
            "format": "double",
            "description": "The track object course-over-ground, in degrees clockwise from true North at the object location (0-360 degrees).",
            "type": "number",
            "example": 88.37
          },
          "lco": {
            "description": "Origin of a local coordinate system [lat, lon, altitude].  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "lcs": {
            "description": "x, y, and z-axis rotations about ECEF that define a local cartesian system.  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "lcPos": {
            "description": "Estimate of the position, [x, y, z], of the track object in the defined cartesian system, in meters.  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "lcVel": {
            "description": "Estimate of the velocity, [x', y', z'], of the track object in the defined cartesian system, in meters/sec.  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "lcAcc": {
            "description": "Estimate of the acceleration, [x'', y'', z''], of the track object in the defined cartesian system, in meters/sec^2.  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "eNUVel": {
            "description": "East, North, Up velocity components, in meters/sec.  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "eNUPos": {
            "description": "East, North, Up position components, in meters.  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "cov": {
            "description": "Covariance matrix, in meter and second based units, for the defined cartesian system.\n\nThe array values represent the lower triangular half of the position-velocity covariance matrix.  The size of the covariance matrix is dynamic.  The values are output as an array of values corresponding to the position-velocity covariance element positions, ordered as follows:\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;&nbsp;y&nbsp;&nbsp;z&nbsp;&nbsp;&nbsp;x'&nbsp;&nbsp;y'&nbsp;z'&nbsp;&nbsp;\n\nx&nbsp;&nbsp;&nbsp;&nbsp;1\n\ny&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;3\n\nz&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp;&nbsp;6\n\nx'&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;8&nbsp;&nbsp;&nbsp;9&nbsp;&nbsp;10\n\ny'&nbsp;&nbsp;11&nbsp;&nbsp;12&nbsp;&nbsp;13&nbsp;&nbsp;14&nbsp;&nbsp;15\n\nz'&nbsp;&nbsp;16&nbsp;&nbsp;17&nbsp;&nbsp;18&nbsp;&nbsp;19&nbsp;&nbsp;20&nbsp;&nbsp; 21\n\n\n\n\n\nThe covariance matrix will be as large as the last element needed, and with unused values zero-filled to maintain proper element positioning in the array.  For example, for a 2D (x, y) position-only covariance, the covariance matrix will be 2x2 and the array would contain the 3 elements corresponding to the x, and y position.  Another example, now for a 2D (x, y) position-velocity covariance, the covariance matrix will be 5x5 and the array would contain the 15 elements corresponding to the relevant x, y, x', and y' values (with the z-row and z-column being all zeros). The cov array should contain only the lower left triangle values from top left down to bottom right, in order.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.1,
              2.2,
              3.3
            ]
          },
          "errEllp": {
            "description": "Uncertainty ellipsoid [semi-major axis (m), semi-minor axis (m), orientation (deg)].",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "srcTyps": {
            "description": "Array of UDL record types (POI, MTI, TRACK, GROUNDIMAGE) that contributed to the generation of this fused track.  See the associated 'srcIds' array for the record UUIDs, positionally corresponding to the record types in this array, used in the track fusion. The 'srcTyps' and 'srcIds' arrays must match in size.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "MTI",
              "POI"
            ]
          },
          "srcIds": {
            "description": "Array of UUIDs of the UDL data records that contributed to the generation of this fused track. See the associated 'srcTyps' array for the specific types of data, positionally corresponding to the UUIDs in this array, used in the track fusion.  The 'srcTyps' and 'srcIds' arrays must match in size. See the corresponding srcTyps array element for the data type of the UUID and use the appropriate API operation to retrieve that object (e.g. /udl/poi/{uuid}).",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "f7c70cc8-f9b7-4467-b4ad-3904e360e842",
              "1da3fab000014e3133709830937387405"
            ]
          },
          "callSign": {
            "description": "The call sign currently assigned to this track object.",
            "maxLength": 24,
            "type": "string",
            "example": "callSign"
          },
          "multiSource": {
            "description": "Flag indicating that this track is fused from multiple sensor sources.",
            "type": "boolean",
            "example": true
          },
          "jSeries": {
            "description": "The J-series message type, if this track is derived from a J-series message.",
            "maxLength": 5,
            "type": "string",
            "example": "J12.5"
          },
          "strength": {
            "format": "int32",
            "description": "The number of objects or units moving as a group and represented as a single entity in this track message. If null, the track is assumed to represent a single object. Note that if this track derives from a J-series message then special definitions apply for the following values: 13 indicates an estimated 2-7 units, 14 indicates an estimated more than 7 units, and 15 indicates an estimated more than 12 units.",
            "type": "integer",
            "example": 14
          },
          "m1": {
            "format": "int32",
            "description": "Mode-1 interrogation response (mission code), indicating mission or aircraft type.",
            "type": "integer",
            "example": 1234
          },
          "m1v": {
            "format": "int32",
            "description": "Mode-1 validity status.",
            "type": "integer",
            "example": 1
          },
          "m2": {
            "format": "int32",
            "description": "Mode-2 interrogation response (military identification code).",
            "type": "integer",
            "example": 1234
          },
          "m2v": {
            "format": "int32",
            "description": "Mode-2 validity status.",
            "type": "integer",
            "example": 1
          },
          "m3a": {
            "format": "int32",
            "description": "Mode-3/A interrogation response (aircraft identification), provides a 4-digit octal identification code for the aircraft, assigned by the air traffic controller. Mode-3/A is shared military/civilian use.",
            "type": "integer",
            "example": 2636
          },
          "m3av": {
            "format": "int32",
            "description": "Mode-3/A validity status.",
            "type": "integer",
            "example": 1
          },
          "tags": {
            "description": "Optional array of provider/source specific tags for this data, where each element is no longer than 32 characters, used for implementing data owner conditional access controls to restrict access to the data. Should be left null by data providers unless conditional access controls are coordinated with the UDL team.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "TAG1",
              "TAG2"
            ]
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          }
        }
      },
      "Track_Ingest": {
        "description": "A track is a position and optionally a heading/velocity of an object such as an aircraft at a particular timestamp. It also includes optional information regarding the identity/type of the target object, if known.",
        "required": [
          "classificationMarking",
          "ts",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "TRACK-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "cntct": {
            "description": "Contact information for assets reporting PPLI (Precise Participant Location and Identification). PPLI is a Link 16 message that is used by units to transmit complete location, identification, and limited status information.",
            "maxLength": 64,
            "type": "string",
            "example": "Contact Info"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "msgTs": {
            "format": "date-time",
            "description": "Message Timestamp.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123456Z"
          },
          "msnId": {
            "description": "Mission ID related to the track.",
            "maxLength": 36,
            "type": "string",
            "example": "msnId"
          },
          "assetNat": {
            "description": "Nationality or organization of the tracking/reporting system or platform (e.g. FR, NATO, US, etc.).",
            "maxLength": 64,
            "type": "string",
            "example": "US"
          },
          "asset": {
            "description": "Id/name of the platform providing the track data (i.e., tail number for air platform, tower ID for tower based sensor, site id for fixed radar).",
            "maxLength": 32,
            "type": "string",
            "example": "asset"
          },
          "sen": {
            "description": "Id/name of sensor providing the track data.",
            "maxLength": 32,
            "type": "string",
            "example": "sen"
          },
          "senQual": {
            "description": "Sensor quality.",
            "maxLength": 32,
            "type": "string",
            "example": "senQual"
          },
          "trkId": {
            "description": "UUID identifying the track, which should remain the same on subsequent tracks of the same object.",
            "maxLength": 36,
            "type": "string",
            "example": "trkId"
          },
          "trkNum": {
            "description": "The track number (TN) of a surveillance entity. Intended as, but not constrained to, the J-series track number encoded as five character alpha-numeric characters. Users should refer to J-series documentation for specific TN definitions.",
            "maxLength": 32,
            "type": "string",
            "example": "trkNum"
          },
          "trkStat": {
            "description": "Status of the track (e.g., INITIATING, MAINTAINING, DROPPING, TERMINATED, etc.).",
            "maxLength": 32,
            "type": "string",
            "example": "INITIATING"
          },
          "objNat": {
            "description": "Nationality or organization of the track object (e.g. FR, NATO, US, etc.).",
            "maxLength": 64,
            "type": "string",
            "example": "NATO"
          },
          "objId": {
            "description": "The UID or designation of the tracked object.",
            "maxLength": 36,
            "type": "string",
            "example": "objId"
          },
          "objType": {
            "description": "The generic classification of the track object/group (e.g., HELICOPTER, TRACKED, WATERCRAFT, WHEELED, etc.). Referenced, but not constrained to, NATO STANAG 4676 object type classifications.",
            "maxLength": 32,
            "type": "string",
            "example": "WATERCRAFT"
          },
          "objSpec": {
            "description": "The object specific type. Intended as, but not constrained to, MIL-STD-6016 environment dependent specific type designations. The specific type can be reported as either a combination of the code and environment (e.g. 155/SURFACE) or as the descriptive representation (e.g. AUDACE DDG), which are equivalent.",
            "maxLength": 32,
            "type": "string",
            "example": "LIGHT_TANK"
          },
          "objPlat": {
            "description": "The object platform type. Intended as, but not constrained to, MIL-STD-6016 environment dependent platform type designations. The platform type can be reported as either a combination of the code and environment (e.g. 14/LAND) or as the descriptive representations (e.g. COMBAT VEHICLE), which are equivalent.",
            "maxLength": 32,
            "type": "string",
            "example": "COMBAT_VEHICLE"
          },
          "objAct": {
            "description": "The activity in which the track object is engaged. Intended as, but not constrained to, MIL-STD-6016 environment dependent activity designations. The activity can be reported as either a combination of the code and environment (e.g. 65/AIR) or as the descriptive enumeration (e.g. DIVERTING), which are equivalent.",
            "maxLength": 32,
            "type": "string",
            "example": "HOLDING"
          },
          "modType": {
            "description": "The type of source information from which the track was derived. Intended as, but not constrained to, NATO STANAG 4676 modality types (AIS, BFT, BIOMETRIC, COMINT, DOPPLER, ELINT, HRR, HUMINT, IMAGE, MASINT, MIXED, OSINT, OTHER):\n\nAIS: Derived from an automated identification system source.\n\nBFT: Derived from a blue force tracking source.\n\nBIOMETRICS: Derived from a biometrics source.\n\nCOMINT: Derived from a communications intelligence source.\n\nDOPPLER: Derived from a radar doppler source.\n\nELINT: Derived from an electronics intelligence source.\n\nHRR: Derived from a radar high range resolution source.\n\nHUMINT: Derived from a human intelligence source.\n\nIMAGE: Derived from a still or motion imagery source.\n\nMASINT: Derived from a measurement and signals intelligence source.\n\nMIXED: Derived from a combination of two or more sources.\n\nOSINT: Derived from an open source intelligence source.\n\nOTHER: Derived from other types of unspecified sources.\n\n",
            "maxLength": 32,
            "type": "string",
            "example": "MASINT"
          },
          "trkItmId": {
            "description": "UUID of the track item object, applies to STANAG-4676 messages.",
            "maxLength": 36,
            "type": "string",
            "example": "trkItmId"
          },
          "ts": {
            "format": "date-time",
            "description": "Track timestamp in ISO8601 UTC format.",
            "type": "string",
            "example": "2021-06-07T14:17:39.653043Z"
          },
          "trkQual": {
            "format": "int32",
            "description": "Value indicating track quality (not standardized).",
            "type": "integer",
            "example": 0
          },
          "trkPtType": {
            "description": "Means by which the track data was created (e.g., MEASURED, AUTOMATIC PREDICTED, etc.).",
            "type": "string",
            "example": "MEASURED"
          },
          "objIdent": {
            "description": "The estimated identity of the track object (ASSUMED FRIEND, FRIEND, HOSTILE, NEUTRAL, PENDING, SUSPECT, UNKNOWN):\n\nASSUMED FRIEND: Track assumed to be a friend due to the object characteristics, behavior, and/or origin.\n\nFRIEND: Track object supporting friendly forces and belonging to a declared friendly nation or entity.\n\nHOSTILE: Track object belonging to an opposing nation, party, group, or entity deemed to contribute to a threat to friendly forces or their mission due to its behavior, characteristics, nationality, or origin.\n\nNEUTRAL: Track object whose characteristics, behavior, nationality, and/or origin indicate that it is neither supporting nor opposing friendly forces or their mission.\n\nPENDING: Track object which has not been evaluated.\n\nSUSPECT: Track object deemed potentially hostile due to the object characteristics, behavior, nationality, and/or origin.\n\nUNKNOWN: Track object which has been evaluated and does not meet criteria for any standard identity.\n\n",
            "maxLength": 32,
            "type": "string",
            "example": "FRIEND"
          },
          "identCred": {
            "format": "int32",
            "description": "Track object identity credibility.",
            "type": "integer",
            "example": 0
          },
          "identRel": {
            "format": "int32",
            "description": "Track object identity reliability.",
            "type": "integer",
            "example": 0
          },
          "identAmp": {
            "description": "Additional track object identity/status information, typically used for EXERCISE identity amplification (FAKER, JOKER, KILO, TRAVELLER, ZOMBIE):\n\nFAKER: Friendly track, object, or entity acting as an exercise hostile.\n\nJOKER: Friendly track, object, or entity acting as an exercise suspect.\n\nKILO: Friendly high-value object.\n\nTRAVELLER: Suspect land or surface track following a recognized traffic route.\n\nZOMBIE: Suspect track, object, or entity of special interest.\n\n",
            "maxLength": 32,
            "type": "string",
            "example": "ZOMBIE"
          },
          "env": {
            "description": "The track environment type (AIR, LAND, SPACE, SUBSURFACE, SURFACE, UNKNOWN):\n\nAIR: Between sea level and the Kármán line, which has an altitude of 100 kilometers (62 miles).\n\nLAND: On the surface of dry land.\n\nSPACE: Above the Kármán line, which has an altitude of 100 kilometers (62 miles).\n\nSURFACE: On the surface of a body of water.\n\nSUBSURFACE: Below the surface of a body of water.\n\nUNKNOWN: Environment is not known.\n\n",
            "maxLength": 16,
            "type": "string",
            "example": "LAND"
          },
          "envConf": {
            "format": "double",
            "description": "Track environment confidence estimate (not standardized).",
            "type": "number",
            "example": 1.23
          },
          "trkConf": {
            "format": "double",
            "description": "Overall track confidence estimate (not standardized, but typically a value between 0 and 1, with 0 indicating lowest confidence).",
            "type": "number",
            "example": 1.23
          },
          "ecefPos": {
            "description": "Track object location in ECEF [x, y, z], meters.  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "ecefVel": {
            "description": "Track object velocity in ECEF [x', y', z'], meters/sec.  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "ecefAcc": {
            "description": "Track object acceleration in ECEF [x'', y'', z''], meters/sec^2.  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "lat": {
            "format": "double",
            "description": "WGS-84 latitude of the track object, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 1.23
          },
          "lon": {
            "format": "double",
            "description": "WGS-84 longitude of the track object, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 1.23
          },
          "alt": {
            "format": "double",
            "description": "Track point altitude relative to WGS-84 ellipsoid, in meters. Positive values indicate a track object height above ellipsoid, and negative values indicate a track object below ellipsoid, applicable to the depth estimate for a subsurface track.",
            "type": "number",
            "example": 1.23
          },
          "spd": {
            "format": "double",
            "description": "Track object spd, in meters/sec.",
            "type": "number",
            "example": 1.23
          },
          "hdng": {
            "format": "double",
            "description": "The track object heading, in degrees clockwise from true North at the object location.",
            "type": "number",
            "example": 19.7
          },
          "course": {
            "format": "double",
            "description": "The track object course-over-ground, in degrees clockwise from true North at the object location (0-360 degrees).",
            "type": "number",
            "example": 88.37
          },
          "lco": {
            "description": "Origin of a local coordinate system [lat, lon, altitude].  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "lcs": {
            "description": "x, y, and z-axis rotations about ECEF that define a local cartesian system.  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "lcPos": {
            "description": "Estimate of the position, [x, y, z], of the track object in the defined cartesian system, in meters.  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "lcVel": {
            "description": "Estimate of the velocity, [x', y', z'], of the track object in the defined cartesian system, in meters/sec.  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "lcAcc": {
            "description": "Estimate of the acceleration, [x'', y'', z''], of the track object in the defined cartesian system, in meters/sec^2.  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "eNUVel": {
            "description": "East, North, Up velocity components, in meters/sec.  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "eNUPos": {
            "description": "East, North, Up position components, in meters.  When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "cov": {
            "description": "Covariance matrix, in meter and second based units, for the defined cartesian system.\n\nThe array values represent the lower triangular half of the position-velocity covariance matrix.  The size of the covariance matrix is dynamic.  The values are output as an array of values corresponding to the position-velocity covariance element positions, ordered as follows:\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;&nbsp;y&nbsp;&nbsp;z&nbsp;&nbsp;&nbsp;x'&nbsp;&nbsp;y'&nbsp;z'&nbsp;&nbsp;\n\nx&nbsp;&nbsp;&nbsp;&nbsp;1\n\ny&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;3\n\nz&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp;&nbsp;6\n\nx'&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;8&nbsp;&nbsp;&nbsp;9&nbsp;&nbsp;10\n\ny'&nbsp;&nbsp;11&nbsp;&nbsp;12&nbsp;&nbsp;13&nbsp;&nbsp;14&nbsp;&nbsp;15\n\nz'&nbsp;&nbsp;16&nbsp;&nbsp;17&nbsp;&nbsp;18&nbsp;&nbsp;19&nbsp;&nbsp;20&nbsp;&nbsp; 21\n\n\n\n\n\nThe covariance matrix will be as large as the last element needed, and with unused values zero-filled to maintain proper element positioning in the array.  For example, for a 2D (x, y) position-only covariance, the covariance matrix will be 2x2 and the array would contain the 3 elements corresponding to the x, and y position.  Another example, now for a 2D (x, y) position-velocity covariance, the covariance matrix will be 5x5 and the array would contain the 15 elements corresponding to the relevant x, y, x', and y' values (with the z-row and z-column being all zeros). The cov array should contain only the lower left triangle values from top left down to bottom right, in order.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.1,
              2.2,
              3.3
            ]
          },
          "errEllp": {
            "description": "Uncertainty ellipsoid [semi-major axis (m), semi-minor axis (m), orientation (deg)].",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.34,
              3.45
            ]
          },
          "srcTyps": {
            "description": "Array of UDL record types (POI, MTI, TRACK, GROUNDIMAGE) that contributed to the generation of this fused track.  See the associated 'srcIds' array for the record UUIDs, positionally corresponding to the record types in this array, used in the track fusion. The 'srcTyps' and 'srcIds' arrays must match in size.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "MTI",
              "POI"
            ]
          },
          "srcIds": {
            "description": "Array of UUIDs of the UDL data records that contributed to the generation of this fused track. See the associated 'srcTyps' array for the specific types of data, positionally corresponding to the UUIDs in this array, used in the track fusion.  The 'srcTyps' and 'srcIds' arrays must match in size. See the corresponding srcTyps array element for the data type of the UUID and use the appropriate API operation to retrieve that object (e.g. /udl/poi/{uuid}).",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "f7c70cc8-f9b7-4467-b4ad-3904e360e842",
              "1da3fab000014e3133709830937387405"
            ]
          },
          "callSign": {
            "description": "The call sign currently assigned to this track object.",
            "maxLength": 24,
            "type": "string",
            "example": "callSign"
          },
          "multiSource": {
            "description": "Flag indicating that this track is fused from multiple sensor sources.",
            "type": "boolean",
            "example": true
          },
          "jSeries": {
            "description": "The J-series message type, if this track is derived from a J-series message.",
            "maxLength": 5,
            "type": "string",
            "example": "J12.5"
          },
          "strength": {
            "format": "int32",
            "description": "The number of objects or units moving as a group and represented as a single entity in this track message. If null, the track is assumed to represent a single object. Note that if this track derives from a J-series message then special definitions apply for the following values: 13 indicates an estimated 2-7 units, 14 indicates an estimated more than 7 units, and 15 indicates an estimated more than 12 units.",
            "type": "integer",
            "example": 14
          },
          "m1": {
            "format": "int32",
            "description": "Mode-1 interrogation response (mission code), indicating mission or aircraft type.",
            "type": "integer",
            "example": 1234
          },
          "m1v": {
            "format": "int32",
            "description": "Mode-1 validity status.",
            "type": "integer",
            "example": 1
          },
          "m2": {
            "format": "int32",
            "description": "Mode-2 interrogation response (military identification code).",
            "type": "integer",
            "example": 1234
          },
          "m2v": {
            "format": "int32",
            "description": "Mode-2 validity status.",
            "type": "integer",
            "example": 1
          },
          "m3a": {
            "format": "int32",
            "description": "Mode-3/A interrogation response (aircraft identification), provides a 4-digit octal identification code for the aircraft, assigned by the air traffic controller. Mode-3/A is shared military/civilian use.",
            "type": "integer",
            "example": 2636
          },
          "m3av": {
            "format": "int32",
            "description": "Mode-3/A validity status.",
            "type": "integer",
            "example": 1
          },
          "tags": {
            "description": "Optional array of provider/source specific tags for this data, where each element is no longer than 32 characters, used for implementing data owner conditional access controls to restrict access to the data. Should be left null by data providers unless conditional access controls are coordinated with the UDL team.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "TAG1",
              "TAG2"
            ]
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          }
        }
      },
      "TrackDetails_Abridged": {
        "description": "These services provide operations for querying of all available track details and amplifying track data. A track is a position and optionally a heading/velocity of an object such as an aircraft, marine vessel, etc at a particular timestamp. It also includes optional information regarding the identity/type of the target object and other amplifying object data, if known.",
        "required": [
          "classificationMarking",
          "ts",
          "lat",
          "lon",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "TRACK-DETAILS-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "env": {
            "description": "The track environment type (AIR, LAND, SPACE, SUBSURFACE, SURFACE, UNKNOWN):\n\n AIR: Between sea level and the Kármán line, which has an altitude of 100 kilometers (62 miles).\n\n LAND: On the surface of dry land.\n\n SPACE: Above the Kármán line, which has an altitude of 100 kilometers (62 miles).\n\n SURFACE: On the surface of a body of water.\n\n SUBSURFACE: Below the surface of a body of water.\n\n UNKNOWN: Environment is not known.\n\n",
            "maxLength": 16,
            "enum": [
              "AIR",
              "LAND",
              "SPACE",
              "SURFACE",
              "SUBSURFACE",
              "UNKNOWN"
            ],
            "type": "string",
            "example": "LAND"
          },
          "msgType": {
            "description": "Optional message type designation.",
            "maxLength": 32,
            "type": "string",
            "example": "PLATFORM"
          },
          "hullNum": {
            "description": "The vessel hull number designation of this maritime vessel.  The hull number is a 1-6 character alphanumeric entry assigned to a ship and painted on the hull.",
            "maxLength": 7,
            "type": "string",
            "example": "A30081"
          },
          "pif": {
            "description": "The Pseudo Identification Feature (PIF) number is a four digit code that provides an exact ID for the ship or aircraft. Friendly military only.",
            "maxLength": 5,
            "type": "string",
            "example": "0137"
          },
          "sconum": {
            "description": "The Ship Control Number (SCONUM) is a naval vessel identification number (alphanumeric code) assigned by the Office of Naval Intelligence. SCONUM is sometimes referred to as NOIC ID. SCONUMs are typically of the form A#####, where A is an alpha character and # is numerical.",
            "maxLength": 36,
            "type": "string",
            "example": "B45524"
          },
          "ntds": {
            "description": "The Naval Tactical Data System (NTDS) track number assigned to this track.",
            "maxLength": 6,
            "type": "string",
            "example": "ZZ777"
          },
          "disId": {
            "description": "The Intel Discrete Identifier (IDI) code assigned to this track.  The IDI is a four-digit code representing hostile or unknown tracks.",
            "maxLength": 5,
            "type": "string",
            "example": "7670"
          },
          "midbCat": {
            "description": "The category code that represents the associated facility purpose within the target system.  This value is the category code in the MIDB (Modernized Intelligence Database).",
            "maxLength": 6,
            "type": "string",
            "example": "20345"
          },
          "beNumber": {
            "description": "The Basic Encyclopedia (BE) number associated with this installation or area.",
            "maxLength": 10,
            "type": "string",
            "example": "ENC-123"
          },
          "oSuffix": {
            "description": "The O-suffix associated with this facility.  The O-suffix is a five-character alpha/numeric system used to identify a facility, or demographic area, within an installation. The Installation Basic Encyclopedia (beNumber), in conjunction with the O-suffix, uniquely identifies the facility within the Modernized Integrated Database (MIDB).  The Installation beNumber and oSuffix are also used in conjunction with the midbCat code to classify the function or purpose of the facility.",
            "maxLength": 6,
            "type": "string",
            "example": "AA125"
          },
          "pin": {
            "description": "This value represents the site number of a specific electronic site or its associated equipment.",
            "maxLength": 9,
            "type": "string",
            "example": "E12345012"
          },
          "lostTrkInd": {
            "description": "Flag indicating whether the missile is considered lost, if reporting a missile track.",
            "type": "boolean",
            "example": false
          },
          "muidSrcTrk": {
            "description": "Track ID for the source of the Missile-Unique Identifier (MUID), if reporting a missile track.",
            "maxLength": 36,
            "type": "string",
            "example": "MUID-SRC-ID"
          },
          "muidSrc": {
            "description": "Source of the Missile-Unique Identifier (MUID), if reporting a missile track.",
            "maxLength": 36,
            "type": "string",
            "example": "MUID-SRC"
          },
          "mslStatus": {
            "description": "The status of the missile track in this record, if reporting a missile track (e.g. AT LAUNCH, AT OBSERVATION, FLYING, IMPACTED, LOST, STALE, DEBRIS).",
            "maxLength": 32,
            "type": "string",
            "example": "AT LAUNCH"
          },
          "trkConf": {
            "format": "double",
            "description": "Overall track confidence estimate (not standardized, but typically a value between 0 and 1, with 0 indicating lowest confidence).",
            "type": "number",
            "example": 0.95
          },
          "trkQual": {
            "format": "int32",
            "description": "Track Quality is reported as an integer from 0-15. Track Quality specifies the reliability of the positional information of a reported track; Higher values indicate higher track quality, i.e., lower errors in reported position.",
            "type": "integer",
            "example": 1
          },
          "alert": {
            "description": "A track may be designated as an alert track with the following designations:\n\nHIT - High Interest Track\n\nTGT - Target\n\nSUS - Suspect Carrier\n\nNSP - Cleared Suspect\n\nIf alert is null, the track is assumed to be of non-alert status.\n\n",
            "maxLength": 3,
            "type": "string",
            "example": "TGT"
          },
          "origXref": {
            "description": "Original source cross-reference code for the Command that originated the report.",
            "maxLength": 5,
            "type": "string",
            "example": "INT"
          },
          "elnot1": {
            "description": "Primary ELINT Notification (ELNOT), a five character identifier assigned to each non-communication emission for collection and reporting purposes.  This five-digit field begins with an alpha character, followed by three numbers, ending with another alpha character.",
            "maxLength": 5,
            "type": "string",
            "example": "A123A"
          },
          "elnot2": {
            "description": "Secondary ELINT Notification (ELNOT), a five character identifier assigned to each non-communication emission for collection and reporting purposes.  This five-digit field begins with an alpha character, followed by three numbers, ending with another alpha character.",
            "maxLength": 5,
            "type": "string",
            "example": "A123B"
          },
          "objIdent": {
            "description": "The estimated identity of the track object (ASSUMED FRIEND, FRIEND, HOSTILE, NEUTRAL, PENDING, SUSPECT, UNKNOWN):\n\n ASSUMED FRIEND: Track assumed to be a friend due to the object characteristics, behavior, and/or origin.\n\n FRIEND: Track object supporting friendly forces and belonging to a declared friendly nation or entity.\n\n HOSTILE: Track object belonging to an opposing nation, party, group, or entity deemed to contribute to a threat to friendly forces or their mission due to its behavior, characteristics, nationality, or origin.\n\n NEUTRAL: Track object whose characteristics, behavior, nationality, and/or origin indicate that it is neither supporting nor opposing friendly forces or their mission.\n\n PENDING: Track object which has not been evaluated.\n\n SUSPECT: Track object deemed potentially hostile due to the object characteristics, behavior, nationality, and/or origin.\n\n UNKNOWN: Track object which has been evaluated and does not meet criteria for any standard identity.\n\n",
            "maxLength": 32,
            "enum": [
              "ASSUMED FRIEND",
              "FRIEND",
              "HOSTILE",
              "NEUTRAL",
              "PENDING",
              "SUSPECT",
              "UNKNOWN"
            ],
            "type": "string",
            "example": "FRIEND"
          },
          "objType": {
            "description": "The generic classification of the track object/group (e.g., BALLISTIC, HELICOPTER, TRACKED, WATERCRAFT, WHEELED, etc.). Referenced, but not constrained to, NATO STANAG 4676 object type classifications.",
            "maxLength": 32,
            "type": "string",
            "example": "TRACKED"
          },
          "objPlat": {
            "description": "The object platform type is intended as, but not constrained to, MIL-STD-6016 environment dependent platform type designations. The platform type can be reported as either a combination of the code and environment (e.g. 14/LAND) or as the descriptive representations (e.g. COMBAT VEHICLE), which are equivalent.  For cases in which no MIl-STD-6016 designation exists, a general description can be used (e.g. SATELLITE).",
            "maxLength": 32,
            "type": "string",
            "example": "WEAPON"
          },
          "objAct": {
            "description": "The activity in which the track object is engaged. Intended as, but not constrained to, MIL-STD-6016 environment dependent activity designations. The activity can be reported as either a combination of the code and environment (e.g. 65/AIR) or as the descriptive enumeration (e.g. DIVERTING), which are equivalent.  For cases in which no MIl-STD-6016 designation exists, a general description can be used (e.g. ANTISPACE WARFARE).",
            "maxLength": 32,
            "type": "string",
            "example": "HOLDING"
          },
          "objNat": {
            "description": "Nationality of the tracked object.",
            "maxLength": 24,
            "type": "string",
            "example": "USA"
          },
          "name": {
            "description": "Track name.",
            "maxLength": 48,
            "type": "string",
            "example": "TRACK-NAME"
          },
          "shortName": {
            "description": "Abbreviated track name.",
            "maxLength": 11,
            "type": "string",
            "example": "COMMSCHECK"
          },
          "trkId": {
            "description": "UUID identifying the track, which should remain the same on subsequent tracks of the same object.",
            "maxLength": 36,
            "type": "string",
            "example": "trkId"
          },
          "trkNum": {
            "description": "The track number (TN) of a surveillance entity. Intended as, but not constrained to, the J-series track number encoded as five character alpha-numeric characters. Users should refer to J-series documentation for specific TN definitions.",
            "maxLength": 32,
            "type": "string",
            "example": "trkNum"
          },
          "trkScope": {
            "description": "Value Indicating the scope of this track:\n1 - TERMINAL  (Terminal) - available only on the workstation where they were created.\n2 - LOCAL  (Local) - available only on workstations in the local area network\n3 - OTH  (Over the Horizon) - available to everyone.\n",
            "maxLength": 12,
            "type": "string",
            "example": "OTH"
          },
          "sourceUid": {
            "description": "The unique identifier of the source node.",
            "maxLength": 4,
            "type": "string",
            "example": "MCS"
          },
          "callSign": {
            "description": "The call sign currently assigned to this track object.",
            "maxLength": 24,
            "type": "string",
            "example": "Charlie"
          },
          "identAmp": {
            "description": "Additional track object identity/status information, typically used for EXERCISE identity amplification (FAKER, JOKER, KILO, TRAVELLER, ZOMBIE):\n\n FAKER: Friendly track, object, or entity acting as an exercise hostile.\n\n JOKER: Friendly track, object, or entity acting as an exercise suspect.\n\n KILO: Friendly high-value object.\n\n TRAVELLER: Suspect land or surface track following a recognized traffic route.\n\n ZOMBIE: Suspect track, object, or entity of special interest.\n\n",
            "maxLength": 32,
            "type": "string",
            "example": "JOKER"
          },
          "spaceAmp": {
            "description": "Space amplification indicates additional information on the space environment object being reported (e.g. DEBRIS, FUEL-AIR EXPLOSIVE, NUCLEAR WARHEAD).",
            "maxLength": 32,
            "type": "string",
            "example": "NUCLEAR WARHEAD"
          },
          "spaceAmpConf": {
            "format": "int32",
            "description": "Confidence level of the amplifying characteristics.  Values range from 0 to 6, with 0 indicating the lowest confidence and 6 indicating the highest.",
            "type": "integer",
            "example": 6
          },
          "spaceSpecType": {
            "description": "Specific type of point or track with an environment of space.",
            "maxLength": 32,
            "type": "string",
            "example": "SS-21_MOD_2_CRBM"
          },
          "acftSubType": {
            "description": "Subtype is a finer grain categorization of missile types. Examples include but are not limited to SRBM, MRBM, IRBM, LRBM, ICBM, SLBM:\n\nSRBM - Short-Range Ballistic Missile\n\nMRBM - Medium-Range Ballistic Missile\n\nIRBM - Intermediate-Range Ballistic Missile\n\nLRBM - Long-Range Ballistic Missile\n\nICBM - Intercontinental Ballistic Missile\n\nSLBM - Submarine-Launched Ballistic Missile.\n\n",
            "maxLength": 16,
            "type": "string",
            "example": "SLBM"
          },
          "ts": {
            "format": "date-time",
            "description": "Track timestamp in ISO8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "launchTime": {
            "format": "date-time",
            "description": "Missile launch timestamp in ISO8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "impactTime": {
            "format": "date-time",
            "description": "Missile impact timestamp in ISO8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "ftnMsgTs": {
            "format": "date-time",
            "description": "The message timestamp that the ftn track position was recorded, in ISO 8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "ftn": {
            "description": "An ftn used to associate information and directives with the track.",
            "maxLength": 32,
            "type": "string",
            "example": "FTN"
          },
          "ftnCmd": {
            "description": "The name of the Command reporting the Force Over-The-Horizon Track Coordinator (FOTC) track number.",
            "maxLength": 18,
            "type": "string",
            "example": "TRUETT"
          },
          "rtnMsgTs": {
            "description": "The message timestamp that the reference track position was recorded, in ISO 8601 UTC format with microsecond precision. The 'rtnMsgTs' and 'rtn' arrays must match in size.",
            "type": "array",
            "items": {
              "format": "date-time",
              "type": "string"
            },
            "example": [
              "2021-02-25T12:00:00.123456Z"
            ]
          },
          "rtn": {
            "description": "A Reference Track Number used to associate information and directives with the track.  Referenced, but not constrained to, MIL-STD-6016F Reference Track Number. The 'rtnMsgTs' and 'rtn' arrays must match in size.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ex-a"
            ]
          },
          "rtnTrkState": {
            "description": "Value representing the state of the Received Track.",
            "maxLength": 16,
            "type": "string",
            "example": "Local_RTN"
          },
          "rtnCmd": {
            "description": "The name of the Command reporting the Received Track Number (RTN).",
            "maxLength": 8,
            "type": "string",
            "example": "YORKTOWN"
          },
          "sen": {
            "description": "Id/name of sensor providing the track data.",
            "maxLength": 32,
            "type": "string",
            "example": "OTH"
          },
          "rptChxref": {
            "description": "Source cross-reference code for the Command that originated the track report.",
            "maxLength": 18,
            "type": "string",
            "example": "INT"
          },
          "rptArchived": {
            "description": "Flag indicating whether this track is archived.",
            "type": "boolean",
            "example": false
          },
          "selfReport": {
            "description": "Flag indicating that this track is self reported.",
            "type": "boolean",
            "example": false
          },
          "mil2525Bstr": {
            "description": "The MIL-STD-2525B symbology code that applies to the subject of this track.",
            "maxLength": 16,
            "type": "string",
            "example": "SHP*S----------"
          },
          "trnspdrId": {
            "description": "Transponder ID for the track.  This does not correspond to the UDL transponder schema.",
            "maxLength": 61,
            "type": "string",
            "example": "11"
          },
          "trnspdrType": {
            "description": "Transponder type for the track.",
            "maxLength": 51,
            "type": "string",
            "example": "AFTS"
          },
          "emitterName": {
            "description": "Radar name of the sensor tracking this object (e.g., RAY1500, SPN-43, HEADNET).",
            "maxLength": 16,
            "type": "string",
            "example": "RAY1500"
          },
          "infoSource": {
            "description": "Source code for source of information used to detect track.",
            "maxLength": 64,
            "type": "string",
            "example": "S1"
          },
          "boosting": {
            "description": "Flag indicating that the missile is currently in a state of boosting, if reporting a missile track.",
            "type": "boolean",
            "example": false
          },
          "freq": {
            "format": "double",
            "description": "Frequency, in hertz, for the signature report.",
            "type": "number",
            "example": 63.65
          },
          "maxFreq": {
            "format": "double",
            "description": "Maximum frequency, in hertz, reported for this acoustic track.",
            "type": "number",
            "example": 10324.53
          },
          "harmonics": {
            "description": "List of harmonics of the signature report in descending order of predominance using 1-2 digit combinations separated by commas, e.g., 8,12,4. (1-22NS).",
            "maxLength": 24,
            "type": "string",
            "example": "8,12,4"
          },
          "pri": {
            "format": "double",
            "description": "Pulse repetition interval of the emitter, measured in microseconds.  The interval between the start of one pulse and the start of another.",
            "type": "number",
            "example": 56657.2238
          },
          "prf": {
            "format": "double",
            "description": "Pulse repetition frequency of the emitter, measured in pulses per second.  PRF is the number of pulses transmitted per second. This is the reciprocal of the pri value.",
            "type": "number",
            "example": 17.65
          },
          "pw": {
            "format": "double",
            "description": "Pulse width of the emitter, measured in microseconds.  This is the duration of the pulse.",
            "type": "number",
            "example": 1347.45
          },
          "scanType": {
            "description": "Type of radar scan.",
            "maxLength": 5,
            "type": "string",
            "example": "UNK"
          },
          "scanRate": {
            "format": "double",
            "description": "Scan rate of the emitter, measured in seconds per rotation (SPR).",
            "type": "number",
            "example": 12.01
          },
          "scn": {
            "format": "int32",
            "description": "The Sequential Contact Number (SCN) for this track.",
            "type": "integer",
            "example": 1474305
          },
          "cI": {
            "description": "Correlation Index; reference code for the site that originally reported the track.",
            "maxLength": 3,
            "type": "string",
            "example": "BB"
          },
          "angElev": {
            "format": "double",
            "description": "The angle formed between the line of sight of the observer and the horizon, in degrees.  The angular range is -90 to 90, with negative values representing angle of depression.",
            "type": "number",
            "example": 15.2
          },
          "lat": {
            "format": "double",
            "description": "WGS-84 latitude of the track object, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 19.88550102
          },
          "lon": {
            "format": "double",
            "description": "WGS-84 longitude of the track object, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 46.74596844
          },
          "launchLat": {
            "format": "double",
            "description": "WGS-84 latitude of the missile launch point, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 19.88550102
          },
          "launchLon": {
            "format": "double",
            "description": "WGS-84 longitude of the missile launch point, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": 46.74550102
          },
          "impactLat": {
            "format": "double",
            "description": "WGS-84 latitude of the missile impact point, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 19.88550102
          },
          "impactLon": {
            "format": "double",
            "description": "WGS-84 longitude of the missile impact point, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": 46.74550102
          },
          "polarSingLocLat": {
            "format": "double",
            "description": "WGS-84 azimuth corridor reference point latitude, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 19.88550102
          },
          "polarSingLocLon": {
            "format": "double",
            "description": "WGS-84 azimuth corridor reference point longitude, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": 46.74550102
          },
          "azCorrCenterLine": {
            "format": "double",
            "description": "The azimuth corridor centerline angle measured in degrees clockwise from true north, of the center line of an azimuth corridor. The center line extends from the referenced corridor origin location.",
            "type": "number",
            "example": 12.876
          },
          "azCorrArcWidth": {
            "format": "double",
            "description": "Azimuth corridor arc distance measured in meters from reference point of azimuth corridor to far edge of bounded azimuth corridor wedge, measured along azimuth corridor center line.",
            "type": "number",
            "example": 71.76
          },
          "errSemiIntAxis": {
            "format": "double",
            "description": "The error in the semi-intermediate axis.  The semi-intermediate axis is intermediate in length between semi-major and semi-minor axes. This field is doubled and centered on intersection of area semi-major axis and area semi-minor axis at 90 degrees to the plane defined by those axes. For these shapes, the volume is defined as having a 50-percent probability of containing the true location of the referenced entity.",
            "type": "number",
            "example": 7010.882
          },
          "errAreaOrient": {
            "format": "double",
            "description": "The error in the Area Orientation.  Area Orientation is the angle or roll in degrees, between area semi-minor axis and plane defined by local vertical and area semi-major axis. When reported without major and minor axis, it is angle between an axis perpendicular to a 2D true north axis and plane defined by local vertical and a 2D true north axis.",
            "type": "number",
            "example": 69.6
          },
          "errSemiMajElev": {
            "format": "double",
            "description": "The error in the Semi-major elevation axis. Semi-major elevation axis is the elevation of the cubical, 3D rectangular, cylindrical, 3D ellipsoidal, or spherical semi-major axis, in degrees, measured from local horizontal.",
            "type": "number",
            "example": 168.8
          },
          "errGeoAreaSwitch": {
            "description": "Geometric area switch identifies the 3D shape of the error volume by providing the 2D shape for the 3D plane. The 3D plane is the plane orthogonal to the area semi-major axis and area semi-minor axis. Depending on whether the 2D plane is reported as an error ellipse 2D or as an error rectangle 2D, this switch reports a complete error volume that is cubical, 3D rectangular, cylindrical, 3D ellipsoidal, or spherical.\n\n0 - SWITCH_TYPE_UNKNOWN\n\n1 - SQUARE_RECTANGLE\n\n2 - CIRCLE_ELLIPSE.\n\n",
            "maxLength": 24,
            "type": "string",
            "example": "CIRCLE_ELLIPSE"
          },
          "burnoutAlt": {
            "format": "double",
            "description": "Track point burnout altitude relative to WGS-84 ellipsoid, in meters.",
            "type": "number",
            "example": 30567.452
          },
          "tesEventId": {
            "description": "Threat Event System Track ID.",
            "maxLength": 8,
            "type": "string",
            "example": "6217"
          },
          "spd": {
            "format": "double",
            "description": "Track object speed, in meters/sec.",
            "type": "number",
            "example": 15.03443
          },
          "avgSpd": {
            "format": "double",
            "description": "The average speed, in kilometers/hour, calculated for the subject during the latest voyage/excursion.",
            "type": "number",
            "example": 18.25
          },
          "tol": {
            "format": "double",
            "description": "Motion model Time On Leg in hours.",
            "type": "number",
            "example": 4.1
          },
          "alt": {
            "format": "double",
            "description": "Track point altitude relative to WGS-84 ellipsoid, in meters. Positive values indicate a track object height above ellipsoid, and negative values indicate a track object below ellipsoid, applicable to the depth estimate for a subsurface track.",
            "type": "number",
            "example": 153.01
          },
          "hdng": {
            "format": "double",
            "description": "Track object heading, in degrees clockwise from true north.",
            "type": "number",
            "example": 19.7
          },
          "course": {
            "format": "double",
            "description": "The track object course-over-ground, in degrees clockwise from true North at the object location (0-360 degrees).",
            "type": "number",
            "example": 4.3580153
          },
          "propRPM": {
            "format": "double",
            "description": "The number of propeller revolutions per minute for a submarine or ship.",
            "type": "number",
            "example": 8.2
          },
          "tpk": {
            "format": "double",
            "description": "The number of turns of the vessel propellers per knot of forward motion.",
            "type": "number",
            "example": 2.65
          },
          "coopLocInd": {
            "description": "The Cooperative Location Indicator specifies whether the reported entity location was derived using reported locations from sensors on more than one platform.\n\n0 - COOPERATIVE_LOCATOR_NONE\n\n1 - SINGLE_PLATFORM\n\n2 - FRAGMENT\n\n3 - COOPERATIVE.\n\n",
            "maxLength": 32,
            "type": "string",
            "example": "COOPERATIVE"
          },
          "maneuverInd": {
            "description": "The manuevering indicator specifying the missile boost phase.\n\n0 - POST_BOOST_NONE\n\n1 - POST_BOOST_MANUEVER\n\n2 - POST_BOOST_COMPLETE_MANUEVER.\n\n",
            "maxLength": 32,
            "type": "string",
            "example": "POST_BOOST_NONE"
          },
          "launchAouType": {
            "description": "The launch location Area of Uncertainty (AoU) type (BEARING, ELLIPSE, OTHER) definition. This type defines the elements of the launchAouData array and is required if launchAouData is not null. See the launchAouData field definition for specific information.",
            "maxLength": 20,
            "type": "string",
            "example": "ELLIPSE"
          },
          "launchAouData": {
            "description": "Three element array representing the launch location Area of Uncertainty (AoU). The array element definitions and units are type specific depending on the launchAouType specified in this record:\n\n ELLIPSE:\n\n   brg - orientation in degrees of the ellipse\n\n   a1 - semi-major axis in meters\n\n   a2 - semi-minor axis in meters\n\n BEARING (BEARING BOX or MTST BEARING BOX):\n\n   brg - orientation in degrees of the bearing box\n\n   a1 - length of bearing box in meters\n\n   a2 - half-width of bearing box in meters\n\n OTHER (All other type values):\n\n   brg - line of bearing in degrees true\n\n   a1 - bearing error in degrees\n\n   a2 - estimated range in meters.\n\n",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              34.3,
              26.5,
              1.2
            ]
          },
          "impactAouType": {
            "description": "The impact point Area of Uncertainty (AoU) type (BEARING, ELLIPSE, OTHER) definition. This type defines the elements of the impactAouData array and is required if impactAouData is not null. See the impactAouData field definition for specific information.",
            "maxLength": 20,
            "type": "string",
            "example": "ELLIPSE"
          },
          "impactAouData": {
            "description": "Three element array representing the impact point Area of Uncertainty (AoU). The array element definitions and units are type specific depending on the impactAouType specified in this record:\n\n ELLIPSE:\n\n   brg - orientation in degrees of the ellipse\n\n   a1 - semi-major axis in meters\n\n   a2 - semi-minor axis in meters\n\n BEARING (BEARING BOX or MTST BEARING BOX):\n\n   brg - orientation in degrees of the bearing box\n\n   a1 - length of bearing box in meters\n\n   a2 - half-width of bearing box in meters\n\n OTHER (All other type values):\n\n   brg - line of bearing in degrees true\n\n   a1 - bearing error in degrees\n\n   a2 - estimated range in meters.\n\n",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              34.3,
              26.5,
              1.2
            ]
          },
          "aouRptType": {
            "description": "The track Area of Uncertainty (AoU) type (BEARING, ELLIPSE, OTHER) definition. This type defines the elements of the aouRptData array and is required if aouRptData is not null. See the aouRptData field definition for specific information.",
            "maxLength": 20,
            "type": "string",
            "example": "ELLIPSE"
          },
          "aouRptData": {
            "description": "Three element array representing an Area of Uncertainty (AoU). The array element definitions and units are type specific depending on the aouRptType specified in this record:\n\n ELLIPSE:\n\n   brg - orientation in degrees of the ellipse\n\n   a1 - semi-major axis in meters\n\n   a2 - semi-minor axis in meters\n\n BEARING (BEARING BOX or MTST BEARING BOX):\n\n   brg - orientation in degrees of the bearing box\n\n   a1 - length of bearing box in meters\n\n   a2 - half-width of bearing box in meters\n\n OTHER (All other type values):\n\n   brg - line of bearing in degrees true\n\n   a1 - bearing error in degrees\n\n   a2 - estimated range in meters.\n\n",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              34.3,
              26.5,
              1.2
            ]
          },
          "ecefPos": {
            "description": "Track object location in ECEF [x, y, z], meters. When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.35,
              3.42
            ]
          },
          "ecefVel": {
            "description": "Track object velocity in ECEF [x', y', z'], meters/sec. When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.35,
              3.42
            ]
          },
          "containment": {
            "format": "double",
            "description": "The Area Of Uncertainty (AOU) percentage (0 - 100) containment value. The percentage of time (90%) that the estimated area of uncertainty will cover the true position of the track object.",
            "type": "number",
            "example": 97
          },
          "cpa": {
            "format": "double",
            "description": "The distance, in meters, of the closest point of approach between this track to the master reference track.",
            "type": "number",
            "example": 500
          },
          "tcpa": {
            "format": "date-time",
            "description": "The time, in ISO 8601 UTC format with millisecond precision, of the  closest point of approach between this track and the master reference track.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123Z"
          },
          "navStatus": {
            "description": "The AIS Navigational Status of the vessel (e.g. Underway Using Engine, Moored, Aground, etc.). Intended as, but not constrained to, the USCG NAVCEN navigation status definitions. Users should refer to USCG Navigation Center documentation for specific definitions associated with navigation status. USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.",
            "maxLength": 64,
            "type": "string",
            "example": "Underway Using Engine"
          },
          "posDeviceType": {
            "description": "The type of electronic position fixing device (e.g. GPS, GLONASS, etc.). Intended as, but not constrained to, the USCG NAVCEN electronic position fixing device definitions. Users should refer to USCG Navigation Center documentation for specific device type information. USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.",
            "maxLength": 24,
            "type": "string",
            "example": "GPS"
          },
          "aton": {
            "description": "Type of Aid to Navigation. Intended as, but not constrained to, the USCG NAVCEN  aids to navigation. Users should refer to USCG Navigation Center documentation for specific device type information. USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.",
            "maxLength": 64,
            "type": "string",
            "example": "Cardinal Mark N"
          },
          "offPosInd": {
            "description": "Indicator position (OFF, ON, UNK) for optional floating navigational aids only.",
            "maxLength": 3,
            "type": "string",
            "example": "ON"
          },
          "antennaRefDimensions": {
            "description": "The reference dimensions of the vessel, reported as [A, B, C, D], in meters. Where the array values represent the distance fore (A), aft (B), to port (C), and to starboard (D) of the navigation antenna. Array with values A = C = 0 and B, D > 0 indicate the length (B) and width (D) of the vessel without antenna position reference.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              50.1,
              50.1,
              20.1,
              20.1
            ]
          },
          "shipClass": {
            "description": "The common name for a group of ships with similar design, usually named for the first vessel of the class.",
            "maxLength": 64,
            "type": "string",
            "example": "Nimitz"
          },
          "imon": {
            "format": "int32",
            "description": "The International Maritime Organization Number of the vessel. IMON is a seven-digit number that uniquely identifies the vessel.",
            "type": "integer",
            "example": 9015462
          },
          "mmsi": {
            "format": "int32",
            "description": "The Maritime Mobile Service Identity of the vessel. MMSI is a nine-digit number that identifies the transmitter station of the vessel.",
            "type": "integer",
            "example": 304010417
          },
          "draught": {
            "format": "double",
            "description": "The maximum static draught, in meters, of the vessel according to the AIS transmission.",
            "type": "number",
            "example": 21.1
          },
          "length": {
            "format": "double",
            "description": "The overall length of the vessel, in meters. A value of 511 indicates a vessel length of 511 meters or greater.",
            "type": "number",
            "example": 511.1
          },
          "width": {
            "format": "double",
            "description": "The breadth of the vessel, in meters. A value of 63 indicates a vessel breadth of 63 meters or greater.",
            "type": "number",
            "example": 24.1
          },
          "cargoType": {
            "description": "The reported cargo type. Intended as, but not constrained to, the USCG NAVCEN AIS cargo definitions. Users should refer to USCG Navigation Center documentation for specific definitions associated with ship and cargo types. USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.",
            "maxLength": 48,
            "type": "string",
            "example": "Freight"
          },
          "appGrp": {
            "description": "Appearance group code.\n\nGP1 - Superstructure exceeds 1/3 of ship length.\n\nGP2 - Superstructure less than 1/3 of ship length.\n\nGP3 - Stack aft.",
            "maxLength": 7,
            "type": "string",
            "example": "GP1"
          },
          "hullProf": {
            "description": "Hull profile code. Based on GCCS-J hull profiles.\n\nFLUSH           No breaks in Hull Profile.\n\nRAISED 1        Hull Profile shows distinct raised area at bow. Remainder of deck is flush.\n\nRAISED 2        Hull Profile shows distinct raised area amidships. Bow and stern are flush.\n\nRAISED 3        Hull Profile shows distinct raised area at stern. Remainder of deck is flush.\n\nRAISED 1-2-3    Distinct raised areas at bow, midships, and stern with breaks between each raise.\n\nRAISED 1-2      Raised area at bow and midships with break between.\n\nRAISED 1-3      Raised area at bow and stern with break between.\n\nRAISED 12       Continuous raised area encompassing both bow and midships.\n\nRAISED 23       Continuous raised area encompassing midships and stern.\n\nRAISED 12-3     Raised areas at bow, midships and stern. Bow and midship raises are continuous. Break between midship and stern raises.\n\nRAISED 1-23     Raised areas at bow, midships, and stern. Midship and stern raises are continuous with break between bow and midship raises.\n\nRAISED 1-L2-3   Raised areas at bow, midships, and stern with break between each raise. Midships raise is longer than that associated with raised 1-2-3.",
            "maxLength": 16,
            "type": "string",
            "example": "Raised 1-23"
          },
          "propType": {
            "description": "The type of propulsion employed by the track object (Diesel, Nuclear).",
            "maxLength": 6,
            "type": "string",
            "example": "Diesel"
          },
          "numBlades": {
            "format": "int32",
            "description": "The number of blades per shaft of the track object.  Applicable for maritime vessels.",
            "type": "integer",
            "example": 4
          },
          "numShafts": {
            "format": "int32",
            "description": "The number of shafts on the track object.  Applicable for maritime vessels.",
            "type": "integer",
            "example": 3
          },
          "sternType": {
            "description": "The stern type code (Counter, Cruiser) associated with the track object.",
            "maxLength": 16,
            "type": "string",
            "example": "Cruiser"
          },
          "vslWt": {
            "format": "double",
            "description": "The weight, in tons, of the vessel associated with this track.",
            "type": "number",
            "example": 3423.76
          },
          "arrTime": {
            "format": "date-time",
            "description": "The Arrival Time of the vessel at the destination, in ISO 8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "arrFlag": {
            "description": "The flag of the arrival port.",
            "maxLength": 36,
            "type": "string",
            "example": "USA"
          },
          "arrCargo": {
            "description": "The reported arrival cargo type. Intended as, but not constrained to, the USCG NAVCEN AIS cargo definitions. Users should refer to USCG Navigation Center documentation for specific definitions associated with ship and cargo types. USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.",
            "maxLength": 48,
            "type": "string",
            "example": "Freight"
          },
          "arrPort": {
            "description": "The Arrival Port of the vessel according to the AIS transmission.",
            "maxLength": 20,
            "type": "string",
            "example": "Lanshan"
          },
          "depPort": {
            "description": "The Departure Port of the vessel according to the AIS transmission.",
            "maxLength": 20,
            "type": "string",
            "example": "Lanshan"
          },
          "depFlag": {
            "description": "The flag of the departure port.",
            "maxLength": 36,
            "type": "string",
            "example": "USA"
          },
          "depCargo": {
            "description": "The reported departure cargo type. Intended as, but not constrained to, the USCG NAVCEN AIS cargo definitions. Users should refer to USCG Navigation Center documentation for specific definitions associated with ship and cargo types. USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.",
            "maxLength": 48,
            "type": "string",
            "example": "Freight"
          },
          "desFlag": {
            "description": "The flag of the destination port.",
            "maxLength": 36,
            "type": "string",
            "example": "USA"
          },
          "desCargo": {
            "description": "The reported destination cargo type. Intended as, but not constrained to, the USCG NAVCEN AIS cargo definitions. Users should refer to USCG Navigation Center documentation for specific definitions associated with ship and cargo types. USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.",
            "maxLength": 48,
            "type": "string",
            "example": "Freight"
          },
          "destination": {
            "description": "The destination of the vessel according to the AIS transmission.",
            "maxLength": 20,
            "type": "string",
            "example": "USCLE"
          },
          "eta": {
            "format": "date-time",
            "description": "The Estimated Time of Arrival of the vessel at the destination port, in ISO 8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "etd": {
            "format": "date-time",
            "description": "The Estimated Time of Departure of the vessel from the departure port (depPort), according to Marine Traffic calculations, in ISO 8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "iff": {
            "description": "A text amplifier displaying IFF/SIF/AIS Identification modes and codes.",
            "maxLength": 64,
            "type": "string",
            "example": "ID Mode"
          },
          "emgInd": {
            "description": "Flag indicating that the track object has an emergency.",
            "type": "boolean",
            "example": false
          },
          "dropPtInd": {
            "description": "The drop-point indicator setting.",
            "type": "boolean",
            "example": false
          },
          "reinforced": {
            "description": "Flag indicating that this track represents a reinforced object or group.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "reduced": {
            "description": "Flag indicating for the track represents a reduced force object or group.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "hq": {
            "description": "Flag indicating that this track represents a headquarters object.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "dummy": {
            "description": "Flag indicating that this track represents a dummy object or group.  Identifies offensive or defensive units, equipment, and/or installations intended to draw the enemy's attention away from the area of the main attack.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "taskForce": {
            "description": "Flag indicating that this track represents a task force.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "feint": {
            "description": "Flag indicating that this track represents a feint object or group.  Identifies offensive or defensive units, equipment, and/or installations intended to draw the enemy's attention away from the area of the main attack.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "installation": {
            "description": "Flag indicating that this track represents an installation.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "staffCmts": {
            "description": "A text amplifier for units, equipment and installations; content is implementation specific.",
            "maxLength": 256,
            "type": "string",
            "example": "Staff Comments"
          },
          "addInfo": {
            "description": "A text amplifier for units, equipment and installations; content is implementation specific.",
            "maxLength": 256,
            "type": "string",
            "example": "Additional information"
          },
          "evalRating": {
            "description": "A text amplifier code for units, equipment, and installations that consists of a one-letter reliability rating and a one-number credibility rating based on the following definitions of each:\n\n Reliability Ratings:\n\n  A-completely reliable\n\n  B-usually reliable\n\n  C-fairly reliable\n\n  D-not usually reliable\n\n  E-unreliable\n\n  F-reliability cannot be judged\n\n Credibility Ratings:\n\n  1-confirmed by other sources\n\n  2-probably true\n\n  3-possibly true\n\n  4-doubtfully true\n\n  5-improbable\n\n  6-truth cannot be judged.\n\n",
            "maxLength": 2,
            "type": "string",
            "example": "A1"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database.",
            "type": "string",
            "readOnly": true,
            "example": "2021-02-25T12:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          }
        }
      },
      "TrackDetails_Full": {
        "description": "These services provide operations for querying of all available track details and amplifying track data. A track is a position and optionally a heading/velocity of an object such as an aircraft, marine vessel, etc at a particular timestamp. It also includes optional information regarding the identity/type of the target object and other amplifying object data, if known.",
        "required": [
          "classificationMarking",
          "ts",
          "lat",
          "lon",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "TRACK-DETAILS-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "env": {
            "description": "The track environment type (AIR, LAND, SPACE, SUBSURFACE, SURFACE, UNKNOWN):\n\n AIR: Between sea level and the Kármán line, which has an altitude of 100 kilometers (62 miles).\n\n LAND: On the surface of dry land.\n\n SPACE: Above the Kármán line, which has an altitude of 100 kilometers (62 miles).\n\n SURFACE: On the surface of a body of water.\n\n SUBSURFACE: Below the surface of a body of water.\n\n UNKNOWN: Environment is not known.\n\n",
            "maxLength": 16,
            "enum": [
              "AIR",
              "LAND",
              "SPACE",
              "SURFACE",
              "SUBSURFACE",
              "UNKNOWN"
            ],
            "type": "string",
            "example": "LAND"
          },
          "msgType": {
            "description": "Optional message type designation.",
            "maxLength": 32,
            "type": "string",
            "example": "PLATFORM"
          },
          "hullNum": {
            "description": "The vessel hull number designation of this maritime vessel.  The hull number is a 1-6 character alphanumeric entry assigned to a ship and painted on the hull.",
            "maxLength": 7,
            "type": "string",
            "example": "A30081"
          },
          "pif": {
            "description": "The Pseudo Identification Feature (PIF) number is a four digit code that provides an exact ID for the ship or aircraft. Friendly military only.",
            "maxLength": 5,
            "type": "string",
            "example": "0137"
          },
          "sconum": {
            "description": "The Ship Control Number (SCONUM) is a naval vessel identification number (alphanumeric code) assigned by the Office of Naval Intelligence. SCONUM is sometimes referred to as NOIC ID. SCONUMs are typically of the form A#####, where A is an alpha character and # is numerical.",
            "maxLength": 36,
            "type": "string",
            "example": "B45524"
          },
          "ntds": {
            "description": "The Naval Tactical Data System (NTDS) track number assigned to this track.",
            "maxLength": 6,
            "type": "string",
            "example": "ZZ777"
          },
          "disId": {
            "description": "The Intel Discrete Identifier (IDI) code assigned to this track.  The IDI is a four-digit code representing hostile or unknown tracks.",
            "maxLength": 5,
            "type": "string",
            "example": "7670"
          },
          "midbCat": {
            "description": "The category code that represents the associated facility purpose within the target system.  This value is the category code in the MIDB (Modernized Intelligence Database).",
            "maxLength": 6,
            "type": "string",
            "example": "20345"
          },
          "beNumber": {
            "description": "The Basic Encyclopedia (BE) number associated with this installation or area.",
            "maxLength": 10,
            "type": "string",
            "example": "ENC-123"
          },
          "oSuffix": {
            "description": "The O-suffix associated with this facility.  The O-suffix is a five-character alpha/numeric system used to identify a facility, or demographic area, within an installation. The Installation Basic Encyclopedia (beNumber), in conjunction with the O-suffix, uniquely identifies the facility within the Modernized Integrated Database (MIDB).  The Installation beNumber and oSuffix are also used in conjunction with the midbCat code to classify the function or purpose of the facility.",
            "maxLength": 6,
            "type": "string",
            "example": "AA125"
          },
          "pin": {
            "description": "This value represents the site number of a specific electronic site or its associated equipment.",
            "maxLength": 9,
            "type": "string",
            "example": "E12345012"
          },
          "lostTrkInd": {
            "description": "Flag indicating whether the missile is considered lost, if reporting a missile track.",
            "type": "boolean",
            "example": false
          },
          "muidSrcTrk": {
            "description": "Track ID for the source of the Missile-Unique Identifier (MUID), if reporting a missile track.",
            "maxLength": 36,
            "type": "string",
            "example": "MUID-SRC-ID"
          },
          "muidSrc": {
            "description": "Source of the Missile-Unique Identifier (MUID), if reporting a missile track.",
            "maxLength": 36,
            "type": "string",
            "example": "MUID-SRC"
          },
          "mslStatus": {
            "description": "The status of the missile track in this record, if reporting a missile track (e.g. AT LAUNCH, AT OBSERVATION, FLYING, IMPACTED, LOST, STALE, DEBRIS).",
            "maxLength": 32,
            "type": "string",
            "example": "AT LAUNCH"
          },
          "trkConf": {
            "format": "double",
            "description": "Overall track confidence estimate (not standardized, but typically a value between 0 and 1, with 0 indicating lowest confidence).",
            "type": "number",
            "example": 0.95
          },
          "trkQual": {
            "format": "int32",
            "description": "Track Quality is reported as an integer from 0-15. Track Quality specifies the reliability of the positional information of a reported track; Higher values indicate higher track quality, i.e., lower errors in reported position.",
            "type": "integer",
            "example": 1
          },
          "alert": {
            "description": "A track may be designated as an alert track with the following designations:\n\nHIT - High Interest Track\n\nTGT - Target\n\nSUS - Suspect Carrier\n\nNSP - Cleared Suspect\n\nIf alert is null, the track is assumed to be of non-alert status.\n\n",
            "maxLength": 3,
            "type": "string",
            "example": "TGT"
          },
          "origXref": {
            "description": "Original source cross-reference code for the Command that originated the report.",
            "maxLength": 5,
            "type": "string",
            "example": "INT"
          },
          "elnot1": {
            "description": "Primary ELINT Notification (ELNOT), a five character identifier assigned to each non-communication emission for collection and reporting purposes.  This five-digit field begins with an alpha character, followed by three numbers, ending with another alpha character.",
            "maxLength": 5,
            "type": "string",
            "example": "A123A"
          },
          "elnot2": {
            "description": "Secondary ELINT Notification (ELNOT), a five character identifier assigned to each non-communication emission for collection and reporting purposes.  This five-digit field begins with an alpha character, followed by three numbers, ending with another alpha character.",
            "maxLength": 5,
            "type": "string",
            "example": "A123B"
          },
          "objIdent": {
            "description": "The estimated identity of the track object (ASSUMED FRIEND, FRIEND, HOSTILE, NEUTRAL, PENDING, SUSPECT, UNKNOWN):\n\n ASSUMED FRIEND: Track assumed to be a friend due to the object characteristics, behavior, and/or origin.\n\n FRIEND: Track object supporting friendly forces and belonging to a declared friendly nation or entity.\n\n HOSTILE: Track object belonging to an opposing nation, party, group, or entity deemed to contribute to a threat to friendly forces or their mission due to its behavior, characteristics, nationality, or origin.\n\n NEUTRAL: Track object whose characteristics, behavior, nationality, and/or origin indicate that it is neither supporting nor opposing friendly forces or their mission.\n\n PENDING: Track object which has not been evaluated.\n\n SUSPECT: Track object deemed potentially hostile due to the object characteristics, behavior, nationality, and/or origin.\n\n UNKNOWN: Track object which has been evaluated and does not meet criteria for any standard identity.\n\n",
            "maxLength": 32,
            "enum": [
              "ASSUMED FRIEND",
              "FRIEND",
              "HOSTILE",
              "NEUTRAL",
              "PENDING",
              "SUSPECT",
              "UNKNOWN"
            ],
            "type": "string",
            "example": "FRIEND"
          },
          "objType": {
            "description": "The generic classification of the track object/group (e.g., BALLISTIC, HELICOPTER, TRACKED, WATERCRAFT, WHEELED, etc.). Referenced, but not constrained to, NATO STANAG 4676 object type classifications.",
            "maxLength": 32,
            "type": "string",
            "example": "TRACKED"
          },
          "objPlat": {
            "description": "The object platform type is intended as, but not constrained to, MIL-STD-6016 environment dependent platform type designations. The platform type can be reported as either a combination of the code and environment (e.g. 14/LAND) or as the descriptive representations (e.g. COMBAT VEHICLE), which are equivalent.  For cases in which no MIl-STD-6016 designation exists, a general description can be used (e.g. SATELLITE).",
            "maxLength": 32,
            "type": "string",
            "example": "WEAPON"
          },
          "objAct": {
            "description": "The activity in which the track object is engaged. Intended as, but not constrained to, MIL-STD-6016 environment dependent activity designations. The activity can be reported as either a combination of the code and environment (e.g. 65/AIR) or as the descriptive enumeration (e.g. DIVERTING), which are equivalent.  For cases in which no MIl-STD-6016 designation exists, a general description can be used (e.g. ANTISPACE WARFARE).",
            "maxLength": 32,
            "type": "string",
            "example": "HOLDING"
          },
          "objNat": {
            "description": "Nationality of the tracked object.",
            "maxLength": 24,
            "type": "string",
            "example": "USA"
          },
          "name": {
            "description": "Track name.",
            "maxLength": 48,
            "type": "string",
            "example": "TRACK-NAME"
          },
          "shortName": {
            "description": "Abbreviated track name.",
            "maxLength": 11,
            "type": "string",
            "example": "COMMSCHECK"
          },
          "trkId": {
            "description": "UUID identifying the track, which should remain the same on subsequent tracks of the same object.",
            "maxLength": 36,
            "type": "string",
            "example": "trkId"
          },
          "trkNum": {
            "description": "The track number (TN) of a surveillance entity. Intended as, but not constrained to, the J-series track number encoded as five character alpha-numeric characters. Users should refer to J-series documentation for specific TN definitions.",
            "maxLength": 32,
            "type": "string",
            "example": "trkNum"
          },
          "trkScope": {
            "description": "Value Indicating the scope of this track:\n1 - TERMINAL  (Terminal) - available only on the workstation where they were created.\n2 - LOCAL  (Local) - available only on workstations in the local area network\n3 - OTH  (Over the Horizon) - available to everyone.\n",
            "maxLength": 12,
            "type": "string",
            "example": "OTH"
          },
          "sourceUid": {
            "description": "The unique identifier of the source node.",
            "maxLength": 4,
            "type": "string",
            "example": "MCS"
          },
          "callSign": {
            "description": "The call sign currently assigned to this track object.",
            "maxLength": 24,
            "type": "string",
            "example": "Charlie"
          },
          "identAmp": {
            "description": "Additional track object identity/status information, typically used for EXERCISE identity amplification (FAKER, JOKER, KILO, TRAVELLER, ZOMBIE):\n\n FAKER: Friendly track, object, or entity acting as an exercise hostile.\n\n JOKER: Friendly track, object, or entity acting as an exercise suspect.\n\n KILO: Friendly high-value object.\n\n TRAVELLER: Suspect land or surface track following a recognized traffic route.\n\n ZOMBIE: Suspect track, object, or entity of special interest.\n\n",
            "maxLength": 32,
            "type": "string",
            "example": "JOKER"
          },
          "spaceAmp": {
            "description": "Space amplification indicates additional information on the space environment object being reported (e.g. DEBRIS, FUEL-AIR EXPLOSIVE, NUCLEAR WARHEAD).",
            "maxLength": 32,
            "type": "string",
            "example": "NUCLEAR WARHEAD"
          },
          "spaceAmpConf": {
            "format": "int32",
            "description": "Confidence level of the amplifying characteristics.  Values range from 0 to 6, with 0 indicating the lowest confidence and 6 indicating the highest.",
            "type": "integer",
            "example": 6
          },
          "spaceSpecType": {
            "description": "Specific type of point or track with an environment of space.",
            "maxLength": 32,
            "type": "string",
            "example": "SS-21_MOD_2_CRBM"
          },
          "acftSubType": {
            "description": "Subtype is a finer grain categorization of missile types. Examples include but are not limited to SRBM, MRBM, IRBM, LRBM, ICBM, SLBM:\n\nSRBM - Short-Range Ballistic Missile\n\nMRBM - Medium-Range Ballistic Missile\n\nIRBM - Intermediate-Range Ballistic Missile\n\nLRBM - Long-Range Ballistic Missile\n\nICBM - Intercontinental Ballistic Missile\n\nSLBM - Submarine-Launched Ballistic Missile.\n\n",
            "maxLength": 16,
            "type": "string",
            "example": "SLBM"
          },
          "ts": {
            "format": "date-time",
            "description": "Track timestamp in ISO8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "launchTime": {
            "format": "date-time",
            "description": "Missile launch timestamp in ISO8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "impactTime": {
            "format": "date-time",
            "description": "Missile impact timestamp in ISO8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "ftnMsgTs": {
            "format": "date-time",
            "description": "The message timestamp that the ftn track position was recorded, in ISO 8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "ftn": {
            "description": "An ftn used to associate information and directives with the track.",
            "maxLength": 32,
            "type": "string",
            "example": "FTN"
          },
          "ftnCmd": {
            "description": "The name of the Command reporting the Force Over-The-Horizon Track Coordinator (FOTC) track number.",
            "maxLength": 18,
            "type": "string",
            "example": "TRUETT"
          },
          "rtnMsgTs": {
            "description": "The message timestamp that the reference track position was recorded, in ISO 8601 UTC format with microsecond precision. The 'rtnMsgTs' and 'rtn' arrays must match in size.",
            "type": "array",
            "items": {
              "format": "date-time",
              "type": "string"
            },
            "example": [
              "2021-02-25T12:00:00.123456Z"
            ]
          },
          "rtn": {
            "description": "A Reference Track Number used to associate information and directives with the track.  Referenced, but not constrained to, MIL-STD-6016F Reference Track Number. The 'rtnMsgTs' and 'rtn' arrays must match in size.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ex-a"
            ]
          },
          "rtnTrkState": {
            "description": "Value representing the state of the Received Track.",
            "maxLength": 16,
            "type": "string",
            "example": "Local_RTN"
          },
          "rtnCmd": {
            "description": "The name of the Command reporting the Received Track Number (RTN).",
            "maxLength": 8,
            "type": "string",
            "example": "YORKTOWN"
          },
          "sen": {
            "description": "Id/name of sensor providing the track data.",
            "maxLength": 32,
            "type": "string",
            "example": "OTH"
          },
          "rptChxref": {
            "description": "Source cross-reference code for the Command that originated the track report.",
            "maxLength": 18,
            "type": "string",
            "example": "INT"
          },
          "rptArchived": {
            "description": "Flag indicating whether this track is archived.",
            "type": "boolean",
            "example": false
          },
          "selfReport": {
            "description": "Flag indicating that this track is self reported.",
            "type": "boolean",
            "example": false
          },
          "mil2525Bstr": {
            "description": "The MIL-STD-2525B symbology code that applies to the subject of this track.",
            "maxLength": 16,
            "type": "string",
            "example": "SHP*S----------"
          },
          "trnspdrId": {
            "description": "Transponder ID for the track.  This does not correspond to the UDL transponder schema.",
            "maxLength": 61,
            "type": "string",
            "example": "11"
          },
          "trnspdrType": {
            "description": "Transponder type for the track.",
            "maxLength": 51,
            "type": "string",
            "example": "AFTS"
          },
          "emitterName": {
            "description": "Radar name of the sensor tracking this object (e.g., RAY1500, SPN-43, HEADNET).",
            "maxLength": 16,
            "type": "string",
            "example": "RAY1500"
          },
          "infoSource": {
            "description": "Source code for source of information used to detect track.",
            "maxLength": 64,
            "type": "string",
            "example": "S1"
          },
          "boosting": {
            "description": "Flag indicating that the missile is currently in a state of boosting, if reporting a missile track.",
            "type": "boolean",
            "example": false
          },
          "freq": {
            "format": "double",
            "description": "Frequency, in hertz, for the signature report.",
            "type": "number",
            "example": 63.65
          },
          "maxFreq": {
            "format": "double",
            "description": "Maximum frequency, in hertz, reported for this acoustic track.",
            "type": "number",
            "example": 10324.53
          },
          "harmonics": {
            "description": "List of harmonics of the signature report in descending order of predominance using 1-2 digit combinations separated by commas, e.g., 8,12,4. (1-22NS).",
            "maxLength": 24,
            "type": "string",
            "example": "8,12,4"
          },
          "pri": {
            "format": "double",
            "description": "Pulse repetition interval of the emitter, measured in microseconds.  The interval between the start of one pulse and the start of another.",
            "type": "number",
            "example": 56657.2238
          },
          "prf": {
            "format": "double",
            "description": "Pulse repetition frequency of the emitter, measured in pulses per second.  PRF is the number of pulses transmitted per second. This is the reciprocal of the pri value.",
            "type": "number",
            "example": 17.65
          },
          "pw": {
            "format": "double",
            "description": "Pulse width of the emitter, measured in microseconds.  This is the duration of the pulse.",
            "type": "number",
            "example": 1347.45
          },
          "scanType": {
            "description": "Type of radar scan.",
            "maxLength": 5,
            "type": "string",
            "example": "UNK"
          },
          "scanRate": {
            "format": "double",
            "description": "Scan rate of the emitter, measured in seconds per rotation (SPR).",
            "type": "number",
            "example": 12.01
          },
          "scn": {
            "format": "int32",
            "description": "The Sequential Contact Number (SCN) for this track.",
            "type": "integer",
            "example": 1474305
          },
          "cI": {
            "description": "Correlation Index; reference code for the site that originally reported the track.",
            "maxLength": 3,
            "type": "string",
            "example": "BB"
          },
          "angElev": {
            "format": "double",
            "description": "The angle formed between the line of sight of the observer and the horizon, in degrees.  The angular range is -90 to 90, with negative values representing angle of depression.",
            "type": "number",
            "example": 15.2
          },
          "lat": {
            "format": "double",
            "description": "WGS-84 latitude of the track object, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 19.88550102
          },
          "lon": {
            "format": "double",
            "description": "WGS-84 longitude of the track object, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 46.74596844
          },
          "launchLat": {
            "format": "double",
            "description": "WGS-84 latitude of the missile launch point, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 19.88550102
          },
          "launchLon": {
            "format": "double",
            "description": "WGS-84 longitude of the missile launch point, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": 46.74550102
          },
          "impactLat": {
            "format": "double",
            "description": "WGS-84 latitude of the missile impact point, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 19.88550102
          },
          "impactLon": {
            "format": "double",
            "description": "WGS-84 longitude of the missile impact point, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": 46.74550102
          },
          "polarSingLocLat": {
            "format": "double",
            "description": "WGS-84 azimuth corridor reference point latitude, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 19.88550102
          },
          "polarSingLocLon": {
            "format": "double",
            "description": "WGS-84 azimuth corridor reference point longitude, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": 46.74550102
          },
          "azCorrCenterLine": {
            "format": "double",
            "description": "The azimuth corridor centerline angle measured in degrees clockwise from true north, of the center line of an azimuth corridor. The center line extends from the referenced corridor origin location.",
            "type": "number",
            "example": 12.876
          },
          "azCorrArcWidth": {
            "format": "double",
            "description": "Azimuth corridor arc distance measured in meters from reference point of azimuth corridor to far edge of bounded azimuth corridor wedge, measured along azimuth corridor center line.",
            "type": "number",
            "example": 71.76
          },
          "errSemiIntAxis": {
            "format": "double",
            "description": "The error in the semi-intermediate axis.  The semi-intermediate axis is intermediate in length between semi-major and semi-minor axes. This field is doubled and centered on intersection of area semi-major axis and area semi-minor axis at 90 degrees to the plane defined by those axes. For these shapes, the volume is defined as having a 50-percent probability of containing the true location of the referenced entity.",
            "type": "number",
            "example": 7010.882
          },
          "errAreaOrient": {
            "format": "double",
            "description": "The error in the Area Orientation.  Area Orientation is the angle or roll in degrees, between area semi-minor axis and plane defined by local vertical and area semi-major axis. When reported without major and minor axis, it is angle between an axis perpendicular to a 2D true north axis and plane defined by local vertical and a 2D true north axis.",
            "type": "number",
            "example": 69.6
          },
          "errSemiMajElev": {
            "format": "double",
            "description": "The error in the Semi-major elevation axis. Semi-major elevation axis is the elevation of the cubical, 3D rectangular, cylindrical, 3D ellipsoidal, or spherical semi-major axis, in degrees, measured from local horizontal.",
            "type": "number",
            "example": 168.8
          },
          "errGeoAreaSwitch": {
            "description": "Geometric area switch identifies the 3D shape of the error volume by providing the 2D shape for the 3D plane. The 3D plane is the plane orthogonal to the area semi-major axis and area semi-minor axis. Depending on whether the 2D plane is reported as an error ellipse 2D or as an error rectangle 2D, this switch reports a complete error volume that is cubical, 3D rectangular, cylindrical, 3D ellipsoidal, or spherical.\n\n0 - SWITCH_TYPE_UNKNOWN\n\n1 - SQUARE_RECTANGLE\n\n2 - CIRCLE_ELLIPSE.\n\n",
            "maxLength": 24,
            "type": "string",
            "example": "CIRCLE_ELLIPSE"
          },
          "burnoutAlt": {
            "format": "double",
            "description": "Track point burnout altitude relative to WGS-84 ellipsoid, in meters.",
            "type": "number",
            "example": 30567.452
          },
          "tesEventId": {
            "description": "Threat Event System Track ID.",
            "maxLength": 8,
            "type": "string",
            "example": "6217"
          },
          "spd": {
            "format": "double",
            "description": "Track object speed, in meters/sec.",
            "type": "number",
            "example": 15.03443
          },
          "avgSpd": {
            "format": "double",
            "description": "The average speed, in kilometers/hour, calculated for the subject during the latest voyage/excursion.",
            "type": "number",
            "example": 18.25
          },
          "tol": {
            "format": "double",
            "description": "Motion model Time On Leg in hours.",
            "type": "number",
            "example": 4.1
          },
          "alt": {
            "format": "double",
            "description": "Track point altitude relative to WGS-84 ellipsoid, in meters. Positive values indicate a track object height above ellipsoid, and negative values indicate a track object below ellipsoid, applicable to the depth estimate for a subsurface track.",
            "type": "number",
            "example": 153.01
          },
          "hdng": {
            "format": "double",
            "description": "Track object heading, in degrees clockwise from true north.",
            "type": "number",
            "example": 19.7
          },
          "course": {
            "format": "double",
            "description": "The track object course-over-ground, in degrees clockwise from true North at the object location (0-360 degrees).",
            "type": "number",
            "example": 4.3580153
          },
          "propRPM": {
            "format": "double",
            "description": "The number of propeller revolutions per minute for a submarine or ship.",
            "type": "number",
            "example": 8.2
          },
          "tpk": {
            "format": "double",
            "description": "The number of turns of the vessel propellers per knot of forward motion.",
            "type": "number",
            "example": 2.65
          },
          "coopLocInd": {
            "description": "The Cooperative Location Indicator specifies whether the reported entity location was derived using reported locations from sensors on more than one platform.\n\n0 - COOPERATIVE_LOCATOR_NONE\n\n1 - SINGLE_PLATFORM\n\n2 - FRAGMENT\n\n3 - COOPERATIVE.\n\n",
            "maxLength": 32,
            "type": "string",
            "example": "COOPERATIVE"
          },
          "maneuverInd": {
            "description": "The manuevering indicator specifying the missile boost phase.\n\n0 - POST_BOOST_NONE\n\n1 - POST_BOOST_MANUEVER\n\n2 - POST_BOOST_COMPLETE_MANUEVER.\n\n",
            "maxLength": 32,
            "type": "string",
            "example": "POST_BOOST_NONE"
          },
          "launchAouType": {
            "description": "The launch location Area of Uncertainty (AoU) type (BEARING, ELLIPSE, OTHER) definition. This type defines the elements of the launchAouData array and is required if launchAouData is not null. See the launchAouData field definition for specific information.",
            "maxLength": 20,
            "type": "string",
            "example": "ELLIPSE"
          },
          "launchAouData": {
            "description": "Three element array representing the launch location Area of Uncertainty (AoU). The array element definitions and units are type specific depending on the launchAouType specified in this record:\n\n ELLIPSE:\n\n   brg - orientation in degrees of the ellipse\n\n   a1 - semi-major axis in meters\n\n   a2 - semi-minor axis in meters\n\n BEARING (BEARING BOX or MTST BEARING BOX):\n\n   brg - orientation in degrees of the bearing box\n\n   a1 - length of bearing box in meters\n\n   a2 - half-width of bearing box in meters\n\n OTHER (All other type values):\n\n   brg - line of bearing in degrees true\n\n   a1 - bearing error in degrees\n\n   a2 - estimated range in meters.\n\n",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              34.3,
              26.5,
              1.2
            ]
          },
          "impactAouType": {
            "description": "The impact point Area of Uncertainty (AoU) type (BEARING, ELLIPSE, OTHER) definition. This type defines the elements of the impactAouData array and is required if impactAouData is not null. See the impactAouData field definition for specific information.",
            "maxLength": 20,
            "type": "string",
            "example": "ELLIPSE"
          },
          "impactAouData": {
            "description": "Three element array representing the impact point Area of Uncertainty (AoU). The array element definitions and units are type specific depending on the impactAouType specified in this record:\n\n ELLIPSE:\n\n   brg - orientation in degrees of the ellipse\n\n   a1 - semi-major axis in meters\n\n   a2 - semi-minor axis in meters\n\n BEARING (BEARING BOX or MTST BEARING BOX):\n\n   brg - orientation in degrees of the bearing box\n\n   a1 - length of bearing box in meters\n\n   a2 - half-width of bearing box in meters\n\n OTHER (All other type values):\n\n   brg - line of bearing in degrees true\n\n   a1 - bearing error in degrees\n\n   a2 - estimated range in meters.\n\n",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              34.3,
              26.5,
              1.2
            ]
          },
          "aouRptType": {
            "description": "The track Area of Uncertainty (AoU) type (BEARING, ELLIPSE, OTHER) definition. This type defines the elements of the aouRptData array and is required if aouRptData is not null. See the aouRptData field definition for specific information.",
            "maxLength": 20,
            "type": "string",
            "example": "ELLIPSE"
          },
          "aouRptData": {
            "description": "Three element array representing an Area of Uncertainty (AoU). The array element definitions and units are type specific depending on the aouRptType specified in this record:\n\n ELLIPSE:\n\n   brg - orientation in degrees of the ellipse\n\n   a1 - semi-major axis in meters\n\n   a2 - semi-minor axis in meters\n\n BEARING (BEARING BOX or MTST BEARING BOX):\n\n   brg - orientation in degrees of the bearing box\n\n   a1 - length of bearing box in meters\n\n   a2 - half-width of bearing box in meters\n\n OTHER (All other type values):\n\n   brg - line of bearing in degrees true\n\n   a1 - bearing error in degrees\n\n   a2 - estimated range in meters.\n\n",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              34.3,
              26.5,
              1.2
            ]
          },
          "ecefPos": {
            "description": "Track object location in ECEF [x, y, z], meters. When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.35,
              3.42
            ]
          },
          "ecefVel": {
            "description": "Track object velocity in ECEF [x', y', z'], meters/sec. When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.35,
              3.42
            ]
          },
          "containment": {
            "format": "double",
            "description": "The Area Of Uncertainty (AOU) percentage (0 - 100) containment value. The percentage of time (90%) that the estimated area of uncertainty will cover the true position of the track object.",
            "type": "number",
            "example": 97
          },
          "cpa": {
            "format": "double",
            "description": "The distance, in meters, of the closest point of approach between this track to the master reference track.",
            "type": "number",
            "example": 500
          },
          "tcpa": {
            "format": "date-time",
            "description": "The time, in ISO 8601 UTC format with millisecond precision, of the  closest point of approach between this track and the master reference track.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123Z"
          },
          "navStatus": {
            "description": "The AIS Navigational Status of the vessel (e.g. Underway Using Engine, Moored, Aground, etc.). Intended as, but not constrained to, the USCG NAVCEN navigation status definitions. Users should refer to USCG Navigation Center documentation for specific definitions associated with navigation status. USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.",
            "maxLength": 64,
            "type": "string",
            "example": "Underway Using Engine"
          },
          "posDeviceType": {
            "description": "The type of electronic position fixing device (e.g. GPS, GLONASS, etc.). Intended as, but not constrained to, the USCG NAVCEN electronic position fixing device definitions. Users should refer to USCG Navigation Center documentation for specific device type information. USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.",
            "maxLength": 24,
            "type": "string",
            "example": "GPS"
          },
          "aton": {
            "description": "Type of Aid to Navigation. Intended as, but not constrained to, the USCG NAVCEN  aids to navigation. Users should refer to USCG Navigation Center documentation for specific device type information. USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.",
            "maxLength": 64,
            "type": "string",
            "example": "Cardinal Mark N"
          },
          "offPosInd": {
            "description": "Indicator position (OFF, ON, UNK) for optional floating navigational aids only.",
            "maxLength": 3,
            "type": "string",
            "example": "ON"
          },
          "antennaRefDimensions": {
            "description": "The reference dimensions of the vessel, reported as [A, B, C, D], in meters. Where the array values represent the distance fore (A), aft (B), to port (C), and to starboard (D) of the navigation antenna. Array with values A = C = 0 and B, D > 0 indicate the length (B) and width (D) of the vessel without antenna position reference.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              50.1,
              50.1,
              20.1,
              20.1
            ]
          },
          "shipClass": {
            "description": "The common name for a group of ships with similar design, usually named for the first vessel of the class.",
            "maxLength": 64,
            "type": "string",
            "example": "Nimitz"
          },
          "imon": {
            "format": "int32",
            "description": "The International Maritime Organization Number of the vessel. IMON is a seven-digit number that uniquely identifies the vessel.",
            "type": "integer",
            "example": 9015462
          },
          "mmsi": {
            "format": "int32",
            "description": "The Maritime Mobile Service Identity of the vessel. MMSI is a nine-digit number that identifies the transmitter station of the vessel.",
            "type": "integer",
            "example": 304010417
          },
          "draught": {
            "format": "double",
            "description": "The maximum static draught, in meters, of the vessel according to the AIS transmission.",
            "type": "number",
            "example": 21.1
          },
          "length": {
            "format": "double",
            "description": "The overall length of the vessel, in meters. A value of 511 indicates a vessel length of 511 meters or greater.",
            "type": "number",
            "example": 511.1
          },
          "width": {
            "format": "double",
            "description": "The breadth of the vessel, in meters. A value of 63 indicates a vessel breadth of 63 meters or greater.",
            "type": "number",
            "example": 24.1
          },
          "cargoType": {
            "description": "The reported cargo type. Intended as, but not constrained to, the USCG NAVCEN AIS cargo definitions. Users should refer to USCG Navigation Center documentation for specific definitions associated with ship and cargo types. USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.",
            "maxLength": 48,
            "type": "string",
            "example": "Freight"
          },
          "appGrp": {
            "description": "Appearance group code.\n\nGP1 - Superstructure exceeds 1/3 of ship length.\n\nGP2 - Superstructure less than 1/3 of ship length.\n\nGP3 - Stack aft.",
            "maxLength": 7,
            "type": "string",
            "example": "GP1"
          },
          "hullProf": {
            "description": "Hull profile code. Based on GCCS-J hull profiles.\n\nFLUSH           No breaks in Hull Profile.\n\nRAISED 1        Hull Profile shows distinct raised area at bow. Remainder of deck is flush.\n\nRAISED 2        Hull Profile shows distinct raised area amidships. Bow and stern are flush.\n\nRAISED 3        Hull Profile shows distinct raised area at stern. Remainder of deck is flush.\n\nRAISED 1-2-3    Distinct raised areas at bow, midships, and stern with breaks between each raise.\n\nRAISED 1-2      Raised area at bow and midships with break between.\n\nRAISED 1-3      Raised area at bow and stern with break between.\n\nRAISED 12       Continuous raised area encompassing both bow and midships.\n\nRAISED 23       Continuous raised area encompassing midships and stern.\n\nRAISED 12-3     Raised areas at bow, midships and stern. Bow and midship raises are continuous. Break between midship and stern raises.\n\nRAISED 1-23     Raised areas at bow, midships, and stern. Midship and stern raises are continuous with break between bow and midship raises.\n\nRAISED 1-L2-3   Raised areas at bow, midships, and stern with break between each raise. Midships raise is longer than that associated with raised 1-2-3.",
            "maxLength": 16,
            "type": "string",
            "example": "Raised 1-23"
          },
          "propType": {
            "description": "The type of propulsion employed by the track object (Diesel, Nuclear).",
            "maxLength": 6,
            "type": "string",
            "example": "Diesel"
          },
          "numBlades": {
            "format": "int32",
            "description": "The number of blades per shaft of the track object.  Applicable for maritime vessels.",
            "type": "integer",
            "example": 4
          },
          "numShafts": {
            "format": "int32",
            "description": "The number of shafts on the track object.  Applicable for maritime vessels.",
            "type": "integer",
            "example": 3
          },
          "sternType": {
            "description": "The stern type code (Counter, Cruiser) associated with the track object.",
            "maxLength": 16,
            "type": "string",
            "example": "Cruiser"
          },
          "vslWt": {
            "format": "double",
            "description": "The weight, in tons, of the vessel associated with this track.",
            "type": "number",
            "example": 3423.76
          },
          "arrTime": {
            "format": "date-time",
            "description": "The Arrival Time of the vessel at the destination, in ISO 8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "arrFlag": {
            "description": "The flag of the arrival port.",
            "maxLength": 36,
            "type": "string",
            "example": "USA"
          },
          "arrCargo": {
            "description": "The reported arrival cargo type. Intended as, but not constrained to, the USCG NAVCEN AIS cargo definitions. Users should refer to USCG Navigation Center documentation for specific definitions associated with ship and cargo types. USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.",
            "maxLength": 48,
            "type": "string",
            "example": "Freight"
          },
          "arrPort": {
            "description": "The Arrival Port of the vessel according to the AIS transmission.",
            "maxLength": 20,
            "type": "string",
            "example": "Lanshan"
          },
          "depPort": {
            "description": "The Departure Port of the vessel according to the AIS transmission.",
            "maxLength": 20,
            "type": "string",
            "example": "Lanshan"
          },
          "depFlag": {
            "description": "The flag of the departure port.",
            "maxLength": 36,
            "type": "string",
            "example": "USA"
          },
          "depCargo": {
            "description": "The reported departure cargo type. Intended as, but not constrained to, the USCG NAVCEN AIS cargo definitions. Users should refer to USCG Navigation Center documentation for specific definitions associated with ship and cargo types. USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.",
            "maxLength": 48,
            "type": "string",
            "example": "Freight"
          },
          "desFlag": {
            "description": "The flag of the destination port.",
            "maxLength": 36,
            "type": "string",
            "example": "USA"
          },
          "desCargo": {
            "description": "The reported destination cargo type. Intended as, but not constrained to, the USCG NAVCEN AIS cargo definitions. Users should refer to USCG Navigation Center documentation for specific definitions associated with ship and cargo types. USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.",
            "maxLength": 48,
            "type": "string",
            "example": "Freight"
          },
          "destination": {
            "description": "The destination of the vessel according to the AIS transmission.",
            "maxLength": 20,
            "type": "string",
            "example": "USCLE"
          },
          "eta": {
            "format": "date-time",
            "description": "The Estimated Time of Arrival of the vessel at the destination port, in ISO 8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "etd": {
            "format": "date-time",
            "description": "The Estimated Time of Departure of the vessel from the departure port (depPort), according to Marine Traffic calculations, in ISO 8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "iff": {
            "description": "A text amplifier displaying IFF/SIF/AIS Identification modes and codes.",
            "maxLength": 64,
            "type": "string",
            "example": "ID Mode"
          },
          "emgInd": {
            "description": "Flag indicating that the track object has an emergency.",
            "type": "boolean",
            "example": false
          },
          "dropPtInd": {
            "description": "The drop-point indicator setting.",
            "type": "boolean",
            "example": false
          },
          "reinforced": {
            "description": "Flag indicating that this track represents a reinforced object or group.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "reduced": {
            "description": "Flag indicating for the track represents a reduced force object or group.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "hq": {
            "description": "Flag indicating that this track represents a headquarters object.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "dummy": {
            "description": "Flag indicating that this track represents a dummy object or group.  Identifies offensive or defensive units, equipment, and/or installations intended to draw the enemy's attention away from the area of the main attack.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "taskForce": {
            "description": "Flag indicating that this track represents a task force.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "feint": {
            "description": "Flag indicating that this track represents a feint object or group.  Identifies offensive or defensive units, equipment, and/or installations intended to draw the enemy's attention away from the area of the main attack.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "installation": {
            "description": "Flag indicating that this track represents an installation.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "staffCmts": {
            "description": "A text amplifier for units, equipment and installations; content is implementation specific.",
            "maxLength": 256,
            "type": "string",
            "example": "Staff Comments"
          },
          "addInfo": {
            "description": "A text amplifier for units, equipment and installations; content is implementation specific.",
            "maxLength": 256,
            "type": "string",
            "example": "Additional information"
          },
          "evalRating": {
            "description": "A text amplifier code for units, equipment, and installations that consists of a one-letter reliability rating and a one-number credibility rating based on the following definitions of each:\n\n Reliability Ratings:\n\n  A-completely reliable\n\n  B-usually reliable\n\n  C-fairly reliable\n\n  D-not usually reliable\n\n  E-unreliable\n\n  F-reliability cannot be judged\n\n Credibility Ratings:\n\n  1-confirmed by other sources\n\n  2-probably true\n\n  3-possibly true\n\n  4-doubtfully true\n\n  5-improbable\n\n  6-truth cannot be judged.\n\n",
            "maxLength": 2,
            "type": "string",
            "example": "A1"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database.",
            "type": "string",
            "readOnly": true,
            "example": "2021-02-25T12:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          }
        }
      },
      "TrackDetails_Ingest": {
        "description": "These services provide operations for querying of all available track details and amplifying track data. A track is a position and optionally a heading/velocity of an object such as an aircraft, marine vessel, etc at a particular timestamp. It also includes optional information regarding the identity/type of the target object and other amplifying object data, if known.",
        "required": [
          "classificationMarking",
          "ts",
          "lat",
          "lon",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "TRACK-DETAILS-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "env": {
            "description": "The track environment type (AIR, LAND, SPACE, SUBSURFACE, SURFACE, UNKNOWN):\n\n AIR: Between sea level and the Kármán line, which has an altitude of 100 kilometers (62 miles).\n\n LAND: On the surface of dry land.\n\n SPACE: Above the Kármán line, which has an altitude of 100 kilometers (62 miles).\n\n SURFACE: On the surface of a body of water.\n\n SUBSURFACE: Below the surface of a body of water.\n\n UNKNOWN: Environment is not known.\n\n",
            "maxLength": 16,
            "enum": [
              "AIR",
              "LAND",
              "SPACE",
              "SURFACE",
              "SUBSURFACE",
              "UNKNOWN"
            ],
            "type": "string",
            "example": "LAND"
          },
          "msgType": {
            "description": "Optional message type designation.",
            "maxLength": 32,
            "type": "string",
            "example": "PLATFORM"
          },
          "hullNum": {
            "description": "The vessel hull number designation of this maritime vessel.  The hull number is a 1-6 character alphanumeric entry assigned to a ship and painted on the hull.",
            "maxLength": 7,
            "type": "string",
            "example": "A30081"
          },
          "pif": {
            "description": "The Pseudo Identification Feature (PIF) number is a four digit code that provides an exact ID for the ship or aircraft. Friendly military only.",
            "maxLength": 5,
            "type": "string",
            "example": "0137"
          },
          "sconum": {
            "description": "The Ship Control Number (SCONUM) is a naval vessel identification number (alphanumeric code) assigned by the Office of Naval Intelligence. SCONUM is sometimes referred to as NOIC ID. SCONUMs are typically of the form A#####, where A is an alpha character and # is numerical.",
            "maxLength": 36,
            "type": "string",
            "example": "B45524"
          },
          "ntds": {
            "description": "The Naval Tactical Data System (NTDS) track number assigned to this track.",
            "maxLength": 6,
            "type": "string",
            "example": "ZZ777"
          },
          "disId": {
            "description": "The Intel Discrete Identifier (IDI) code assigned to this track.  The IDI is a four-digit code representing hostile or unknown tracks.",
            "maxLength": 5,
            "type": "string",
            "example": "7670"
          },
          "midbCat": {
            "description": "The category code that represents the associated facility purpose within the target system.  This value is the category code in the MIDB (Modernized Intelligence Database).",
            "maxLength": 6,
            "type": "string",
            "example": "20345"
          },
          "beNumber": {
            "description": "The Basic Encyclopedia (BE) number associated with this installation or area.",
            "maxLength": 10,
            "type": "string",
            "example": "ENC-123"
          },
          "oSuffix": {
            "description": "The O-suffix associated with this facility.  The O-suffix is a five-character alpha/numeric system used to identify a facility, or demographic area, within an installation. The Installation Basic Encyclopedia (beNumber), in conjunction with the O-suffix, uniquely identifies the facility within the Modernized Integrated Database (MIDB).  The Installation beNumber and oSuffix are also used in conjunction with the midbCat code to classify the function or purpose of the facility.",
            "maxLength": 6,
            "type": "string",
            "example": "AA125"
          },
          "pin": {
            "description": "This value represents the site number of a specific electronic site or its associated equipment.",
            "maxLength": 9,
            "type": "string",
            "example": "E12345012"
          },
          "lostTrkInd": {
            "description": "Flag indicating whether the missile is considered lost, if reporting a missile track.",
            "type": "boolean",
            "example": false
          },
          "muidSrcTrk": {
            "description": "Track ID for the source of the Missile-Unique Identifier (MUID), if reporting a missile track.",
            "maxLength": 36,
            "type": "string",
            "example": "MUID-SRC-ID"
          },
          "muidSrc": {
            "description": "Source of the Missile-Unique Identifier (MUID), if reporting a missile track.",
            "maxLength": 36,
            "type": "string",
            "example": "MUID-SRC"
          },
          "mslStatus": {
            "description": "The status of the missile track in this record, if reporting a missile track (e.g. AT LAUNCH, AT OBSERVATION, FLYING, IMPACTED, LOST, STALE, DEBRIS).",
            "maxLength": 32,
            "type": "string",
            "example": "AT LAUNCH"
          },
          "trkConf": {
            "format": "double",
            "description": "Overall track confidence estimate (not standardized, but typically a value between 0 and 1, with 0 indicating lowest confidence).",
            "type": "number",
            "example": 0.95
          },
          "trkQual": {
            "format": "int32",
            "description": "Track Quality is reported as an integer from 0-15. Track Quality specifies the reliability of the positional information of a reported track; Higher values indicate higher track quality, i.e., lower errors in reported position.",
            "type": "integer",
            "example": 1
          },
          "alert": {
            "description": "A track may be designated as an alert track with the following designations:\n\nHIT - High Interest Track\n\nTGT - Target\n\nSUS - Suspect Carrier\n\nNSP - Cleared Suspect\n\nIf alert is null, the track is assumed to be of non-alert status.\n\n",
            "maxLength": 3,
            "type": "string",
            "example": "TGT"
          },
          "origXref": {
            "description": "Original source cross-reference code for the Command that originated the report.",
            "maxLength": 5,
            "type": "string",
            "example": "INT"
          },
          "elnot1": {
            "description": "Primary ELINT Notification (ELNOT), a five character identifier assigned to each non-communication emission for collection and reporting purposes.  This five-digit field begins with an alpha character, followed by three numbers, ending with another alpha character.",
            "maxLength": 5,
            "type": "string",
            "example": "A123A"
          },
          "elnot2": {
            "description": "Secondary ELINT Notification (ELNOT), a five character identifier assigned to each non-communication emission for collection and reporting purposes.  This five-digit field begins with an alpha character, followed by three numbers, ending with another alpha character.",
            "maxLength": 5,
            "type": "string",
            "example": "A123B"
          },
          "objIdent": {
            "description": "The estimated identity of the track object (ASSUMED FRIEND, FRIEND, HOSTILE, NEUTRAL, PENDING, SUSPECT, UNKNOWN):\n\n ASSUMED FRIEND: Track assumed to be a friend due to the object characteristics, behavior, and/or origin.\n\n FRIEND: Track object supporting friendly forces and belonging to a declared friendly nation or entity.\n\n HOSTILE: Track object belonging to an opposing nation, party, group, or entity deemed to contribute to a threat to friendly forces or their mission due to its behavior, characteristics, nationality, or origin.\n\n NEUTRAL: Track object whose characteristics, behavior, nationality, and/or origin indicate that it is neither supporting nor opposing friendly forces or their mission.\n\n PENDING: Track object which has not been evaluated.\n\n SUSPECT: Track object deemed potentially hostile due to the object characteristics, behavior, nationality, and/or origin.\n\n UNKNOWN: Track object which has been evaluated and does not meet criteria for any standard identity.\n\n",
            "maxLength": 32,
            "enum": [
              "ASSUMED FRIEND",
              "FRIEND",
              "HOSTILE",
              "NEUTRAL",
              "PENDING",
              "SUSPECT",
              "UNKNOWN"
            ],
            "type": "string",
            "example": "FRIEND"
          },
          "objType": {
            "description": "The generic classification of the track object/group (e.g., BALLISTIC, HELICOPTER, TRACKED, WATERCRAFT, WHEELED, etc.). Referenced, but not constrained to, NATO STANAG 4676 object type classifications.",
            "maxLength": 32,
            "type": "string",
            "example": "TRACKED"
          },
          "objPlat": {
            "description": "The object platform type is intended as, but not constrained to, MIL-STD-6016 environment dependent platform type designations. The platform type can be reported as either a combination of the code and environment (e.g. 14/LAND) or as the descriptive representations (e.g. COMBAT VEHICLE), which are equivalent.  For cases in which no MIl-STD-6016 designation exists, a general description can be used (e.g. SATELLITE).",
            "maxLength": 32,
            "type": "string",
            "example": "WEAPON"
          },
          "objAct": {
            "description": "The activity in which the track object is engaged. Intended as, but not constrained to, MIL-STD-6016 environment dependent activity designations. The activity can be reported as either a combination of the code and environment (e.g. 65/AIR) or as the descriptive enumeration (e.g. DIVERTING), which are equivalent.  For cases in which no MIl-STD-6016 designation exists, a general description can be used (e.g. ANTISPACE WARFARE).",
            "maxLength": 32,
            "type": "string",
            "example": "HOLDING"
          },
          "objNat": {
            "description": "Nationality of the tracked object.",
            "maxLength": 24,
            "type": "string",
            "example": "USA"
          },
          "name": {
            "description": "Track name.",
            "maxLength": 48,
            "type": "string",
            "example": "TRACK-NAME"
          },
          "shortName": {
            "description": "Abbreviated track name.",
            "maxLength": 11,
            "type": "string",
            "example": "COMMSCHECK"
          },
          "trkId": {
            "description": "UUID identifying the track, which should remain the same on subsequent tracks of the same object.",
            "maxLength": 36,
            "type": "string",
            "example": "trkId"
          },
          "trkNum": {
            "description": "The track number (TN) of a surveillance entity. Intended as, but not constrained to, the J-series track number encoded as five character alpha-numeric characters. Users should refer to J-series documentation for specific TN definitions.",
            "maxLength": 32,
            "type": "string",
            "example": "trkNum"
          },
          "trkScope": {
            "description": "Value Indicating the scope of this track:\n1 - TERMINAL  (Terminal) - available only on the workstation where they were created.\n2 - LOCAL  (Local) - available only on workstations in the local area network\n3 - OTH  (Over the Horizon) - available to everyone.\n",
            "maxLength": 12,
            "type": "string",
            "example": "OTH"
          },
          "sourceUid": {
            "description": "The unique identifier of the source node.",
            "maxLength": 4,
            "type": "string",
            "example": "MCS"
          },
          "callSign": {
            "description": "The call sign currently assigned to this track object.",
            "maxLength": 24,
            "type": "string",
            "example": "Charlie"
          },
          "identAmp": {
            "description": "Additional track object identity/status information, typically used for EXERCISE identity amplification (FAKER, JOKER, KILO, TRAVELLER, ZOMBIE):\n\n FAKER: Friendly track, object, or entity acting as an exercise hostile.\n\n JOKER: Friendly track, object, or entity acting as an exercise suspect.\n\n KILO: Friendly high-value object.\n\n TRAVELLER: Suspect land or surface track following a recognized traffic route.\n\n ZOMBIE: Suspect track, object, or entity of special interest.\n\n",
            "maxLength": 32,
            "type": "string",
            "example": "JOKER"
          },
          "spaceAmp": {
            "description": "Space amplification indicates additional information on the space environment object being reported (e.g. DEBRIS, FUEL-AIR EXPLOSIVE, NUCLEAR WARHEAD).",
            "maxLength": 32,
            "type": "string",
            "example": "NUCLEAR WARHEAD"
          },
          "spaceAmpConf": {
            "format": "int32",
            "description": "Confidence level of the amplifying characteristics.  Values range from 0 to 6, with 0 indicating the lowest confidence and 6 indicating the highest.",
            "type": "integer",
            "example": 6
          },
          "spaceSpecType": {
            "description": "Specific type of point or track with an environment of space.",
            "maxLength": 32,
            "type": "string",
            "example": "SS-21_MOD_2_CRBM"
          },
          "acftSubType": {
            "description": "Subtype is a finer grain categorization of missile types. Examples include but are not limited to SRBM, MRBM, IRBM, LRBM, ICBM, SLBM:\n\nSRBM - Short-Range Ballistic Missile\n\nMRBM - Medium-Range Ballistic Missile\n\nIRBM - Intermediate-Range Ballistic Missile\n\nLRBM - Long-Range Ballistic Missile\n\nICBM - Intercontinental Ballistic Missile\n\nSLBM - Submarine-Launched Ballistic Missile.\n\n",
            "maxLength": 16,
            "type": "string",
            "example": "SLBM"
          },
          "ts": {
            "format": "date-time",
            "description": "Track timestamp in ISO8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "launchTime": {
            "format": "date-time",
            "description": "Missile launch timestamp in ISO8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "impactTime": {
            "format": "date-time",
            "description": "Missile impact timestamp in ISO8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "ftnMsgTs": {
            "format": "date-time",
            "description": "The message timestamp that the ftn track position was recorded, in ISO 8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "ftn": {
            "description": "An ftn used to associate information and directives with the track.",
            "maxLength": 32,
            "type": "string",
            "example": "FTN"
          },
          "ftnCmd": {
            "description": "The name of the Command reporting the Force Over-The-Horizon Track Coordinator (FOTC) track number.",
            "maxLength": 18,
            "type": "string",
            "example": "TRUETT"
          },
          "rtnMsgTs": {
            "description": "The message timestamp that the reference track position was recorded, in ISO 8601 UTC format with microsecond precision. The 'rtnMsgTs' and 'rtn' arrays must match in size.",
            "type": "array",
            "items": {
              "format": "date-time",
              "type": "string"
            },
            "example": [
              "2021-02-25T12:00:00.123456Z"
            ]
          },
          "rtn": {
            "description": "A Reference Track Number used to associate information and directives with the track.  Referenced, but not constrained to, MIL-STD-6016F Reference Track Number. The 'rtnMsgTs' and 'rtn' arrays must match in size.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ex-a"
            ]
          },
          "rtnTrkState": {
            "description": "Value representing the state of the Received Track.",
            "maxLength": 16,
            "type": "string",
            "example": "Local_RTN"
          },
          "rtnCmd": {
            "description": "The name of the Command reporting the Received Track Number (RTN).",
            "maxLength": 8,
            "type": "string",
            "example": "YORKTOWN"
          },
          "sen": {
            "description": "Id/name of sensor providing the track data.",
            "maxLength": 32,
            "type": "string",
            "example": "OTH"
          },
          "rptChxref": {
            "description": "Source cross-reference code for the Command that originated the track report.",
            "maxLength": 18,
            "type": "string",
            "example": "INT"
          },
          "rptArchived": {
            "description": "Flag indicating whether this track is archived.",
            "type": "boolean",
            "example": false
          },
          "selfReport": {
            "description": "Flag indicating that this track is self reported.",
            "type": "boolean",
            "example": false
          },
          "mil2525Bstr": {
            "description": "The MIL-STD-2525B symbology code that applies to the subject of this track.",
            "maxLength": 16,
            "type": "string",
            "example": "SHP*S----------"
          },
          "trnspdrId": {
            "description": "Transponder ID for the track.  This does not correspond to the UDL transponder schema.",
            "maxLength": 61,
            "type": "string",
            "example": "11"
          },
          "trnspdrType": {
            "description": "Transponder type for the track.",
            "maxLength": 51,
            "type": "string",
            "example": "AFTS"
          },
          "emitterName": {
            "description": "Radar name of the sensor tracking this object (e.g., RAY1500, SPN-43, HEADNET).",
            "maxLength": 16,
            "type": "string",
            "example": "RAY1500"
          },
          "infoSource": {
            "description": "Source code for source of information used to detect track.",
            "maxLength": 64,
            "type": "string",
            "example": "S1"
          },
          "boosting": {
            "description": "Flag indicating that the missile is currently in a state of boosting, if reporting a missile track.",
            "type": "boolean",
            "example": false
          },
          "freq": {
            "format": "double",
            "description": "Frequency, in hertz, for the signature report.",
            "type": "number",
            "example": 63.65
          },
          "maxFreq": {
            "format": "double",
            "description": "Maximum frequency, in hertz, reported for this acoustic track.",
            "type": "number",
            "example": 10324.53
          },
          "harmonics": {
            "description": "List of harmonics of the signature report in descending order of predominance using 1-2 digit combinations separated by commas, e.g., 8,12,4. (1-22NS).",
            "maxLength": 24,
            "type": "string",
            "example": "8,12,4"
          },
          "pri": {
            "format": "double",
            "description": "Pulse repetition interval of the emitter, measured in microseconds.  The interval between the start of one pulse and the start of another.",
            "type": "number",
            "example": 56657.2238
          },
          "prf": {
            "format": "double",
            "description": "Pulse repetition frequency of the emitter, measured in pulses per second.  PRF is the number of pulses transmitted per second. This is the reciprocal of the pri value.",
            "type": "number",
            "example": 17.65
          },
          "pw": {
            "format": "double",
            "description": "Pulse width of the emitter, measured in microseconds.  This is the duration of the pulse.",
            "type": "number",
            "example": 1347.45
          },
          "scanType": {
            "description": "Type of radar scan.",
            "maxLength": 5,
            "type": "string",
            "example": "UNK"
          },
          "scanRate": {
            "format": "double",
            "description": "Scan rate of the emitter, measured in seconds per rotation (SPR).",
            "type": "number",
            "example": 12.01
          },
          "scn": {
            "format": "int32",
            "description": "The Sequential Contact Number (SCN) for this track.",
            "type": "integer",
            "example": 1474305
          },
          "cI": {
            "description": "Correlation Index; reference code for the site that originally reported the track.",
            "maxLength": 3,
            "type": "string",
            "example": "BB"
          },
          "angElev": {
            "format": "double",
            "description": "The angle formed between the line of sight of the observer and the horizon, in degrees.  The angular range is -90 to 90, with negative values representing angle of depression.",
            "type": "number",
            "example": 15.2
          },
          "lat": {
            "format": "double",
            "description": "WGS-84 latitude of the track object, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 19.88550102
          },
          "lon": {
            "format": "double",
            "description": "WGS-84 longitude of the track object, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 46.74596844
          },
          "launchLat": {
            "format": "double",
            "description": "WGS-84 latitude of the missile launch point, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 19.88550102
          },
          "launchLon": {
            "format": "double",
            "description": "WGS-84 longitude of the missile launch point, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": 46.74550102
          },
          "impactLat": {
            "format": "double",
            "description": "WGS-84 latitude of the missile impact point, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 19.88550102
          },
          "impactLon": {
            "format": "double",
            "description": "WGS-84 longitude of the missile impact point, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": 46.74550102
          },
          "polarSingLocLat": {
            "format": "double",
            "description": "WGS-84 azimuth corridor reference point latitude, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 19.88550102
          },
          "polarSingLocLon": {
            "format": "double",
            "description": "WGS-84 azimuth corridor reference point longitude, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": 46.74550102
          },
          "azCorrCenterLine": {
            "format": "double",
            "description": "The azimuth corridor centerline angle measured in degrees clockwise from true north, of the center line of an azimuth corridor. The center line extends from the referenced corridor origin location.",
            "type": "number",
            "example": 12.876
          },
          "azCorrArcWidth": {
            "format": "double",
            "description": "Azimuth corridor arc distance measured in meters from reference point of azimuth corridor to far edge of bounded azimuth corridor wedge, measured along azimuth corridor center line.",
            "type": "number",
            "example": 71.76
          },
          "errSemiIntAxis": {
            "format": "double",
            "description": "The error in the semi-intermediate axis.  The semi-intermediate axis is intermediate in length between semi-major and semi-minor axes. This field is doubled and centered on intersection of area semi-major axis and area semi-minor axis at 90 degrees to the plane defined by those axes. For these shapes, the volume is defined as having a 50-percent probability of containing the true location of the referenced entity.",
            "type": "number",
            "example": 7010.882
          },
          "errAreaOrient": {
            "format": "double",
            "description": "The error in the Area Orientation.  Area Orientation is the angle or roll in degrees, between area semi-minor axis and plane defined by local vertical and area semi-major axis. When reported without major and minor axis, it is angle between an axis perpendicular to a 2D true north axis and plane defined by local vertical and a 2D true north axis.",
            "type": "number",
            "example": 69.6
          },
          "errSemiMajElev": {
            "format": "double",
            "description": "The error in the Semi-major elevation axis. Semi-major elevation axis is the elevation of the cubical, 3D rectangular, cylindrical, 3D ellipsoidal, or spherical semi-major axis, in degrees, measured from local horizontal.",
            "type": "number",
            "example": 168.8
          },
          "errGeoAreaSwitch": {
            "description": "Geometric area switch identifies the 3D shape of the error volume by providing the 2D shape for the 3D plane. The 3D plane is the plane orthogonal to the area semi-major axis and area semi-minor axis. Depending on whether the 2D plane is reported as an error ellipse 2D or as an error rectangle 2D, this switch reports a complete error volume that is cubical, 3D rectangular, cylindrical, 3D ellipsoidal, or spherical.\n\n0 - SWITCH_TYPE_UNKNOWN\n\n1 - SQUARE_RECTANGLE\n\n2 - CIRCLE_ELLIPSE.\n\n",
            "maxLength": 24,
            "type": "string",
            "example": "CIRCLE_ELLIPSE"
          },
          "burnoutAlt": {
            "format": "double",
            "description": "Track point burnout altitude relative to WGS-84 ellipsoid, in meters.",
            "type": "number",
            "example": 30567.452
          },
          "tesEventId": {
            "description": "Threat Event System Track ID.",
            "maxLength": 8,
            "type": "string",
            "example": "6217"
          },
          "spd": {
            "format": "double",
            "description": "Track object speed, in meters/sec.",
            "type": "number",
            "example": 15.03443
          },
          "avgSpd": {
            "format": "double",
            "description": "The average speed, in kilometers/hour, calculated for the subject during the latest voyage/excursion.",
            "type": "number",
            "example": 18.25
          },
          "tol": {
            "format": "double",
            "description": "Motion model Time On Leg in hours.",
            "type": "number",
            "example": 4.1
          },
          "alt": {
            "format": "double",
            "description": "Track point altitude relative to WGS-84 ellipsoid, in meters. Positive values indicate a track object height above ellipsoid, and negative values indicate a track object below ellipsoid, applicable to the depth estimate for a subsurface track.",
            "type": "number",
            "example": 153.01
          },
          "hdng": {
            "format": "double",
            "description": "Track object heading, in degrees clockwise from true north.",
            "type": "number",
            "example": 19.7
          },
          "course": {
            "format": "double",
            "description": "The track object course-over-ground, in degrees clockwise from true North at the object location (0-360 degrees).",
            "type": "number",
            "example": 4.3580153
          },
          "propRPM": {
            "format": "double",
            "description": "The number of propeller revolutions per minute for a submarine or ship.",
            "type": "number",
            "example": 8.2
          },
          "tpk": {
            "format": "double",
            "description": "The number of turns of the vessel propellers per knot of forward motion.",
            "type": "number",
            "example": 2.65
          },
          "coopLocInd": {
            "description": "The Cooperative Location Indicator specifies whether the reported entity location was derived using reported locations from sensors on more than one platform.\n\n0 - COOPERATIVE_LOCATOR_NONE\n\n1 - SINGLE_PLATFORM\n\n2 - FRAGMENT\n\n3 - COOPERATIVE.\n\n",
            "maxLength": 32,
            "type": "string",
            "example": "COOPERATIVE"
          },
          "maneuverInd": {
            "description": "The manuevering indicator specifying the missile boost phase.\n\n0 - POST_BOOST_NONE\n\n1 - POST_BOOST_MANUEVER\n\n2 - POST_BOOST_COMPLETE_MANUEVER.\n\n",
            "maxLength": 32,
            "type": "string",
            "example": "POST_BOOST_NONE"
          },
          "launchAouType": {
            "description": "The launch location Area of Uncertainty (AoU) type (BEARING, ELLIPSE, OTHER) definition. This type defines the elements of the launchAouData array and is required if launchAouData is not null. See the launchAouData field definition for specific information.",
            "maxLength": 20,
            "type": "string",
            "example": "ELLIPSE"
          },
          "launchAouData": {
            "description": "Three element array representing the launch location Area of Uncertainty (AoU). The array element definitions and units are type specific depending on the launchAouType specified in this record:\n\n ELLIPSE:\n\n   brg - orientation in degrees of the ellipse\n\n   a1 - semi-major axis in meters\n\n   a2 - semi-minor axis in meters\n\n BEARING (BEARING BOX or MTST BEARING BOX):\n\n   brg - orientation in degrees of the bearing box\n\n   a1 - length of bearing box in meters\n\n   a2 - half-width of bearing box in meters\n\n OTHER (All other type values):\n\n   brg - line of bearing in degrees true\n\n   a1 - bearing error in degrees\n\n   a2 - estimated range in meters.\n\n",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              34.3,
              26.5,
              1.2
            ]
          },
          "impactAouType": {
            "description": "The impact point Area of Uncertainty (AoU) type (BEARING, ELLIPSE, OTHER) definition. This type defines the elements of the impactAouData array and is required if impactAouData is not null. See the impactAouData field definition for specific information.",
            "maxLength": 20,
            "type": "string",
            "example": "ELLIPSE"
          },
          "impactAouData": {
            "description": "Three element array representing the impact point Area of Uncertainty (AoU). The array element definitions and units are type specific depending on the impactAouType specified in this record:\n\n ELLIPSE:\n\n   brg - orientation in degrees of the ellipse\n\n   a1 - semi-major axis in meters\n\n   a2 - semi-minor axis in meters\n\n BEARING (BEARING BOX or MTST BEARING BOX):\n\n   brg - orientation in degrees of the bearing box\n\n   a1 - length of bearing box in meters\n\n   a2 - half-width of bearing box in meters\n\n OTHER (All other type values):\n\n   brg - line of bearing in degrees true\n\n   a1 - bearing error in degrees\n\n   a2 - estimated range in meters.\n\n",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              34.3,
              26.5,
              1.2
            ]
          },
          "aouRptType": {
            "description": "The track Area of Uncertainty (AoU) type (BEARING, ELLIPSE, OTHER) definition. This type defines the elements of the aouRptData array and is required if aouRptData is not null. See the aouRptData field definition for specific information.",
            "maxLength": 20,
            "type": "string",
            "example": "ELLIPSE"
          },
          "aouRptData": {
            "description": "Three element array representing an Area of Uncertainty (AoU). The array element definitions and units are type specific depending on the aouRptType specified in this record:\n\n ELLIPSE:\n\n   brg - orientation in degrees of the ellipse\n\n   a1 - semi-major axis in meters\n\n   a2 - semi-minor axis in meters\n\n BEARING (BEARING BOX or MTST BEARING BOX):\n\n   brg - orientation in degrees of the bearing box\n\n   a1 - length of bearing box in meters\n\n   a2 - half-width of bearing box in meters\n\n OTHER (All other type values):\n\n   brg - line of bearing in degrees true\n\n   a1 - bearing error in degrees\n\n   a2 - estimated range in meters.\n\n",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              34.3,
              26.5,
              1.2
            ]
          },
          "ecefPos": {
            "description": "Track object location in ECEF [x, y, z], meters. When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.35,
              3.42
            ]
          },
          "ecefVel": {
            "description": "Track object velocity in ECEF [x', y', z'], meters/sec. When provided, array must always contain 3 values.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.23,
              2.35,
              3.42
            ]
          },
          "containment": {
            "format": "double",
            "description": "The Area Of Uncertainty (AOU) percentage (0 - 100) containment value. The percentage of time (90%) that the estimated area of uncertainty will cover the true position of the track object.",
            "type": "number",
            "example": 97
          },
          "cpa": {
            "format": "double",
            "description": "The distance, in meters, of the closest point of approach between this track to the master reference track.",
            "type": "number",
            "example": 500
          },
          "tcpa": {
            "format": "date-time",
            "description": "The time, in ISO 8601 UTC format with millisecond precision, of the  closest point of approach between this track and the master reference track.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123Z"
          },
          "navStatus": {
            "description": "The AIS Navigational Status of the vessel (e.g. Underway Using Engine, Moored, Aground, etc.). Intended as, but not constrained to, the USCG NAVCEN navigation status definitions. Users should refer to USCG Navigation Center documentation for specific definitions associated with navigation status. USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.",
            "maxLength": 64,
            "type": "string",
            "example": "Underway Using Engine"
          },
          "posDeviceType": {
            "description": "The type of electronic position fixing device (e.g. GPS, GLONASS, etc.). Intended as, but not constrained to, the USCG NAVCEN electronic position fixing device definitions. Users should refer to USCG Navigation Center documentation for specific device type information. USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.",
            "maxLength": 24,
            "type": "string",
            "example": "GPS"
          },
          "aton": {
            "description": "Type of Aid to Navigation. Intended as, but not constrained to, the USCG NAVCEN  aids to navigation. Users should refer to USCG Navigation Center documentation for specific device type information. USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.",
            "maxLength": 64,
            "type": "string",
            "example": "Cardinal Mark N"
          },
          "offPosInd": {
            "description": "Indicator position (OFF, ON, UNK) for optional floating navigational aids only.",
            "maxLength": 3,
            "type": "string",
            "example": "ON"
          },
          "antennaRefDimensions": {
            "description": "The reference dimensions of the vessel, reported as [A, B, C, D], in meters. Where the array values represent the distance fore (A), aft (B), to port (C), and to starboard (D) of the navigation antenna. Array with values A = C = 0 and B, D > 0 indicate the length (B) and width (D) of the vessel without antenna position reference.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              50.1,
              50.1,
              20.1,
              20.1
            ]
          },
          "shipClass": {
            "description": "The common name for a group of ships with similar design, usually named for the first vessel of the class.",
            "maxLength": 64,
            "type": "string",
            "example": "Nimitz"
          },
          "imon": {
            "format": "int32",
            "description": "The International Maritime Organization Number of the vessel. IMON is a seven-digit number that uniquely identifies the vessel.",
            "type": "integer",
            "example": 9015462
          },
          "mmsi": {
            "format": "int32",
            "description": "The Maritime Mobile Service Identity of the vessel. MMSI is a nine-digit number that identifies the transmitter station of the vessel.",
            "type": "integer",
            "example": 304010417
          },
          "draught": {
            "format": "double",
            "description": "The maximum static draught, in meters, of the vessel according to the AIS transmission.",
            "type": "number",
            "example": 21.1
          },
          "length": {
            "format": "double",
            "description": "The overall length of the vessel, in meters. A value of 511 indicates a vessel length of 511 meters or greater.",
            "type": "number",
            "example": 511.1
          },
          "width": {
            "format": "double",
            "description": "The breadth of the vessel, in meters. A value of 63 indicates a vessel breadth of 63 meters or greater.",
            "type": "number",
            "example": 24.1
          },
          "cargoType": {
            "description": "The reported cargo type. Intended as, but not constrained to, the USCG NAVCEN AIS cargo definitions. Users should refer to USCG Navigation Center documentation for specific definitions associated with ship and cargo types. USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.",
            "maxLength": 48,
            "type": "string",
            "example": "Freight"
          },
          "appGrp": {
            "description": "Appearance group code.\n\nGP1 - Superstructure exceeds 1/3 of ship length.\n\nGP2 - Superstructure less than 1/3 of ship length.\n\nGP3 - Stack aft.",
            "maxLength": 7,
            "type": "string",
            "example": "GP1"
          },
          "hullProf": {
            "description": "Hull profile code. Based on GCCS-J hull profiles.\n\nFLUSH           No breaks in Hull Profile.\n\nRAISED 1        Hull Profile shows distinct raised area at bow. Remainder of deck is flush.\n\nRAISED 2        Hull Profile shows distinct raised area amidships. Bow and stern are flush.\n\nRAISED 3        Hull Profile shows distinct raised area at stern. Remainder of deck is flush.\n\nRAISED 1-2-3    Distinct raised areas at bow, midships, and stern with breaks between each raise.\n\nRAISED 1-2      Raised area at bow and midships with break between.\n\nRAISED 1-3      Raised area at bow and stern with break between.\n\nRAISED 12       Continuous raised area encompassing both bow and midships.\n\nRAISED 23       Continuous raised area encompassing midships and stern.\n\nRAISED 12-3     Raised areas at bow, midships and stern. Bow and midship raises are continuous. Break between midship and stern raises.\n\nRAISED 1-23     Raised areas at bow, midships, and stern. Midship and stern raises are continuous with break between bow and midship raises.\n\nRAISED 1-L2-3   Raised areas at bow, midships, and stern with break between each raise. Midships raise is longer than that associated with raised 1-2-3.",
            "maxLength": 16,
            "type": "string",
            "example": "Raised 1-23"
          },
          "propType": {
            "description": "The type of propulsion employed by the track object (Diesel, Nuclear).",
            "maxLength": 6,
            "type": "string",
            "example": "Diesel"
          },
          "numBlades": {
            "format": "int32",
            "description": "The number of blades per shaft of the track object.  Applicable for maritime vessels.",
            "type": "integer",
            "example": 4
          },
          "numShafts": {
            "format": "int32",
            "description": "The number of shafts on the track object.  Applicable for maritime vessels.",
            "type": "integer",
            "example": 3
          },
          "sternType": {
            "description": "The stern type code (Counter, Cruiser) associated with the track object.",
            "maxLength": 16,
            "type": "string",
            "example": "Cruiser"
          },
          "vslWt": {
            "format": "double",
            "description": "The weight, in tons, of the vessel associated with this track.",
            "type": "number",
            "example": 3423.76
          },
          "arrTime": {
            "format": "date-time",
            "description": "The Arrival Time of the vessel at the destination, in ISO 8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "arrFlag": {
            "description": "The flag of the arrival port.",
            "maxLength": 36,
            "type": "string",
            "example": "USA"
          },
          "arrCargo": {
            "description": "The reported arrival cargo type. Intended as, but not constrained to, the USCG NAVCEN AIS cargo definitions. Users should refer to USCG Navigation Center documentation for specific definitions associated with ship and cargo types. USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.",
            "maxLength": 48,
            "type": "string",
            "example": "Freight"
          },
          "arrPort": {
            "description": "The Arrival Port of the vessel according to the AIS transmission.",
            "maxLength": 20,
            "type": "string",
            "example": "Lanshan"
          },
          "depPort": {
            "description": "The Departure Port of the vessel according to the AIS transmission.",
            "maxLength": 20,
            "type": "string",
            "example": "Lanshan"
          },
          "depFlag": {
            "description": "The flag of the departure port.",
            "maxLength": 36,
            "type": "string",
            "example": "USA"
          },
          "depCargo": {
            "description": "The reported departure cargo type. Intended as, but not constrained to, the USCG NAVCEN AIS cargo definitions. Users should refer to USCG Navigation Center documentation for specific definitions associated with ship and cargo types. USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.",
            "maxLength": 48,
            "type": "string",
            "example": "Freight"
          },
          "desFlag": {
            "description": "The flag of the destination port.",
            "maxLength": 36,
            "type": "string",
            "example": "USA"
          },
          "desCargo": {
            "description": "The reported destination cargo type. Intended as, but not constrained to, the USCG NAVCEN AIS cargo definitions. Users should refer to USCG Navigation Center documentation for specific definitions associated with ship and cargo types. USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.",
            "maxLength": 48,
            "type": "string",
            "example": "Freight"
          },
          "destination": {
            "description": "The destination of the vessel according to the AIS transmission.",
            "maxLength": 20,
            "type": "string",
            "example": "USCLE"
          },
          "eta": {
            "format": "date-time",
            "description": "The Estimated Time of Arrival of the vessel at the destination port, in ISO 8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "etd": {
            "format": "date-time",
            "description": "The Estimated Time of Departure of the vessel from the departure port (depPort), according to Marine Traffic calculations, in ISO 8601 UTC format with microsecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123456Z"
          },
          "iff": {
            "description": "A text amplifier displaying IFF/SIF/AIS Identification modes and codes.",
            "maxLength": 64,
            "type": "string",
            "example": "ID Mode"
          },
          "emgInd": {
            "description": "Flag indicating that the track object has an emergency.",
            "type": "boolean",
            "example": false
          },
          "dropPtInd": {
            "description": "The drop-point indicator setting.",
            "type": "boolean",
            "example": false
          },
          "reinforced": {
            "description": "Flag indicating that this track represents a reinforced object or group.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "reduced": {
            "description": "Flag indicating for the track represents a reduced force object or group.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "hq": {
            "description": "Flag indicating that this track represents a headquarters object.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "dummy": {
            "description": "Flag indicating that this track represents a dummy object or group.  Identifies offensive or defensive units, equipment, and/or installations intended to draw the enemy's attention away from the area of the main attack.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "taskForce": {
            "description": "Flag indicating that this track represents a task force.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "feint": {
            "description": "Flag indicating that this track represents a feint object or group.  Identifies offensive or defensive units, equipment, and/or installations intended to draw the enemy's attention away from the area of the main attack.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "installation": {
            "description": "Flag indicating that this track represents an installation.  Based on MIL-STD-2525 symbology definitions.",
            "type": "boolean",
            "example": false
          },
          "staffCmts": {
            "description": "A text amplifier for units, equipment and installations; content is implementation specific.",
            "maxLength": 256,
            "type": "string",
            "example": "Staff Comments"
          },
          "addInfo": {
            "description": "A text amplifier for units, equipment and installations; content is implementation specific.",
            "maxLength": 256,
            "type": "string",
            "example": "Additional information"
          },
          "evalRating": {
            "description": "A text amplifier code for units, equipment, and installations that consists of a one-letter reliability rating and a one-number credibility rating based on the following definitions of each:\n\n Reliability Ratings:\n\n  A-completely reliable\n\n  B-usually reliable\n\n  C-fairly reliable\n\n  D-not usually reliable\n\n  E-unreliable\n\n  F-reliability cannot be judged\n\n Credibility Ratings:\n\n  1-confirmed by other sources\n\n  2-probably true\n\n  3-possibly true\n\n  4-doubtfully true\n\n  5-improbable\n\n  6-truth cannot be judged.\n\n",
            "maxLength": 2,
            "type": "string",
            "example": "A1"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database.",
            "type": "string",
            "readOnly": true,
            "example": "2021-02-25T12:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          }
        }
      },
      "TrackSensor_Abridged": {
        "description": "Schema for Track Sensor data.",
        "required": [
          "range",
          "az"
        ],
        "type": "object",
        "properties": {
          "range": {
            "format": "double",
            "description": "The track object range from the observing sensor, in kilometers.",
            "type": "number",
            "example": 4023.95
          },
          "az": {
            "format": "double",
            "description": "The observing sensor azimuth angle, in degrees and topocentric frame.",
            "type": "number",
            "example": 90
          },
          "sensorNumber": {
            "format": "int32",
            "description": "Number assigned to this sensor. Since there is no authoritative numbering scheme, these numbers sometimes collide across sensors (especially commercial sensors). It is therefore not a unique identifier.",
            "type": "integer",
            "example": 1234
          },
          "sensorName": {
            "description": "Unique name of this sensor.",
            "maxLength": 128,
            "type": "string",
            "example": "SENSOR_NAME"
          },
          "missionNumber": {
            "description": "The mission number which produced this track observation.",
            "maxLength": 128,
            "type": "string",
            "example": "Example Mission"
          },
          "minRangeLimit": {
            "format": "double",
            "description": "Minimum range measurement capability of the sensor, in kilometers.",
            "type": "number",
            "example": 20.23
          },
          "sensorFOVType": {
            "description": "The field of view (FOV) type (Butterfly, Cone Angular, Cone Distance, Horizon to Horizon, Unknown) employed by the sensor observing this object.",
            "maxLength": 24,
            "enum": [
              "BUTTERFLY",
              "CONE ANGULAR",
              "CONE DISTANCE",
              "HORIZON TO HORIZON",
              "UNKNOWN"
            ],
            "type": "string",
            "example": "UNKNOWN"
          }
        }
      },
      "TrackSensor_Full": {
        "description": "Schema for Track Sensor data.",
        "required": [
          "range",
          "az"
        ],
        "type": "object",
        "properties": {
          "range": {
            "format": "double",
            "description": "The track object range from the observing sensor, in kilometers.",
            "type": "number",
            "example": 4023.95
          },
          "az": {
            "format": "double",
            "description": "The observing sensor azimuth angle, in degrees and topocentric frame.",
            "type": "number",
            "example": 90
          },
          "sensorNumber": {
            "format": "int32",
            "description": "Number assigned to this sensor. Since there is no authoritative numbering scheme, these numbers sometimes collide across sensors (especially commercial sensors). It is therefore not a unique identifier.",
            "type": "integer",
            "example": 1234
          },
          "sensorName": {
            "description": "Unique name of this sensor.",
            "maxLength": 128,
            "type": "string",
            "example": "SENSOR_NAME"
          },
          "missionNumber": {
            "description": "The mission number which produced this track observation.",
            "maxLength": 128,
            "type": "string",
            "example": "Example Mission"
          },
          "minRangeLimit": {
            "format": "double",
            "description": "Minimum range measurement capability of the sensor, in kilometers.",
            "type": "number",
            "example": 20.23
          },
          "sensorFOVType": {
            "description": "The field of view (FOV) type (Butterfly, Cone Angular, Cone Distance, Horizon to Horizon, Unknown) employed by the sensor observing this object.",
            "maxLength": 24,
            "enum": [
              "BUTTERFLY",
              "CONE ANGULAR",
              "CONE DISTANCE",
              "HORIZON TO HORIZON",
              "UNKNOWN"
            ],
            "type": "string",
            "example": "UNKNOWN"
          }
        }
      },
      "TrackSensor_Ingest": {
        "description": "Schema for Track Sensor data.",
        "required": [
          "range",
          "az"
        ],
        "type": "object",
        "properties": {
          "range": {
            "format": "double",
            "description": "The track object range from the observing sensor, in kilometers.",
            "type": "number",
            "example": 4023.95
          },
          "az": {
            "format": "double",
            "description": "The observing sensor azimuth angle, in degrees and topocentric frame.",
            "type": "number",
            "example": 90
          },
          "sensorNumber": {
            "format": "int32",
            "description": "Number assigned to this sensor. Since there is no authoritative numbering scheme, these numbers sometimes collide across sensors (especially commercial sensors). It is therefore not a unique identifier.",
            "type": "integer",
            "example": 1234
          },
          "sensorName": {
            "description": "Unique name of this sensor.",
            "maxLength": 128,
            "type": "string",
            "example": "SENSOR_NAME"
          },
          "missionNumber": {
            "description": "The mission number which produced this track observation.",
            "maxLength": 128,
            "type": "string",
            "example": "Example Mission"
          },
          "minRangeLimit": {
            "format": "double",
            "description": "Minimum range measurement capability of the sensor, in kilometers.",
            "type": "number",
            "example": 20.23
          },
          "sensorFOVType": {
            "description": "The field of view (FOV) type (Butterfly, Cone Angular, Cone Distance, Horizon to Horizon, Unknown) employed by the sensor observing this object.",
            "maxLength": 24,
            "enum": [
              "BUTTERFLY",
              "CONE ANGULAR",
              "CONE DISTANCE",
              "HORIZON TO HORIZON",
              "UNKNOWN"
            ],
            "type": "string",
            "example": "UNKNOWN"
          }
        }
      }
    }
  }
}