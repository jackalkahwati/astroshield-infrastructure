{
  "openapi": "3.0.3",
  "info": {
    "title": "Unified Data Library Services API",
    "version": "1.30.0 Daiquiri",
    "description": "Unified Data Library Services OpenAPI v3 documentation.",
    "termsOfService": "storefront/storefront/appConfig/useragreement.html",
    "contact": {
      "name": "Sage Andorka, Deputy, Cross-Mission Ground",
      "email": "unifieddatalibrary@bluestaq.com"
    }
  },
  "tags": [
    {
      "name": "AirOperations",
      "description": "These services provide operations for manipulating and querying Aircraft Sortie, Aircraft Mission, Item Tracking, Flight Plan, Air Event, Sortie Prior Permission Required (PPR), Diplomatic Clearance, Diplomatic Clearance Country, Airspace Control Order, Air Tasking Order, Navigational Obstruction, Logistics Support, Track Route, Air Load Plan, and Aviation Risk Management data. Aircraft Sortie information contains static and dynamic aircraft assignments, departure and arrival times, and remarks. Aircraft Mission information contains static data for mission planning to include assigned aircraft and crews, cargo pickup and dropoff locations, unique identifiers, and prioritization. Item Tracking information contains data for tracking an item from its origin to destination and how it may be configured during transport. Flight Plan information contains schedule and route details. Air Event provides information concerning various aerial events such as fuel transfer and air drops, as well as the associated aircraft involved. Sortie PPR information contains details on operational access to a runway, taxiway, or airport service. Diplomatic Clearance information contains details on the issuance and coordination of aircraft clearance requests. Diplomatic Clearance Country provides information such as entry/exit points, requirements, and points of contact for countries diplomatic clearances are being created for. Airspace Control Order provides information concerning the allocation, restriction, and deconfliction of airspace. Air Tasking Order information contains details on the coordination of air missions and their tasks, resources, and timelines. Navigational Obstruction provides the locations, characteristics, and boundaries of obstacles and structures that can restrict or interfere with navigation. Logistics Support contains information regarding the transport and maintenance of resources and equipment to sustain air operations. Track Route information defines specific flight paths used by aircraft during the transport of fuel and other resources. Air Load Plan information provides mission actuals concerning the loading and air transport of cargo and passengers. Aviation Risk Management information help aid in mission planning by accounting for factors such as mission complexity and crew fatigue."
    }
  ],
  "externalDocs": {
    "url": "udl/openapi.json"
  },
  "servers": [
    {
      "url": "https://unifieddatalibrary.com"
    }
  ],
  "paths": {
    "/filedrop/crewpapers": {
      "post": {
        "tags": [
          "AirOperations"
        ],
        "description": "Service operation to upload a supporting PDF for the aircraft sortie. A specific role is required to perform this service operation. Please contact the UDL team for assistance.\n",
        "operationId": "filedrop_udl_crewPapers_post_id",
        "parameters": [
          {
            "name": "aircraftSortieIds",
            "in": "query",
            "description": "Comma-separated list of AircraftSortie IDs the Crew Papers are being added to.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "classificationMarking",
            "in": "query",
            "description": "classificationMarking of the Crew Papers.",
            "required": true,
            "schema": {
              "maxLength": 128,
              "minLength": 1,
              "type": "string"
            },
            "example": "U"
          },
          {
            "name": "papersVersion",
            "in": "query",
            "description": "The version number of the crew paper.",
            "required": true,
            "example": "1.1",
            "schema": {
              "maxLength": 16,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "paperStatus",
            "in": "query",
            "description": "The status of the supporting document.",
            "required": true,
            "schema": {
              "enum": [
                "PUBLISHED",
                "DELETED",
                "UPDATED",
                "READ"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/pdf": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/filedrop/udl-aircraftsortie": {
      "post": {
        "tags": [
          "AirOperations"
        ],
        "description": "Service operation to take one or many aircraft sortie records as a POST body and ingest into the database.  This operation is intended to be used for automated feeds into UDL. A specific role is required to perform this service operation. Please contact the UDL team for assistance.\n",
        "operationId": "filedrop_udl_aircraftsortie_post_id",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AircraftSortie_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/filedrop/udl-airevent": {
      "post": {
        "tags": [
          "AirOperations"
        ],
        "description": "Service operation to take multiple airevent records as a POST body and ingest into the database. This operation is intended to be used for automated feeds into UDL. A specific role is required to perform this service operation. Please contact the UDL team for assistance.\n",
        "operationId": "filedrop_udl_airevent_post_id",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AirEvent_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/filedrop/udl-airspacecontrolorder": {
      "post": {
        "tags": [
          "AirOperations"
        ],
        "description": "Service operation to take multiple airspacecontrolorder records as a POST body and ingest into the database. This operation is intended to be used for automated feeds into UDL. A specific role is required to perform this service operation. Please contact the UDL team for assistance.\n",
        "operationId": "filedrop_udl_airspacecontrolorder_post_id",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AirspaceControlOrder_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/filedrop/udl-airtaskingorder": {
      "post": {
        "tags": [
          "AirOperations"
        ],
        "description": "Service operation to take multiple airtaskingorder records as a POST body and ingest into the database. This operation is intended to be used for automated feeds into UDL. A specific role is required to perform this service operation. Please contact the UDL team for assistance.\n",
        "operationId": "filedrop_udl_airtaskingorder_post_id",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AirTaskingOrder_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/filedrop/udl-aviationriskmanagement": {
      "post": {
        "tags": [
          "AirOperations"
        ],
        "description": "Service operation to take multiple Aviation Risk Management records as a POST body and ingest into the database. This operation is intended to be used for automated feeds into UDL. A specific role is required to perform this service operation. Please contact the UDL team for assistance.\n",
        "operationId": "filedrop_udl_aviationriskmanagement_post_id",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AviationRiskManagement_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/filedrop/udl-diplomaticclearance": {
      "post": {
        "tags": [
          "AirOperations"
        ],
        "description": "Service operation to take multiple Diplomatic Clearance records as a POST body and ingest into the database. This operation is intended to be used for automated feeds into UDL. A specific role is required to perform this service operation. Please contact the UDL team for assistance.\n",
        "operationId": "filedrop_udl_diplomaticclearance_post_id",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DiplomaticClearance_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/filedrop/udl-diplomaticclearancecountry": {
      "post": {
        "tags": [
          "AirOperations"
        ],
        "description": "Service operation to take multiple diplomaticclearancecountry records as a POST body and ingest into the database. This operation is intended to be used for automated feeds into UDL. A specific role is required to perform this service operation. Please contact the UDL team for assistance.\n",
        "operationId": "filedrop_udl_diplomaticclearancecountry_post_id",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DiplomaticClearanceCountry_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/filedrop/udl-flightplan": {
      "post": {
        "tags": [
          "AirOperations"
        ],
        "description": "Service operation to take one or many flight plan records as a POST body and ingest into the database. This operation is intended to be used for automated feeds into UDL. A specific role is required to perform this service operation. Please contact the UDL team for assistance.\n",
        "operationId": "filedrop_udl_flightplan_post_id",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FlightPlan_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/filedrop/udl-item": {
      "post": {
        "tags": [
          "AirOperations"
        ],
        "description": "Service operation to take multiple item records as a POST body and ingest into the database. This operation is intended to be used for automated feeds into UDL. A specific role is required to perform this service operation. Please contact the UDL team for assistance.\n",
        "operationId": "filedrop_udl_item_post_id",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Item_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/filedrop/udl-itemtracking": {
      "post": {
        "tags": [
          "AirOperations"
        ],
        "description": "Service operation to take multiple itemtracking records as a POST body and ingest into the database. This operation is intended to be used for automated feeds into UDL. A specific role is required to perform this service operation. Please contact the UDL team for assistance.\n",
        "operationId": "filedrop_udl_itemtracking_post_id",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ItemTracking_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/filedrop/udl-logisticssupport": {
      "post": {
        "tags": [
          "AirOperations"
        ],
        "description": "Service operation to take multiple logisticssupport records as a POST body and ingest into the database. This operation is intended to be used for automated feeds into UDL. A specific role is required to perform this service operation. Please contact the UDL team for assistance.\n",
        "operationId": "filedrop_udl_logisticssupport_post_id",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LogisticsSupport_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/filedrop/udl-sortieppr": {
      "post": {
        "tags": [
          "AirOperations"
        ],
        "description": "Service operation to take SortiePPR as a POST body and ingest into the database. This operation is intended to be used for automated feeds into UDL. A specific role is required to perform this service operation. Please contact the UDL team for assistance.\n",
        "operationId": "filedrop_udl_sortieppr_post_id",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SortiePPR_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/filedrop/udl-trackroute": {
      "post": {
        "tags": [
          "AirOperations"
        ],
        "description": "Service operation to take multiple trackroute records as a POST body and ingest into the database. This operation is intended to be used for automated feeds into UDL. A specific role is required to perform this service operation. Please contact the UDL team for assistance.\n",
        "operationId": "filedrop_udl_trackroute_post_id",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackRoute_Ingest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/aircraftsortie": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AircraftSortie_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "plannedDepTime",
            "description": "The scheduled time that the Aircraft sortie is planned to depart, in ISO 8601 UTC format with millisecond precision. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      },
      "post": {
        "description": "Service operation to take a single AircraftSortie as a POST body and ingest into the database. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "requestBody": {
          "description": "JSON representation of one Sortie.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AircraftSortie_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/aircraftsortie/{id}": {
      "get": {
        "description": "Service operation to get a single AircraftSortie record by its unique ID passed as a path parameter.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the AircraftSortie to find.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AircraftSortie_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Service operation to update a single AircraftSortie.  A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the AircraftSortie to update.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON representation of one AircraftSortie.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AircraftSortie_Ingest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/aircraftsortie/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "plannedDepTime",
            "description": "The scheduled time that the Aircraft sortie is planned to depart, in ISO 8601 UTC format with millisecond precision. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/aircraftsortie/createBulk": {
      "post": {
        "description": "Service operation intended for initial integration only, to take a list of AircraftSorties as a POST body and ingest into the database. This operation is not intended to be used for automated feeds into UDL. Data providers should contact the UDL team for specific role assignments and for instructions on setting up a permanent feed through an alternate mechanism.",
        "tags": [
          "AirOperations"
        ],
        "requestBody": {
          "description": "JSON array of AircraftSorties.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AircraftSortie_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/aircraftsortie/history": {
      "get": {
        "description": "Service operation to dynamically query historical data by a variety of query parameters not specified in this API documentation.  See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "optional, fields for retrieval. When omitted, ALL fields are assumed. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid query fields that can be selected.",
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plannedDepTime",
            "description": "The scheduled time that the Aircraft sortie is planned to depart, in ISO 8601 UTC format with millisecond precision. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AircraftSortie_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/aircraftsortie/history/aodr": {
      "get": {
        "description": "Service operation to dynamically query historical data by a variety of query parameters not specified in this API documentation, then write that data to the Secure Content Store.  See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "optional, fields for retrieval. When omitted, ALL fields are assumed. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid query fields that can be selected.",
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, notification method for the created file link. When omitted, EMAIL is assumed. Current valid values are: EMAIL, SMS.",
            "name": "notification",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, field delimiter when the created file is not JSON. Must be a single character chosen from this set: (',', ';', ':', '|'). When omitted, \",\" is used. It is strongly encouraged that your field delimiter be a character unlikely to occur within the data.",
            "name": "outputDelimiter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, output format for the file. When omitted, JSON is assumed. Current valid values are: JSON and CSV.",
            "name": "outputFormat",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plannedDepTime",
            "description": "The scheduled time that the Aircraft sortie is planned to depart, in ISO 8601 UTC format with millisecond precision. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "202": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/aircraftsortie/history/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "plannedDepTime",
            "description": "The scheduled time that the Aircraft sortie is planned to depart, in ISO 8601 UTC format with millisecond precision. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/aircraftsortie/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/aircraftsortie/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plannedDepTime",
            "description": "The scheduled time that the Aircraft sortie is planned to depart, in ISO 8601 UTC format with millisecond precision. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AircraftSortie_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airevent": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AirEvent_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      },
      "post": {
        "description": "Service operation to take a single airevent object as a POST body and ingest into the database. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "requestBody": {
          "description": "JSON representation of one airevent.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AirEvent_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airevent/{id}": {
      "delete": {
        "description": "Service operation to delete an airevent record specified by the passed ID path parameter. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the airevent to delete.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "Service operation to get a single airevent record by its unique ID passed as a path parameter.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the airevent record to retrieve.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirEvent_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Service operation to update a single airevent record. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the airevent record to update.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON UDL representation of the airevent record to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AirEvent_Ingest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airevent/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      }
    },
    "/udl/airevent/createBulk": {
      "post": {
        "description": "Service operation intended for initial integration only, to take a list ofService operation intended for initial integration only, to take a list of airevent records as a POST body and ingest into the database. This operation is not intended to be used for automated feeds into UDL. Data providers should contact the UDL team for specific role assignments and for instructions on setting up a permanent feed through an alternate mechanism.",
        "tags": [
          "AirOperations"
        ],
        "requestBody": {
          "description": "JSON representation of multiple UDL airevents.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AirEvent_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airevent/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airevent/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AirEvent_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airloadplan": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AirLoadPlan_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "estDepTime",
            "description": "The current estimated time that the aircraft is planned to depart, in ISO 8601 UTC format with millisecond precision. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      },
      "post": {
        "description": "Service operation to take a single airloadplan record as a POST body and ingest into the database. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "requestBody": {
          "description": "JSON representation of one airloadplan.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AirLoadPlan_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airloadplan/{id}": {
      "delete": {
        "description": "Service operation to delete a airloadplan record specified by the passed ID path parameter. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the airloadplan to delete.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "Service operation to get a single airloadplan record by its unique ID passed as a path parameter.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the airloadplan to GET.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirLoadPlan_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Service operation to update a single airloadplan record. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the AirLoadPlan to update.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON UDL representation of the airloadplan to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AirLoadPlan_Ingest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airloadplan/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "estDepTime",
            "description": "The current estimated time that the aircraft is planned to depart, in ISO 8601 UTC format with millisecond precision. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/airloadplan/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airloadplan/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "estDepTime",
            "description": "The current estimated time that the aircraft is planned to depart, in ISO 8601 UTC format with millisecond precision. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AirLoadPlan_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airspacecontrolorder": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AirspaceControlOrder_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      },
      "post": {
        "description": "Service operation to take a single airspacecontrolorder record as a POST body and ingest into the database. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "requestBody": {
          "description": "JSON representation of one AirspaceControlOrder.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AirspaceControlOrder_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airspacecontrolorder/{id}": {
      "get": {
        "description": "Service operation to get a single AirspaceControlOrder record by its unique ID passed as a path parameter.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the AirspaceControlOrder record to retrieve.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirspaceControlOrder_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airspacecontrolorder/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      }
    },
    "/udl/airspacecontrolorder/createBulk": {
      "post": {
        "description": "Service operation intended for initial integration only, to take a list of airspacecontrolorder records as a POST body and ingest into the database. This operation is not intended to be used for automated feeds into UDL. Data providers should contact the UDL team for specific role assignments and for instructions on setting up a permanent feed through an alternate mechanism.",
        "tags": [
          "AirOperations"
        ],
        "requestBody": {
          "description": "JSON representation of multiple UDL AirspaceControlOrders.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AirspaceControlOrder_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airspacecontrolorder/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airspacecontrolorder/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AirspaceControlOrder_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airtaskingorder": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AirTaskingOrder_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      },
      "post": {
        "description": "Service operation to take a single airtaskingorder record as a POST body and ingest into the database. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "requestBody": {
          "description": "JSON representation of one airtaskingorder.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AirTaskingOrder_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airtaskingorder/{id}": {
      "get": {
        "description": "Service operation to get a single airtaskingorder record by its unique ID passed as a path parameter.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the airtaskingorder to retrieve.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirTaskingOrder_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airtaskingorder/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      }
    },
    "/udl/airtaskingorder/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airtaskingorder/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AirTaskingOrder_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airtransportmission": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AirTransportMission_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "createdAt",
            "description": "Time the row was created in the database, auto-populated by the system. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            },
            "in": "query"
          }
        ]
      },
      "post": {
        "description": "Service operation to take a single AirTransportMission object as a POST body and ingest into the database. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "requestBody": {
          "description": "JSON representation of one AirTransportMission.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AirTransportMission_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airtransportmission/{id}": {
      "get": {
        "description": "Service operation to get a single Air Transport Mission record by its unique ID passed as a path parameter.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the air transport mission to retrieve.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirTransportMission_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Service operation to update a single AirTransportMission record. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the AirTransportMission to update.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON UDL representation of the AirTransportMission to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AirTransportMission_Ingest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airtransportmission/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "createdAt",
            "description": "Time the row was created in the database, auto-populated by the system. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/airtransportmission/history": {
      "get": {
        "description": "Service operation to dynamically query historical data by a variety of query parameters not specified in this API documentation.  See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "optional, fields for retrieval. When omitted, ALL fields are assumed. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid query fields that can be selected.",
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt",
            "description": "Time the row was created in the database, auto-populated by the system. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AirTransportMission_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airtransportmission/history/aodr": {
      "get": {
        "description": "Service operation to dynamically query historical data by a variety of query parameters not specified in this API documentation, then write that data to the Secure Content Store.  See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "optional, fields for retrieval. When omitted, ALL fields are assumed. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid query fields that can be selected.",
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, notification method for the created file link. When omitted, EMAIL is assumed. Current valid values are: EMAIL, SMS.",
            "name": "notification",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, field delimiter when the created file is not JSON. Must be a single character chosen from this set: (',', ';', ':', '|'). When omitted, \",\" is used. It is strongly encouraged that your field delimiter be a character unlikely to occur within the data.",
            "name": "outputDelimiter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, output format for the file. When omitted, JSON is assumed. Current valid values are: JSON and CSV.",
            "name": "outputFormat",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt",
            "description": "Time the row was created in the database, auto-populated by the system. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "202": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airtransportmission/history/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "createdAt",
            "description": "Time the row was created in the database, auto-populated by the system. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/airtransportmission/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airtransportmission/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt",
            "description": "Time the row was created in the database, auto-populated by the system. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AirTransportMission_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/aviationriskmanagement": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AviationRiskManagement_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "idMission",
            "description": "The unique identifier of the mission to which this risk management record is assigned.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "in": "query"
          }
        ]
      },
      "post": {
        "description": "Service operation to take a single Aviation Risk Management record as a POST body and ingest into the database. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "requestBody": {
          "description": "JSON representation of one Aviation Risk Management.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AviationRiskManagement_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/aviationriskmanagement/{id}": {
      "delete": {
        "description": "Service operation to delete an Aviation Risk Management record specified by the passed ID path parameter. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the Aviation Risk Management to delete.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "Service operation to get a single Aviation Risk Management record by its unique ID passed as a path parameter.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the Aviation Risk Management record to retrieve.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AviationRiskManagement_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Service operation to update a single Aviation Risk Management record. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the Aviation Risk Management to update.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON representation of Aviation Risk Management.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AviationRiskManagement_Ingest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/aviationriskmanagement/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "idMission",
            "description": "The unique identifier of the mission to which this risk management record is assigned.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/aviationriskmanagement/createBulk": {
      "post": {
        "description": "Service operation intended for initial integration only, to take a list of Aviation Risk Management records as a POST body and ingest into the database. This operation is not intended to be used for automated feeds into UDL. Data providers should contact the UDL team for specific role assignments and for instructions on setting up a permanent feed through an alternate mechanism.",
        "tags": [
          "AirOperations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AviationRiskManagement_Ingest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/aviationriskmanagement/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/aviationriskmanagement/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idMission",
            "description": "The unique identifier of the mission to which this risk management record is assigned.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AviationRiskManagement_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/crewpapers/unpublish": {
      "post": {
        "description": "Service operation to remove supporting PDF from an aircraft sortie or sorties. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of AircraftSortie IDs where Crew Papers are unpublished.",
            "required": true,
            "name": "ids",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "202": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/diplomaticclearance": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiplomaticClearance_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "firstDepDate",
            "description": "The First Departure Date (FDD) the mission is scheduled for departure, in ISO 8601 UTC format with millisecond precision. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      },
      "post": {
        "description": "Service operation to take a single diplomatic clearance record as a POST body and ingest into the database. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "requestBody": {
          "description": "JSON representation of one diplomatic clearance.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiplomaticClearance_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/diplomaticclearance/{id}": {
      "delete": {
        "description": "Service operation to delete a diplomatic clearance record specified by the passed ID path parameter. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the diplomatic clearance to delete.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "Service operation to get a single diplomatic clearance record by its unique ID passed as a path parameter.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the diplomatic clearance record to retrieve.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiplomaticClearance_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Service operation to update a single diplomatic clearance record. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the diplomatic clearance to update.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON representation of one diplomatic clearance.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiplomaticClearance_Ingest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/diplomaticclearance/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "firstDepDate",
            "description": "The First Departure Date (FDD) the mission is scheduled for departure, in ISO 8601 UTC format with millisecond precision. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/diplomaticclearance/createBulk": {
      "post": {
        "description": "Service operation intended for initial integration only, to take a list of diplomaticclearance records as a POST body and ingest into the database. This operation is not intended to be used for automated feeds into UDL. Data providers should contact the UDL team for specific role assignments and for instructions on setting up a permanent feed through an alternate mechanism.",
        "tags": [
          "AirOperations"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DiplomaticClearance_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/diplomaticclearance/history": {
      "get": {
        "description": "Service operation to dynamically query historical data by a variety of query parameters not specified in this API documentation.  See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "optional, fields for retrieval. When omitted, ALL fields are assumed. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid query fields that can be selected.",
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "firstDepDate",
            "description": "The First Departure Date (FDD) the mission is scheduled for departure, in ISO 8601 UTC format with millisecond precision. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiplomaticClearance_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/diplomaticclearance/history/aodr": {
      "get": {
        "description": "Service operation to dynamically query historical data by a variety of query parameters not specified in this API documentation, then write that data to the Secure Content Store.  See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "optional, fields for retrieval. When omitted, ALL fields are assumed. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid query fields that can be selected.",
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, notification method for the created file link. When omitted, EMAIL is assumed. Current valid values are: EMAIL, SMS.",
            "name": "notification",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, field delimiter when the created file is not JSON. Must be a single character chosen from this set: (',', ';', ':', '|'). When omitted, \",\" is used. It is strongly encouraged that your field delimiter be a character unlikely to occur within the data.",
            "name": "outputDelimiter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, output format for the file. When omitted, JSON is assumed. Current valid values are: JSON and CSV.",
            "name": "outputFormat",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "firstDepDate",
            "description": "The First Departure Date (FDD) the mission is scheduled for departure, in ISO 8601 UTC format with millisecond precision. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "202": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/diplomaticclearance/history/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "firstDepDate",
            "description": "The First Departure Date (FDD) the mission is scheduled for departure, in ISO 8601 UTC format with millisecond precision. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/diplomaticclearance/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/diplomaticclearance/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "firstDepDate",
            "description": "The First Departure Date (FDD) the mission is scheduled for departure, in ISO 8601 UTC format with millisecond precision. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiplomaticClearance_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/diplomaticclearancecountry": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiplomaticClearanceCountry_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      },
      "post": {
        "description": "Service operation to take a single diplomaticclearancecountry record as a POST body and ingest into the database. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "requestBody": {
          "description": "JSON representation of one diplomaticclearancecountry.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiplomaticClearanceCountry_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/diplomaticclearancecountry/{id}": {
      "delete": {
        "description": "Service operation to delete a diplomaticclearancecountry record specified by the passed ID path parameter. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the diplomaticclearancecountry to DELETE.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "Service operation to get a single diplomaticclearancecountry record by its unique ID passed as a path parameter.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the diplomaticclearancecountry record to retrieve.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiplomaticClearanceCountry_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Service operation to update a single diplomaticclearancecountry record. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the diplomaticclearancecountry to UPDATE.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON representation of one diplomaticclearancecountry.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiplomaticClearanceCountry_Ingest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/diplomaticclearancecountry/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      }
    },
    "/udl/diplomaticclearancecountry/createBulk": {
      "post": {
        "description": "Service operation intended for initial integration only, to take a list of diplomaticclearancecountry records as a POST body and ingest into the database. This operation is not intended to be used for automated feeds into UDL. Data providers should contact the UDL team for specific role assignments and for instructions on setting up a permanent feed through an alternate mechanism.",
        "tags": [
          "AirOperations"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DiplomaticClearanceCountry_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/diplomaticclearancecountry/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/diplomaticclearancecountry/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiplomaticClearanceCountry_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/flightplan": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FlightPlan_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      },
      "post": {
        "description": "Service operation to take a single FlightPlan object as a POST body and ingest into the database. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "requestBody": {
          "description": "JSON representation of one FlightPlan.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlightPlan_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/flightplan/{id}": {
      "delete": {
        "description": "Service operation to delete a flight plan record specified by the passed ID path parameter. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the flight plan to delete.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "Service operation to get a single FlightPlan record by its unique ID passed as a path parameter.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "JSON representation of one FlightPlan.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlightPlan_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Service operation to update a single flightplan record. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the flightplan record to update.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON UDL representation of the flightplan record to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlightPlan_Ingest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/flightplan/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      }
    },
    "/udl/flightplan/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/flightplan/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FlightPlan_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/item": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Item_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      },
      "post": {
        "description": "Service operation to take a single item record as a POST body and ingest into the database. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "requestBody": {
          "description": "JSON representation of one Item.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Item_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/item/{id}": {
      "delete": {
        "description": "Service operation to delete a item record specified by the passed ID path parameter. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the Item entry to delete.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "Service operation to get a single item record by its unique ID passed as a path parameter.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the Item to find.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Service operation to update a single Item. An Item can be cargo, equipment, or a passenger. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the Item to update.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON representation of one Item.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Item_Ingest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/item/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      }
    },
    "/udl/item/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/item/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Item_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/itemtracking": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemTracking_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "ts",
            "description": "The timestamp of the scan, in ISO 8601 UTC format with millisecond precision. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      },
      "post": {
        "description": "Service operation to take a single itemtracking record as a POST body and ingest into the database. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "requestBody": {
          "description": "JSON representation of one item track.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemTracking_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/itemtracking/{id}": {
      "delete": {
        "description": "Service operation to delete an item tracking object specified by the passed ID path parameter. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the item track to delete.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "Service operation to get a single item tracking record by its unique ID passed as a path parameter.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the item track to find.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemTracking_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/itemtracking/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "ts",
            "description": "The timestamp of the scan, in ISO 8601 UTC format with millisecond precision. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/itemtracking/history": {
      "get": {
        "description": "Service operation to dynamically query historical data by a variety of query parameters not specified in this API documentation.  See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "optional, fields for retrieval. When omitted, ALL fields are assumed. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid query fields that can be selected.",
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ts",
            "description": "The timestamp of the scan, in ISO 8601 UTC format with millisecond precision. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemTracking_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/itemtracking/history/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "ts",
            "description": "The timestamp of the scan, in ISO 8601 UTC format with millisecond precision. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/itemtracking/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/itemtracking/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ts",
            "description": "The timestamp of the scan, in ISO 8601 UTC format with millisecond precision. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemTracking_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/logisticssupport": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogisticsSupport_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      },
      "post": {
        "description": "Service operation to take a single LogisticsSupport record as a POST body and ingest into the database. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "requestBody": {
          "description": "JSON representation of one LogisticsSupport.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogisticsSupport_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/logisticssupport/{id}": {
      "get": {
        "description": "Service operation to get a single LogisticsSupport record by its unique ID passed as a path parameter.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "JSON representation of one LogisticsSupport.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogisticsSupport_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Service operation to update a single LogisticsSupport record. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the logistics support clearance to update.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON representation of one logistics support clearance.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogisticsSupport_Ingest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/logisticssupport/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      }
    },
    "/udl/logisticssupport/createBulk": {
      "post": {
        "description": "Service operation intended for initial integration only, to take a list of LogisticsSupport records as a POST body and ingest into the database. This operation is not intended to be used for automated feeds into UDL. Data providers should contact the UDL team for specific role assignments and for instructions on setting up a permanent feed through an alternate mechanism.",
        "tags": [
          "AirOperations"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LogisticsSupport_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/logisticssupport/history": {
      "get": {
        "description": "Service operation to dynamically query historical data by a variety of query parameters not specified in this API documentation.  See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "optional, fields for retrieval. When omitted, ALL fields are assumed. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid query fields that can be selected.",
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogisticsSupport_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/logisticssupport/history/aodr": {
      "get": {
        "description": "Service operation to dynamically query historical data by a variety of query parameters not specified in this API documentation, then write that data to the Secure Content Store.  See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "optional, fields for retrieval. When omitted, ALL fields are assumed. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid query fields that can be selected.",
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, notification method for the created file link. When omitted, EMAIL is assumed. Current valid values are: EMAIL, SMS.",
            "name": "notification",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, field delimiter when the created file is not JSON. Must be a single character chosen from this set: (',', ';', ':', '|'). When omitted, \",\" is used. It is strongly encouraged that your field delimiter be a character unlikely to occur within the data.",
            "name": "outputDelimiter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, output format for the file. When omitted, JSON is assumed. Current valid values are: JSON and CSV.",
            "name": "outputFormat",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/logisticssupport/history/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      }
    },
    "/udl/logisticssupport/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/logisticssupport/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogisticsSupport_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/navigationalobstruction": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NavigationalObstruction_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "cycleDate",
            "description": "(One or more of fields 'cycleDate, obstacleId' are required.) Start date of this obstruction data set's currency, in ISO 8601 date-only format. (YYYY-MM-DD)",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            },
            "in": "query"
          },
          {
            "name": "obstacleId",
            "description": "(One or more of fields 'cycleDate, obstacleId' are required.) The ID of this obstacle.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "in": "query"
          }
        ]
      },
      "post": {
        "description": "Service operation to take a single navigational obstruction record as a POST body and ingest into the database. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "requestBody": {
          "description": "JSON representation of one navigational obstruction.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NavigationalObstruction_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/navigationalobstruction/{id}": {
      "get": {
        "description": "Service operation to get a single navigational obstruction record by its unique ID passed as a path parameter.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the navigational obstruction to find.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NavigationalObstruction_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Service operation to update a single navigational obstruction record. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the navigational obstruction to update.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON representation of one navigational obstruction.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NavigationalObstruction_Ingest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/navigationalobstruction/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "cycleDate",
            "description": "(One or more of fields 'cycleDate, obstacleId' are required.) Start date of this obstruction data set's currency, in ISO 8601 date-only format. (YYYY-MM-DD)",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            },
            "in": "query"
          },
          {
            "name": "obstacleId",
            "description": "(One or more of fields 'cycleDate, obstacleId' are required.) The ID of this obstacle.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/navigationalobstruction/createBulk": {
      "post": {
        "description": "Service operation intended for initial integration only, to take a list of navigational obstruction records as a POST body and ingest into the database. This operation is not intended to be used for automated feeds into UDL. Data providers should contact the UDL team for specific role assignments and for instructions on setting up a permanent feed through an alternate mechanism.",
        "tags": [
          "AirOperations"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NavigationalObstruction_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/navigationalobstruction/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/navigationalobstruction/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cycleDate",
            "description": "(One or more of fields 'cycleDate, obstacleId' are required.) Start date of this obstruction data set's currency, in ISO 8601 date-only format. (YYYY-MM-DD)",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            },
            "in": "query"
          },
          {
            "name": "obstacleId",
            "description": "(One or more of fields 'cycleDate, obstacleId' are required.) The ID of this obstacle.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NavigationalObstruction_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/sortieppr": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SortiePPR_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "idSortie",
            "description": "Unique identifier of the Aircraft Sortie associated with this prior permission required (PPR) record.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "in": "query"
          }
        ]
      },
      "post": {
        "description": "Service operation to take a single sortieppr record as a POST body and ingest into the database. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "requestBody": {
          "description": "JSON representation of one SortiePPR.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SortiePPR_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/sortieppr/{id}": {
      "delete": {
        "description": "Service operation to delete a sortieppr record specified by the passed ID path parameter. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the SortiePPR to delete.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "Service operation to get a single sortieppr record by its unique ID passed as a path parameter.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the SortiePPR to find.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SortiePPR_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Service operation to update a single sortieppr record. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the SortiePPR entry to update.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON representation of one SortiePPR.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SortiePPR_Ingest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/sortieppr/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "idSortie",
            "description": "Unique identifier of the Aircraft Sortie associated with this prior permission required (PPR) record.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/sortieppr/createBulk": {
      "post": {
        "description": "Service operation intended for initial integration only, to take a list of SortiePPR records as a POST body and ingest into the database. This operation is not intended to be used for automated feeds into UDL. Data providers should contact the UDL team for specific role assignments and for instructions on setting up a permanent feed through an alternate mechanism.",
        "tags": [
          "AirOperations"
        ],
        "requestBody": {
          "description": "JSON array of SortiePPR.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SortiePPR_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/sortieppr/history": {
      "get": {
        "description": "Service operation to dynamically query historical data by a variety of query parameters not specified in this API documentation.  See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "optional, fields for retrieval. When omitted, ALL fields are assumed. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid query fields that can be selected.",
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idSortie",
            "description": "Unique identifier of the Aircraft Sortie associated with this prior permission required (PPR) record.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SortiePPR_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/sortieppr/history/aodr": {
      "get": {
        "description": "Service operation to dynamically query historical data by a variety of query parameters not specified in this API documentation, then write that data to the Secure Content Store.  See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "optional, fields for retrieval. When omitted, ALL fields are assumed. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid query fields that can be selected.",
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, notification method for the created file link. When omitted, EMAIL is assumed. Current valid values are: EMAIL, SMS.",
            "name": "notification",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, field delimiter when the created file is not JSON. Must be a single character chosen from this set: (',', ';', ':', '|'). When omitted, \",\" is used. It is strongly encouraged that your field delimiter be a character unlikely to occur within the data.",
            "name": "outputDelimiter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, output format for the file. When omitted, JSON is assumed. Current valid values are: JSON and CSV.",
            "name": "outputFormat",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idSortie",
            "description": "Unique identifier of the Aircraft Sortie associated with this prior permission required (PPR) record.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "202": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/sortieppr/history/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "idSortie",
            "description": "Unique identifier of the Aircraft Sortie associated with this prior permission required (PPR) record.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/sortieppr/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/sortieppr/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idSortie",
            "description": "Unique identifier of the Aircraft Sortie associated with this prior permission required (PPR) record.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SortiePPR_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/trackroute": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrackRoute_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "lastUpdateDate",
            "description": "The last updated date of the track route in ISO 8601 UTC format with millisecond precision. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      },
      "post": {
        "description": "Service operation to take a single trackroute record as a POST body and ingest into the database. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "requestBody": {
          "description": "JSON representation of one TrackRoute.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackRoute_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/trackroute/{id}": {
      "delete": {
        "description": "Service operation to delete a trackroute record specified by the passed ID path parameter. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the trackroute to delete.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "Service operation to get a single trackroute record by its unique ID passed as a path parameter.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the trackroute to GET.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackRoute_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Service operation to update a single trackroute record. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "The ID of the TrackRoute to update.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON UDL representation of the TrackRoute to update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackRoute_Ingest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/trackroute/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "lastUpdateDate",
            "description": "The last updated date of the track route in ISO 8601 UTC format with millisecond precision. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/trackroute/createBulk": {
      "post": {
        "description": "Service operation intended for initial integration only, to take a list of trackroute records as a POST body and ingest into the database. This operation is not intended to be used for automated feeds into UDL. Data providers should contact the UDL team for specific role assignments and for instructions on setting up a permanent feed through an alternate mechanism.",
        "tags": [
          "AirOperations"
        ],
        "requestBody": {
          "description": "JSON representation of multiple UDL trackroute objects.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TrackRoute_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/trackroute/history": {
      "get": {
        "description": "Service operation to dynamically query historical data by a variety of query parameters not specified in this API documentation.  See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "optional, fields for retrieval. When omitted, ALL fields are assumed. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid query fields that can be selected.",
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastUpdateDate",
            "description": "The last updated date of the track route in ISO 8601 UTC format with millisecond precision. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrackRoute_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/trackroute/history/aodr": {
      "get": {
        "description": "Service operation to dynamically query historical data by a variety of query parameters not specified in this API documentation, then write that data to the Secure Content Store.  See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "optional, fields for retrieval. When omitted, ALL fields are assumed. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid query fields that can be selected.",
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, notification method for the created file link. When omitted, EMAIL is assumed. Current valid values are: EMAIL, SMS.",
            "name": "notification",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, field delimiter when the created file is not JSON. Must be a single character chosen from this set: (',', ';', ':', '|'). When omitted, \",\" is used. It is strongly encouraged that your field delimiter be a character unlikely to occur within the data.",
            "name": "outputDelimiter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional, output format for the file. When omitted, JSON is assumed. Current valid values are: JSON and CSV.",
            "name": "outputFormat",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastUpdateDate",
            "description": "The last updated date of the track route in ISO 8601 UTC format with millisecond precision. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "202": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/trackroute/history/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "lastUpdateDate",
            "description": "The last updated date of the track route in ISO 8601 UTC format with millisecond precision. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/trackroute/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "AirOperations"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/trackroute/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "AirOperations"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastUpdateDate",
            "description": "The last updated date of the track route in ISO 8601 UTC format with millisecond precision. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrackRoute_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AircraftMissionLocationTasking_Abridged": {
        "description": "Collection of aircraft mission location information for this aircraft mission tasking.",
        "required": [
          "startTime"
        ],
        "type": "object",
        "properties": {
          "startTime": {
            "format": "date-time",
            "description": "The start time of this mission in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-10-25T12:00:00.123Z"
          },
          "endTime": {
            "format": "date-time",
            "description": "The end time of this mission in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-10-25T12:00:00.123Z"
          },
          "msnLocName": {
            "description": "The name that identifies the location at which this mission is to be performed. This can be the name of a general target area, orbit, cap point, station, etc.",
            "maxLength": 24,
            "type": "string",
            "example": "KLSV"
          },
          "alt": {
            "format": "int32",
            "description": "The altitude for this mission represented as hundreds of feet above MSL.",
            "type": "integer",
            "example": 210
          },
          "airMsnPri": {
            "description": "The code for the priority assigned to this mission.",
            "maxLength": 8,
            "type": "string",
            "example": "1A"
          },
          "areaGeoRad": {
            "format": "int32",
            "description": "The radius of the circle around the location being reported in feet.",
            "type": "integer",
            "example": 1000
          },
          "msnLocPtName": {
            "description": "The location name for this mission.",
            "maxLength": 36,
            "type": "string",
            "example": "PT ALFA"
          },
          "msnLocPtLat": {
            "format": "double",
            "description": "WGS-84 latitude of the mission location, in degrees. -90 to 90 degrees (negative values south of equator) for this tasked air mission.",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 35.123
          },
          "msnLocPtLon": {
            "format": "double",
            "description": "WGS-84 longitude of the mission location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian) for this tasked air mission.",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 79.01
          },
          "msnLocPtBarT": {
            "description": "The alpha-numeric specified location for this mission specified as a bearing angle in degrees relative to true north and a range in nautical miles (NM).",
            "maxLength": 36,
            "type": "string",
            "example": "330T-PT ALFA-50NM"
          }
        }
      },
      "AircraftMissionLocationTasking_Full": {
        "description": "Collection of aircraft mission location information for this aircraft mission tasking.",
        "required": [
          "startTime"
        ],
        "type": "object",
        "properties": {
          "startTime": {
            "format": "date-time",
            "description": "The start time of this mission in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-10-25T12:00:00.123Z"
          },
          "endTime": {
            "format": "date-time",
            "description": "The end time of this mission in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-10-25T12:00:00.123Z"
          },
          "msnLocName": {
            "description": "The name that identifies the location at which this mission is to be performed. This can be the name of a general target area, orbit, cap point, station, etc.",
            "maxLength": 24,
            "type": "string",
            "example": "KLSV"
          },
          "alt": {
            "format": "int32",
            "description": "The altitude for this mission represented as hundreds of feet above MSL.",
            "type": "integer",
            "example": 210
          },
          "airMsnPri": {
            "description": "The code for the priority assigned to this mission.",
            "maxLength": 8,
            "type": "string",
            "example": "1A"
          },
          "areaGeoRad": {
            "format": "int32",
            "description": "The radius of the circle around the location being reported in feet.",
            "type": "integer",
            "example": 1000
          },
          "msnLocPtName": {
            "description": "The location name for this mission.",
            "maxLength": 36,
            "type": "string",
            "example": "PT ALFA"
          },
          "msnLocPtLat": {
            "format": "double",
            "description": "WGS-84 latitude of the mission location, in degrees. -90 to 90 degrees (negative values south of equator) for this tasked air mission.",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 35.123
          },
          "msnLocPtLon": {
            "format": "double",
            "description": "WGS-84 longitude of the mission location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian) for this tasked air mission.",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 79.01
          },
          "msnLocPtBarT": {
            "description": "The alpha-numeric specified location for this mission specified as a bearing angle in degrees relative to true north and a range in nautical miles (NM).",
            "maxLength": 36,
            "type": "string",
            "example": "330T-PT ALFA-50NM"
          }
        }
      },
      "AircraftMissionLocationTasking_Ingest": {
        "description": "Collection of aircraft mission location information for this aircraft mission tasking.",
        "required": [
          "startTime"
        ],
        "type": "object",
        "properties": {
          "startTime": {
            "format": "date-time",
            "description": "The start time of this mission in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-10-25T12:00:00.123Z"
          },
          "endTime": {
            "format": "date-time",
            "description": "The end time of this mission in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-10-25T12:00:00.123Z"
          },
          "msnLocName": {
            "description": "The name that identifies the location at which this mission is to be performed. This can be the name of a general target area, orbit, cap point, station, etc.",
            "maxLength": 24,
            "type": "string",
            "example": "KLSV"
          },
          "alt": {
            "format": "int32",
            "description": "The altitude for this mission represented as hundreds of feet above MSL.",
            "type": "integer",
            "example": 210
          },
          "airMsnPri": {
            "description": "The code for the priority assigned to this mission.",
            "maxLength": 8,
            "type": "string",
            "example": "1A"
          },
          "areaGeoRad": {
            "format": "int32",
            "description": "The radius of the circle around the location being reported in feet.",
            "type": "integer",
            "example": 1000
          },
          "msnLocPtName": {
            "description": "The location name for this mission.",
            "maxLength": 36,
            "type": "string",
            "example": "PT ALFA"
          },
          "msnLocPtLat": {
            "format": "double",
            "description": "WGS-84 latitude of the mission location, in degrees. -90 to 90 degrees (negative values south of equator) for this tasked air mission.",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 35.123
          },
          "msnLocPtLon": {
            "format": "double",
            "description": "WGS-84 longitude of the mission location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian) for this tasked air mission.",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 79.01
          },
          "msnLocPtBarT": {
            "description": "The alpha-numeric specified location for this mission specified as a bearing angle in degrees relative to true north and a range in nautical miles (NM).",
            "maxLength": 36,
            "type": "string",
            "example": "330T-PT ALFA-50NM"
          }
        }
      },
      "AircraftMissionRemarks_Abridged": {
        "description": "Collection of Remarks associated with this Air Transport Mission.",
        "type": "object",
        "properties": {
          "gdssRemarkId": {
            "description": "Global Decision Support System (GDSS) remark identifier.",
            "maxLength": 36,
            "type": "string",
            "example": "GDSSREMARK-ID"
          },
          "type": {
            "description": "Remark type.",
            "maxLength": 20,
            "type": "string",
            "example": "MP"
          },
          "text": {
            "description": "Text of the remark.",
            "maxLength": 1024,
            "type": "string",
            "example": "Example mission remarks."
          },
          "date": {
            "format": "date-time",
            "description": "Date the remark was published, in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2022-01-01T16:00:00.123Z"
          },
          "user": {
            "description": "User who published the remark.",
            "maxLength": 20,
            "type": "string",
            "example": "John Doe"
          },
          "itineraryNum": {
            "format": "int32",
            "description": "If the remark is sortie specific, this is the number of the sortie it applies to.",
            "type": "integer",
            "example": 825
          }
        }
      },
      "AircraftMissionRemarks_Full": {
        "description": "Collection of Remarks associated with this Air Transport Mission.",
        "type": "object",
        "properties": {
          "gdssRemarkId": {
            "description": "Global Decision Support System (GDSS) remark identifier.",
            "maxLength": 36,
            "type": "string",
            "example": "GDSSREMARK-ID"
          },
          "type": {
            "description": "Remark type.",
            "maxLength": 20,
            "type": "string",
            "example": "MP"
          },
          "text": {
            "description": "Text of the remark.",
            "maxLength": 1024,
            "type": "string",
            "example": "Example mission remarks."
          },
          "date": {
            "format": "date-time",
            "description": "Date the remark was published, in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2022-01-01T16:00:00.123Z"
          },
          "user": {
            "description": "User who published the remark.",
            "maxLength": 20,
            "type": "string",
            "example": "John Doe"
          },
          "itineraryNum": {
            "format": "int32",
            "description": "If the remark is sortie specific, this is the number of the sortie it applies to.",
            "type": "integer",
            "example": 825
          }
        }
      },
      "AircraftMissionRemarks_Ingest": {
        "description": "Collection of Remarks associated with this Air Transport Mission.",
        "type": "object",
        "properties": {
          "gdssRemarkId": {
            "description": "Global Decision Support System (GDSS) remark identifier.",
            "maxLength": 36,
            "type": "string",
            "example": "GDSSREMARK-ID"
          },
          "type": {
            "description": "Remark type.",
            "maxLength": 20,
            "type": "string",
            "example": "MP"
          },
          "text": {
            "description": "Text of the remark.",
            "maxLength": 1024,
            "type": "string",
            "example": "Example mission remarks."
          },
          "date": {
            "format": "date-time",
            "description": "Date the remark was published, in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2022-01-01T16:00:00.123Z"
          },
          "user": {
            "description": "User who published the remark.",
            "maxLength": 20,
            "type": "string",
            "example": "John Doe"
          },
          "itineraryNum": {
            "format": "int32",
            "description": "If the remark is sortie specific, this is the number of the sortie it applies to.",
            "type": "integer",
            "example": 825
          }
        }
      },
      "AircraftMissionRequirements_Abridged": {
        "description": "Collection of Requirements planned to be associated with this Air Transport Mission.",
        "type": "object",
        "properties": {
          "gdssReqId": {
            "description": "Global Decision Support System (GDSS) mission requirement identifier.",
            "maxLength": 36,
            "type": "string",
            "example": "23a1fb67-cc2d-5ebe-6b99-68130cb1aa6c"
          },
          "onloadId": {
            "format": "int32",
            "description": "Identifier of the onload itinerary location.",
            "type": "integer",
            "example": 200
          },
          "onloadLOCode": {
            "description": "Onload location code.",
            "maxLength": 20,
            "type": "string",
            "example": "KCHS"
          },
          "offloadId": {
            "format": "int32",
            "description": "Identifier of the offload itinerary location.",
            "type": "integer",
            "example": 300
          },
          "offloadLOCode": {
            "description": "Offload location code.",
            "maxLength": 20,
            "type": "string",
            "example": "KHOP"
          },
          "uln": {
            "description": "Unit line number.",
            "maxLength": 8,
            "type": "string",
            "example": "T01ME01"
          },
          "transReqNum": {
            "description": "Transportation requirement number.",
            "maxLength": 50,
            "type": "string",
            "example": "T01ME01"
          },
          "projName": {
            "description": "Project name.",
            "maxLength": 50,
            "type": "string",
            "example": "CENTINTRA21"
          },
          "oplan": {
            "description": "Identification number of the Operation Plan (OPLAN) associated with this mission.",
            "maxLength": 32,
            "type": "string",
            "example": "5027"
          },
          "numPax": {
            "format": "int32",
            "description": "Number of passengers associated with the mission.",
            "type": "integer",
            "example": 44
          },
          "numLitter": {
            "format": "int32",
            "description": "Number of litter patients tasked for the mission.",
            "minimum": 0,
            "type": "integer",
            "example": 10
          },
          "numAmbulatory": {
            "format": "int32",
            "description": "Number of ambulatory patients tasked for the mission.",
            "minimum": 0,
            "type": "integer",
            "example": 10
          },
          "numAttendant": {
            "format": "int32",
            "description": "Number of attendants tasked for the mission.",
            "minimum": 0,
            "type": "integer",
            "example": 10
          },
          "bulkWeight": {
            "format": "double",
            "description": "Total weight of the bulk cargo, in kilograms.",
            "minimum": 0,
            "type": "number",
            "example": 1.3
          },
          "oversizeWeight": {
            "format": "double",
            "description": "Total weight of the oversized cargo, in kilograms.",
            "minimum": 0,
            "type": "number",
            "example": 1.3
          },
          "outsizeWeight": {
            "format": "double",
            "description": "Total weight of the outsize cargo, in kilograms.",
            "minimum": 0,
            "type": "number",
            "example": 1.3
          },
          "ead": {
            "format": "date-time",
            "description": "Earliest available date the cargo can be picked up, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "lad": {
            "format": "date-time",
            "description": "Latest available date the cargo may be delivered, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          }
        }
      },
      "AircraftMissionRequirements_Full": {
        "description": "Collection of Requirements planned to be associated with this Air Transport Mission.",
        "type": "object",
        "properties": {
          "gdssReqId": {
            "description": "Global Decision Support System (GDSS) mission requirement identifier.",
            "maxLength": 36,
            "type": "string",
            "example": "23a1fb67-cc2d-5ebe-6b99-68130cb1aa6c"
          },
          "onloadId": {
            "format": "int32",
            "description": "Identifier of the onload itinerary location.",
            "type": "integer",
            "example": 200
          },
          "onloadLOCode": {
            "description": "Onload location code.",
            "maxLength": 20,
            "type": "string",
            "example": "KCHS"
          },
          "offloadId": {
            "format": "int32",
            "description": "Identifier of the offload itinerary location.",
            "type": "integer",
            "example": 300
          },
          "offloadLOCode": {
            "description": "Offload location code.",
            "maxLength": 20,
            "type": "string",
            "example": "KHOP"
          },
          "uln": {
            "description": "Unit line number.",
            "maxLength": 8,
            "type": "string",
            "example": "T01ME01"
          },
          "transReqNum": {
            "description": "Transportation requirement number.",
            "maxLength": 50,
            "type": "string",
            "example": "T01ME01"
          },
          "projName": {
            "description": "Project name.",
            "maxLength": 50,
            "type": "string",
            "example": "CENTINTRA21"
          },
          "oplan": {
            "description": "Identification number of the Operation Plan (OPLAN) associated with this mission.",
            "maxLength": 32,
            "type": "string",
            "example": "5027"
          },
          "numPax": {
            "format": "int32",
            "description": "Number of passengers associated with the mission.",
            "type": "integer",
            "example": 44
          },
          "numLitter": {
            "format": "int32",
            "description": "Number of litter patients tasked for the mission.",
            "minimum": 0,
            "type": "integer",
            "example": 10
          },
          "numAmbulatory": {
            "format": "int32",
            "description": "Number of ambulatory patients tasked for the mission.",
            "minimum": 0,
            "type": "integer",
            "example": 10
          },
          "numAttendant": {
            "format": "int32",
            "description": "Number of attendants tasked for the mission.",
            "minimum": 0,
            "type": "integer",
            "example": 10
          },
          "bulkWeight": {
            "format": "double",
            "description": "Total weight of the bulk cargo, in kilograms.",
            "minimum": 0,
            "type": "number",
            "example": 1.3
          },
          "oversizeWeight": {
            "format": "double",
            "description": "Total weight of the oversized cargo, in kilograms.",
            "minimum": 0,
            "type": "number",
            "example": 1.3
          },
          "outsizeWeight": {
            "format": "double",
            "description": "Total weight of the outsize cargo, in kilograms.",
            "minimum": 0,
            "type": "number",
            "example": 1.3
          },
          "ead": {
            "format": "date-time",
            "description": "Earliest available date the cargo can be picked up, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "lad": {
            "format": "date-time",
            "description": "Latest available date the cargo may be delivered, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          }
        }
      },
      "AircraftMissionRequirements_Ingest": {
        "description": "Collection of Requirements planned to be associated with this Air Transport Mission.",
        "type": "object",
        "properties": {
          "gdssReqId": {
            "description": "Global Decision Support System (GDSS) mission requirement identifier.",
            "maxLength": 36,
            "type": "string",
            "example": "23a1fb67-cc2d-5ebe-6b99-68130cb1aa6c"
          },
          "onloadId": {
            "format": "int32",
            "description": "Identifier of the onload itinerary location.",
            "type": "integer",
            "example": 200
          },
          "onloadLOCode": {
            "description": "Onload location code.",
            "maxLength": 20,
            "type": "string",
            "example": "KCHS"
          },
          "offloadId": {
            "format": "int32",
            "description": "Identifier of the offload itinerary location.",
            "type": "integer",
            "example": 300
          },
          "offloadLOCode": {
            "description": "Offload location code.",
            "maxLength": 20,
            "type": "string",
            "example": "KHOP"
          },
          "uln": {
            "description": "Unit line number.",
            "maxLength": 8,
            "type": "string",
            "example": "T01ME01"
          },
          "transReqNum": {
            "description": "Transportation requirement number.",
            "maxLength": 50,
            "type": "string",
            "example": "T01ME01"
          },
          "projName": {
            "description": "Project name.",
            "maxLength": 50,
            "type": "string",
            "example": "CENTINTRA21"
          },
          "oplan": {
            "description": "Identification number of the Operation Plan (OPLAN) associated with this mission.",
            "maxLength": 32,
            "type": "string",
            "example": "5027"
          },
          "numPax": {
            "format": "int32",
            "description": "Number of passengers associated with the mission.",
            "type": "integer",
            "example": 44
          },
          "numLitter": {
            "format": "int32",
            "description": "Number of litter patients tasked for the mission.",
            "minimum": 0,
            "type": "integer",
            "example": 10
          },
          "numAmbulatory": {
            "format": "int32",
            "description": "Number of ambulatory patients tasked for the mission.",
            "minimum": 0,
            "type": "integer",
            "example": 10
          },
          "numAttendant": {
            "format": "int32",
            "description": "Number of attendants tasked for the mission.",
            "minimum": 0,
            "type": "integer",
            "example": 10
          },
          "bulkWeight": {
            "format": "double",
            "description": "Total weight of the bulk cargo, in kilograms.",
            "minimum": 0,
            "type": "number",
            "example": 1.3
          },
          "oversizeWeight": {
            "format": "double",
            "description": "Total weight of the oversized cargo, in kilograms.",
            "minimum": 0,
            "type": "number",
            "example": 1.3
          },
          "outsizeWeight": {
            "format": "double",
            "description": "Total weight of the outsize cargo, in kilograms.",
            "minimum": 0,
            "type": "number",
            "example": 1.3
          },
          "ead": {
            "format": "date-time",
            "description": "Earliest available date the cargo can be picked up, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "lad": {
            "format": "date-time",
            "description": "Latest available date the cargo may be delivered, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          }
        }
      },
      "AircraftMissionTasking_Abridged": {
        "description": "Collection that specifies the tasked country, tasked service, unit and mission level tasking for this ATO.",
        "required": [
          "countryCode",
          "taskedService",
          "unitDesignator"
        ],
        "type": "object",
        "properties": {
          "countryCode": {
            "description": "The country code responsible for conducting this aircraft mission tasking for the exercise or operation.",
            "maxLength": 4,
            "minLength": 1,
            "type": "string",
            "example": "US"
          },
          "taskedService": {
            "description": "The service tasked with conducting this aircraft mission tasking for the exercise or operation.",
            "maxLength": 1,
            "minLength": 1,
            "type": "string",
            "example": "A"
          },
          "unitDesignator": {
            "description": "The designator of the unit that is tasked to perform this aircraft mission tasking.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "AMPHIB5DIV"
          },
          "unitLocName": {
            "description": "The tasked units location expressed as an ICAO or a place name.",
            "maxLength": 36,
            "type": "string",
            "example": "ICAO:KXXQ"
          },
          "resMsnInd": {
            "format": "char",
            "description": "An indicator of whether a mission is or will be a residual mission.",
            "maxLength": 1,
            "type": "string",
            "example": "N"
          },
          "amcMsnNum": {
            "description": "The AMC number assigned to identify one aircraft from another.",
            "maxLength": 16,
            "type": "string",
            "example": "AMC:JJXD123HA045"
          },
          "pkgId": {
            "description": "The identifier for the composite set of missions for this operation/exercise.",
            "maxLength": 8,
            "type": "string",
            "example": "ZZ"
          },
          "msnCommander": {
            "description": "The commander responsible for the planning and execution of the forces necessary to achieve desired objectives.",
            "maxLength": 8,
            "type": "string",
            "example": "MC"
          },
          "msnNum": {
            "description": "The mission number assigned to this mission.",
            "maxLength": 8,
            "type": "string",
            "example": "D123HA"
          },
          "priMsnType": {
            "description": "The code for the preferred type or designator for a tasked air mission.",
            "maxLength": 8,
            "type": "string",
            "example": "CAS"
          },
          "secMsnType": {
            "description": "The code for the alternative type of a tasked air mission.",
            "maxLength": 8,
            "type": "string",
            "example": "SEAD"
          },
          "alertStatus": {
            "format": "int32",
            "description": "The readiness status expressed in time (minutes) for an aircraft to be airborne after the launch order is received or the time required for a missile unit to assume battle stations.",
            "type": "integer",
            "example": 30
          },
          "depLocName": {
            "description": "The location or name specified for the departure of the tasked air mission.",
            "maxLength": 36,
            "type": "string",
            "example": "ICAO:KBIF"
          },
          "depLocUTM": {
            "description": "The departure location specified in UTM (100 meter) coordinates for the tasked air mission.",
            "maxLength": 36,
            "type": "string",
            "example": "32WDL123123"
          },
          "depLocLat": {
            "format": "double",
            "description": "WGS-84 latitude of the departure location, in degrees. -90 to 90 degrees (negative values south of equator) for this tasked air mission.",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 35.123
          },
          "depLocLon": {
            "format": "double",
            "description": "WGS-84 longitude of the departure location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian) for this tasked air mission.",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 79.2354
          },
          "depTime": {
            "format": "date-time",
            "description": "The time of departure for the tasked air mission in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-10-25T12:00:00.123Z"
          },
          "rcvyLocName": {
            "description": "An array of locations specified for the recovery of the tasked air mission represented by varying formats.",
            "maxItems": 36,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ARRLOC:KBIF",
              "ARRLOC:KDZ7"
            ]
          },
          "rcvyLocUTM": {
            "description": "An array of recovery locations specified in UTM (100 meter) coordinates for the tasked air mission.",
            "maxItems": 36,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ARRUTMO:32WDL123123",
              "ARRUTMO:32WDL321321"
            ]
          },
          "rcvyLocLat": {
            "description": "An array of WGS-84 latitude of the recovery locations, in degrees. -90 to 90 degrees (negative values south of equator) for this tasked air mission.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              48.8584,
              40.7554
            ]
          },
          "rcvyLocLon": {
            "description": "An array of WGS-84 longitude of the recovery locations, in degrees. -180 to 180 degrees (negative values west of Prime Meridian) for this tasked air mission.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              2.2945,
              -73.9866
            ]
          },
          "rcvyTime": {
            "description": "An array of recovery times for the tasked air mission in ISO8601 UTC format with millisecond precision.",
            "type": "array",
            "items": {
              "format": "date-time",
              "type": "string",
              "example": "2022-03-10T12:15:50"
            },
            "example": [
              "2021-10-25T16:00:00.234Z",
              "2021-10-26T16:00:00.234Z"
            ]
          },
          "indACTasking": {
            "description": "A collection of the individual aircraft assigned to this aircraft mission tasking.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndividualAircraftTasking_Abridged"
            }
          },
          "acMsnLocSeg": {
            "description": "A collection of aircraft mission location information for this aircraft mission tasking.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AircraftMissionLocationTasking_Abridged"
            }
          }
        }
      },
      "AircraftMissionTasking_Full": {
        "description": "Collection that specifies the tasked country, tasked service, unit and mission level tasking for this ATO.",
        "required": [
          "countryCode",
          "taskedService",
          "unitDesignator"
        ],
        "type": "object",
        "properties": {
          "countryCode": {
            "description": "The country code responsible for conducting this aircraft mission tasking for the exercise or operation.",
            "maxLength": 4,
            "minLength": 1,
            "type": "string",
            "example": "US"
          },
          "taskedService": {
            "description": "The service tasked with conducting this aircraft mission tasking for the exercise or operation.",
            "maxLength": 1,
            "minLength": 1,
            "type": "string",
            "example": "A"
          },
          "unitDesignator": {
            "description": "The designator of the unit that is tasked to perform this aircraft mission tasking.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "AMPHIB5DIV"
          },
          "unitLocName": {
            "description": "The tasked units location expressed as an ICAO or a place name.",
            "maxLength": 36,
            "type": "string",
            "example": "ICAO:KXXQ"
          },
          "resMsnInd": {
            "format": "char",
            "description": "An indicator of whether a mission is or will be a residual mission.",
            "maxLength": 1,
            "type": "string",
            "example": "N"
          },
          "amcMsnNum": {
            "description": "The AMC number assigned to identify one aircraft from another.",
            "maxLength": 16,
            "type": "string",
            "example": "AMC:JJXD123HA045"
          },
          "pkgId": {
            "description": "The identifier for the composite set of missions for this operation/exercise.",
            "maxLength": 8,
            "type": "string",
            "example": "ZZ"
          },
          "msnCommander": {
            "description": "The commander responsible for the planning and execution of the forces necessary to achieve desired objectives.",
            "maxLength": 8,
            "type": "string",
            "example": "MC"
          },
          "msnNum": {
            "description": "The mission number assigned to this mission.",
            "maxLength": 8,
            "type": "string",
            "example": "D123HA"
          },
          "priMsnType": {
            "description": "The code for the preferred type or designator for a tasked air mission.",
            "maxLength": 8,
            "type": "string",
            "example": "CAS"
          },
          "secMsnType": {
            "description": "The code for the alternative type of a tasked air mission.",
            "maxLength": 8,
            "type": "string",
            "example": "SEAD"
          },
          "alertStatus": {
            "format": "int32",
            "description": "The readiness status expressed in time (minutes) for an aircraft to be airborne after the launch order is received or the time required for a missile unit to assume battle stations.",
            "type": "integer",
            "example": 30
          },
          "depLocName": {
            "description": "The location or name specified for the departure of the tasked air mission.",
            "maxLength": 36,
            "type": "string",
            "example": "ICAO:KBIF"
          },
          "depLocUTM": {
            "description": "The departure location specified in UTM (100 meter) coordinates for the tasked air mission.",
            "maxLength": 36,
            "type": "string",
            "example": "32WDL123123"
          },
          "depLocLat": {
            "format": "double",
            "description": "WGS-84 latitude of the departure location, in degrees. -90 to 90 degrees (negative values south of equator) for this tasked air mission.",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 35.123
          },
          "depLocLon": {
            "format": "double",
            "description": "WGS-84 longitude of the departure location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian) for this tasked air mission.",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 79.2354
          },
          "depTime": {
            "format": "date-time",
            "description": "The time of departure for the tasked air mission in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-10-25T12:00:00.123Z"
          },
          "rcvyLocName": {
            "description": "An array of locations specified for the recovery of the tasked air mission represented by varying formats.",
            "maxItems": 36,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ARRLOC:KBIF",
              "ARRLOC:KDZ7"
            ]
          },
          "rcvyLocUTM": {
            "description": "An array of recovery locations specified in UTM (100 meter) coordinates for the tasked air mission.",
            "maxItems": 36,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ARRUTMO:32WDL123123",
              "ARRUTMO:32WDL321321"
            ]
          },
          "rcvyLocLat": {
            "description": "An array of WGS-84 latitude of the recovery locations, in degrees. -90 to 90 degrees (negative values south of equator) for this tasked air mission.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              48.8584,
              40.7554
            ]
          },
          "rcvyLocLon": {
            "description": "An array of WGS-84 longitude of the recovery locations, in degrees. -180 to 180 degrees (negative values west of Prime Meridian) for this tasked air mission.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              2.2945,
              -73.9866
            ]
          },
          "rcvyTime": {
            "description": "An array of recovery times for the tasked air mission in ISO8601 UTC format with millisecond precision.",
            "type": "array",
            "items": {
              "format": "date-time",
              "type": "string",
              "example": "2022-03-10T12:15:50"
            },
            "example": [
              "2021-10-25T16:00:00.234Z",
              "2021-10-26T16:00:00.234Z"
            ]
          },
          "indACTasking": {
            "description": "A collection of the individual aircraft assigned to this aircraft mission tasking.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndividualAircraftTasking_Full"
            }
          },
          "acMsnLocSeg": {
            "description": "A collection of aircraft mission location information for this aircraft mission tasking.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AircraftMissionLocationTasking_Full"
            }
          }
        }
      },
      "AircraftMissionTasking_Ingest": {
        "description": "Collection that specifies the tasked country, tasked service, unit and mission level tasking for this ATO.",
        "required": [
          "countryCode",
          "taskedService",
          "unitDesignator"
        ],
        "type": "object",
        "properties": {
          "countryCode": {
            "description": "The country code responsible for conducting this aircraft mission tasking for the exercise or operation.",
            "maxLength": 4,
            "minLength": 1,
            "type": "string",
            "example": "US"
          },
          "taskedService": {
            "description": "The service tasked with conducting this aircraft mission tasking for the exercise or operation.",
            "maxLength": 1,
            "minLength": 1,
            "type": "string",
            "example": "A"
          },
          "unitDesignator": {
            "description": "The designator of the unit that is tasked to perform this aircraft mission tasking.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "AMPHIB5DIV"
          },
          "unitLocName": {
            "description": "The tasked units location expressed as an ICAO or a place name.",
            "maxLength": 36,
            "type": "string",
            "example": "ICAO:KXXQ"
          },
          "resMsnInd": {
            "format": "char",
            "description": "An indicator of whether a mission is or will be a residual mission.",
            "maxLength": 1,
            "type": "string",
            "example": "N"
          },
          "amcMsnNum": {
            "description": "The AMC number assigned to identify one aircraft from another.",
            "maxLength": 16,
            "type": "string",
            "example": "AMC:JJXD123HA045"
          },
          "pkgId": {
            "description": "The identifier for the composite set of missions for this operation/exercise.",
            "maxLength": 8,
            "type": "string",
            "example": "ZZ"
          },
          "msnCommander": {
            "description": "The commander responsible for the planning and execution of the forces necessary to achieve desired objectives.",
            "maxLength": 8,
            "type": "string",
            "example": "MC"
          },
          "msnNum": {
            "description": "The mission number assigned to this mission.",
            "maxLength": 8,
            "type": "string",
            "example": "D123HA"
          },
          "priMsnType": {
            "description": "The code for the preferred type or designator for a tasked air mission.",
            "maxLength": 8,
            "type": "string",
            "example": "CAS"
          },
          "secMsnType": {
            "description": "The code for the alternative type of a tasked air mission.",
            "maxLength": 8,
            "type": "string",
            "example": "SEAD"
          },
          "alertStatus": {
            "format": "int32",
            "description": "The readiness status expressed in time (minutes) for an aircraft to be airborne after the launch order is received or the time required for a missile unit to assume battle stations.",
            "type": "integer",
            "example": 30
          },
          "depLocName": {
            "description": "The location or name specified for the departure of the tasked air mission.",
            "maxLength": 36,
            "type": "string",
            "example": "ICAO:KBIF"
          },
          "depLocUTM": {
            "description": "The departure location specified in UTM (100 meter) coordinates for the tasked air mission.",
            "maxLength": 36,
            "type": "string",
            "example": "32WDL123123"
          },
          "depLocLat": {
            "format": "double",
            "description": "WGS-84 latitude of the departure location, in degrees. -90 to 90 degrees (negative values south of equator) for this tasked air mission.",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 35.123
          },
          "depLocLon": {
            "format": "double",
            "description": "WGS-84 longitude of the departure location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian) for this tasked air mission.",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 79.2354
          },
          "depTime": {
            "format": "date-time",
            "description": "The time of departure for the tasked air mission in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-10-25T12:00:00.123Z"
          },
          "rcvyLocName": {
            "description": "An array of locations specified for the recovery of the tasked air mission represented by varying formats.",
            "maxItems": 36,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ARRLOC:KBIF",
              "ARRLOC:KDZ7"
            ]
          },
          "rcvyLocUTM": {
            "description": "An array of recovery locations specified in UTM (100 meter) coordinates for the tasked air mission.",
            "maxItems": 36,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ARRUTMO:32WDL123123",
              "ARRUTMO:32WDL321321"
            ]
          },
          "rcvyLocLat": {
            "description": "An array of WGS-84 latitude of the recovery locations, in degrees. -90 to 90 degrees (negative values south of equator) for this tasked air mission.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              48.8584,
              40.7554
            ]
          },
          "rcvyLocLon": {
            "description": "An array of WGS-84 longitude of the recovery locations, in degrees. -180 to 180 degrees (negative values west of Prime Meridian) for this tasked air mission.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              2.2945,
              -73.9866
            ]
          },
          "rcvyTime": {
            "description": "An array of recovery times for the tasked air mission in ISO8601 UTC format with millisecond precision.",
            "type": "array",
            "items": {
              "format": "date-time",
              "type": "string",
              "example": "2022-03-10T12:15:50"
            },
            "example": [
              "2021-10-25T16:00:00.234Z",
              "2021-10-26T16:00:00.234Z"
            ]
          },
          "indACTasking": {
            "description": "A collection of the individual aircraft assigned to this aircraft mission tasking.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndividualAircraftTasking_Ingest"
            }
          },
          "acMsnLocSeg": {
            "description": "A collection of aircraft mission location information for this aircraft mission tasking.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AircraftMissionLocationTasking_Ingest"
            }
          }
        }
      },
      "AircraftSortie_Abridged": {
        "description": "Information related to the planning, load, status, and deployment or dispatch of one aircraft to carry out a mission.",
        "required": [
          "classificationMarking",
          "plannedDepTime",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "AIRCRAFTSORTIE-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "origSortieId": {
            "description": "The sortie identifier provided by the originating source.",
            "maxLength": 36,
            "type": "string",
            "example": "A0640"
          },
          "idAircraft": {
            "description": "Unique identifier of the aircraft.",
            "maxLength": 36,
            "type": "string",
            "example": "REF-AIRCRAFT-ID"
          },
          "aircraftAltId": {
            "description": "Alternate Aircraft Identifier provided by source.",
            "maxLength": 36,
            "type": "string",
            "example": "ALT-AIRCRAFT-ID"
          },
          "tailNumber": {
            "description": "The tail number of the aircraft assigned to this sortie.",
            "maxLength": 16,
            "type": "string",
            "example": "Tail_1"
          },
          "aircraftMDS": {
            "description": "The aircraft Model Design Series designation assigned to this sortie.",
            "maxLength": 36,
            "type": "string",
            "example": "C017A"
          },
          "aircraftADSB": {
            "description": "The Automatic Dependent Surveillance-Broadcast (ADS-B) device identifier.",
            "maxLength": 16,
            "type": "string",
            "example": "AE123C"
          },
          "sortieDate": {
            "format": "date",
            "description": "The scheduled UTC date for this sortie, in ISO 8601 date-only format (ex. YYYY-MM-DD).",
            "type": "string",
            "example": "2021-01-01"
          },
          "lineNumber": {
            "format": "int32",
            "description": "The external system line number of this sortie.",
            "type": "integer",
            "example": 99
          },
          "idMission": {
            "description": "The unique identifier of the mission to which this sortie is assigned.",
            "maxLength": 36,
            "type": "string",
            "example": "fa18d96e-91ea-60da-a7a8-1af6500066c8"
          },
          "missionId": {
            "description": "The mission ID according to the source system.",
            "maxLength": 24,
            "type": "string",
            "example": "ABLE"
          },
          "amcMsnNum": {
            "description": "The Air Mobility Command (AMC) mission number of the sortie.",
            "maxLength": 36,
            "type": "string",
            "example": "AJM512571333"
          },
          "amcMsnType": {
            "description": "The type of mission (e.g. SAAM, CHNL, etc.).",
            "maxLength": 36,
            "type": "string",
            "example": "SAAM"
          },
          "callSign": {
            "description": "The call sign assigned to the aircraft on this sortie.",
            "maxLength": 24,
            "type": "string",
            "example": "BAKER"
          },
          "jcsPriority": {
            "description": "Joint Chiefs of Staff priority of this sortie.",
            "maxLength": 3,
            "type": "string",
            "example": "1A3"
          },
          "primarySCL": {
            "description": "The planned primary Standard Conventional Load of the aircraft for this sortie.",
            "maxLength": 24,
            "type": "string",
            "example": "ABC"
          },
          "secondarySCL": {
            "description": "The planned secondary Standard Conventional Load of the aircraft for this sortie.",
            "maxLength": 24,
            "type": "string",
            "example": "ABC"
          },
          "reqConfig": {
            "description": "Aircraft configuration required for the mission.",
            "maxLength": 8,
            "type": "string",
            "example": "C-1"
          },
          "cargoConfig": {
            "description": "Description of the cargo configuration (e.g. C-1, C-2, C-3, DV-1, DV-2, AE-1, etc.) currently on board the aircraft. Configuration meanings are determined by the data source.",
            "maxLength": 8,
            "type": "string",
            "example": "C-1"
          },
          "fuelReq": {
            "format": "double",
            "description": "Mass of fuel required for this leg of the sortie, in kilograms.",
            "type": "number",
            "example": 20000.1
          },
          "oxyReqCrew": {
            "format": "double",
            "description": "Liquid oxygen required on the aircraft for the crew compartment, in liters.",
            "type": "number",
            "example": 12.3
          },
          "oxyOnCrew": {
            "format": "double",
            "description": "Liquid oxygen onboard the aircraft for the crew compartment, in liters.",
            "type": "number",
            "example": 12.3
          },
          "oxyReqPax": {
            "format": "double",
            "description": "Liquid oxygen required on the aircraft for the troop compartment, in liters.",
            "type": "number",
            "example": 12.3
          },
          "oxyOnPax": {
            "format": "double",
            "description": "Liquid oxygen onboard the aircraft for the troop compartment, in liters.",
            "type": "number",
            "example": 12.3
          },
          "alertStatusCode": {
            "description": "The Alert Status code.",
            "maxLength": 24,
            "type": "string",
            "example": "C1"
          },
          "alertStatus": {
            "format": "int32",
            "description": "The amount of time allowed between launch order and takeoff, in seconds.",
            "type": "integer",
            "example": 22
          },
          "currentState": {
            "description": "The current state of this sortie.",
            "maxLength": 32,
            "type": "string",
            "example": "Park"
          },
          "depItinerary": {
            "format": "int32",
            "description": "The itinerary identifier of the departure location.",
            "type": "integer",
            "example": 100
          },
          "depICAO": {
            "description": "The departure International Civil Aviation Organization (ICAO) of this sortie.",
            "maxLength": 4,
            "type": "string",
            "example": "KCOS"
          },
          "depIATA": {
            "description": "The departure International Aviation Transport Association (IATA) code of this sortie.",
            "maxLength": 3,
            "type": "string",
            "example": "AAA"
          },
          "depFAA": {
            "description": "The departure Federal Aviation Administration (FAA) code of this sortie.",
            "maxLength": 5,
            "type": "string",
            "example": "FAA1"
          },
          "plannedDepTime": {
            "format": "date-time",
            "description": "The scheduled time that the Aircraft sortie is planned to depart, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123Z"
          },
          "estDepTime": {
            "format": "date-time",
            "description": "The current estimated time that the Aircraft is planned to depart, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123Z"
          },
          "actualDepTime": {
            "format": "date-time",
            "description": "The actual departure time, in ISO 8601 UTC format.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123Z"
          },
          "estBlockOutTime": {
            "format": "date-time",
            "description": "The estimated time the Aircraft will begin to taxi from its parking position, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-01T00:55:01.123Z"
          },
          "actualBlockOutTime": {
            "format": "date-time",
            "description": "The actual time the Aircraft begins to taxi from its parking position, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-01T00:55:01.123Z"
          },
          "depPurposeCode": {
            "description": "Purpose code at the departure location of this sortie.",
            "maxLength": 10,
            "type": "string",
            "example": "P"
          },
          "arrItinerary": {
            "format": "int32",
            "description": "The itinerary identifier of the arrival location.",
            "type": "integer",
            "example": 101
          },
          "arrICAO": {
            "description": "The arrival International Civil Aviation Organization (ICAO) of this sortie.",
            "maxLength": 4,
            "type": "string",
            "example": "KCOS"
          },
          "arrIATA": {
            "description": "The arrival International Aviation Transport Association (IATA) code of this sortie.",
            "maxLength": 3,
            "type": "string",
            "example": "AAA"
          },
          "arrFAA": {
            "description": "The arrival Federal Aviation Administration (FAA) code of this sortie.",
            "maxLength": 5,
            "type": "string",
            "example": "FAA1"
          },
          "plannedArrTime": {
            "format": "date-time",
            "description": "The scheduled time that the Aircraft sortie is planned to arrive,  in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123Z"
          },
          "estArrTime": {
            "format": "date-time",
            "description": "The current estimated time that the Aircraft is planned to arrive, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123Z"
          },
          "actualArrTime": {
            "format": "date-time",
            "description": "The actual arrival time, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123Z"
          },
          "estBlockInTime": {
            "format": "date-time",
            "description": "The estimated time the Aircraft will come to a complete stop in its parking position, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-01T01:06:01.123Z"
          },
          "actualBlockInTime": {
            "format": "date-time",
            "description": "The actual time the Aircraft comes to a complete stop in its parking position, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-01T01:06:01.123Z"
          },
          "arrPurposeCode": {
            "description": "Purpose code at the arrival location of this sortie.",
            "maxLength": 10,
            "type": "string",
            "example": "O"
          },
          "dhd": {
            "format": "date-time",
            "description": "Due home date by which the aircraft must return to its home station, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-03T01:01:01.123Z"
          },
          "dhdReason": {
            "description": "Reason the aircraft must return to home station by its due home date.",
            "maxLength": 32,
            "type": "string",
            "example": "Due for maintenance"
          },
          "aircraftEvent": {
            "description": "Aircraft event text.",
            "maxLength": 128,
            "type": "string",
            "example": "Example event"
          },
          "soe": {
            "description": "Indicates the group responsible for recording the completion time of the next event in the sequence of events assigned to this sortie (e.g. OPS - Operations, MX - Maintenance, TR - Transportation, etc.).",
            "maxLength": 16,
            "type": "string",
            "example": "OPS"
          },
          "legNum": {
            "format": "int32",
            "description": "The leg number of this sortie.",
            "type": "integer",
            "example": 14
          },
          "flightTime": {
            "format": "double",
            "description": "The planned flight time for this sortie, in minutes.",
            "type": "number",
            "example": 104.5
          },
          "gndTime": {
            "format": "double",
            "description": "Scheduled ground time, in minutes.",
            "type": "number",
            "example": 387.8
          },
          "rawFileURI": {
            "description": "When crew papers are associated to this sortie, the system updates this value. This field is the URI location in the document repository of that raw file. To download the raw file, prepend https://udl-hostname/scs/download?id= to this field's value.",
            "maxLength": 256,
            "type": "string",
            "readOnly": true,
            "example": "Example URI"
          },
          "papersVersion": {
            "description": "The version number of the crew paper.",
            "maxLength": 16,
            "type": "string",
            "readOnly": true,
            "example": "1.1"
          },
          "filename": {
            "description": "Name of the uploaded PDF.",
            "maxLength": 512,
            "type": "string",
            "readOnly": true,
            "example": "ExampleFileName"
          },
          "filesize": {
            "format": "int32",
            "description": "Size of the supporting PDF, in bytes.",
            "type": "integer",
            "readOnly": true,
            "example": 12
          },
          "paperStatus": {
            "description": "The status of the supporting document.",
            "maxLength": 9,
            "enum": [
              "PUBLISHED",
              "DELETED",
              "UPDATED",
              "READ"
            ],
            "type": "string",
            "readOnly": true,
            "example": "PUBLISHED"
          },
          "pprStatus": {
            "description": "The prior permission required (PPR) status.",
            "maxLength": 22,
            "enum": [
              "NOT REQUIRED",
              "REQUIRED NOT REQUESTED",
              "GRANTED",
              "PENDING"
            ],
            "type": "string",
            "example": "PENDING"
          },
          "missionUpdate": {
            "format": "date-time",
            "description": "Time the associated mission data was last updated in relation to the aircraft assignment, in ISO 8601 UTC format with millisecond precision. If this time is coming from an external system, it may not sync with the latest mission time associated to this record.",
            "type": "string",
            "example": "2024-09-09T01:01:01.123Z"
          },
          "delayCode": {
            "description": "The primary delay code.",
            "maxLength": 10,
            "type": "string",
            "example": "500"
          },
          "commanderName": {
            "description": "The last name of the aircraft commander.",
            "maxLength": 36,
            "type": "string",
            "example": "Smith"
          },
          "fmDeskNum": {
            "description": "Desk phone number of the flight manager assigned to the sortie. Null when no flight manager is assigned.",
            "maxLength": 45,
            "type": "string",
            "example": "7198675309"
          },
          "fmName": {
            "description": "Last name of the flight manager assigned to the sortie. Null when no flight manager is assigned.",
            "maxLength": 64,
            "type": "string",
            "example": "Smith"
          },
          "rvnReq": {
            "description": "Type of Ravens required for this sortie (N - None, R - Raven (Security Team) required, C6 - Consider ravens (Ground time over 6 hours), R6 - Ravens required (Ground time over 6 hours)).",
            "maxLength": 2,
            "enum": [
              "N",
              "R",
              "C6",
              "R6"
            ],
            "type": "string",
            "example": "R"
          },
          "passengers": {
            "format": "int32",
            "description": "The number of passengers tasked for this sortie.",
            "type": "integer",
            "example": 17
          },
          "parkingLoc": {
            "description": "The POI parking location.",
            "maxLength": 32,
            "type": "string",
            "example": "KCOS"
          },
          "objectiveRemarks": {
            "description": "Remarks concerning the sortie objective.",
            "maxLength": 512,
            "type": "string",
            "example": "Some objective remark about aircraft A"
          },
          "aircraftRemarks": {
            "description": "Remarks concerning the aircraft.",
            "maxLength": 512,
            "type": "string",
            "example": "Some remark about aircraft A"
          },
          "scheduleRemarks": {
            "description": "Remarks concerning the schedule.",
            "maxLength": 512,
            "type": "string",
            "example": "Some schedule remark about aircraft A"
          },
          "resultRemarks": {
            "description": "Remarks concerning the results of this sortie.",
            "maxLength": 512,
            "type": "string",
            "example": "Some remark about aircraft A"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          }
        }
      },
      "AircraftSortie_Full": {
        "description": "Information related to the planning, load, status, and deployment or dispatch of one aircraft to carry out a mission.",
        "required": [
          "classificationMarking",
          "plannedDepTime",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "AIRCRAFTSORTIE-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "origSortieId": {
            "description": "The sortie identifier provided by the originating source.",
            "maxLength": 36,
            "type": "string",
            "example": "A0640"
          },
          "idAircraft": {
            "description": "Unique identifier of the aircraft.",
            "maxLength": 36,
            "type": "string",
            "example": "REF-AIRCRAFT-ID"
          },
          "aircraftAltId": {
            "description": "Alternate Aircraft Identifier provided by source.",
            "maxLength": 36,
            "type": "string",
            "example": "ALT-AIRCRAFT-ID"
          },
          "tailNumber": {
            "description": "The tail number of the aircraft assigned to this sortie.",
            "maxLength": 16,
            "type": "string",
            "example": "Tail_1"
          },
          "aircraftMDS": {
            "description": "The aircraft Model Design Series designation assigned to this sortie.",
            "maxLength": 36,
            "type": "string",
            "example": "C017A"
          },
          "aircraftADSB": {
            "description": "The Automatic Dependent Surveillance-Broadcast (ADS-B) device identifier.",
            "maxLength": 16,
            "type": "string",
            "example": "AE123C"
          },
          "sortieDate": {
            "format": "date",
            "description": "The scheduled UTC date for this sortie, in ISO 8601 date-only format (ex. YYYY-MM-DD).",
            "type": "string",
            "example": "2021-01-01"
          },
          "lineNumber": {
            "format": "int32",
            "description": "The external system line number of this sortie.",
            "type": "integer",
            "example": 99
          },
          "idMission": {
            "description": "The unique identifier of the mission to which this sortie is assigned.",
            "maxLength": 36,
            "type": "string",
            "example": "fa18d96e-91ea-60da-a7a8-1af6500066c8"
          },
          "missionId": {
            "description": "The mission ID according to the source system.",
            "maxLength": 24,
            "type": "string",
            "example": "ABLE"
          },
          "amcMsnNum": {
            "description": "The Air Mobility Command (AMC) mission number of the sortie.",
            "maxLength": 36,
            "type": "string",
            "example": "AJM512571333"
          },
          "amcMsnType": {
            "description": "The type of mission (e.g. SAAM, CHNL, etc.).",
            "maxLength": 36,
            "type": "string",
            "example": "SAAM"
          },
          "callSign": {
            "description": "The call sign assigned to the aircraft on this sortie.",
            "maxLength": 24,
            "type": "string",
            "example": "BAKER"
          },
          "jcsPriority": {
            "description": "Joint Chiefs of Staff priority of this sortie.",
            "maxLength": 3,
            "type": "string",
            "example": "1A3"
          },
          "primarySCL": {
            "description": "The planned primary Standard Conventional Load of the aircraft for this sortie.",
            "maxLength": 24,
            "type": "string",
            "example": "ABC"
          },
          "secondarySCL": {
            "description": "The planned secondary Standard Conventional Load of the aircraft for this sortie.",
            "maxLength": 24,
            "type": "string",
            "example": "ABC"
          },
          "reqConfig": {
            "description": "Aircraft configuration required for the mission.",
            "maxLength": 8,
            "type": "string",
            "example": "C-1"
          },
          "cargoConfig": {
            "description": "Description of the cargo configuration (e.g. C-1, C-2, C-3, DV-1, DV-2, AE-1, etc.) currently on board the aircraft. Configuration meanings are determined by the data source.",
            "maxLength": 8,
            "type": "string",
            "example": "C-1"
          },
          "fuelReq": {
            "format": "double",
            "description": "Mass of fuel required for this leg of the sortie, in kilograms.",
            "type": "number",
            "example": 20000.1
          },
          "oxyReqCrew": {
            "format": "double",
            "description": "Liquid oxygen required on the aircraft for the crew compartment, in liters.",
            "type": "number",
            "example": 12.3
          },
          "oxyOnCrew": {
            "format": "double",
            "description": "Liquid oxygen onboard the aircraft for the crew compartment, in liters.",
            "type": "number",
            "example": 12.3
          },
          "oxyReqPax": {
            "format": "double",
            "description": "Liquid oxygen required on the aircraft for the troop compartment, in liters.",
            "type": "number",
            "example": 12.3
          },
          "oxyOnPax": {
            "format": "double",
            "description": "Liquid oxygen onboard the aircraft for the troop compartment, in liters.",
            "type": "number",
            "example": 12.3
          },
          "alertStatusCode": {
            "description": "The Alert Status code.",
            "maxLength": 24,
            "type": "string",
            "example": "C1"
          },
          "alertStatus": {
            "format": "int32",
            "description": "The amount of time allowed between launch order and takeoff, in seconds.",
            "type": "integer",
            "example": 22
          },
          "currentState": {
            "description": "The current state of this sortie.",
            "maxLength": 32,
            "type": "string",
            "example": "Park"
          },
          "depItinerary": {
            "format": "int32",
            "description": "The itinerary identifier of the departure location.",
            "type": "integer",
            "example": 100
          },
          "depICAO": {
            "description": "The departure International Civil Aviation Organization (ICAO) of this sortie.",
            "maxLength": 4,
            "type": "string",
            "example": "KCOS"
          },
          "depIATA": {
            "description": "The departure International Aviation Transport Association (IATA) code of this sortie.",
            "maxLength": 3,
            "type": "string",
            "example": "AAA"
          },
          "depFAA": {
            "description": "The departure Federal Aviation Administration (FAA) code of this sortie.",
            "maxLength": 5,
            "type": "string",
            "example": "FAA1"
          },
          "plannedDepTime": {
            "format": "date-time",
            "description": "The scheduled time that the Aircraft sortie is planned to depart, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123Z"
          },
          "estDepTime": {
            "format": "date-time",
            "description": "The current estimated time that the Aircraft is planned to depart, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123Z"
          },
          "actualDepTime": {
            "format": "date-time",
            "description": "The actual departure time, in ISO 8601 UTC format.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123Z"
          },
          "estBlockOutTime": {
            "format": "date-time",
            "description": "The estimated time the Aircraft will begin to taxi from its parking position, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-01T00:55:01.123Z"
          },
          "actualBlockOutTime": {
            "format": "date-time",
            "description": "The actual time the Aircraft begins to taxi from its parking position, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-01T00:55:01.123Z"
          },
          "depPurposeCode": {
            "description": "Purpose code at the departure location of this sortie.",
            "maxLength": 10,
            "type": "string",
            "example": "P"
          },
          "arrItinerary": {
            "format": "int32",
            "description": "The itinerary identifier of the arrival location.",
            "type": "integer",
            "example": 101
          },
          "arrICAO": {
            "description": "The arrival International Civil Aviation Organization (ICAO) of this sortie.",
            "maxLength": 4,
            "type": "string",
            "example": "KCOS"
          },
          "arrIATA": {
            "description": "The arrival International Aviation Transport Association (IATA) code of this sortie.",
            "maxLength": 3,
            "type": "string",
            "example": "AAA"
          },
          "arrFAA": {
            "description": "The arrival Federal Aviation Administration (FAA) code of this sortie.",
            "maxLength": 5,
            "type": "string",
            "example": "FAA1"
          },
          "plannedArrTime": {
            "format": "date-time",
            "description": "The scheduled time that the Aircraft sortie is planned to arrive,  in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123Z"
          },
          "estArrTime": {
            "format": "date-time",
            "description": "The current estimated time that the Aircraft is planned to arrive, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123Z"
          },
          "actualArrTime": {
            "format": "date-time",
            "description": "The actual arrival time, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123Z"
          },
          "estBlockInTime": {
            "format": "date-time",
            "description": "The estimated time the Aircraft will come to a complete stop in its parking position, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-01T01:06:01.123Z"
          },
          "actualBlockInTime": {
            "format": "date-time",
            "description": "The actual time the Aircraft comes to a complete stop in its parking position, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-01T01:06:01.123Z"
          },
          "arrPurposeCode": {
            "description": "Purpose code at the arrival location of this sortie.",
            "maxLength": 10,
            "type": "string",
            "example": "O"
          },
          "dhd": {
            "format": "date-time",
            "description": "Due home date by which the aircraft must return to its home station, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-03T01:01:01.123Z"
          },
          "dhdReason": {
            "description": "Reason the aircraft must return to home station by its due home date.",
            "maxLength": 32,
            "type": "string",
            "example": "Due for maintenance"
          },
          "aircraftEvent": {
            "description": "Aircraft event text.",
            "maxLength": 128,
            "type": "string",
            "example": "Example event"
          },
          "soe": {
            "description": "Indicates the group responsible for recording the completion time of the next event in the sequence of events assigned to this sortie (e.g. OPS - Operations, MX - Maintenance, TR - Transportation, etc.).",
            "maxLength": 16,
            "type": "string",
            "example": "OPS"
          },
          "legNum": {
            "format": "int32",
            "description": "The leg number of this sortie.",
            "type": "integer",
            "example": 14
          },
          "flightTime": {
            "format": "double",
            "description": "The planned flight time for this sortie, in minutes.",
            "type": "number",
            "example": 104.5
          },
          "gndTime": {
            "format": "double",
            "description": "Scheduled ground time, in minutes.",
            "type": "number",
            "example": 387.8
          },
          "rawFileURI": {
            "description": "When crew papers are associated to this sortie, the system updates this value. This field is the URI location in the document repository of that raw file. To download the raw file, prepend https://udl-hostname/scs/download?id= to this field's value.",
            "maxLength": 256,
            "type": "string",
            "readOnly": true,
            "example": "Example URI"
          },
          "papersVersion": {
            "description": "The version number of the crew paper.",
            "maxLength": 16,
            "type": "string",
            "readOnly": true,
            "example": "1.1"
          },
          "filename": {
            "description": "Name of the uploaded PDF.",
            "maxLength": 512,
            "type": "string",
            "readOnly": true,
            "example": "ExampleFileName"
          },
          "filesize": {
            "format": "int32",
            "description": "Size of the supporting PDF, in bytes.",
            "type": "integer",
            "readOnly": true,
            "example": 12
          },
          "paperStatus": {
            "description": "The status of the supporting document.",
            "maxLength": 9,
            "enum": [
              "PUBLISHED",
              "DELETED",
              "UPDATED",
              "READ"
            ],
            "type": "string",
            "readOnly": true,
            "example": "PUBLISHED"
          },
          "pprStatus": {
            "description": "The prior permission required (PPR) status.",
            "maxLength": 22,
            "enum": [
              "NOT REQUIRED",
              "REQUIRED NOT REQUESTED",
              "GRANTED",
              "PENDING"
            ],
            "type": "string",
            "example": "PENDING"
          },
          "missionUpdate": {
            "format": "date-time",
            "description": "Time the associated mission data was last updated in relation to the aircraft assignment, in ISO 8601 UTC format with millisecond precision. If this time is coming from an external system, it may not sync with the latest mission time associated to this record.",
            "type": "string",
            "example": "2024-09-09T01:01:01.123Z"
          },
          "delayCode": {
            "description": "The primary delay code.",
            "maxLength": 10,
            "type": "string",
            "example": "500"
          },
          "commanderName": {
            "description": "The last name of the aircraft commander.",
            "maxLength": 36,
            "type": "string",
            "example": "Smith"
          },
          "fmDeskNum": {
            "description": "Desk phone number of the flight manager assigned to the sortie. Null when no flight manager is assigned.",
            "maxLength": 45,
            "type": "string",
            "example": "7198675309"
          },
          "fmName": {
            "description": "Last name of the flight manager assigned to the sortie. Null when no flight manager is assigned.",
            "maxLength": 64,
            "type": "string",
            "example": "Smith"
          },
          "rvnReq": {
            "description": "Type of Ravens required for this sortie (N - None, R - Raven (Security Team) required, C6 - Consider ravens (Ground time over 6 hours), R6 - Ravens required (Ground time over 6 hours)).",
            "maxLength": 2,
            "enum": [
              "N",
              "R",
              "C6",
              "R6"
            ],
            "type": "string",
            "example": "R"
          },
          "passengers": {
            "format": "int32",
            "description": "The number of passengers tasked for this sortie.",
            "type": "integer",
            "example": 17
          },
          "parkingLoc": {
            "description": "The POI parking location.",
            "maxLength": 32,
            "type": "string",
            "example": "KCOS"
          },
          "objectiveRemarks": {
            "description": "Remarks concerning the sortie objective.",
            "maxLength": 512,
            "type": "string",
            "example": "Some objective remark about aircraft A"
          },
          "aircraftRemarks": {
            "description": "Remarks concerning the aircraft.",
            "maxLength": 512,
            "type": "string",
            "example": "Some remark about aircraft A"
          },
          "scheduleRemarks": {
            "description": "Remarks concerning the schedule.",
            "maxLength": 512,
            "type": "string",
            "example": "Some schedule remark about aircraft A"
          },
          "resultRemarks": {
            "description": "Remarks concerning the results of this sortie.",
            "maxLength": 512,
            "type": "string",
            "example": "Some remark about aircraft A"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "crew": {
            "$ref": "#/components/schemas/Crew_Full"
          },
          "sortiePPR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortiePPR_Full"
            }
          }
        }
      },
      "AircraftSortie_Ingest": {
        "description": "Information related to the planning, load, status, and deployment or dispatch of one aircraft to carry out a mission.",
        "required": [
          "classificationMarking",
          "plannedDepTime",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "AIRCRAFTSORTIE-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "origSortieId": {
            "description": "The sortie identifier provided by the originating source.",
            "maxLength": 36,
            "type": "string",
            "example": "A0640"
          },
          "idAircraft": {
            "description": "Unique identifier of the aircraft.",
            "maxLength": 36,
            "type": "string",
            "example": "REF-AIRCRAFT-ID"
          },
          "aircraftAltId": {
            "description": "Alternate Aircraft Identifier provided by source.",
            "maxLength": 36,
            "type": "string",
            "example": "ALT-AIRCRAFT-ID"
          },
          "tailNumber": {
            "description": "The tail number of the aircraft assigned to this sortie.",
            "maxLength": 16,
            "type": "string",
            "example": "Tail_1"
          },
          "aircraftMDS": {
            "description": "The aircraft Model Design Series designation assigned to this sortie.",
            "maxLength": 36,
            "type": "string",
            "example": "C017A"
          },
          "aircraftADSB": {
            "description": "The Automatic Dependent Surveillance-Broadcast (ADS-B) device identifier.",
            "maxLength": 16,
            "type": "string",
            "example": "AE123C"
          },
          "sortieDate": {
            "format": "date",
            "description": "The scheduled UTC date for this sortie, in ISO 8601 date-only format (ex. YYYY-MM-DD).",
            "type": "string",
            "example": "2021-01-01"
          },
          "lineNumber": {
            "format": "int32",
            "description": "The external system line number of this sortie.",
            "type": "integer",
            "example": 99
          },
          "idMission": {
            "description": "The unique identifier of the mission to which this sortie is assigned.",
            "maxLength": 36,
            "type": "string",
            "example": "fa18d96e-91ea-60da-a7a8-1af6500066c8"
          },
          "missionId": {
            "description": "The mission ID according to the source system.",
            "maxLength": 24,
            "type": "string",
            "example": "ABLE"
          },
          "amcMsnNum": {
            "description": "The Air Mobility Command (AMC) mission number of the sortie.",
            "maxLength": 36,
            "type": "string",
            "example": "AJM512571333"
          },
          "amcMsnType": {
            "description": "The type of mission (e.g. SAAM, CHNL, etc.).",
            "maxLength": 36,
            "type": "string",
            "example": "SAAM"
          },
          "callSign": {
            "description": "The call sign assigned to the aircraft on this sortie.",
            "maxLength": 24,
            "type": "string",
            "example": "BAKER"
          },
          "jcsPriority": {
            "description": "Joint Chiefs of Staff priority of this sortie.",
            "maxLength": 3,
            "type": "string",
            "example": "1A3"
          },
          "primarySCL": {
            "description": "The planned primary Standard Conventional Load of the aircraft for this sortie.",
            "maxLength": 24,
            "type": "string",
            "example": "ABC"
          },
          "secondarySCL": {
            "description": "The planned secondary Standard Conventional Load of the aircraft for this sortie.",
            "maxLength": 24,
            "type": "string",
            "example": "ABC"
          },
          "reqConfig": {
            "description": "Aircraft configuration required for the mission.",
            "maxLength": 8,
            "type": "string",
            "example": "C-1"
          },
          "cargoConfig": {
            "description": "Description of the cargo configuration (e.g. C-1, C-2, C-3, DV-1, DV-2, AE-1, etc.) currently on board the aircraft. Configuration meanings are determined by the data source.",
            "maxLength": 8,
            "type": "string",
            "example": "C-1"
          },
          "fuelReq": {
            "format": "double",
            "description": "Mass of fuel required for this leg of the sortie, in kilograms.",
            "type": "number",
            "example": 20000.1
          },
          "oxyReqCrew": {
            "format": "double",
            "description": "Liquid oxygen required on the aircraft for the crew compartment, in liters.",
            "type": "number",
            "example": 12.3
          },
          "oxyOnCrew": {
            "format": "double",
            "description": "Liquid oxygen onboard the aircraft for the crew compartment, in liters.",
            "type": "number",
            "example": 12.3
          },
          "oxyReqPax": {
            "format": "double",
            "description": "Liquid oxygen required on the aircraft for the troop compartment, in liters.",
            "type": "number",
            "example": 12.3
          },
          "oxyOnPax": {
            "format": "double",
            "description": "Liquid oxygen onboard the aircraft for the troop compartment, in liters.",
            "type": "number",
            "example": 12.3
          },
          "alertStatusCode": {
            "description": "The Alert Status code.",
            "maxLength": 24,
            "type": "string",
            "example": "C1"
          },
          "alertStatus": {
            "format": "int32",
            "description": "The amount of time allowed between launch order and takeoff, in seconds.",
            "type": "integer",
            "example": 22
          },
          "currentState": {
            "description": "The current state of this sortie.",
            "maxLength": 32,
            "type": "string",
            "example": "Park"
          },
          "depItinerary": {
            "format": "int32",
            "description": "The itinerary identifier of the departure location.",
            "type": "integer",
            "example": 100
          },
          "depICAO": {
            "description": "The departure International Civil Aviation Organization (ICAO) of this sortie.",
            "maxLength": 4,
            "type": "string",
            "example": "KCOS"
          },
          "depIATA": {
            "description": "The departure International Aviation Transport Association (IATA) code of this sortie.",
            "maxLength": 3,
            "type": "string",
            "example": "AAA"
          },
          "depFAA": {
            "description": "The departure Federal Aviation Administration (FAA) code of this sortie.",
            "maxLength": 5,
            "type": "string",
            "example": "FAA1"
          },
          "plannedDepTime": {
            "format": "date-time",
            "description": "The scheduled time that the Aircraft sortie is planned to depart, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123Z"
          },
          "estDepTime": {
            "format": "date-time",
            "description": "The current estimated time that the Aircraft is planned to depart, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123Z"
          },
          "actualDepTime": {
            "format": "date-time",
            "description": "The actual departure time, in ISO 8601 UTC format.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123Z"
          },
          "estBlockOutTime": {
            "format": "date-time",
            "description": "The estimated time the Aircraft will begin to taxi from its parking position, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-01T00:55:01.123Z"
          },
          "actualBlockOutTime": {
            "format": "date-time",
            "description": "The actual time the Aircraft begins to taxi from its parking position, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-01T00:55:01.123Z"
          },
          "depPurposeCode": {
            "description": "Purpose code at the departure location of this sortie.",
            "maxLength": 10,
            "type": "string",
            "example": "P"
          },
          "arrItinerary": {
            "format": "int32",
            "description": "The itinerary identifier of the arrival location.",
            "type": "integer",
            "example": 101
          },
          "arrICAO": {
            "description": "The arrival International Civil Aviation Organization (ICAO) of this sortie.",
            "maxLength": 4,
            "type": "string",
            "example": "KCOS"
          },
          "arrIATA": {
            "description": "The arrival International Aviation Transport Association (IATA) code of this sortie.",
            "maxLength": 3,
            "type": "string",
            "example": "AAA"
          },
          "arrFAA": {
            "description": "The arrival Federal Aviation Administration (FAA) code of this sortie.",
            "maxLength": 5,
            "type": "string",
            "example": "FAA1"
          },
          "plannedArrTime": {
            "format": "date-time",
            "description": "The scheduled time that the Aircraft sortie is planned to arrive,  in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123Z"
          },
          "estArrTime": {
            "format": "date-time",
            "description": "The current estimated time that the Aircraft is planned to arrive, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123Z"
          },
          "actualArrTime": {
            "format": "date-time",
            "description": "The actual arrival time, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123Z"
          },
          "estBlockInTime": {
            "format": "date-time",
            "description": "The estimated time the Aircraft will come to a complete stop in its parking position, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-01T01:06:01.123Z"
          },
          "actualBlockInTime": {
            "format": "date-time",
            "description": "The actual time the Aircraft comes to a complete stop in its parking position, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-01T01:06:01.123Z"
          },
          "arrPurposeCode": {
            "description": "Purpose code at the arrival location of this sortie.",
            "maxLength": 10,
            "type": "string",
            "example": "O"
          },
          "dhd": {
            "format": "date-time",
            "description": "Due home date by which the aircraft must return to its home station, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-01-03T01:01:01.123Z"
          },
          "dhdReason": {
            "description": "Reason the aircraft must return to home station by its due home date.",
            "maxLength": 32,
            "type": "string",
            "example": "Due for maintenance"
          },
          "aircraftEvent": {
            "description": "Aircraft event text.",
            "maxLength": 128,
            "type": "string",
            "example": "Example event"
          },
          "soe": {
            "description": "Indicates the group responsible for recording the completion time of the next event in the sequence of events assigned to this sortie (e.g. OPS - Operations, MX - Maintenance, TR - Transportation, etc.).",
            "maxLength": 16,
            "type": "string",
            "example": "OPS"
          },
          "legNum": {
            "format": "int32",
            "description": "The leg number of this sortie.",
            "type": "integer",
            "example": 14
          },
          "flightTime": {
            "format": "double",
            "description": "The planned flight time for this sortie, in minutes.",
            "type": "number",
            "example": 104.5
          },
          "gndTime": {
            "format": "double",
            "description": "Scheduled ground time, in minutes.",
            "type": "number",
            "example": 387.8
          },
          "rawFileURI": {
            "description": "When crew papers are associated to this sortie, the system updates this value. This field is the URI location in the document repository of that raw file. To download the raw file, prepend https://udl-hostname/scs/download?id= to this field's value.",
            "maxLength": 256,
            "type": "string",
            "readOnly": true,
            "example": "Example URI"
          },
          "papersVersion": {
            "description": "The version number of the crew paper.",
            "maxLength": 16,
            "type": "string",
            "readOnly": true,
            "example": "1.1"
          },
          "filename": {
            "description": "Name of the uploaded PDF.",
            "maxLength": 512,
            "type": "string",
            "readOnly": true,
            "example": "ExampleFileName"
          },
          "filesize": {
            "format": "int32",
            "description": "Size of the supporting PDF, in bytes.",
            "type": "integer",
            "readOnly": true,
            "example": 12
          },
          "paperStatus": {
            "description": "The status of the supporting document.",
            "maxLength": 9,
            "enum": [
              "PUBLISHED",
              "DELETED",
              "UPDATED",
              "READ"
            ],
            "type": "string",
            "readOnly": true,
            "example": "PUBLISHED"
          },
          "pprStatus": {
            "description": "The prior permission required (PPR) status.",
            "maxLength": 22,
            "enum": [
              "NOT REQUIRED",
              "REQUIRED NOT REQUESTED",
              "GRANTED",
              "PENDING"
            ],
            "type": "string",
            "example": "PENDING"
          },
          "missionUpdate": {
            "format": "date-time",
            "description": "Time the associated mission data was last updated in relation to the aircraft assignment, in ISO 8601 UTC format with millisecond precision. If this time is coming from an external system, it may not sync with the latest mission time associated to this record.",
            "type": "string",
            "example": "2024-09-09T01:01:01.123Z"
          },
          "delayCode": {
            "description": "The primary delay code.",
            "maxLength": 10,
            "type": "string",
            "example": "500"
          },
          "commanderName": {
            "description": "The last name of the aircraft commander.",
            "maxLength": 36,
            "type": "string",
            "example": "Smith"
          },
          "fmDeskNum": {
            "description": "Desk phone number of the flight manager assigned to the sortie. Null when no flight manager is assigned.",
            "maxLength": 45,
            "type": "string",
            "example": "7198675309"
          },
          "fmName": {
            "description": "Last name of the flight manager assigned to the sortie. Null when no flight manager is assigned.",
            "maxLength": 64,
            "type": "string",
            "example": "Smith"
          },
          "rvnReq": {
            "description": "Type of Ravens required for this sortie (N - None, R - Raven (Security Team) required, C6 - Consider ravens (Ground time over 6 hours), R6 - Ravens required (Ground time over 6 hours)).",
            "maxLength": 2,
            "enum": [
              "N",
              "R",
              "C6",
              "R6"
            ],
            "type": "string",
            "example": "R"
          },
          "passengers": {
            "format": "int32",
            "description": "The number of passengers tasked for this sortie.",
            "type": "integer",
            "example": 17
          },
          "parkingLoc": {
            "description": "The POI parking location.",
            "maxLength": 32,
            "type": "string",
            "example": "KCOS"
          },
          "objectiveRemarks": {
            "description": "Remarks concerning the sortie objective.",
            "maxLength": 512,
            "type": "string",
            "example": "Some objective remark about aircraft A"
          },
          "aircraftRemarks": {
            "description": "Remarks concerning the aircraft.",
            "maxLength": 512,
            "type": "string",
            "example": "Some remark about aircraft A"
          },
          "scheduleRemarks": {
            "description": "Remarks concerning the schedule.",
            "maxLength": 512,
            "type": "string",
            "example": "Some schedule remark about aircraft A"
          },
          "resultRemarks": {
            "description": "Remarks concerning the results of this sortie.",
            "maxLength": 512,
            "type": "string",
            "example": "Some remark about aircraft A"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          }
        }
      },
      "AirEvent_Abridged": {
        "description": "Information related to an air event (e.g. FUEL TRANSFER, AIR DROP) and the associated aircraft.",
        "required": [
          "classificationMarking",
          "type",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system if not provided on create operations.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "026dd511-8ba5-47d3-9909-836149f87686"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "type": {
            "description": "Type of air event (e.g. FUEL TRANSFER, AIR DROP, etc).",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "example": "FUEL TRANSFER"
          },
          "idSortie": {
            "description": "The UDL unique identifier of the sortie associated with this air event.",
            "maxLength": 36,
            "type": "string",
            "example": "b9866c03-2397-4506-8153-852e72d9b54f"
          },
          "idMission": {
            "description": "The UDL unique identifier of the mission associated with this air event.",
            "maxLength": 36,
            "type": "string",
            "example": "190dea6d-2a90-45a2-a276-be9047d9b96c"
          },
          "externalAirEventId": {
            "description": "Optional air event ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "MB014313032022407540"
          },
          "legNum": {
            "format": "int32",
            "description": "Identifies the Itinerary point of a sortie where an air event occurs.",
            "type": "integer",
            "example": 825
          },
          "location": {
            "description": "The location representing this air event specified as a feature Id. Locations specified include air refueling track Ids and air drop event locations.",
            "maxLength": 32,
            "type": "string",
            "example": "901EW"
          },
          "arrPurpose": {
            "description": "The purpose of the air event at the arrival location. Can be either descriptive text such as 'fuel onload' or a purpose code specified by the provider, such as 'A'.",
            "maxLength": 36,
            "type": "string",
            "example": "A"
          },
          "plannedArrTime": {
            "format": "date-time",
            "description": "The scheduled arrival time of the aircraft at the air event, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T13:55:43.123Z"
          },
          "estArrTime": {
            "format": "date-time",
            "description": "The current estimated arrival time of the aircraft at the air event, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T13:59:48.123Z"
          },
          "actualArrTime": {
            "format": "date-time",
            "description": "The actual arrival time of the aircraft at the air event, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T14:00:03.123Z"
          },
          "depPurpose": {
            "description": "The purpose of the air event at the departure location. Can be either descriptive text such as 'fuel onload' or a purpose code specified by the provider, such as 'A'.",
            "maxLength": 36,
            "type": "string",
            "example": "Q"
          },
          "plannedDepTime": {
            "format": "date-time",
            "description": "The scheduled departure time of the aircraft from the air event, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T14:15:43.123Z"
          },
          "estDepTime": {
            "format": "date-time",
            "description": "The current estimated departure time of the aircraft from the air event, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T14:19:48.123Z"
          },
          "actualDepTime": {
            "format": "date-time",
            "description": "The actual departure time of the aircraft from the air event, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T14:17:03.123Z"
          },
          "externalARTrackId": {
            "description": "Optional air refueling track ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "6418a4b68e5c3896bf024cc79aa4174c"
          },
          "arTrackId": {
            "description": "Identifier of the air refueling track, if applicable.",
            "maxLength": 15,
            "type": "string",
            "example": "CH61"
          },
          "arTrackName": {
            "description": "Name of the air refueling track, if applicable.",
            "maxLength": 50,
            "type": "string",
            "example": "CH61 POST"
          },
          "rzct": {
            "format": "date-time",
            "description": "The Rendezvous Control Time is the planned time the tanker and receiver aircraft will rendezvous for an en route type air refueling event, in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T13:55:43.123Z"
          },
          "arct": {
            "format": "date-time",
            "description": "The Air Refueling Control Time is the planned time the tanker aircraft will transfer fuel to the receiver aircraft, in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T15:11:27.123Z"
          },
          "baseAlt": {
            "format": "double",
            "description": "Altitude of this air event, in feet.",
            "type": "number",
            "example": 28000.1
          },
          "priority": {
            "description": "Priority of this air event.",
            "maxLength": 3,
            "type": "string",
            "example": "1A2"
          },
          "trackTime": {
            "format": "double",
            "description": "Length of time the receiver unit has requested for an air event, in hours.",
            "type": "number",
            "example": 1.5
          },
          "statusCode": {
            "description": "Status of this air refueling event track reservation. Receivers are responsible for scheduling or reserving air refueling tracks. Possible values are A (Altitude Reservation), R (Reserved), or Q (Questionable).",
            "maxLength": 2,
            "type": "string",
            "example": "R"
          },
          "rzPoint": {
            "description": "Rendezvous point for the tanker and receiver during this air refueling event. Possible values are AN (Anchor Nav Point), AP (Anchor Pattern), CP (Control Point), ET (Entry Point), EX (Exit Point), IP (Initial Point), NC (Nav Check Point).",
            "maxLength": 20,
            "type": "string",
            "example": "AN"
          },
          "rzType": {
            "description": "Type of rendezvous used for this air refueling event. Possible values are BUD (Buddy), EN (Enroute), GCI (Ground Control), PP (Point Parallel).",
            "maxLength": 3,
            "type": "string",
            "example": "PP"
          },
          "arEventType": {
            "description": "Type of process used by AMC to schedule this air refueling event. Possible values are A (Matched Long Range), F (Matched AMC Short Notice), N (Unmatched Theater Operation Short Notice (Theater Assets)), R, Unmatched Long Range, S (Soft Air Refueling), T (Matched Theater Operation Short Notice (Theater Assets)), V (Unmatched AMC Short Notice), X (Unmatched Theater Operation Short Notice (AMC Assets)), Y (Matched Theater Operation Short Notice (AMC Assets)), Z (Other Air Refueling).",
            "maxLength": 2,
            "type": "string",
            "example": "V"
          },
          "numTankers": {
            "format": "int32",
            "description": "The number of tankers requested for an air refueling event.",
            "type": "integer",
            "example": 1
          },
          "revTrack": {
            "description": "Flag indicating if the receiver unit has requested flying an air refueling track in both directions.",
            "type": "boolean",
            "example": true
          },
          "shortTrack": {
            "description": "Flag indicating that the receiver unit has requested flying a short portion of an air refueling track.",
            "type": "boolean",
            "example": true
          },
          "cancelled": {
            "description": "Flag indicating that this air refueling event has been cancelled.",
            "type": "boolean",
            "example": false
          },
          "tankers": {
            "description": "Collection of tanker aircraft associated with this Air Event.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirEventTankers_Abridged"
            }
          },
          "receivers": {
            "description": "Collection of receiver aircraft associated with this Air Event.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirEventReceivers_Abridged"
            }
          },
          "remarks": {
            "description": "Collection of remarks associated with this Air Event.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirEventRemarks_Abridged"
            }
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "AirEvent_Full": {
        "description": "Information related to an air event (e.g. FUEL TRANSFER, AIR DROP) and the associated aircraft.",
        "required": [
          "classificationMarking",
          "type",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system if not provided on create operations.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "026dd511-8ba5-47d3-9909-836149f87686"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "type": {
            "description": "Type of air event (e.g. FUEL TRANSFER, AIR DROP, etc).",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "example": "FUEL TRANSFER"
          },
          "idSortie": {
            "description": "The UDL unique identifier of the sortie associated with this air event.",
            "maxLength": 36,
            "type": "string",
            "example": "b9866c03-2397-4506-8153-852e72d9b54f"
          },
          "idMission": {
            "description": "The UDL unique identifier of the mission associated with this air event.",
            "maxLength": 36,
            "type": "string",
            "example": "190dea6d-2a90-45a2-a276-be9047d9b96c"
          },
          "externalAirEventId": {
            "description": "Optional air event ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "MB014313032022407540"
          },
          "legNum": {
            "format": "int32",
            "description": "Identifies the Itinerary point of a sortie where an air event occurs.",
            "type": "integer",
            "example": 825
          },
          "location": {
            "description": "The location representing this air event specified as a feature Id. Locations specified include air refueling track Ids and air drop event locations.",
            "maxLength": 32,
            "type": "string",
            "example": "901EW"
          },
          "arrPurpose": {
            "description": "The purpose of the air event at the arrival location. Can be either descriptive text such as 'fuel onload' or a purpose code specified by the provider, such as 'A'.",
            "maxLength": 36,
            "type": "string",
            "example": "A"
          },
          "plannedArrTime": {
            "format": "date-time",
            "description": "The scheduled arrival time of the aircraft at the air event, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T13:55:43.123Z"
          },
          "estArrTime": {
            "format": "date-time",
            "description": "The current estimated arrival time of the aircraft at the air event, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T13:59:48.123Z"
          },
          "actualArrTime": {
            "format": "date-time",
            "description": "The actual arrival time of the aircraft at the air event, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T14:00:03.123Z"
          },
          "depPurpose": {
            "description": "The purpose of the air event at the departure location. Can be either descriptive text such as 'fuel onload' or a purpose code specified by the provider, such as 'A'.",
            "maxLength": 36,
            "type": "string",
            "example": "Q"
          },
          "plannedDepTime": {
            "format": "date-time",
            "description": "The scheduled departure time of the aircraft from the air event, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T14:15:43.123Z"
          },
          "estDepTime": {
            "format": "date-time",
            "description": "The current estimated departure time of the aircraft from the air event, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T14:19:48.123Z"
          },
          "actualDepTime": {
            "format": "date-time",
            "description": "The actual departure time of the aircraft from the air event, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T14:17:03.123Z"
          },
          "externalARTrackId": {
            "description": "Optional air refueling track ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "6418a4b68e5c3896bf024cc79aa4174c"
          },
          "arTrackId": {
            "description": "Identifier of the air refueling track, if applicable.",
            "maxLength": 15,
            "type": "string",
            "example": "CH61"
          },
          "arTrackName": {
            "description": "Name of the air refueling track, if applicable.",
            "maxLength": 50,
            "type": "string",
            "example": "CH61 POST"
          },
          "rzct": {
            "format": "date-time",
            "description": "The Rendezvous Control Time is the planned time the tanker and receiver aircraft will rendezvous for an en route type air refueling event, in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T13:55:43.123Z"
          },
          "arct": {
            "format": "date-time",
            "description": "The Air Refueling Control Time is the planned time the tanker aircraft will transfer fuel to the receiver aircraft, in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T15:11:27.123Z"
          },
          "baseAlt": {
            "format": "double",
            "description": "Altitude of this air event, in feet.",
            "type": "number",
            "example": 28000.1
          },
          "priority": {
            "description": "Priority of this air event.",
            "maxLength": 3,
            "type": "string",
            "example": "1A2"
          },
          "trackTime": {
            "format": "double",
            "description": "Length of time the receiver unit has requested for an air event, in hours.",
            "type": "number",
            "example": 1.5
          },
          "statusCode": {
            "description": "Status of this air refueling event track reservation. Receivers are responsible for scheduling or reserving air refueling tracks. Possible values are A (Altitude Reservation), R (Reserved), or Q (Questionable).",
            "maxLength": 2,
            "type": "string",
            "example": "R"
          },
          "rzPoint": {
            "description": "Rendezvous point for the tanker and receiver during this air refueling event. Possible values are AN (Anchor Nav Point), AP (Anchor Pattern), CP (Control Point), ET (Entry Point), EX (Exit Point), IP (Initial Point), NC (Nav Check Point).",
            "maxLength": 20,
            "type": "string",
            "example": "AN"
          },
          "rzType": {
            "description": "Type of rendezvous used for this air refueling event. Possible values are BUD (Buddy), EN (Enroute), GCI (Ground Control), PP (Point Parallel).",
            "maxLength": 3,
            "type": "string",
            "example": "PP"
          },
          "arEventType": {
            "description": "Type of process used by AMC to schedule this air refueling event. Possible values are A (Matched Long Range), F (Matched AMC Short Notice), N (Unmatched Theater Operation Short Notice (Theater Assets)), R, Unmatched Long Range, S (Soft Air Refueling), T (Matched Theater Operation Short Notice (Theater Assets)), V (Unmatched AMC Short Notice), X (Unmatched Theater Operation Short Notice (AMC Assets)), Y (Matched Theater Operation Short Notice (AMC Assets)), Z (Other Air Refueling).",
            "maxLength": 2,
            "type": "string",
            "example": "V"
          },
          "numTankers": {
            "format": "int32",
            "description": "The number of tankers requested for an air refueling event.",
            "type": "integer",
            "example": 1
          },
          "revTrack": {
            "description": "Flag indicating if the receiver unit has requested flying an air refueling track in both directions.",
            "type": "boolean",
            "example": true
          },
          "shortTrack": {
            "description": "Flag indicating that the receiver unit has requested flying a short portion of an air refueling track.",
            "type": "boolean",
            "example": true
          },
          "cancelled": {
            "description": "Flag indicating that this air refueling event has been cancelled.",
            "type": "boolean",
            "example": false
          },
          "tankers": {
            "description": "Collection of tanker aircraft associated with this Air Event.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirEventTankers_Full"
            }
          },
          "receivers": {
            "description": "Collection of receiver aircraft associated with this Air Event.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirEventReceivers_Full"
            }
          },
          "remarks": {
            "description": "Collection of remarks associated with this Air Event.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirEventRemarks_Full"
            }
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "AirEvent_Ingest": {
        "description": "Information related to an air event (e.g. FUEL TRANSFER, AIR DROP) and the associated aircraft.",
        "required": [
          "classificationMarking",
          "type",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system if not provided on create operations.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "026dd511-8ba5-47d3-9909-836149f87686"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "type": {
            "description": "Type of air event (e.g. FUEL TRANSFER, AIR DROP, etc).",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "example": "FUEL TRANSFER"
          },
          "idSortie": {
            "description": "The UDL unique identifier of the sortie associated with this air event.",
            "maxLength": 36,
            "type": "string",
            "example": "b9866c03-2397-4506-8153-852e72d9b54f"
          },
          "idMission": {
            "description": "The UDL unique identifier of the mission associated with this air event.",
            "maxLength": 36,
            "type": "string",
            "example": "190dea6d-2a90-45a2-a276-be9047d9b96c"
          },
          "externalAirEventId": {
            "description": "Optional air event ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "MB014313032022407540"
          },
          "legNum": {
            "format": "int32",
            "description": "Identifies the Itinerary point of a sortie where an air event occurs.",
            "type": "integer",
            "example": 825
          },
          "location": {
            "description": "The location representing this air event specified as a feature Id. Locations specified include air refueling track Ids and air drop event locations.",
            "maxLength": 32,
            "type": "string",
            "example": "901EW"
          },
          "arrPurpose": {
            "description": "The purpose of the air event at the arrival location. Can be either descriptive text such as 'fuel onload' or a purpose code specified by the provider, such as 'A'.",
            "maxLength": 36,
            "type": "string",
            "example": "A"
          },
          "plannedArrTime": {
            "format": "date-time",
            "description": "The scheduled arrival time of the aircraft at the air event, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T13:55:43.123Z"
          },
          "estArrTime": {
            "format": "date-time",
            "description": "The current estimated arrival time of the aircraft at the air event, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T13:59:48.123Z"
          },
          "actualArrTime": {
            "format": "date-time",
            "description": "The actual arrival time of the aircraft at the air event, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T14:00:03.123Z"
          },
          "depPurpose": {
            "description": "The purpose of the air event at the departure location. Can be either descriptive text such as 'fuel onload' or a purpose code specified by the provider, such as 'A'.",
            "maxLength": 36,
            "type": "string",
            "example": "Q"
          },
          "plannedDepTime": {
            "format": "date-time",
            "description": "The scheduled departure time of the aircraft from the air event, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T14:15:43.123Z"
          },
          "estDepTime": {
            "format": "date-time",
            "description": "The current estimated departure time of the aircraft from the air event, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T14:19:48.123Z"
          },
          "actualDepTime": {
            "format": "date-time",
            "description": "The actual departure time of the aircraft from the air event, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T14:17:03.123Z"
          },
          "externalARTrackId": {
            "description": "Optional air refueling track ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "6418a4b68e5c3896bf024cc79aa4174c"
          },
          "arTrackId": {
            "description": "Identifier of the air refueling track, if applicable.",
            "maxLength": 15,
            "type": "string",
            "example": "CH61"
          },
          "arTrackName": {
            "description": "Name of the air refueling track, if applicable.",
            "maxLength": 50,
            "type": "string",
            "example": "CH61 POST"
          },
          "rzct": {
            "format": "date-time",
            "description": "The Rendezvous Control Time is the planned time the tanker and receiver aircraft will rendezvous for an en route type air refueling event, in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T13:55:43.123Z"
          },
          "arct": {
            "format": "date-time",
            "description": "The Air Refueling Control Time is the planned time the tanker aircraft will transfer fuel to the receiver aircraft, in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T15:11:27.123Z"
          },
          "baseAlt": {
            "format": "double",
            "description": "Altitude of this air event, in feet.",
            "type": "number",
            "example": 28000.1
          },
          "priority": {
            "description": "Priority of this air event.",
            "maxLength": 3,
            "type": "string",
            "example": "1A2"
          },
          "trackTime": {
            "format": "double",
            "description": "Length of time the receiver unit has requested for an air event, in hours.",
            "type": "number",
            "example": 1.5
          },
          "statusCode": {
            "description": "Status of this air refueling event track reservation. Receivers are responsible for scheduling or reserving air refueling tracks. Possible values are A (Altitude Reservation), R (Reserved), or Q (Questionable).",
            "maxLength": 2,
            "type": "string",
            "example": "R"
          },
          "rzPoint": {
            "description": "Rendezvous point for the tanker and receiver during this air refueling event. Possible values are AN (Anchor Nav Point), AP (Anchor Pattern), CP (Control Point), ET (Entry Point), EX (Exit Point), IP (Initial Point), NC (Nav Check Point).",
            "maxLength": 20,
            "type": "string",
            "example": "AN"
          },
          "rzType": {
            "description": "Type of rendezvous used for this air refueling event. Possible values are BUD (Buddy), EN (Enroute), GCI (Ground Control), PP (Point Parallel).",
            "maxLength": 3,
            "type": "string",
            "example": "PP"
          },
          "arEventType": {
            "description": "Type of process used by AMC to schedule this air refueling event. Possible values are A (Matched Long Range), F (Matched AMC Short Notice), N (Unmatched Theater Operation Short Notice (Theater Assets)), R, Unmatched Long Range, S (Soft Air Refueling), T (Matched Theater Operation Short Notice (Theater Assets)), V (Unmatched AMC Short Notice), X (Unmatched Theater Operation Short Notice (AMC Assets)), Y (Matched Theater Operation Short Notice (AMC Assets)), Z (Other Air Refueling).",
            "maxLength": 2,
            "type": "string",
            "example": "V"
          },
          "numTankers": {
            "format": "int32",
            "description": "The number of tankers requested for an air refueling event.",
            "type": "integer",
            "example": 1
          },
          "revTrack": {
            "description": "Flag indicating if the receiver unit has requested flying an air refueling track in both directions.",
            "type": "boolean",
            "example": true
          },
          "shortTrack": {
            "description": "Flag indicating that the receiver unit has requested flying a short portion of an air refueling track.",
            "type": "boolean",
            "example": true
          },
          "cancelled": {
            "description": "Flag indicating that this air refueling event has been cancelled.",
            "type": "boolean",
            "example": false
          },
          "tankers": {
            "description": "Collection of tanker aircraft associated with this Air Event.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirEventTankers_Ingest"
            }
          },
          "receivers": {
            "description": "Collection of receiver aircraft associated with this Air Event.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirEventReceivers_Ingest"
            }
          },
          "remarks": {
            "description": "Collection of remarks associated with this Air Event.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirEventRemarks_Ingest"
            }
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "AirEventReceivers_Abridged": {
        "description": "Collection of receiver aircraft associated with this Air Event.",
        "type": "object",
        "properties": {
          "idReceiverSortie": {
            "description": "The UDL ID of the aircraft sortie this receiver is associated with for this event.",
            "maxLength": 36,
            "type": "string",
            "example": "1d03e85a-1fb9-4f6e-86a0-593306b6e3f0"
          },
          "idReceiverMission": {
            "description": "The UDL ID of the mission this receiver is associated with for this event.",
            "maxLength": 36,
            "type": "string",
            "example": "ce99757d-f733-461f-8939-3939d4f05946"
          },
          "idReceiverAirfield": {
            "description": "The UDL ID of the airfield this receiver is associated with for this event.",
            "maxLength": 36,
            "type": "string",
            "example": "96c4c2ba-a031-4e58-9b8e-3c6fb90a7534"
          },
          "externalReceiverId": {
            "description": "Optional receiver identifier from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "3fb8169f-adc1-4667-acab-8415a012d766"
          },
          "receiverCoord": {
            "description": "Coordination record identifier of this receiver.",
            "maxLength": 6,
            "type": "string",
            "example": "TTC601"
          },
          "receiverMDS": {
            "description": "The Model Design Series designation of this receiver.",
            "maxLength": 128,
            "type": "string",
            "example": "KC135R"
          },
          "amcReceiverMissionId": {
            "description": "The Air Mobility Command (AMC) mission identifier of this receiver.",
            "maxLength": 36,
            "type": "string",
            "example": "8PH000B1S052"
          },
          "altReceiverMissionId": {
            "description": "Alternate mission identifier of this receiver provided by source.",
            "maxLength": 32,
            "type": "string",
            "example": "1UN05201L121"
          },
          "receiverCallSign": {
            "description": "The call sign assigned to this receiver.",
            "maxLength": 24,
            "type": "string",
            "example": "BAKER"
          },
          "receiverOwner": {
            "description": "The wing or unit that owns this receiver.",
            "maxLength": 256,
            "type": "string",
            "example": "117ARW"
          },
          "receiverPOC": {
            "description": "The name and/or number of the point of contact for this receiver.",
            "maxLength": 68,
            "type": "string",
            "example": "JOHN SMITH (555)555-5555"
          },
          "receiverLegNum": {
            "format": "int32",
            "description": "Identifies the itinerary point of a mission that this receiver is linked to.",
            "type": "integer",
            "example": 825
          },
          "receiverDeployedICAO": {
            "description": "Location the receiver is deployed to for an air refueling event.",
            "maxLength": 4,
            "type": "string",
            "example": "KOFF"
          },
          "receiverDeliveryMethod": {
            "description": "Type of fuel delivery method used by the receiver during an air refueling event (BOOM, DROGUE, BOTH).",
            "maxLength": 6,
            "type": "string",
            "example": "DROGUE"
          },
          "fuelOn": {
            "format": "double",
            "description": "Total weight of the fuel transferred to this receiver during an air refueling event, in pounds.",
            "type": "number",
            "example": 15000000.1
          },
          "receiverCellPosition": {
            "format": "int32",
            "description": "Position of this receiver within a group of receivers in an air refueling event.",
            "type": "integer",
            "example": 2
          },
          "sequenceNum": {
            "description": "Indicates the unique number by Unit ID, which identifies an air refueling event.",
            "maxLength": 15,
            "type": "string",
            "example": "1018"
          },
          "recOrg": {
            "description": "The major command level (MAJCOM) or foreign military sales (FMS) name of the receiver's organization. The tanker flying hours used for an air refueling event are logged against the receiver MAJCOM or foreign government being supported.",
            "maxLength": 3,
            "type": "string",
            "example": "AMC"
          },
          "numRecAircraft": {
            "format": "int32",
            "description": "Number of aircraft contained within one receiver coordination record for an air refueling event.",
            "type": "integer",
            "example": 3
          },
          "receiverFuelType": {
            "description": "Type of fuel being transferred to the receiver in an air refueling event.",
            "maxLength": 3,
            "type": "string",
            "example": "JP8"
          },
          "receiverExercise": {
            "description": "Name of the receiver exercise associated with an air refueling event.",
            "maxLength": 12,
            "type": "string",
            "example": "NATO19"
          },
          "packageId": {
            "description": "The package identifier for the receiver in an air refueling event.",
            "maxLength": 3,
            "type": "string",
            "example": "135"
          }
        }
      },
      "AirEventReceivers_Full": {
        "description": "Collection of receiver aircraft associated with this Air Event.",
        "type": "object",
        "properties": {
          "idReceiverSortie": {
            "description": "The UDL ID of the aircraft sortie this receiver is associated with for this event.",
            "maxLength": 36,
            "type": "string",
            "example": "1d03e85a-1fb9-4f6e-86a0-593306b6e3f0"
          },
          "idReceiverMission": {
            "description": "The UDL ID of the mission this receiver is associated with for this event.",
            "maxLength": 36,
            "type": "string",
            "example": "ce99757d-f733-461f-8939-3939d4f05946"
          },
          "idReceiverAirfield": {
            "description": "The UDL ID of the airfield this receiver is associated with for this event.",
            "maxLength": 36,
            "type": "string",
            "example": "96c4c2ba-a031-4e58-9b8e-3c6fb90a7534"
          },
          "externalReceiverId": {
            "description": "Optional receiver identifier from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "3fb8169f-adc1-4667-acab-8415a012d766"
          },
          "receiverCoord": {
            "description": "Coordination record identifier of this receiver.",
            "maxLength": 6,
            "type": "string",
            "example": "TTC601"
          },
          "receiverMDS": {
            "description": "The Model Design Series designation of this receiver.",
            "maxLength": 128,
            "type": "string",
            "example": "KC135R"
          },
          "amcReceiverMissionId": {
            "description": "The Air Mobility Command (AMC) mission identifier of this receiver.",
            "maxLength": 36,
            "type": "string",
            "example": "8PH000B1S052"
          },
          "altReceiverMissionId": {
            "description": "Alternate mission identifier of this receiver provided by source.",
            "maxLength": 32,
            "type": "string",
            "example": "1UN05201L121"
          },
          "receiverCallSign": {
            "description": "The call sign assigned to this receiver.",
            "maxLength": 24,
            "type": "string",
            "example": "BAKER"
          },
          "receiverOwner": {
            "description": "The wing or unit that owns this receiver.",
            "maxLength": 256,
            "type": "string",
            "example": "117ARW"
          },
          "receiverPOC": {
            "description": "The name and/or number of the point of contact for this receiver.",
            "maxLength": 68,
            "type": "string",
            "example": "JOHN SMITH (555)555-5555"
          },
          "receiverLegNum": {
            "format": "int32",
            "description": "Identifies the itinerary point of a mission that this receiver is linked to.",
            "type": "integer",
            "example": 825
          },
          "receiverDeployedICAO": {
            "description": "Location the receiver is deployed to for an air refueling event.",
            "maxLength": 4,
            "type": "string",
            "example": "KOFF"
          },
          "receiverDeliveryMethod": {
            "description": "Type of fuel delivery method used by the receiver during an air refueling event (BOOM, DROGUE, BOTH).",
            "maxLength": 6,
            "type": "string",
            "example": "DROGUE"
          },
          "fuelOn": {
            "format": "double",
            "description": "Total weight of the fuel transferred to this receiver during an air refueling event, in pounds.",
            "type": "number",
            "example": 15000000.1
          },
          "receiverCellPosition": {
            "format": "int32",
            "description": "Position of this receiver within a group of receivers in an air refueling event.",
            "type": "integer",
            "example": 2
          },
          "sequenceNum": {
            "description": "Indicates the unique number by Unit ID, which identifies an air refueling event.",
            "maxLength": 15,
            "type": "string",
            "example": "1018"
          },
          "recOrg": {
            "description": "The major command level (MAJCOM) or foreign military sales (FMS) name of the receiver's organization. The tanker flying hours used for an air refueling event are logged against the receiver MAJCOM or foreign government being supported.",
            "maxLength": 3,
            "type": "string",
            "example": "AMC"
          },
          "numRecAircraft": {
            "format": "int32",
            "description": "Number of aircraft contained within one receiver coordination record for an air refueling event.",
            "type": "integer",
            "example": 3
          },
          "receiverFuelType": {
            "description": "Type of fuel being transferred to the receiver in an air refueling event.",
            "maxLength": 3,
            "type": "string",
            "example": "JP8"
          },
          "receiverExercise": {
            "description": "Name of the receiver exercise associated with an air refueling event.",
            "maxLength": 12,
            "type": "string",
            "example": "NATO19"
          },
          "packageId": {
            "description": "The package identifier for the receiver in an air refueling event.",
            "maxLength": 3,
            "type": "string",
            "example": "135"
          }
        }
      },
      "AirEventReceivers_Ingest": {
        "description": "Collection of receiver aircraft associated with this Air Event.",
        "type": "object",
        "properties": {
          "idReceiverSortie": {
            "description": "The UDL ID of the aircraft sortie this receiver is associated with for this event.",
            "maxLength": 36,
            "type": "string",
            "example": "1d03e85a-1fb9-4f6e-86a0-593306b6e3f0"
          },
          "idReceiverMission": {
            "description": "The UDL ID of the mission this receiver is associated with for this event.",
            "maxLength": 36,
            "type": "string",
            "example": "ce99757d-f733-461f-8939-3939d4f05946"
          },
          "idReceiverAirfield": {
            "description": "The UDL ID of the airfield this receiver is associated with for this event.",
            "maxLength": 36,
            "type": "string",
            "example": "96c4c2ba-a031-4e58-9b8e-3c6fb90a7534"
          },
          "externalReceiverId": {
            "description": "Optional receiver identifier from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "3fb8169f-adc1-4667-acab-8415a012d766"
          },
          "receiverCoord": {
            "description": "Coordination record identifier of this receiver.",
            "maxLength": 6,
            "type": "string",
            "example": "TTC601"
          },
          "receiverMDS": {
            "description": "The Model Design Series designation of this receiver.",
            "maxLength": 128,
            "type": "string",
            "example": "KC135R"
          },
          "amcReceiverMissionId": {
            "description": "The Air Mobility Command (AMC) mission identifier of this receiver.",
            "maxLength": 36,
            "type": "string",
            "example": "8PH000B1S052"
          },
          "altReceiverMissionId": {
            "description": "Alternate mission identifier of this receiver provided by source.",
            "maxLength": 32,
            "type": "string",
            "example": "1UN05201L121"
          },
          "receiverCallSign": {
            "description": "The call sign assigned to this receiver.",
            "maxLength": 24,
            "type": "string",
            "example": "BAKER"
          },
          "receiverOwner": {
            "description": "The wing or unit that owns this receiver.",
            "maxLength": 256,
            "type": "string",
            "example": "117ARW"
          },
          "receiverPOC": {
            "description": "The name and/or number of the point of contact for this receiver.",
            "maxLength": 68,
            "type": "string",
            "example": "JOHN SMITH (555)555-5555"
          },
          "receiverLegNum": {
            "format": "int32",
            "description": "Identifies the itinerary point of a mission that this receiver is linked to.",
            "type": "integer",
            "example": 825
          },
          "receiverDeployedICAO": {
            "description": "Location the receiver is deployed to for an air refueling event.",
            "maxLength": 4,
            "type": "string",
            "example": "KOFF"
          },
          "receiverDeliveryMethod": {
            "description": "Type of fuel delivery method used by the receiver during an air refueling event (BOOM, DROGUE, BOTH).",
            "maxLength": 6,
            "type": "string",
            "example": "DROGUE"
          },
          "fuelOn": {
            "format": "double",
            "description": "Total weight of the fuel transferred to this receiver during an air refueling event, in pounds.",
            "type": "number",
            "example": 15000000.1
          },
          "receiverCellPosition": {
            "format": "int32",
            "description": "Position of this receiver within a group of receivers in an air refueling event.",
            "type": "integer",
            "example": 2
          },
          "sequenceNum": {
            "description": "Indicates the unique number by Unit ID, which identifies an air refueling event.",
            "maxLength": 15,
            "type": "string",
            "example": "1018"
          },
          "recOrg": {
            "description": "The major command level (MAJCOM) or foreign military sales (FMS) name of the receiver's organization. The tanker flying hours used for an air refueling event are logged against the receiver MAJCOM or foreign government being supported.",
            "maxLength": 3,
            "type": "string",
            "example": "AMC"
          },
          "numRecAircraft": {
            "format": "int32",
            "description": "Number of aircraft contained within one receiver coordination record for an air refueling event.",
            "type": "integer",
            "example": 3
          },
          "receiverFuelType": {
            "description": "Type of fuel being transferred to the receiver in an air refueling event.",
            "maxLength": 3,
            "type": "string",
            "example": "JP8"
          },
          "receiverExercise": {
            "description": "Name of the receiver exercise associated with an air refueling event.",
            "maxLength": 12,
            "type": "string",
            "example": "NATO19"
          },
          "packageId": {
            "description": "The package identifier for the receiver in an air refueling event.",
            "maxLength": 3,
            "type": "string",
            "example": "135"
          }
        }
      },
      "AirEventRemarks_Abridged": {
        "description": "Collection of remarks associated with this Air Event.",
        "type": "object",
        "properties": {
          "externalRemarkId": {
            "description": "Optional remark ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "23ea2877a6f74d7d8f309567a5896441"
          },
          "text": {
            "description": "Text of the remark.",
            "maxLength": 1024,
            "type": "string",
            "example": "Example air event remarks."
          },
          "date": {
            "format": "date-time",
            "description": "Date the remark was published, in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "user": {
            "description": "User who published the remark.",
            "maxLength": 20,
            "type": "string",
            "example": "John Doe"
          }
        }
      },
      "AirEventRemarks_Full": {
        "description": "Collection of remarks associated with this Air Event.",
        "type": "object",
        "properties": {
          "externalRemarkId": {
            "description": "Optional remark ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "23ea2877a6f74d7d8f309567a5896441"
          },
          "text": {
            "description": "Text of the remark.",
            "maxLength": 1024,
            "type": "string",
            "example": "Example air event remarks."
          },
          "date": {
            "format": "date-time",
            "description": "Date the remark was published, in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "user": {
            "description": "User who published the remark.",
            "maxLength": 20,
            "type": "string",
            "example": "John Doe"
          }
        }
      },
      "AirEventRemarks_Ingest": {
        "description": "Collection of remarks associated with this Air Event.",
        "type": "object",
        "properties": {
          "externalRemarkId": {
            "description": "Optional remark ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "23ea2877a6f74d7d8f309567a5896441"
          },
          "text": {
            "description": "Text of the remark.",
            "maxLength": 1024,
            "type": "string",
            "example": "Example air event remarks."
          },
          "date": {
            "format": "date-time",
            "description": "Date the remark was published, in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "user": {
            "description": "User who published the remark.",
            "maxLength": 20,
            "type": "string",
            "example": "John Doe"
          }
        }
      },
      "AirEventTankers_Abridged": {
        "description": "Collection of tanker aircraft associated with this Air Event.",
        "type": "object",
        "properties": {
          "idTankerSortie": {
            "description": "The UDL ID of the aircraft sortie this tanker is associated with for this event.",
            "maxLength": 36,
            "type": "string",
            "example": "d833a4bc-756b-41d5-8845-f146fe563387"
          },
          "idTankerMission": {
            "description": "The UDL ID of the mission this tanker is associated with for this event.",
            "maxLength": 36,
            "type": "string",
            "example": "edef700c-9917-4dbf-a153-89ffd4446fe9"
          },
          "idTankerAirfield": {
            "description": "The UDL ID of the airfield this tanker is associated with for this event.",
            "maxLength": 36,
            "type": "string",
            "example": "b33955d2-67d3-42be-8316-263e284ce6cc"
          },
          "externalTankerId": {
            "description": "Optional tanker identifier from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "ca673c580fb949a5b733f0e0b67ffab2"
          },
          "tankerCoord": {
            "description": "Coordination record identifier of this tanker.",
            "maxLength": 6,
            "type": "string",
            "example": "TTC601"
          },
          "tankerMDS": {
            "description": "The Model Design Series designation of this tanker.",
            "maxLength": 128,
            "type": "string",
            "example": "KC135R"
          },
          "amcTankerMissionId": {
            "description": "The Air Mobility Command (AMC) mission identifier of this tanker.",
            "maxLength": 36,
            "type": "string",
            "example": "8PH000B1S052"
          },
          "altTankerMissionId": {
            "description": "Alternate mission identifier of this tanker provided by source.",
            "maxLength": 32,
            "type": "string",
            "example": "1UN05201L121"
          },
          "tankerCallSign": {
            "description": "The call sign assigned to this tanker.",
            "maxLength": 24,
            "type": "string",
            "example": "BAKER"
          },
          "tankerOwner": {
            "description": "The wing or unit that owns this tanker.",
            "maxLength": 256,
            "type": "string",
            "example": "117ARW"
          },
          "tankerPOC": {
            "description": "The name and/or number of the point of contact for this tanker.",
            "maxLength": 68,
            "type": "string",
            "example": "JOHN SMITH (555)555-5555"
          },
          "tankerLegNum": {
            "format": "int32",
            "description": "Identifies the itinerary point of a mission that this tanker is linked to.",
            "type": "integer",
            "example": 825
          },
          "tankerDeployedICAO": {
            "description": "Location the tanker has been deployed to in preparation for an air refueling event.",
            "maxLength": 4,
            "type": "string",
            "example": "KOFF"
          },
          "tankerDeliveryMethod": {
            "description": "Type of fuel delivery method used by the tanker during an air refueling event (BOOM, DROGUE, BOTH).",
            "maxLength": 6,
            "type": "string",
            "example": "DROGUE"
          },
          "fuelOff": {
            "format": "double",
            "description": "Total weight of the fuel transferred from this tanker during an air refueling event, in pounds.",
            "type": "number",
            "example": 15000000.1
          },
          "tankerCellPosition": {
            "format": "int32",
            "description": "Position of this tanker within a group of tankers in an air refueling event.",
            "type": "integer",
            "example": 2
          },
          "tankerFuelType": {
            "description": "Type of fuel being transferred from the tanker in an air refueling event.",
            "maxLength": 3,
            "type": "string",
            "example": "JP8"
          },
          "dualRole": {
            "description": "Flag indicating that this tanker is flying a dual role mission in an air refueling event.",
            "type": "boolean",
            "example": true
          }
        }
      },
      "AirEventTankers_Full": {
        "description": "Collection of tanker aircraft associated with this Air Event.",
        "type": "object",
        "properties": {
          "idTankerSortie": {
            "description": "The UDL ID of the aircraft sortie this tanker is associated with for this event.",
            "maxLength": 36,
            "type": "string",
            "example": "d833a4bc-756b-41d5-8845-f146fe563387"
          },
          "idTankerMission": {
            "description": "The UDL ID of the mission this tanker is associated with for this event.",
            "maxLength": 36,
            "type": "string",
            "example": "edef700c-9917-4dbf-a153-89ffd4446fe9"
          },
          "idTankerAirfield": {
            "description": "The UDL ID of the airfield this tanker is associated with for this event.",
            "maxLength": 36,
            "type": "string",
            "example": "b33955d2-67d3-42be-8316-263e284ce6cc"
          },
          "externalTankerId": {
            "description": "Optional tanker identifier from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "ca673c580fb949a5b733f0e0b67ffab2"
          },
          "tankerCoord": {
            "description": "Coordination record identifier of this tanker.",
            "maxLength": 6,
            "type": "string",
            "example": "TTC601"
          },
          "tankerMDS": {
            "description": "The Model Design Series designation of this tanker.",
            "maxLength": 128,
            "type": "string",
            "example": "KC135R"
          },
          "amcTankerMissionId": {
            "description": "The Air Mobility Command (AMC) mission identifier of this tanker.",
            "maxLength": 36,
            "type": "string",
            "example": "8PH000B1S052"
          },
          "altTankerMissionId": {
            "description": "Alternate mission identifier of this tanker provided by source.",
            "maxLength": 32,
            "type": "string",
            "example": "1UN05201L121"
          },
          "tankerCallSign": {
            "description": "The call sign assigned to this tanker.",
            "maxLength": 24,
            "type": "string",
            "example": "BAKER"
          },
          "tankerOwner": {
            "description": "The wing or unit that owns this tanker.",
            "maxLength": 256,
            "type": "string",
            "example": "117ARW"
          },
          "tankerPOC": {
            "description": "The name and/or number of the point of contact for this tanker.",
            "maxLength": 68,
            "type": "string",
            "example": "JOHN SMITH (555)555-5555"
          },
          "tankerLegNum": {
            "format": "int32",
            "description": "Identifies the itinerary point of a mission that this tanker is linked to.",
            "type": "integer",
            "example": 825
          },
          "tankerDeployedICAO": {
            "description": "Location the tanker has been deployed to in preparation for an air refueling event.",
            "maxLength": 4,
            "type": "string",
            "example": "KOFF"
          },
          "tankerDeliveryMethod": {
            "description": "Type of fuel delivery method used by the tanker during an air refueling event (BOOM, DROGUE, BOTH).",
            "maxLength": 6,
            "type": "string",
            "example": "DROGUE"
          },
          "fuelOff": {
            "format": "double",
            "description": "Total weight of the fuel transferred from this tanker during an air refueling event, in pounds.",
            "type": "number",
            "example": 15000000.1
          },
          "tankerCellPosition": {
            "format": "int32",
            "description": "Position of this tanker within a group of tankers in an air refueling event.",
            "type": "integer",
            "example": 2
          },
          "tankerFuelType": {
            "description": "Type of fuel being transferred from the tanker in an air refueling event.",
            "maxLength": 3,
            "type": "string",
            "example": "JP8"
          },
          "dualRole": {
            "description": "Flag indicating that this tanker is flying a dual role mission in an air refueling event.",
            "type": "boolean",
            "example": true
          }
        }
      },
      "AirEventTankers_Ingest": {
        "description": "Collection of tanker aircraft associated with this Air Event.",
        "type": "object",
        "properties": {
          "idTankerSortie": {
            "description": "The UDL ID of the aircraft sortie this tanker is associated with for this event.",
            "maxLength": 36,
            "type": "string",
            "example": "d833a4bc-756b-41d5-8845-f146fe563387"
          },
          "idTankerMission": {
            "description": "The UDL ID of the mission this tanker is associated with for this event.",
            "maxLength": 36,
            "type": "string",
            "example": "edef700c-9917-4dbf-a153-89ffd4446fe9"
          },
          "idTankerAirfield": {
            "description": "The UDL ID of the airfield this tanker is associated with for this event.",
            "maxLength": 36,
            "type": "string",
            "example": "b33955d2-67d3-42be-8316-263e284ce6cc"
          },
          "externalTankerId": {
            "description": "Optional tanker identifier from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "ca673c580fb949a5b733f0e0b67ffab2"
          },
          "tankerCoord": {
            "description": "Coordination record identifier of this tanker.",
            "maxLength": 6,
            "type": "string",
            "example": "TTC601"
          },
          "tankerMDS": {
            "description": "The Model Design Series designation of this tanker.",
            "maxLength": 128,
            "type": "string",
            "example": "KC135R"
          },
          "amcTankerMissionId": {
            "description": "The Air Mobility Command (AMC) mission identifier of this tanker.",
            "maxLength": 36,
            "type": "string",
            "example": "8PH000B1S052"
          },
          "altTankerMissionId": {
            "description": "Alternate mission identifier of this tanker provided by source.",
            "maxLength": 32,
            "type": "string",
            "example": "1UN05201L121"
          },
          "tankerCallSign": {
            "description": "The call sign assigned to this tanker.",
            "maxLength": 24,
            "type": "string",
            "example": "BAKER"
          },
          "tankerOwner": {
            "description": "The wing or unit that owns this tanker.",
            "maxLength": 256,
            "type": "string",
            "example": "117ARW"
          },
          "tankerPOC": {
            "description": "The name and/or number of the point of contact for this tanker.",
            "maxLength": 68,
            "type": "string",
            "example": "JOHN SMITH (555)555-5555"
          },
          "tankerLegNum": {
            "format": "int32",
            "description": "Identifies the itinerary point of a mission that this tanker is linked to.",
            "type": "integer",
            "example": 825
          },
          "tankerDeployedICAO": {
            "description": "Location the tanker has been deployed to in preparation for an air refueling event.",
            "maxLength": 4,
            "type": "string",
            "example": "KOFF"
          },
          "tankerDeliveryMethod": {
            "description": "Type of fuel delivery method used by the tanker during an air refueling event (BOOM, DROGUE, BOTH).",
            "maxLength": 6,
            "type": "string",
            "example": "DROGUE"
          },
          "fuelOff": {
            "format": "double",
            "description": "Total weight of the fuel transferred from this tanker during an air refueling event, in pounds.",
            "type": "number",
            "example": 15000000.1
          },
          "tankerCellPosition": {
            "format": "int32",
            "description": "Position of this tanker within a group of tankers in an air refueling event.",
            "type": "integer",
            "example": 2
          },
          "tankerFuelType": {
            "description": "Type of fuel being transferred from the tanker in an air refueling event.",
            "maxLength": 3,
            "type": "string",
            "example": "JP8"
          },
          "dualRole": {
            "description": "Flag indicating that this tanker is flying a dual role mission in an air refueling event.",
            "type": "boolean",
            "example": true
          }
        }
      },
      "AirLoadPlan_Abridged": {
        "description": "Information related to how an aircraft is loaded with cargo, equipment, and passengers.",
        "required": [
          "classificationMarking",
          "estDepTime",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "0457f578-e29c-312e-85aa-0a04a430bdd0"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "externalId": {
            "description": "Optional ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "dec7a61a-cd97-4af0-b7bc-f4c3bb33341b"
          },
          "idMission": {
            "description": "The UDL ID of the mission this record is associated with.",
            "maxLength": 36,
            "type": "string",
            "example": "412bebb6-a45e-029c-ca51-e29f8a442b12"
          },
          "missionNumber": {
            "description": "The mission number of the mission supporting this load plan.",
            "maxLength": 16,
            "type": "string",
            "example": "AJM123456123"
          },
          "idSortie": {
            "description": "The UDL ID of the aircraft sortie this record is associated with.",
            "maxLength": 36,
            "type": "string",
            "example": "823acfbe6-f36a-157b-ef32-b47c9b589c4"
          },
          "legNum": {
            "format": "int32",
            "description": "The leg number of the mission supporting this load plan.",
            "type": "integer",
            "example": 200
          },
          "callSign": {
            "description": "The call sign of the mission supporting this load plan.",
            "maxLength": 24,
            "type": "string",
            "example": "RCH1234"
          },
          "tailNumber": {
            "description": "The tail number of the aircraft supporting this load plan.",
            "maxLength": 16,
            "type": "string",
            "example": "77187"
          },
          "aircraftMDS": {
            "description": "The Model Design Series designation of the aircraft supporting this load plan.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "C17A"
          },
          "depICAO": {
            "description": "The departure International Civil Organization (ICAO) code of the departure airfield.",
            "maxLength": 4,
            "type": "string",
            "example": "KCHS"
          },
          "depAirfield": {
            "description": "Optional identifier of departure airfield with no International Civil Organization (ICAO) code.",
            "maxLength": 36,
            "type": "string",
            "example": "W99"
          },
          "estDepTime": {
            "format": "date-time",
            "description": "The current estimated time that the aircraft is planned to depart, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:00:00.123Z"
          },
          "arrICAO": {
            "description": "The arrival International Civil Organization (ICAO) code of the landing airfield.",
            "maxLength": 4,
            "type": "string",
            "example": "ETAR"
          },
          "arrAirfield": {
            "description": "Optional identifier of arrival airfield with no International Civil Organization (ICAO) code.",
            "maxLength": 36,
            "type": "string",
            "example": "W99"
          },
          "estArrTime": {
            "format": "date-time",
            "description": "The current estimated time that the aircraft is planned to arrive, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T02:00:00.123Z"
          },
          "crewSize": {
            "format": "int32",
            "description": "The number of crew members on the aircraft.",
            "type": "integer",
            "example": 5
          },
          "cargoConfig": {
            "description": "The cargo configuration required for this leg (e.g. C-1, C-2, C-3, DV-1, DV-2, AE-1, etc.). Configuration meanings are determined by the data source.",
            "maxLength": 128,
            "type": "string",
            "example": "C-1"
          },
          "equipConfig": {
            "description": "Description of the equipment configuration (e.g. Standard, Ferry, JBLM, CHS, Combat, etc.). Configuration meanings are determined by the data source.",
            "maxLength": 128,
            "type": "string",
            "example": "Standard"
          },
          "tankConfig": {
            "description": "Description of the fuel tank(s) configuration (e.g. ER, NON-ER, etc.). Configuration meanings are determined by the data source.",
            "maxLength": 128,
            "type": "string",
            "example": "ER"
          },
          "basicWeight": {
            "format": "double",
            "description": "The weight of the aircraft without passengers, cargo, equipment, or usable fuel, in kilograms.",
            "type": "number",
            "example": 100.1
          },
          "basicMoment": {
            "format": "double",
            "description": "The basic weight of the aircraft multiplied by the distance between the reference datum and the aircraft's center of gravity, in Newton-meters.",
            "type": "number",
            "example": 2500.1
          },
          "fuelWeight": {
            "format": "double",
            "description": "The weight of usable fuel on board the aircraft, in kilograms.",
            "type": "number",
            "example": 100.1
          },
          "fuelMoment": {
            "format": "double",
            "description": "The fuel weight on board the aircraft multiplied by the distance between the reference datum and the fuel's center of gravity, in Newton-meters.",
            "type": "number",
            "example": 2500.1
          },
          "estLandingFuelWeight": {
            "format": "double",
            "description": "The estimated weight of usable fuel upon landing, in kilograms.",
            "type": "number",
            "example": 100.1
          },
          "estLandingFuelMoment": {
            "format": "double",
            "description": "The estimated weight of usable fuel upon landing multiplied by the distance between the reference datum and the fuel's center of gravity, in Newton-meters.",
            "type": "number",
            "example": 2500.1
          },
          "operatingWeight": {
            "format": "double",
            "description": "The basic weight of the aircraft including passengers and equipment, in kilograms.",
            "type": "number",
            "example": 100.1
          },
          "operatingMoment": {
            "format": "double",
            "description": "The operating weight of the aircraft multiplied by the distance between the reference datum and the aircraft's center of gravity, in Newton-meters.",
            "type": "number",
            "example": 2500.1
          },
          "cargoWeight": {
            "format": "double",
            "description": "The weight of the cargo on board the aircraft, in kilograms.",
            "type": "number",
            "example": 100.1
          },
          "cargoMoment": {
            "format": "double",
            "description": "The sum of cargo moments of all cargo on board the aircraft, in Newton-meters. Each individual cargo moment is the weight of the cargo multiplied by the distance between the reference datum and the cargo's center of gravity.",
            "type": "number",
            "example": 2500.1
          },
          "zeroFuelWeight": {
            "format": "double",
            "description": "The operating weight of the aircraft including cargo, mail, baggage, and passengers, but without usable fuel, in kilograms.",
            "type": "number",
            "example": 100.1
          },
          "zeroFuelMoment": {
            "format": "double",
            "description": "The zero fuel weight of the aircraft multiplied by the distance between the reference datum and the aircraft's center of gravity, in Newton-meters.",
            "type": "number",
            "example": 2500.1
          },
          "zeroFuelCG": {
            "format": "double",
            "description": "The center of gravity of the aircraft using the zero fuel weight and zero fuel total moment, as a percentage of the mean aerodynamic chord (%MAC).",
            "type": "number",
            "example": 39.5
          },
          "grossWeight": {
            "format": "double",
            "description": "The total weight of the aircraft at takeoff including passengers, cargo, equipment, and usable fuel, in kilograms.",
            "type": "number",
            "example": 100.1
          },
          "grossMoment": {
            "format": "double",
            "description": "The sum of moments of all items making up the gross weight of the aircraft, in Newton-meters.",
            "type": "number",
            "example": 2500.1
          },
          "grossCG": {
            "format": "double",
            "description": "The center of gravity of the aircraft using the gross weight and gross moment, as a percentage of the mean aerodynamic chord (%MAC).",
            "type": "number",
            "example": 38.8
          },
          "landingWeight": {
            "format": "double",
            "description": "The gross weight of the aircraft upon landing, in kilograms.",
            "type": "number",
            "example": 100.1
          },
          "landingMoment": {
            "format": "double",
            "description": "The sum of moments of all items making up the gross weight of the aircraft upon landing, in Newton-meters.",
            "type": "number",
            "example": 2500.1
          },
          "landingCG": {
            "format": "double",
            "description": "The center of gravity of the aircraft using the landing weight and landing moment, as a percentage of the mean aerodynamic chord (%MAC).",
            "type": "number",
            "example": 38.2
          },
          "seatsOnboard": {
            "format": "int32",
            "description": "Number of passenger seats on the aircraft.",
            "type": "integer",
            "example": 20
          },
          "seatsReleased": {
            "format": "int32",
            "description": "Number of passenger seats released this leg.",
            "type": "integer",
            "example": 15
          },
          "ppOnboard": {
            "format": "int32",
            "description": "Number of pallet positions on the aircraft.",
            "type": "integer",
            "example": 18
          },
          "ppReleased": {
            "format": "int32",
            "description": "Number of pallet positions released this leg.",
            "type": "integer",
            "example": 5
          },
          "aclOnboard": {
            "format": "double",
            "description": "Allowable Cabin Load (ACL) onboard the aircraft. The maximum weight of passengers, baggage, and cargo that can be safely transported in the aircraft cabin, in kilograms.",
            "type": "number",
            "example": 500.1
          },
          "aclReleased": {
            "format": "double",
            "description": "Allowable Cabin Load (ACL) released this leg. The weight of passengers, baggage, and cargo released from the aircraft cabin, in kilograms.",
            "type": "number",
            "example": 200.1
          },
          "cargoBayFSMin": {
            "format": "double",
            "description": "Minimum fuselage station (FS) where cargo can be stored. FS is the distance from the reference datum, in meters.",
            "type": "number",
            "example": 10.1
          },
          "cargoBayFSMax": {
            "format": "double",
            "description": "Maximum fuselage station (FS) where cargo can be stored. FS is the distance from the reference datum, in meters.",
            "type": "number",
            "example": 20.1
          },
          "cargoBayWidth": {
            "format": "double",
            "description": "Width of the cargo bay, in meters.",
            "type": "number",
            "example": 3.1
          },
          "cargoVolume": {
            "format": "double",
            "description": "The volume of cargo space in the aircraft in cubic meters.",
            "type": "number",
            "example": 50.1
          },
          "loadmasterName": {
            "description": "Name of the loadmaster or boom operator who received the cargo briefing.",
            "maxLength": 64,
            "type": "string",
            "example": "John Smith"
          },
          "loadmasterRank": {
            "description": "Rank of the loadmaster or boom operator overseeing cargo loading/unloading.",
            "maxLength": 32,
            "type": "string",
            "example": "Staff Sergeant"
          },
          "availableTime": {
            "format": "date-time",
            "description": "Time the loadmaster or boom operator is available for cargo loading/unloading, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T02:00:00.123Z"
          },
          "schedTime": {
            "format": "date-time",
            "description": "Time the loadmaster or boom operator is scheduled to begin overseeing cargo loading/unloading, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T02:30:00.123Z"
          },
          "briefTime": {
            "format": "date-time",
            "description": "Time the cargo briefing was given to the loadmaster or boom operator, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:00:00.123Z"
          },
          "utilCode": {
            "description": "Alphanumeric code that describes general cargo-related utilization and characteristics for an itinerary point.",
            "maxLength": 2,
            "type": "string",
            "example": "AD"
          },
          "loadRemarks": {
            "description": "Remarks concerning this load plan.",
            "maxLength": 512,
            "type": "string",
            "example": "Load remarks"
          },
          "airLoadPlanULNActuals": {
            "description": "Collection of unit line number actuals associated with this load plan.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirLoadPlanULNActuals_Abridged"
            }
          },
          "airLoadPlanHazmatActuals": {
            "description": "Collection of hazmat actuals associated with this load plan.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirLoadPlanHazmatActuals_Abridged"
            }
          },
          "airLoadPlanPaxCargo": {
            "description": "Collection of passenger and cargo details associated with this load plan for this leg of the mission.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirLoadPlanPaxCargo_Abridged"
            }
          },
          "airLoadPlanPalletDetails": {
            "description": "Collection of cargo information located at the pallet positions associated with this load plan.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirLoadPlanPalletDetails_Abridged"
            }
          },
          "airLoadPlanHR": {
            "description": "Collection of human remains transport information associated with this load plan.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirLoadPlanHR_Abridged"
            }
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "source"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "AirLoadPlan_Full": {
        "description": "Information related to how an aircraft is loaded with cargo, equipment, and passengers.",
        "required": [
          "classificationMarking",
          "estDepTime",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "0457f578-e29c-312e-85aa-0a04a430bdd0"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "externalId": {
            "description": "Optional ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "dec7a61a-cd97-4af0-b7bc-f4c3bb33341b"
          },
          "idMission": {
            "description": "The UDL ID of the mission this record is associated with.",
            "maxLength": 36,
            "type": "string",
            "example": "412bebb6-a45e-029c-ca51-e29f8a442b12"
          },
          "missionNumber": {
            "description": "The mission number of the mission supporting this load plan.",
            "maxLength": 16,
            "type": "string",
            "example": "AJM123456123"
          },
          "idSortie": {
            "description": "The UDL ID of the aircraft sortie this record is associated with.",
            "maxLength": 36,
            "type": "string",
            "example": "823acfbe6-f36a-157b-ef32-b47c9b589c4"
          },
          "legNum": {
            "format": "int32",
            "description": "The leg number of the mission supporting this load plan.",
            "type": "integer",
            "example": 200
          },
          "callSign": {
            "description": "The call sign of the mission supporting this load plan.",
            "maxLength": 24,
            "type": "string",
            "example": "RCH1234"
          },
          "tailNumber": {
            "description": "The tail number of the aircraft supporting this load plan.",
            "maxLength": 16,
            "type": "string",
            "example": "77187"
          },
          "aircraftMDS": {
            "description": "The Model Design Series designation of the aircraft supporting this load plan.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "C17A"
          },
          "depICAO": {
            "description": "The departure International Civil Organization (ICAO) code of the departure airfield.",
            "maxLength": 4,
            "type": "string",
            "example": "KCHS"
          },
          "depAirfield": {
            "description": "Optional identifier of departure airfield with no International Civil Organization (ICAO) code.",
            "maxLength": 36,
            "type": "string",
            "example": "W99"
          },
          "estDepTime": {
            "format": "date-time",
            "description": "The current estimated time that the aircraft is planned to depart, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:00:00.123Z"
          },
          "arrICAO": {
            "description": "The arrival International Civil Organization (ICAO) code of the landing airfield.",
            "maxLength": 4,
            "type": "string",
            "example": "ETAR"
          },
          "arrAirfield": {
            "description": "Optional identifier of arrival airfield with no International Civil Organization (ICAO) code.",
            "maxLength": 36,
            "type": "string",
            "example": "W99"
          },
          "estArrTime": {
            "format": "date-time",
            "description": "The current estimated time that the aircraft is planned to arrive, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T02:00:00.123Z"
          },
          "crewSize": {
            "format": "int32",
            "description": "The number of crew members on the aircraft.",
            "type": "integer",
            "example": 5
          },
          "cargoConfig": {
            "description": "The cargo configuration required for this leg (e.g. C-1, C-2, C-3, DV-1, DV-2, AE-1, etc.). Configuration meanings are determined by the data source.",
            "maxLength": 128,
            "type": "string",
            "example": "C-1"
          },
          "equipConfig": {
            "description": "Description of the equipment configuration (e.g. Standard, Ferry, JBLM, CHS, Combat, etc.). Configuration meanings are determined by the data source.",
            "maxLength": 128,
            "type": "string",
            "example": "Standard"
          },
          "tankConfig": {
            "description": "Description of the fuel tank(s) configuration (e.g. ER, NON-ER, etc.). Configuration meanings are determined by the data source.",
            "maxLength": 128,
            "type": "string",
            "example": "ER"
          },
          "basicWeight": {
            "format": "double",
            "description": "The weight of the aircraft without passengers, cargo, equipment, or usable fuel, in kilograms.",
            "type": "number",
            "example": 100.1
          },
          "basicMoment": {
            "format": "double",
            "description": "The basic weight of the aircraft multiplied by the distance between the reference datum and the aircraft's center of gravity, in Newton-meters.",
            "type": "number",
            "example": 2500.1
          },
          "fuelWeight": {
            "format": "double",
            "description": "The weight of usable fuel on board the aircraft, in kilograms.",
            "type": "number",
            "example": 100.1
          },
          "fuelMoment": {
            "format": "double",
            "description": "The fuel weight on board the aircraft multiplied by the distance between the reference datum and the fuel's center of gravity, in Newton-meters.",
            "type": "number",
            "example": 2500.1
          },
          "estLandingFuelWeight": {
            "format": "double",
            "description": "The estimated weight of usable fuel upon landing, in kilograms.",
            "type": "number",
            "example": 100.1
          },
          "estLandingFuelMoment": {
            "format": "double",
            "description": "The estimated weight of usable fuel upon landing multiplied by the distance between the reference datum and the fuel's center of gravity, in Newton-meters.",
            "type": "number",
            "example": 2500.1
          },
          "operatingWeight": {
            "format": "double",
            "description": "The basic weight of the aircraft including passengers and equipment, in kilograms.",
            "type": "number",
            "example": 100.1
          },
          "operatingMoment": {
            "format": "double",
            "description": "The operating weight of the aircraft multiplied by the distance between the reference datum and the aircraft's center of gravity, in Newton-meters.",
            "type": "number",
            "example": 2500.1
          },
          "cargoWeight": {
            "format": "double",
            "description": "The weight of the cargo on board the aircraft, in kilograms.",
            "type": "number",
            "example": 100.1
          },
          "cargoMoment": {
            "format": "double",
            "description": "The sum of cargo moments of all cargo on board the aircraft, in Newton-meters. Each individual cargo moment is the weight of the cargo multiplied by the distance between the reference datum and the cargo's center of gravity.",
            "type": "number",
            "example": 2500.1
          },
          "zeroFuelWeight": {
            "format": "double",
            "description": "The operating weight of the aircraft including cargo, mail, baggage, and passengers, but without usable fuel, in kilograms.",
            "type": "number",
            "example": 100.1
          },
          "zeroFuelMoment": {
            "format": "double",
            "description": "The zero fuel weight of the aircraft multiplied by the distance between the reference datum and the aircraft's center of gravity, in Newton-meters.",
            "type": "number",
            "example": 2500.1
          },
          "zeroFuelCG": {
            "format": "double",
            "description": "The center of gravity of the aircraft using the zero fuel weight and zero fuel total moment, as a percentage of the mean aerodynamic chord (%MAC).",
            "type": "number",
            "example": 39.5
          },
          "grossWeight": {
            "format": "double",
            "description": "The total weight of the aircraft at takeoff including passengers, cargo, equipment, and usable fuel, in kilograms.",
            "type": "number",
            "example": 100.1
          },
          "grossMoment": {
            "format": "double",
            "description": "The sum of moments of all items making up the gross weight of the aircraft, in Newton-meters.",
            "type": "number",
            "example": 2500.1
          },
          "grossCG": {
            "format": "double",
            "description": "The center of gravity of the aircraft using the gross weight and gross moment, as a percentage of the mean aerodynamic chord (%MAC).",
            "type": "number",
            "example": 38.8
          },
          "landingWeight": {
            "format": "double",
            "description": "The gross weight of the aircraft upon landing, in kilograms.",
            "type": "number",
            "example": 100.1
          },
          "landingMoment": {
            "format": "double",
            "description": "The sum of moments of all items making up the gross weight of the aircraft upon landing, in Newton-meters.",
            "type": "number",
            "example": 2500.1
          },
          "landingCG": {
            "format": "double",
            "description": "The center of gravity of the aircraft using the landing weight and landing moment, as a percentage of the mean aerodynamic chord (%MAC).",
            "type": "number",
            "example": 38.2
          },
          "seatsOnboard": {
            "format": "int32",
            "description": "Number of passenger seats on the aircraft.",
            "type": "integer",
            "example": 20
          },
          "seatsReleased": {
            "format": "int32",
            "description": "Number of passenger seats released this leg.",
            "type": "integer",
            "example": 15
          },
          "ppOnboard": {
            "format": "int32",
            "description": "Number of pallet positions on the aircraft.",
            "type": "integer",
            "example": 18
          },
          "ppReleased": {
            "format": "int32",
            "description": "Number of pallet positions released this leg.",
            "type": "integer",
            "example": 5
          },
          "aclOnboard": {
            "format": "double",
            "description": "Allowable Cabin Load (ACL) onboard the aircraft. The maximum weight of passengers, baggage, and cargo that can be safely transported in the aircraft cabin, in kilograms.",
            "type": "number",
            "example": 500.1
          },
          "aclReleased": {
            "format": "double",
            "description": "Allowable Cabin Load (ACL) released this leg. The weight of passengers, baggage, and cargo released from the aircraft cabin, in kilograms.",
            "type": "number",
            "example": 200.1
          },
          "cargoBayFSMin": {
            "format": "double",
            "description": "Minimum fuselage station (FS) where cargo can be stored. FS is the distance from the reference datum, in meters.",
            "type": "number",
            "example": 10.1
          },
          "cargoBayFSMax": {
            "format": "double",
            "description": "Maximum fuselage station (FS) where cargo can be stored. FS is the distance from the reference datum, in meters.",
            "type": "number",
            "example": 20.1
          },
          "cargoBayWidth": {
            "format": "double",
            "description": "Width of the cargo bay, in meters.",
            "type": "number",
            "example": 3.1
          },
          "cargoVolume": {
            "format": "double",
            "description": "The volume of cargo space in the aircraft in cubic meters.",
            "type": "number",
            "example": 50.1
          },
          "loadmasterName": {
            "description": "Name of the loadmaster or boom operator who received the cargo briefing.",
            "maxLength": 64,
            "type": "string",
            "example": "John Smith"
          },
          "loadmasterRank": {
            "description": "Rank of the loadmaster or boom operator overseeing cargo loading/unloading.",
            "maxLength": 32,
            "type": "string",
            "example": "Staff Sergeant"
          },
          "availableTime": {
            "format": "date-time",
            "description": "Time the loadmaster or boom operator is available for cargo loading/unloading, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T02:00:00.123Z"
          },
          "schedTime": {
            "format": "date-time",
            "description": "Time the loadmaster or boom operator is scheduled to begin overseeing cargo loading/unloading, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T02:30:00.123Z"
          },
          "briefTime": {
            "format": "date-time",
            "description": "Time the cargo briefing was given to the loadmaster or boom operator, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:00:00.123Z"
          },
          "utilCode": {
            "description": "Alphanumeric code that describes general cargo-related utilization and characteristics for an itinerary point.",
            "maxLength": 2,
            "type": "string",
            "example": "AD"
          },
          "loadRemarks": {
            "description": "Remarks concerning this load plan.",
            "maxLength": 512,
            "type": "string",
            "example": "Load remarks"
          },
          "airLoadPlanULNActuals": {
            "description": "Collection of unit line number actuals associated with this load plan.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirLoadPlanULNActuals_Full"
            }
          },
          "airLoadPlanHazmatActuals": {
            "description": "Collection of hazmat actuals associated with this load plan.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirLoadPlanHazmatActuals_Full"
            }
          },
          "airLoadPlanPaxCargo": {
            "description": "Collection of passenger and cargo details associated with this load plan for this leg of the mission.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirLoadPlanPaxCargo_Full"
            }
          },
          "airLoadPlanPalletDetails": {
            "description": "Collection of cargo information located at the pallet positions associated with this load plan.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirLoadPlanPalletDetails_Full"
            }
          },
          "airLoadPlanHR": {
            "description": "Collection of human remains transport information associated with this load plan.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirLoadPlanHR_Full"
            }
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "source"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "AirLoadPlan_Ingest": {
        "description": "Information related to how an aircraft is loaded with cargo, equipment, and passengers.",
        "required": [
          "classificationMarking",
          "estDepTime",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "0457f578-e29c-312e-85aa-0a04a430bdd0"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "externalId": {
            "description": "Optional ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "dec7a61a-cd97-4af0-b7bc-f4c3bb33341b"
          },
          "idMission": {
            "description": "The UDL ID of the mission this record is associated with.",
            "maxLength": 36,
            "type": "string",
            "example": "412bebb6-a45e-029c-ca51-e29f8a442b12"
          },
          "missionNumber": {
            "description": "The mission number of the mission supporting this load plan.",
            "maxLength": 16,
            "type": "string",
            "example": "AJM123456123"
          },
          "idSortie": {
            "description": "The UDL ID of the aircraft sortie this record is associated with.",
            "maxLength": 36,
            "type": "string",
            "example": "823acfbe6-f36a-157b-ef32-b47c9b589c4"
          },
          "legNum": {
            "format": "int32",
            "description": "The leg number of the mission supporting this load plan.",
            "type": "integer",
            "example": 200
          },
          "callSign": {
            "description": "The call sign of the mission supporting this load plan.",
            "maxLength": 24,
            "type": "string",
            "example": "RCH1234"
          },
          "tailNumber": {
            "description": "The tail number of the aircraft supporting this load plan.",
            "maxLength": 16,
            "type": "string",
            "example": "77187"
          },
          "aircraftMDS": {
            "description": "The Model Design Series designation of the aircraft supporting this load plan.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "C17A"
          },
          "depICAO": {
            "description": "The departure International Civil Organization (ICAO) code of the departure airfield.",
            "maxLength": 4,
            "type": "string",
            "example": "KCHS"
          },
          "depAirfield": {
            "description": "Optional identifier of departure airfield with no International Civil Organization (ICAO) code.",
            "maxLength": 36,
            "type": "string",
            "example": "W99"
          },
          "estDepTime": {
            "format": "date-time",
            "description": "The current estimated time that the aircraft is planned to depart, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:00:00.123Z"
          },
          "arrICAO": {
            "description": "The arrival International Civil Organization (ICAO) code of the landing airfield.",
            "maxLength": 4,
            "type": "string",
            "example": "ETAR"
          },
          "arrAirfield": {
            "description": "Optional identifier of arrival airfield with no International Civil Organization (ICAO) code.",
            "maxLength": 36,
            "type": "string",
            "example": "W99"
          },
          "estArrTime": {
            "format": "date-time",
            "description": "The current estimated time that the aircraft is planned to arrive, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T02:00:00.123Z"
          },
          "crewSize": {
            "format": "int32",
            "description": "The number of crew members on the aircraft.",
            "type": "integer",
            "example": 5
          },
          "cargoConfig": {
            "description": "The cargo configuration required for this leg (e.g. C-1, C-2, C-3, DV-1, DV-2, AE-1, etc.). Configuration meanings are determined by the data source.",
            "maxLength": 128,
            "type": "string",
            "example": "C-1"
          },
          "equipConfig": {
            "description": "Description of the equipment configuration (e.g. Standard, Ferry, JBLM, CHS, Combat, etc.). Configuration meanings are determined by the data source.",
            "maxLength": 128,
            "type": "string",
            "example": "Standard"
          },
          "tankConfig": {
            "description": "Description of the fuel tank(s) configuration (e.g. ER, NON-ER, etc.). Configuration meanings are determined by the data source.",
            "maxLength": 128,
            "type": "string",
            "example": "ER"
          },
          "basicWeight": {
            "format": "double",
            "description": "The weight of the aircraft without passengers, cargo, equipment, or usable fuel, in kilograms.",
            "type": "number",
            "example": 100.1
          },
          "basicMoment": {
            "format": "double",
            "description": "The basic weight of the aircraft multiplied by the distance between the reference datum and the aircraft's center of gravity, in Newton-meters.",
            "type": "number",
            "example": 2500.1
          },
          "fuelWeight": {
            "format": "double",
            "description": "The weight of usable fuel on board the aircraft, in kilograms.",
            "type": "number",
            "example": 100.1
          },
          "fuelMoment": {
            "format": "double",
            "description": "The fuel weight on board the aircraft multiplied by the distance between the reference datum and the fuel's center of gravity, in Newton-meters.",
            "type": "number",
            "example": 2500.1
          },
          "estLandingFuelWeight": {
            "format": "double",
            "description": "The estimated weight of usable fuel upon landing, in kilograms.",
            "type": "number",
            "example": 100.1
          },
          "estLandingFuelMoment": {
            "format": "double",
            "description": "The estimated weight of usable fuel upon landing multiplied by the distance between the reference datum and the fuel's center of gravity, in Newton-meters.",
            "type": "number",
            "example": 2500.1
          },
          "operatingWeight": {
            "format": "double",
            "description": "The basic weight of the aircraft including passengers and equipment, in kilograms.",
            "type": "number",
            "example": 100.1
          },
          "operatingMoment": {
            "format": "double",
            "description": "The operating weight of the aircraft multiplied by the distance between the reference datum and the aircraft's center of gravity, in Newton-meters.",
            "type": "number",
            "example": 2500.1
          },
          "cargoWeight": {
            "format": "double",
            "description": "The weight of the cargo on board the aircraft, in kilograms.",
            "type": "number",
            "example": 100.1
          },
          "cargoMoment": {
            "format": "double",
            "description": "The sum of cargo moments of all cargo on board the aircraft, in Newton-meters. Each individual cargo moment is the weight of the cargo multiplied by the distance between the reference datum and the cargo's center of gravity.",
            "type": "number",
            "example": 2500.1
          },
          "zeroFuelWeight": {
            "format": "double",
            "description": "The operating weight of the aircraft including cargo, mail, baggage, and passengers, but without usable fuel, in kilograms.",
            "type": "number",
            "example": 100.1
          },
          "zeroFuelMoment": {
            "format": "double",
            "description": "The zero fuel weight of the aircraft multiplied by the distance between the reference datum and the aircraft's center of gravity, in Newton-meters.",
            "type": "number",
            "example": 2500.1
          },
          "zeroFuelCG": {
            "format": "double",
            "description": "The center of gravity of the aircraft using the zero fuel weight and zero fuel total moment, as a percentage of the mean aerodynamic chord (%MAC).",
            "type": "number",
            "example": 39.5
          },
          "grossWeight": {
            "format": "double",
            "description": "The total weight of the aircraft at takeoff including passengers, cargo, equipment, and usable fuel, in kilograms.",
            "type": "number",
            "example": 100.1
          },
          "grossMoment": {
            "format": "double",
            "description": "The sum of moments of all items making up the gross weight of the aircraft, in Newton-meters.",
            "type": "number",
            "example": 2500.1
          },
          "grossCG": {
            "format": "double",
            "description": "The center of gravity of the aircraft using the gross weight and gross moment, as a percentage of the mean aerodynamic chord (%MAC).",
            "type": "number",
            "example": 38.8
          },
          "landingWeight": {
            "format": "double",
            "description": "The gross weight of the aircraft upon landing, in kilograms.",
            "type": "number",
            "example": 100.1
          },
          "landingMoment": {
            "format": "double",
            "description": "The sum of moments of all items making up the gross weight of the aircraft upon landing, in Newton-meters.",
            "type": "number",
            "example": 2500.1
          },
          "landingCG": {
            "format": "double",
            "description": "The center of gravity of the aircraft using the landing weight and landing moment, as a percentage of the mean aerodynamic chord (%MAC).",
            "type": "number",
            "example": 38.2
          },
          "seatsOnboard": {
            "format": "int32",
            "description": "Number of passenger seats on the aircraft.",
            "type": "integer",
            "example": 20
          },
          "seatsReleased": {
            "format": "int32",
            "description": "Number of passenger seats released this leg.",
            "type": "integer",
            "example": 15
          },
          "ppOnboard": {
            "format": "int32",
            "description": "Number of pallet positions on the aircraft.",
            "type": "integer",
            "example": 18
          },
          "ppReleased": {
            "format": "int32",
            "description": "Number of pallet positions released this leg.",
            "type": "integer",
            "example": 5
          },
          "aclOnboard": {
            "format": "double",
            "description": "Allowable Cabin Load (ACL) onboard the aircraft. The maximum weight of passengers, baggage, and cargo that can be safely transported in the aircraft cabin, in kilograms.",
            "type": "number",
            "example": 500.1
          },
          "aclReleased": {
            "format": "double",
            "description": "Allowable Cabin Load (ACL) released this leg. The weight of passengers, baggage, and cargo released from the aircraft cabin, in kilograms.",
            "type": "number",
            "example": 200.1
          },
          "cargoBayFSMin": {
            "format": "double",
            "description": "Minimum fuselage station (FS) where cargo can be stored. FS is the distance from the reference datum, in meters.",
            "type": "number",
            "example": 10.1
          },
          "cargoBayFSMax": {
            "format": "double",
            "description": "Maximum fuselage station (FS) where cargo can be stored. FS is the distance from the reference datum, in meters.",
            "type": "number",
            "example": 20.1
          },
          "cargoBayWidth": {
            "format": "double",
            "description": "Width of the cargo bay, in meters.",
            "type": "number",
            "example": 3.1
          },
          "cargoVolume": {
            "format": "double",
            "description": "The volume of cargo space in the aircraft in cubic meters.",
            "type": "number",
            "example": 50.1
          },
          "loadmasterName": {
            "description": "Name of the loadmaster or boom operator who received the cargo briefing.",
            "maxLength": 64,
            "type": "string",
            "example": "John Smith"
          },
          "loadmasterRank": {
            "description": "Rank of the loadmaster or boom operator overseeing cargo loading/unloading.",
            "maxLength": 32,
            "type": "string",
            "example": "Staff Sergeant"
          },
          "availableTime": {
            "format": "date-time",
            "description": "Time the loadmaster or boom operator is available for cargo loading/unloading, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T02:00:00.123Z"
          },
          "schedTime": {
            "format": "date-time",
            "description": "Time the loadmaster or boom operator is scheduled to begin overseeing cargo loading/unloading, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T02:30:00.123Z"
          },
          "briefTime": {
            "format": "date-time",
            "description": "Time the cargo briefing was given to the loadmaster or boom operator, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:00:00.123Z"
          },
          "utilCode": {
            "description": "Alphanumeric code that describes general cargo-related utilization and characteristics for an itinerary point.",
            "maxLength": 2,
            "type": "string",
            "example": "AD"
          },
          "loadRemarks": {
            "description": "Remarks concerning this load plan.",
            "maxLength": 512,
            "type": "string",
            "example": "Load remarks"
          },
          "airLoadPlanULNActuals": {
            "description": "Collection of unit line number actuals associated with this load plan.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirLoadPlanULNActuals_Ingest"
            }
          },
          "airLoadPlanHazmatActuals": {
            "description": "Collection of hazmat actuals associated with this load plan.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirLoadPlanHazmatActuals_Ingest"
            }
          },
          "airLoadPlanPaxCargo": {
            "description": "Collection of passenger and cargo details associated with this load plan for this leg of the mission.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirLoadPlanPaxCargo_Ingest"
            }
          },
          "airLoadPlanPalletDetails": {
            "description": "Collection of cargo information located at the pallet positions associated with this load plan.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirLoadPlanPalletDetails_Ingest"
            }
          },
          "airLoadPlanHR": {
            "description": "Collection of human remains transport information associated with this load plan.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirLoadPlanHR_Ingest"
            }
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "source"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "AirLoadPlanHazmatActuals_Abridged": {
        "description": "Collection of hazmat actuals associated with this load plan.",
        "type": "object",
        "properties": {
          "itemName": {
            "description": "United Nations proper shipping name of the hazardous material according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.",
            "maxLength": 1024,
            "type": "string",
            "example": "NITRIC ACID"
          },
          "hazDescription": {
            "description": "Description of the hazardous item.",
            "maxLength": 64,
            "type": "string",
            "example": "CORROSIVE OXIDIZER"
          },
          "hazNumType": {
            "description": "Designates the type of hazmat number for the item (UN for United Nations or NA for North American).",
            "maxLength": 2,
            "type": "string",
            "example": "UN"
          },
          "hazNum": {
            "description": "United Nations number or North American number that identifies hazardous materials according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.",
            "maxLength": 4,
            "type": "string",
            "example": "2031"
          },
          "hazTcn": {
            "description": "Transportation Control Number (TCN) of the hazardous item.",
            "maxLength": 32,
            "type": "string",
            "example": "M1358232245912XXX"
          },
          "ashc": {
            "description": "The Air Special Handling Code (ASHC) indicates the type of special handling required for hazardous cargo.",
            "maxLength": 3,
            "type": "string",
            "example": "RFL"
          },
          "hazPieces": {
            "format": "int32",
            "description": "Number of pieces of hazardous cargo.",
            "type": "integer",
            "example": 29
          },
          "hazWeight": {
            "format": "double",
            "description": "Total weight of hazardous cargo, including non-explosive parts, in kilograms.",
            "type": "number",
            "example": 22.1
          },
          "netExpWt": {
            "format": "double",
            "description": "Net explosive weight of the hazardous material, in kilograms.",
            "type": "number",
            "example": 12.1
          },
          "classDiv": {
            "description": "Class and division of the hazardous material according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.",
            "maxLength": 12,
            "type": "string",
            "example": "1.1"
          },
          "cgc": {
            "description": "Compatibility group code used to specify the controls for the transportation and storage of hazardous materials according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.",
            "maxLength": 4,
            "type": "string",
            "example": "A"
          },
          "lotNum": {
            "description": "Manufacturer's lot number for identification of the hazardous material.",
            "maxLength": 24,
            "type": "string",
            "example": "1234A"
          },
          "hazOnItin": {
            "format": "int32",
            "description": "Itinerary number that identifies where the hazardous material is loaded.",
            "type": "integer",
            "example": 50
          },
          "hazOnICAO": {
            "description": "The International Civil Aviation Organization (ICAO) code of the site where the hazardous material is loaded.",
            "maxLength": 4,
            "type": "string",
            "example": "LIRQ"
          },
          "hazOffItin": {
            "format": "int32",
            "description": "Itinerary number that identifies where the hazardous material is unloaded.",
            "type": "integer",
            "example": 300
          },
          "hazOffICAO": {
            "description": "The International Civil Aviation Organization (ICAO) code of the site where the hazardous material is unloaded.",
            "maxLength": 4,
            "type": "string",
            "example": "MBPV"
          },
          "hazmatRemarks": {
            "description": "Remarks concerning this hazardous material.",
            "maxLength": 1024,
            "type": "string",
            "example": "Hazmat remarks"
          }
        }
      },
      "AirLoadPlanHazmatActuals_Full": {
        "description": "Collection of hazmat actuals associated with this load plan.",
        "type": "object",
        "properties": {
          "itemName": {
            "description": "United Nations proper shipping name of the hazardous material according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.",
            "maxLength": 1024,
            "type": "string",
            "example": "NITRIC ACID"
          },
          "hazDescription": {
            "description": "Description of the hazardous item.",
            "maxLength": 64,
            "type": "string",
            "example": "CORROSIVE OXIDIZER"
          },
          "hazNumType": {
            "description": "Designates the type of hazmat number for the item (UN for United Nations or NA for North American).",
            "maxLength": 2,
            "type": "string",
            "example": "UN"
          },
          "hazNum": {
            "description": "United Nations number or North American number that identifies hazardous materials according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.",
            "maxLength": 4,
            "type": "string",
            "example": "2031"
          },
          "hazTcn": {
            "description": "Transportation Control Number (TCN) of the hazardous item.",
            "maxLength": 32,
            "type": "string",
            "example": "M1358232245912XXX"
          },
          "ashc": {
            "description": "The Air Special Handling Code (ASHC) indicates the type of special handling required for hazardous cargo.",
            "maxLength": 3,
            "type": "string",
            "example": "RFL"
          },
          "hazPieces": {
            "format": "int32",
            "description": "Number of pieces of hazardous cargo.",
            "type": "integer",
            "example": 29
          },
          "hazWeight": {
            "format": "double",
            "description": "Total weight of hazardous cargo, including non-explosive parts, in kilograms.",
            "type": "number",
            "example": 22.1
          },
          "netExpWt": {
            "format": "double",
            "description": "Net explosive weight of the hazardous material, in kilograms.",
            "type": "number",
            "example": 12.1
          },
          "classDiv": {
            "description": "Class and division of the hazardous material according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.",
            "maxLength": 12,
            "type": "string",
            "example": "1.1"
          },
          "cgc": {
            "description": "Compatibility group code used to specify the controls for the transportation and storage of hazardous materials according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.",
            "maxLength": 4,
            "type": "string",
            "example": "A"
          },
          "lotNum": {
            "description": "Manufacturer's lot number for identification of the hazardous material.",
            "maxLength": 24,
            "type": "string",
            "example": "1234A"
          },
          "hazOnItin": {
            "format": "int32",
            "description": "Itinerary number that identifies where the hazardous material is loaded.",
            "type": "integer",
            "example": 50
          },
          "hazOnICAO": {
            "description": "The International Civil Aviation Organization (ICAO) code of the site where the hazardous material is loaded.",
            "maxLength": 4,
            "type": "string",
            "example": "LIRQ"
          },
          "hazOffItin": {
            "format": "int32",
            "description": "Itinerary number that identifies where the hazardous material is unloaded.",
            "type": "integer",
            "example": 300
          },
          "hazOffICAO": {
            "description": "The International Civil Aviation Organization (ICAO) code of the site where the hazardous material is unloaded.",
            "maxLength": 4,
            "type": "string",
            "example": "MBPV"
          },
          "hazmatRemarks": {
            "description": "Remarks concerning this hazardous material.",
            "maxLength": 1024,
            "type": "string",
            "example": "Hazmat remarks"
          }
        }
      },
      "AirLoadPlanHazmatActuals_Ingest": {
        "description": "Collection of hazmat actuals associated with this load plan.",
        "type": "object",
        "properties": {
          "itemName": {
            "description": "United Nations proper shipping name of the hazardous material according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.",
            "maxLength": 1024,
            "type": "string",
            "example": "NITRIC ACID"
          },
          "hazDescription": {
            "description": "Description of the hazardous item.",
            "maxLength": 64,
            "type": "string",
            "example": "CORROSIVE OXIDIZER"
          },
          "hazNumType": {
            "description": "Designates the type of hazmat number for the item (UN for United Nations or NA for North American).",
            "maxLength": 2,
            "type": "string",
            "example": "UN"
          },
          "hazNum": {
            "description": "United Nations number or North American number that identifies hazardous materials according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.",
            "maxLength": 4,
            "type": "string",
            "example": "2031"
          },
          "hazTcn": {
            "description": "Transportation Control Number (TCN) of the hazardous item.",
            "maxLength": 32,
            "type": "string",
            "example": "M1358232245912XXX"
          },
          "ashc": {
            "description": "The Air Special Handling Code (ASHC) indicates the type of special handling required for hazardous cargo.",
            "maxLength": 3,
            "type": "string",
            "example": "RFL"
          },
          "hazPieces": {
            "format": "int32",
            "description": "Number of pieces of hazardous cargo.",
            "type": "integer",
            "example": 29
          },
          "hazWeight": {
            "format": "double",
            "description": "Total weight of hazardous cargo, including non-explosive parts, in kilograms.",
            "type": "number",
            "example": 22.1
          },
          "netExpWt": {
            "format": "double",
            "description": "Net explosive weight of the hazardous material, in kilograms.",
            "type": "number",
            "example": 12.1
          },
          "classDiv": {
            "description": "Class and division of the hazardous material according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.",
            "maxLength": 12,
            "type": "string",
            "example": "1.1"
          },
          "cgc": {
            "description": "Compatibility group code used to specify the controls for the transportation and storage of hazardous materials according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.",
            "maxLength": 4,
            "type": "string",
            "example": "A"
          },
          "lotNum": {
            "description": "Manufacturer's lot number for identification of the hazardous material.",
            "maxLength": 24,
            "type": "string",
            "example": "1234A"
          },
          "hazOnItin": {
            "format": "int32",
            "description": "Itinerary number that identifies where the hazardous material is loaded.",
            "type": "integer",
            "example": 50
          },
          "hazOnICAO": {
            "description": "The International Civil Aviation Organization (ICAO) code of the site where the hazardous material is loaded.",
            "maxLength": 4,
            "type": "string",
            "example": "LIRQ"
          },
          "hazOffItin": {
            "format": "int32",
            "description": "Itinerary number that identifies where the hazardous material is unloaded.",
            "type": "integer",
            "example": 300
          },
          "hazOffICAO": {
            "description": "The International Civil Aviation Organization (ICAO) code of the site where the hazardous material is unloaded.",
            "maxLength": 4,
            "type": "string",
            "example": "MBPV"
          },
          "hazmatRemarks": {
            "description": "Remarks concerning this hazardous material.",
            "maxLength": 1024,
            "type": "string",
            "example": "Hazmat remarks"
          }
        }
      },
      "AirLoadPlanHR_Abridged": {
        "description": "Collection of human remains transport information associated with this load plan.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the deceased.",
            "maxLength": 64,
            "type": "string",
            "example": "John Doe"
          },
          "rank": {
            "description": "Rank of the deceased.",
            "maxLength": 64,
            "type": "string",
            "example": "Captain"
          },
          "service": {
            "description": "Branch of service of the deceased.",
            "maxLength": 64,
            "type": "string",
            "example": "Air Force"
          },
          "container": {
            "description": "Type of transfer case used.",
            "maxLength": 64,
            "type": "string",
            "example": "Metal"
          },
          "viewable": {
            "description": "Flag indicating if the remains are viewable.",
            "type": "boolean",
            "example": true
          },
          "escort": {
            "description": "Name of the escort for the remains.",
            "maxLength": 64,
            "type": "string",
            "example": "Jane Doe"
          },
          "recAgency": {
            "description": "Name of the receiving agency or funeral home to which the remains are being delivered.",
            "maxLength": 64,
            "type": "string",
            "example": "Agency name"
          },
          "hrOnItin": {
            "format": "int32",
            "description": "Itinerary number that identifies where the remains are loaded.",
            "type": "integer",
            "example": 100
          },
          "hrOnICAO": {
            "description": "The International Civil Aviation Organization (ICAO) code of the site where the remains are loaded.",
            "maxLength": 4,
            "type": "string",
            "example": "KCOS"
          },
          "hrOffItin": {
            "format": "int32",
            "description": "Itinerary number that identifies where the remains are unloaded.",
            "type": "integer",
            "example": 200
          },
          "hrOffICAO": {
            "description": "The International Civil Aviation Organization (ICAO) code of the site where the remains are unloaded.",
            "maxLength": 4,
            "type": "string",
            "example": "KDEN"
          },
          "hrEstArrTime": {
            "format": "date-time",
            "description": "The current estimated time of arrival for the remains in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:00:00.123Z"
          },
          "hrRemarks": {
            "description": "Remarks concerning the remains.",
            "maxLength": 512,
            "type": "string",
            "example": "HR remarks"
          }
        }
      },
      "AirLoadPlanHR_Full": {
        "description": "Collection of human remains transport information associated with this load plan.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the deceased.",
            "maxLength": 64,
            "type": "string",
            "example": "John Doe"
          },
          "rank": {
            "description": "Rank of the deceased.",
            "maxLength": 64,
            "type": "string",
            "example": "Captain"
          },
          "service": {
            "description": "Branch of service of the deceased.",
            "maxLength": 64,
            "type": "string",
            "example": "Air Force"
          },
          "container": {
            "description": "Type of transfer case used.",
            "maxLength": 64,
            "type": "string",
            "example": "Metal"
          },
          "viewable": {
            "description": "Flag indicating if the remains are viewable.",
            "type": "boolean",
            "example": true
          },
          "escort": {
            "description": "Name of the escort for the remains.",
            "maxLength": 64,
            "type": "string",
            "example": "Jane Doe"
          },
          "recAgency": {
            "description": "Name of the receiving agency or funeral home to which the remains are being delivered.",
            "maxLength": 64,
            "type": "string",
            "example": "Agency name"
          },
          "hrOnItin": {
            "format": "int32",
            "description": "Itinerary number that identifies where the remains are loaded.",
            "type": "integer",
            "example": 100
          },
          "hrOnICAO": {
            "description": "The International Civil Aviation Organization (ICAO) code of the site where the remains are loaded.",
            "maxLength": 4,
            "type": "string",
            "example": "KCOS"
          },
          "hrOffItin": {
            "format": "int32",
            "description": "Itinerary number that identifies where the remains are unloaded.",
            "type": "integer",
            "example": 200
          },
          "hrOffICAO": {
            "description": "The International Civil Aviation Organization (ICAO) code of the site where the remains are unloaded.",
            "maxLength": 4,
            "type": "string",
            "example": "KDEN"
          },
          "hrEstArrTime": {
            "format": "date-time",
            "description": "The current estimated time of arrival for the remains in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:00:00.123Z"
          },
          "hrRemarks": {
            "description": "Remarks concerning the remains.",
            "maxLength": 512,
            "type": "string",
            "example": "HR remarks"
          }
        }
      },
      "AirLoadPlanHR_Ingest": {
        "description": "Collection of human remains transport information associated with this load plan.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the deceased.",
            "maxLength": 64,
            "type": "string",
            "example": "John Doe"
          },
          "rank": {
            "description": "Rank of the deceased.",
            "maxLength": 64,
            "type": "string",
            "example": "Captain"
          },
          "service": {
            "description": "Branch of service of the deceased.",
            "maxLength": 64,
            "type": "string",
            "example": "Air Force"
          },
          "container": {
            "description": "Type of transfer case used.",
            "maxLength": 64,
            "type": "string",
            "example": "Metal"
          },
          "viewable": {
            "description": "Flag indicating if the remains are viewable.",
            "type": "boolean",
            "example": true
          },
          "escort": {
            "description": "Name of the escort for the remains.",
            "maxLength": 64,
            "type": "string",
            "example": "Jane Doe"
          },
          "recAgency": {
            "description": "Name of the receiving agency or funeral home to which the remains are being delivered.",
            "maxLength": 64,
            "type": "string",
            "example": "Agency name"
          },
          "hrOnItin": {
            "format": "int32",
            "description": "Itinerary number that identifies where the remains are loaded.",
            "type": "integer",
            "example": 100
          },
          "hrOnICAO": {
            "description": "The International Civil Aviation Organization (ICAO) code of the site where the remains are loaded.",
            "maxLength": 4,
            "type": "string",
            "example": "KCOS"
          },
          "hrOffItin": {
            "format": "int32",
            "description": "Itinerary number that identifies where the remains are unloaded.",
            "type": "integer",
            "example": 200
          },
          "hrOffICAO": {
            "description": "The International Civil Aviation Organization (ICAO) code of the site where the remains are unloaded.",
            "maxLength": 4,
            "type": "string",
            "example": "KDEN"
          },
          "hrEstArrTime": {
            "format": "date-time",
            "description": "The current estimated time of arrival for the remains in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:00:00.123Z"
          },
          "hrRemarks": {
            "description": "Remarks concerning the remains.",
            "maxLength": 512,
            "type": "string",
            "example": "HR remarks"
          }
        }
      },
      "AirLoadPlanPalletDetails_Abridged": {
        "description": "Collection of cargo information located at the pallet positions associated with this load plan.",
        "type": "object",
        "properties": {
          "pp": {
            "description": "Pallet position of the cargo.",
            "maxLength": 16,
            "type": "string",
            "example": "2"
          },
          "specialInterest": {
            "description": "Flag indicating if this cargo is considered special interest.",
            "type": "boolean",
            "example": true
          },
          "category": {
            "description": "Category of special interest cargo.",
            "maxLength": 16,
            "type": "string",
            "example": "AMCMICAP"
          },
          "ppDescription": {
            "description": "Description of the cargo.",
            "maxLength": 64,
            "type": "string",
            "example": "Ammunition"
          },
          "ppTcn": {
            "description": "Transportation Control Number (TCN) of the cargo.",
            "maxLength": 32,
            "type": "string",
            "example": "M1358232245912XXX"
          },
          "ppPieces": {
            "format": "int32",
            "description": "Number of pieces included in the Transportation Control Number (TCN).",
            "type": "integer",
            "example": 3
          },
          "ppWeight": {
            "format": "double",
            "description": "Total weight of the cargo at this pallet position in kilograms.",
            "type": "number",
            "example": 100.1
          },
          "ppOffICAO": {
            "description": "The International Civil Aviation Organization (ICAO) code of the site where the cargo is unloaded.",
            "maxLength": 4,
            "type": "string",
            "example": "MBPV"
          },
          "ppRemarks": {
            "description": "Remarks concerning the cargo at this pallet position.",
            "maxLength": 512,
            "type": "string",
            "example": "Pallet remarks"
          }
        }
      },
      "AirLoadPlanPalletDetails_Full": {
        "description": "Collection of cargo information located at the pallet positions associated with this load plan.",
        "type": "object",
        "properties": {
          "pp": {
            "description": "Pallet position of the cargo.",
            "maxLength": 16,
            "type": "string",
            "example": "2"
          },
          "specialInterest": {
            "description": "Flag indicating if this cargo is considered special interest.",
            "type": "boolean",
            "example": true
          },
          "category": {
            "description": "Category of special interest cargo.",
            "maxLength": 16,
            "type": "string",
            "example": "AMCMICAP"
          },
          "ppDescription": {
            "description": "Description of the cargo.",
            "maxLength": 64,
            "type": "string",
            "example": "Ammunition"
          },
          "ppTcn": {
            "description": "Transportation Control Number (TCN) of the cargo.",
            "maxLength": 32,
            "type": "string",
            "example": "M1358232245912XXX"
          },
          "ppPieces": {
            "format": "int32",
            "description": "Number of pieces included in the Transportation Control Number (TCN).",
            "type": "integer",
            "example": 3
          },
          "ppWeight": {
            "format": "double",
            "description": "Total weight of the cargo at this pallet position in kilograms.",
            "type": "number",
            "example": 100.1
          },
          "ppOffICAO": {
            "description": "The International Civil Aviation Organization (ICAO) code of the site where the cargo is unloaded.",
            "maxLength": 4,
            "type": "string",
            "example": "MBPV"
          },
          "ppRemarks": {
            "description": "Remarks concerning the cargo at this pallet position.",
            "maxLength": 512,
            "type": "string",
            "example": "Pallet remarks"
          }
        }
      },
      "AirLoadPlanPalletDetails_Ingest": {
        "description": "Collection of cargo information located at the pallet positions associated with this load plan.",
        "type": "object",
        "properties": {
          "pp": {
            "description": "Pallet position of the cargo.",
            "maxLength": 16,
            "type": "string",
            "example": "2"
          },
          "specialInterest": {
            "description": "Flag indicating if this cargo is considered special interest.",
            "type": "boolean",
            "example": true
          },
          "category": {
            "description": "Category of special interest cargo.",
            "maxLength": 16,
            "type": "string",
            "example": "AMCMICAP"
          },
          "ppDescription": {
            "description": "Description of the cargo.",
            "maxLength": 64,
            "type": "string",
            "example": "Ammunition"
          },
          "ppTcn": {
            "description": "Transportation Control Number (TCN) of the cargo.",
            "maxLength": 32,
            "type": "string",
            "example": "M1358232245912XXX"
          },
          "ppPieces": {
            "format": "int32",
            "description": "Number of pieces included in the Transportation Control Number (TCN).",
            "type": "integer",
            "example": 3
          },
          "ppWeight": {
            "format": "double",
            "description": "Total weight of the cargo at this pallet position in kilograms.",
            "type": "number",
            "example": 100.1
          },
          "ppOffICAO": {
            "description": "The International Civil Aviation Organization (ICAO) code of the site where the cargo is unloaded.",
            "maxLength": 4,
            "type": "string",
            "example": "MBPV"
          },
          "ppRemarks": {
            "description": "Remarks concerning the cargo at this pallet position.",
            "maxLength": 512,
            "type": "string",
            "example": "Pallet remarks"
          }
        }
      },
      "AirLoadPlanPaxCargo_Abridged": {
        "description": "Collection of passenger and cargo details associated with this load plan for this leg of the mission.",
        "type": "object",
        "properties": {
          "groupType": {
            "description": "Describes the status or action needed for this group of passenger and cargo data (e.g. ARRONBD, OFFTHIS, THROUGH, ONTHIS, DEPONBD, OFFNEXT).",
            "maxLength": 7,
            "type": "string",
            "example": "OFFTHIS"
          },
          "requiredPax": {
            "format": "int32",
            "description": "Number of space required passengers in this group.",
            "type": "integer",
            "example": 20
          },
          "availablePax": {
            "format": "int32",
            "description": "Number of space available passengers in this group.",
            "type": "integer",
            "example": 20
          },
          "fnPax": {
            "format": "int32",
            "description": "Number of foreign national passengers in this group.",
            "type": "integer",
            "example": 1
          },
          "dvPax": {
            "format": "int32",
            "description": "Number of distinguished visitor passengers in this group.",
            "type": "integer",
            "example": 2
          },
          "civPax": {
            "format": "int32",
            "description": "Number of civilian passengers in this group.",
            "type": "integer",
            "example": 3
          },
          "litPax": {
            "format": "int32",
            "description": "Number of litter-bound passengers in this group.",
            "type": "integer",
            "example": 4
          },
          "ambPax": {
            "format": "int32",
            "description": "Number of ambulatory medical passengers in this group.",
            "type": "integer",
            "example": 5
          },
          "attPax": {
            "format": "int32",
            "description": "Number of patient attendant passengers in this group.",
            "type": "integer",
            "example": 6
          },
          "numPallet": {
            "format": "int32",
            "description": "Number of cargo pallets in this group.",
            "type": "integer",
            "example": 20
          },
          "paxWeight": {
            "format": "double",
            "description": "Weight of passengers in this group in kilograms.",
            "type": "number",
            "example": 8000.1
          },
          "bagWeight": {
            "format": "double",
            "description": "Weight of baggage in this group in kilograms.",
            "type": "number",
            "example": 2000.1
          },
          "groupCargoWeight": {
            "format": "double",
            "description": "Weight of cargo in this group in kilograms.",
            "type": "number",
            "example": 5000.1
          },
          "mailWeight": {
            "format": "double",
            "description": "Weight of mail in this group in kilograms.",
            "type": "number",
            "example": 200.1
          },
          "palletWeight": {
            "format": "double",
            "description": "Weight of pallets, chains, and devices in this group in kilograms.",
            "type": "number",
            "example": 400.1
          }
        }
      },
      "AirLoadPlanPaxCargo_Full": {
        "description": "Collection of passenger and cargo details associated with this load plan for this leg of the mission.",
        "type": "object",
        "properties": {
          "groupType": {
            "description": "Describes the status or action needed for this group of passenger and cargo data (e.g. ARRONBD, OFFTHIS, THROUGH, ONTHIS, DEPONBD, OFFNEXT).",
            "maxLength": 7,
            "type": "string",
            "example": "OFFTHIS"
          },
          "requiredPax": {
            "format": "int32",
            "description": "Number of space required passengers in this group.",
            "type": "integer",
            "example": 20
          },
          "availablePax": {
            "format": "int32",
            "description": "Number of space available passengers in this group.",
            "type": "integer",
            "example": 20
          },
          "fnPax": {
            "format": "int32",
            "description": "Number of foreign national passengers in this group.",
            "type": "integer",
            "example": 1
          },
          "dvPax": {
            "format": "int32",
            "description": "Number of distinguished visitor passengers in this group.",
            "type": "integer",
            "example": 2
          },
          "civPax": {
            "format": "int32",
            "description": "Number of civilian passengers in this group.",
            "type": "integer",
            "example": 3
          },
          "litPax": {
            "format": "int32",
            "description": "Number of litter-bound passengers in this group.",
            "type": "integer",
            "example": 4
          },
          "ambPax": {
            "format": "int32",
            "description": "Number of ambulatory medical passengers in this group.",
            "type": "integer",
            "example": 5
          },
          "attPax": {
            "format": "int32",
            "description": "Number of patient attendant passengers in this group.",
            "type": "integer",
            "example": 6
          },
          "numPallet": {
            "format": "int32",
            "description": "Number of cargo pallets in this group.",
            "type": "integer",
            "example": 20
          },
          "paxWeight": {
            "format": "double",
            "description": "Weight of passengers in this group in kilograms.",
            "type": "number",
            "example": 8000.1
          },
          "bagWeight": {
            "format": "double",
            "description": "Weight of baggage in this group in kilograms.",
            "type": "number",
            "example": 2000.1
          },
          "groupCargoWeight": {
            "format": "double",
            "description": "Weight of cargo in this group in kilograms.",
            "type": "number",
            "example": 5000.1
          },
          "mailWeight": {
            "format": "double",
            "description": "Weight of mail in this group in kilograms.",
            "type": "number",
            "example": 200.1
          },
          "palletWeight": {
            "format": "double",
            "description": "Weight of pallets, chains, and devices in this group in kilograms.",
            "type": "number",
            "example": 400.1
          }
        }
      },
      "AirLoadPlanPaxCargo_Ingest": {
        "description": "Collection of passenger and cargo details associated with this load plan for this leg of the mission.",
        "type": "object",
        "properties": {
          "groupType": {
            "description": "Describes the status or action needed for this group of passenger and cargo data (e.g. ARRONBD, OFFTHIS, THROUGH, ONTHIS, DEPONBD, OFFNEXT).",
            "maxLength": 7,
            "type": "string",
            "example": "OFFTHIS"
          },
          "requiredPax": {
            "format": "int32",
            "description": "Number of space required passengers in this group.",
            "type": "integer",
            "example": 20
          },
          "availablePax": {
            "format": "int32",
            "description": "Number of space available passengers in this group.",
            "type": "integer",
            "example": 20
          },
          "fnPax": {
            "format": "int32",
            "description": "Number of foreign national passengers in this group.",
            "type": "integer",
            "example": 1
          },
          "dvPax": {
            "format": "int32",
            "description": "Number of distinguished visitor passengers in this group.",
            "type": "integer",
            "example": 2
          },
          "civPax": {
            "format": "int32",
            "description": "Number of civilian passengers in this group.",
            "type": "integer",
            "example": 3
          },
          "litPax": {
            "format": "int32",
            "description": "Number of litter-bound passengers in this group.",
            "type": "integer",
            "example": 4
          },
          "ambPax": {
            "format": "int32",
            "description": "Number of ambulatory medical passengers in this group.",
            "type": "integer",
            "example": 5
          },
          "attPax": {
            "format": "int32",
            "description": "Number of patient attendant passengers in this group.",
            "type": "integer",
            "example": 6
          },
          "numPallet": {
            "format": "int32",
            "description": "Number of cargo pallets in this group.",
            "type": "integer",
            "example": 20
          },
          "paxWeight": {
            "format": "double",
            "description": "Weight of passengers in this group in kilograms.",
            "type": "number",
            "example": 8000.1
          },
          "bagWeight": {
            "format": "double",
            "description": "Weight of baggage in this group in kilograms.",
            "type": "number",
            "example": 2000.1
          },
          "groupCargoWeight": {
            "format": "double",
            "description": "Weight of cargo in this group in kilograms.",
            "type": "number",
            "example": 5000.1
          },
          "mailWeight": {
            "format": "double",
            "description": "Weight of mail in this group in kilograms.",
            "type": "number",
            "example": 200.1
          },
          "palletWeight": {
            "format": "double",
            "description": "Weight of pallets, chains, and devices in this group in kilograms.",
            "type": "number",
            "example": 400.1
          }
        }
      },
      "AirLoadPlanULNActuals_Abridged": {
        "description": "Collection of unit line number actuals associated with this load plan.",
        "type": "object",
        "properties": {
          "onloadId": {
            "format": "int32",
            "description": "Identifier of the onload itinerary location.",
            "type": "integer",
            "example": 200
          },
          "onloadLOCode": {
            "description": "Onload location code.",
            "maxLength": 20,
            "type": "string",
            "example": "KCHS"
          },
          "offloadId": {
            "format": "int32",
            "description": "Identifier of the offload itinerary location.",
            "type": "integer",
            "example": 300
          },
          "offloadLOCode": {
            "description": "Offload location code.",
            "maxLength": 20,
            "type": "string",
            "example": "KHOP"
          },
          "uln": {
            "description": "Unit line number.",
            "maxLength": 8,
            "type": "string",
            "example": "T01ME01"
          },
          "projName": {
            "description": "Project name.",
            "maxLength": 50,
            "type": "string",
            "example": "CENTINTRA21"
          },
          "oplan": {
            "description": "Identification number of the Operation Plan (OPLAN) associated with this load plan.",
            "maxLength": 32,
            "type": "string",
            "example": "5027A"
          },
          "numPax": {
            "format": "int32",
            "description": "Number of passengers associated with this load plan.",
            "type": "integer",
            "example": 44
          },
          "numLitter": {
            "format": "int32",
            "description": "Number of litter patients associated with this load plan.",
            "type": "integer",
            "example": 10
          },
          "numAmbulatory": {
            "format": "int32",
            "description": "Number of ambulatory patients associated with this load plan.",
            "type": "integer",
            "example": 10
          },
          "numAttendant": {
            "format": "int32",
            "description": "Number of attendants associated with this load plan.",
            "type": "integer",
            "example": 10
          },
          "ulnCargoWeight": {
            "format": "double",
            "description": "Total weight of all cargo items for this unit line number in kilograms.",
            "type": "number",
            "example": 1000.1
          },
          "ulnRemarks": {
            "description": "Remarks concerning these unit line number actuals.",
            "maxLength": 512,
            "type": "string",
            "example": "ULN actuals remark"
          }
        }
      },
      "AirLoadPlanULNActuals_Full": {
        "description": "Collection of unit line number actuals associated with this load plan.",
        "type": "object",
        "properties": {
          "onloadId": {
            "format": "int32",
            "description": "Identifier of the onload itinerary location.",
            "type": "integer",
            "example": 200
          },
          "onloadLOCode": {
            "description": "Onload location code.",
            "maxLength": 20,
            "type": "string",
            "example": "KCHS"
          },
          "offloadId": {
            "format": "int32",
            "description": "Identifier of the offload itinerary location.",
            "type": "integer",
            "example": 300
          },
          "offloadLOCode": {
            "description": "Offload location code.",
            "maxLength": 20,
            "type": "string",
            "example": "KHOP"
          },
          "uln": {
            "description": "Unit line number.",
            "maxLength": 8,
            "type": "string",
            "example": "T01ME01"
          },
          "projName": {
            "description": "Project name.",
            "maxLength": 50,
            "type": "string",
            "example": "CENTINTRA21"
          },
          "oplan": {
            "description": "Identification number of the Operation Plan (OPLAN) associated with this load plan.",
            "maxLength": 32,
            "type": "string",
            "example": "5027A"
          },
          "numPax": {
            "format": "int32",
            "description": "Number of passengers associated with this load plan.",
            "type": "integer",
            "example": 44
          },
          "numLitter": {
            "format": "int32",
            "description": "Number of litter patients associated with this load plan.",
            "type": "integer",
            "example": 10
          },
          "numAmbulatory": {
            "format": "int32",
            "description": "Number of ambulatory patients associated with this load plan.",
            "type": "integer",
            "example": 10
          },
          "numAttendant": {
            "format": "int32",
            "description": "Number of attendants associated with this load plan.",
            "type": "integer",
            "example": 10
          },
          "ulnCargoWeight": {
            "format": "double",
            "description": "Total weight of all cargo items for this unit line number in kilograms.",
            "type": "number",
            "example": 1000.1
          },
          "ulnRemarks": {
            "description": "Remarks concerning these unit line number actuals.",
            "maxLength": 512,
            "type": "string",
            "example": "ULN actuals remark"
          }
        }
      },
      "AirLoadPlanULNActuals_Ingest": {
        "description": "Collection of unit line number actuals associated with this load plan.",
        "type": "object",
        "properties": {
          "onloadId": {
            "format": "int32",
            "description": "Identifier of the onload itinerary location.",
            "type": "integer",
            "example": 200
          },
          "onloadLOCode": {
            "description": "Onload location code.",
            "maxLength": 20,
            "type": "string",
            "example": "KCHS"
          },
          "offloadId": {
            "format": "int32",
            "description": "Identifier of the offload itinerary location.",
            "type": "integer",
            "example": 300
          },
          "offloadLOCode": {
            "description": "Offload location code.",
            "maxLength": 20,
            "type": "string",
            "example": "KHOP"
          },
          "uln": {
            "description": "Unit line number.",
            "maxLength": 8,
            "type": "string",
            "example": "T01ME01"
          },
          "projName": {
            "description": "Project name.",
            "maxLength": 50,
            "type": "string",
            "example": "CENTINTRA21"
          },
          "oplan": {
            "description": "Identification number of the Operation Plan (OPLAN) associated with this load plan.",
            "maxLength": 32,
            "type": "string",
            "example": "5027A"
          },
          "numPax": {
            "format": "int32",
            "description": "Number of passengers associated with this load plan.",
            "type": "integer",
            "example": 44
          },
          "numLitter": {
            "format": "int32",
            "description": "Number of litter patients associated with this load plan.",
            "type": "integer",
            "example": 10
          },
          "numAmbulatory": {
            "format": "int32",
            "description": "Number of ambulatory patients associated with this load plan.",
            "type": "integer",
            "example": 10
          },
          "numAttendant": {
            "format": "int32",
            "description": "Number of attendants associated with this load plan.",
            "type": "integer",
            "example": 10
          },
          "ulnCargoWeight": {
            "format": "double",
            "description": "Total weight of all cargo items for this unit line number in kilograms.",
            "type": "number",
            "example": 1000.1
          },
          "ulnRemarks": {
            "description": "Remarks concerning these unit line number actuals.",
            "maxLength": 512,
            "type": "string",
            "example": "ULN actuals remark"
          }
        }
      },
      "AirspaceControlMeans_Abridged": {
        "description": "A conditional nested segment to report multiple airspace control means within a particular airspace control means status.",
        "type": "object",
        "properties": {
          "cmType": {
            "description": "The code for the type of airspace control means.",
            "maxLength": 8,
            "type": "string",
            "example": "ACM:ADAREA"
          },
          "cmId": {
            "description": "Airspace control means name or designator.",
            "maxLength": 32,
            "type": "string",
            "example": "DESIG:C34"
          },
          "cmShape": {
            "description": "Designates the geometric type that defines the airspace shape. One of CIRCLE, CORRIDOR, LINE, ORBIT, etc.",
            "maxLength": 64,
            "enum": [
              "POLYARC",
              "1TRACK",
              "POLYGON",
              "CIRCLE",
              "CORRIDOR",
              "APOINT",
              "AORBIT",
              "GEOLINE"
            ],
            "type": "string",
            "example": "POLYARC"
          },
          "usage": {
            "description": "Designates the means by which a defined airspace control means is to be used.",
            "maxLength": 8,
            "type": "string",
            "example": "USE:AIRCOR"
          },
          "link16Id": {
            "description": "Unique Link 16 identifier assigned to the airspace control means.",
            "maxLength": 8,
            "type": "string",
            "example": "F3356"
          },
          "transAltitude": {
            "description": "The altitude at or below which the vertical position of an aircraft is controlled by reference to true altitude.",
            "maxLength": 8,
            "type": "string",
            "example": "18000FT"
          },
          "geoDatumAlt": {
            "description": "Specifies the geodetic datum by which the spatial coordinates of the controlled airspace are calculated, if different from the top level ACO datum.",
            "maxLength": 8,
            "type": "string",
            "example": "NAR"
          },
          "coord0": {
            "description": "A geospatial point coordinate specified in DMS (Degrees, Minutes, Seconds) format. The fields coord0 and coord1 should be used in the specification of any airspace control shape that requires exactly one (1) or two (2) reference points for construction. For shapes requiring one reference point, for instance, when cmShape is set to \"APOINT\", this field is required and singularly defines the shape. Similarly, this field is required to define the center point of a \"CIRCLE\" shape, or the \"origin of bearing\" for arcs.",
            "maxLength": 16,
            "type": "string",
            "example": "152345N0505657E"
          },
          "coord1": {
            "description": "A geospatial point coordinate specified in DMS (Degrees, Minutes, Seconds) format. The fields coord0 and coord1 should be used in the specification of any airspace control shape that requires exactly one (1) or two (2) reference points for construction. For shapes requiring one reference point, for instance, when cmShape is set to \"APOINT\", this field is required and singularly defines the shape. Similarly, this field is required to define the center point of a \"CIRCLE\" shape, or the \"origin of bearing\" for arcs.",
            "maxLength": 16,
            "type": "string",
            "example": "1523N05057E"
          },
          "bearing0": {
            "format": "double",
            "description": "A bearing measured from true North, in angular degrees. If cmShape is set to \"POLYARC\" or \"RADARC\", this field is required and is mapped to the \"beginning\" radial bearing parameter.",
            "type": "number",
            "example": 330
          },
          "bearing1": {
            "format": "double",
            "description": "A bearing measured from true North, in angular degrees. If cmShape is set to \"POLYARC\" or \"RADARC\", this field is required and is mapped to the \"ending\" radial bearing parameter.",
            "type": "number",
            "example": 160
          },
          "radMag0": {
            "format": "double",
            "description": "A distance that represents a radial magnitude. If cmShape is set to \"CIRCLE\" or \"POLYARC\", one of either fields radMag0 or radMag1 is required. If cmShape is set to \"RADARC\", this field is required and maps to the \"inner\" radial magnitude arc limit. If provided, the field radMagUnit is required.",
            "type": "number",
            "example": 30.04
          },
          "radMag1": {
            "format": "double",
            "description": "A distance that represents a radial magnitude. If cmShape is set to \"CIRCLE\" or \"POLYARC\", one of either fields radMag0 or radMag1 is required. If cmShape is set to \"RADARC\", this field is required and maps to the \"outer\" radial magnitude arc limit. If provided, the field radMagUnit is required.",
            "type": "number",
            "example": 50.12
          },
          "radMagUnit": {
            "description": "Specifies the unit of length in which radial magnitudes are given. Use M for meters, KM for kilometers, or NM for nautical miles.",
            "maxLength": 8,
            "type": "string",
            "example": "NM"
          },
          "polyCoord": {
            "description": "A set of geospatial coordinates specified in DMS (Degrees, Minutes, Seconds) format which determine the vertices of a one or two dimensional geospatial shape. When cmShape is set to \"POLYARC\" or \"POLYGON\", this field is required as applied in the construction of the area boundary. If cmShape is set to \"CORRIDOR\" or \"GEOLINE\", this field is required and can be interpreted as an ordered set of points along a path in space.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "203632N0594256E",
              "155000N0594815E",
              "155000N0591343E"
            ]
          },
          "trackLeg": {
            "format": "int32",
            "description": "Index of a segment in an airtrack, which is defined by an ordered set of points.",
            "type": "integer",
            "example": 99
          },
          "widthLeft": {
            "format": "double",
            "description": "Given an ordered pair of spatial coordinates (p0, p1), defines a distance extending into the LEFT half-plane relative to the direction of the vector that maps p0 to p1. If cmShape is set to \"1TRACK\", this field is required to define the width of the airspace track as measured from the left of the track segment line. If provided, the field widthUnit is required.",
            "type": "number",
            "example": 5.2
          },
          "widthRight": {
            "format": "double",
            "description": "Given an ordered pair of spatial coordinates (p0, p1), defines a distance extending into the RIGHT half-plane relative to the direction of the vector that maps p0 to p1. If cmShape is set to \"1TRACK\", this field is required to define the width of the airspace track as measured from the right of the track segment line. If provided, the field widthUnit is required.",
            "type": "number",
            "example": 10.4
          },
          "width": {
            "format": "double",
            "description": "Used to describe the \"side to side\" distance of a target, object or area. If cmShape is set to \"CORRIDOR\" or \"AORBIT\", this field is required and is mapped to the width parameter. If provided, the field widthUnit is required.",
            "type": "number",
            "example": 15.6
          },
          "widthUnit": {
            "description": "Specifies the unit of length for which widths are given. Use M for meters, KM for kilometers, or NM for nautical miles.",
            "maxLength": 8,
            "type": "string",
            "example": "KM"
          },
          "corrWayPoints": {
            "description": "An array of at least two alphanumeric symbols used to serially identify the corridor waypoints. If cmShape is set to \"CORRIDOR\", one of either corrWayPoints or polyCoord is required to specify the centerline of the corridor path.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "POB",
              "RDU",
              "IAD"
            ]
          },
          "orbitAlignment": {
            "description": "Orbit alignment look-up code. Can be C=Center, L=Left, R=Right.",
            "maxLength": 1,
            "type": "string",
            "example": "C"
          },
          "effVDim": {
            "description": "Description of the airspace vertical dimension.",
            "maxLength": 16,
            "type": "string",
            "example": "BRRA:GL-100AGL"
          },
          "airspaceTimePeriod": {
            "description": "The timePeriods set describes the effective datetime for a given airspace control means.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirspaceTimePeriod_Abridged"
            }
          },
          "airspaceControlPoint": {
            "description": "The controlPoint set describes any reference/controlling/rendezvous point for a given airspace control means.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirspaceControlPoint_Abridged"
            }
          },
          "cntrlAuth": {
            "description": "The commander responsible within a specified geographical area for the airspace control operation assigned to him.",
            "maxLength": 36,
            "type": "string",
            "example": "RHEIN MAIN CP"
          },
          "cntrlAuthFreqs": {
            "description": "The frequency for the airspace control authority. Can specify HZ, KHZ, MHZ, GHZ or a DESIG frequency designator code.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "125.25MHZ"
            ]
          },
          "genTextInd": {
            "description": "Used to provide transit instructions for the airspace control means.",
            "maxLength": 64,
            "type": "string",
            "example": "SITUATION"
          },
          "freeText": {
            "description": "General informat detailing the transit instruction for the airspace control means.",
            "maxLength": 128,
            "type": "string",
            "example": "1. CAPACITY: MDM TK, 50 VEHICLE CONVOY. 2. CHOKE POINTS: EXIT 5"
          }
        }
      },
      "AirspaceControlMeans_Full": {
        "description": "A conditional nested segment to report multiple airspace control means within a particular airspace control means status.",
        "type": "object",
        "properties": {
          "cmType": {
            "description": "The code for the type of airspace control means.",
            "maxLength": 8,
            "type": "string",
            "example": "ACM:ADAREA"
          },
          "cmId": {
            "description": "Airspace control means name or designator.",
            "maxLength": 32,
            "type": "string",
            "example": "DESIG:C34"
          },
          "cmShape": {
            "description": "Designates the geometric type that defines the airspace shape. One of CIRCLE, CORRIDOR, LINE, ORBIT, etc.",
            "maxLength": 64,
            "enum": [
              "POLYARC",
              "1TRACK",
              "POLYGON",
              "CIRCLE",
              "CORRIDOR",
              "APOINT",
              "AORBIT",
              "GEOLINE"
            ],
            "type": "string",
            "example": "POLYARC"
          },
          "usage": {
            "description": "Designates the means by which a defined airspace control means is to be used.",
            "maxLength": 8,
            "type": "string",
            "example": "USE:AIRCOR"
          },
          "link16Id": {
            "description": "Unique Link 16 identifier assigned to the airspace control means.",
            "maxLength": 8,
            "type": "string",
            "example": "F3356"
          },
          "transAltitude": {
            "description": "The altitude at or below which the vertical position of an aircraft is controlled by reference to true altitude.",
            "maxLength": 8,
            "type": "string",
            "example": "18000FT"
          },
          "geoDatumAlt": {
            "description": "Specifies the geodetic datum by which the spatial coordinates of the controlled airspace are calculated, if different from the top level ACO datum.",
            "maxLength": 8,
            "type": "string",
            "example": "NAR"
          },
          "coord0": {
            "description": "A geospatial point coordinate specified in DMS (Degrees, Minutes, Seconds) format. The fields coord0 and coord1 should be used in the specification of any airspace control shape that requires exactly one (1) or two (2) reference points for construction. For shapes requiring one reference point, for instance, when cmShape is set to \"APOINT\", this field is required and singularly defines the shape. Similarly, this field is required to define the center point of a \"CIRCLE\" shape, or the \"origin of bearing\" for arcs.",
            "maxLength": 16,
            "type": "string",
            "example": "152345N0505657E"
          },
          "coord1": {
            "description": "A geospatial point coordinate specified in DMS (Degrees, Minutes, Seconds) format. The fields coord0 and coord1 should be used in the specification of any airspace control shape that requires exactly one (1) or two (2) reference points for construction. For shapes requiring one reference point, for instance, when cmShape is set to \"APOINT\", this field is required and singularly defines the shape. Similarly, this field is required to define the center point of a \"CIRCLE\" shape, or the \"origin of bearing\" for arcs.",
            "maxLength": 16,
            "type": "string",
            "example": "1523N05057E"
          },
          "bearing0": {
            "format": "double",
            "description": "A bearing measured from true North, in angular degrees. If cmShape is set to \"POLYARC\" or \"RADARC\", this field is required and is mapped to the \"beginning\" radial bearing parameter.",
            "type": "number",
            "example": 330
          },
          "bearing1": {
            "format": "double",
            "description": "A bearing measured from true North, in angular degrees. If cmShape is set to \"POLYARC\" or \"RADARC\", this field is required and is mapped to the \"ending\" radial bearing parameter.",
            "type": "number",
            "example": 160
          },
          "radMag0": {
            "format": "double",
            "description": "A distance that represents a radial magnitude. If cmShape is set to \"CIRCLE\" or \"POLYARC\", one of either fields radMag0 or radMag1 is required. If cmShape is set to \"RADARC\", this field is required and maps to the \"inner\" radial magnitude arc limit. If provided, the field radMagUnit is required.",
            "type": "number",
            "example": 30.04
          },
          "radMag1": {
            "format": "double",
            "description": "A distance that represents a radial magnitude. If cmShape is set to \"CIRCLE\" or \"POLYARC\", one of either fields radMag0 or radMag1 is required. If cmShape is set to \"RADARC\", this field is required and maps to the \"outer\" radial magnitude arc limit. If provided, the field radMagUnit is required.",
            "type": "number",
            "example": 50.12
          },
          "radMagUnit": {
            "description": "Specifies the unit of length in which radial magnitudes are given. Use M for meters, KM for kilometers, or NM for nautical miles.",
            "maxLength": 8,
            "type": "string",
            "example": "NM"
          },
          "polyCoord": {
            "description": "A set of geospatial coordinates specified in DMS (Degrees, Minutes, Seconds) format which determine the vertices of a one or two dimensional geospatial shape. When cmShape is set to \"POLYARC\" or \"POLYGON\", this field is required as applied in the construction of the area boundary. If cmShape is set to \"CORRIDOR\" or \"GEOLINE\", this field is required and can be interpreted as an ordered set of points along a path in space.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "203632N0594256E",
              "155000N0594815E",
              "155000N0591343E"
            ]
          },
          "trackLeg": {
            "format": "int32",
            "description": "Index of a segment in an airtrack, which is defined by an ordered set of points.",
            "type": "integer",
            "example": 99
          },
          "widthLeft": {
            "format": "double",
            "description": "Given an ordered pair of spatial coordinates (p0, p1), defines a distance extending into the LEFT half-plane relative to the direction of the vector that maps p0 to p1. If cmShape is set to \"1TRACK\", this field is required to define the width of the airspace track as measured from the left of the track segment line. If provided, the field widthUnit is required.",
            "type": "number",
            "example": 5.2
          },
          "widthRight": {
            "format": "double",
            "description": "Given an ordered pair of spatial coordinates (p0, p1), defines a distance extending into the RIGHT half-plane relative to the direction of the vector that maps p0 to p1. If cmShape is set to \"1TRACK\", this field is required to define the width of the airspace track as measured from the right of the track segment line. If provided, the field widthUnit is required.",
            "type": "number",
            "example": 10.4
          },
          "width": {
            "format": "double",
            "description": "Used to describe the \"side to side\" distance of a target, object or area. If cmShape is set to \"CORRIDOR\" or \"AORBIT\", this field is required and is mapped to the width parameter. If provided, the field widthUnit is required.",
            "type": "number",
            "example": 15.6
          },
          "widthUnit": {
            "description": "Specifies the unit of length for which widths are given. Use M for meters, KM for kilometers, or NM for nautical miles.",
            "maxLength": 8,
            "type": "string",
            "example": "KM"
          },
          "corrWayPoints": {
            "description": "An array of at least two alphanumeric symbols used to serially identify the corridor waypoints. If cmShape is set to \"CORRIDOR\", one of either corrWayPoints or polyCoord is required to specify the centerline of the corridor path.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "POB",
              "RDU",
              "IAD"
            ]
          },
          "orbitAlignment": {
            "description": "Orbit alignment look-up code. Can be C=Center, L=Left, R=Right.",
            "maxLength": 1,
            "type": "string",
            "example": "C"
          },
          "effVDim": {
            "description": "Description of the airspace vertical dimension.",
            "maxLength": 16,
            "type": "string",
            "example": "BRRA:GL-100AGL"
          },
          "airspaceTimePeriod": {
            "description": "The timePeriods set describes the effective datetime for a given airspace control means.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirspaceTimePeriod_Full"
            }
          },
          "airspaceControlPoint": {
            "description": "The controlPoint set describes any reference/controlling/rendezvous point for a given airspace control means.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirspaceControlPoint_Full"
            }
          },
          "cntrlAuth": {
            "description": "The commander responsible within a specified geographical area for the airspace control operation assigned to him.",
            "maxLength": 36,
            "type": "string",
            "example": "RHEIN MAIN CP"
          },
          "cntrlAuthFreqs": {
            "description": "The frequency for the airspace control authority. Can specify HZ, KHZ, MHZ, GHZ or a DESIG frequency designator code.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "125.25MHZ"
            ]
          },
          "genTextInd": {
            "description": "Used to provide transit instructions for the airspace control means.",
            "maxLength": 64,
            "type": "string",
            "example": "SITUATION"
          },
          "freeText": {
            "description": "General informat detailing the transit instruction for the airspace control means.",
            "maxLength": 128,
            "type": "string",
            "example": "1. CAPACITY: MDM TK, 50 VEHICLE CONVOY. 2. CHOKE POINTS: EXIT 5"
          }
        }
      },
      "AirspaceControlMeans_Ingest": {
        "description": "A conditional nested segment to report multiple airspace control means within a particular airspace control means status.",
        "type": "object",
        "properties": {
          "cmType": {
            "description": "The code for the type of airspace control means.",
            "maxLength": 8,
            "type": "string",
            "example": "ACM:ADAREA"
          },
          "cmId": {
            "description": "Airspace control means name or designator.",
            "maxLength": 32,
            "type": "string",
            "example": "DESIG:C34"
          },
          "cmShape": {
            "description": "Designates the geometric type that defines the airspace shape. One of CIRCLE, CORRIDOR, LINE, ORBIT, etc.",
            "maxLength": 64,
            "enum": [
              "POLYARC",
              "1TRACK",
              "POLYGON",
              "CIRCLE",
              "CORRIDOR",
              "APOINT",
              "AORBIT",
              "GEOLINE"
            ],
            "type": "string",
            "example": "POLYARC"
          },
          "usage": {
            "description": "Designates the means by which a defined airspace control means is to be used.",
            "maxLength": 8,
            "type": "string",
            "example": "USE:AIRCOR"
          },
          "link16Id": {
            "description": "Unique Link 16 identifier assigned to the airspace control means.",
            "maxLength": 8,
            "type": "string",
            "example": "F3356"
          },
          "transAltitude": {
            "description": "The altitude at or below which the vertical position of an aircraft is controlled by reference to true altitude.",
            "maxLength": 8,
            "type": "string",
            "example": "18000FT"
          },
          "geoDatumAlt": {
            "description": "Specifies the geodetic datum by which the spatial coordinates of the controlled airspace are calculated, if different from the top level ACO datum.",
            "maxLength": 8,
            "type": "string",
            "example": "NAR"
          },
          "coord0": {
            "description": "A geospatial point coordinate specified in DMS (Degrees, Minutes, Seconds) format. The fields coord0 and coord1 should be used in the specification of any airspace control shape that requires exactly one (1) or two (2) reference points for construction. For shapes requiring one reference point, for instance, when cmShape is set to \"APOINT\", this field is required and singularly defines the shape. Similarly, this field is required to define the center point of a \"CIRCLE\" shape, or the \"origin of bearing\" for arcs.",
            "maxLength": 16,
            "type": "string",
            "example": "152345N0505657E"
          },
          "coord1": {
            "description": "A geospatial point coordinate specified in DMS (Degrees, Minutes, Seconds) format. The fields coord0 and coord1 should be used in the specification of any airspace control shape that requires exactly one (1) or two (2) reference points for construction. For shapes requiring one reference point, for instance, when cmShape is set to \"APOINT\", this field is required and singularly defines the shape. Similarly, this field is required to define the center point of a \"CIRCLE\" shape, or the \"origin of bearing\" for arcs.",
            "maxLength": 16,
            "type": "string",
            "example": "1523N05057E"
          },
          "bearing0": {
            "format": "double",
            "description": "A bearing measured from true North, in angular degrees. If cmShape is set to \"POLYARC\" or \"RADARC\", this field is required and is mapped to the \"beginning\" radial bearing parameter.",
            "type": "number",
            "example": 330
          },
          "bearing1": {
            "format": "double",
            "description": "A bearing measured from true North, in angular degrees. If cmShape is set to \"POLYARC\" or \"RADARC\", this field is required and is mapped to the \"ending\" radial bearing parameter.",
            "type": "number",
            "example": 160
          },
          "radMag0": {
            "format": "double",
            "description": "A distance that represents a radial magnitude. If cmShape is set to \"CIRCLE\" or \"POLYARC\", one of either fields radMag0 or radMag1 is required. If cmShape is set to \"RADARC\", this field is required and maps to the \"inner\" radial magnitude arc limit. If provided, the field radMagUnit is required.",
            "type": "number",
            "example": 30.04
          },
          "radMag1": {
            "format": "double",
            "description": "A distance that represents a radial magnitude. If cmShape is set to \"CIRCLE\" or \"POLYARC\", one of either fields radMag0 or radMag1 is required. If cmShape is set to \"RADARC\", this field is required and maps to the \"outer\" radial magnitude arc limit. If provided, the field radMagUnit is required.",
            "type": "number",
            "example": 50.12
          },
          "radMagUnit": {
            "description": "Specifies the unit of length in which radial magnitudes are given. Use M for meters, KM for kilometers, or NM for nautical miles.",
            "maxLength": 8,
            "type": "string",
            "example": "NM"
          },
          "polyCoord": {
            "description": "A set of geospatial coordinates specified in DMS (Degrees, Minutes, Seconds) format which determine the vertices of a one or two dimensional geospatial shape. When cmShape is set to \"POLYARC\" or \"POLYGON\", this field is required as applied in the construction of the area boundary. If cmShape is set to \"CORRIDOR\" or \"GEOLINE\", this field is required and can be interpreted as an ordered set of points along a path in space.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "203632N0594256E",
              "155000N0594815E",
              "155000N0591343E"
            ]
          },
          "trackLeg": {
            "format": "int32",
            "description": "Index of a segment in an airtrack, which is defined by an ordered set of points.",
            "type": "integer",
            "example": 99
          },
          "widthLeft": {
            "format": "double",
            "description": "Given an ordered pair of spatial coordinates (p0, p1), defines a distance extending into the LEFT half-plane relative to the direction of the vector that maps p0 to p1. If cmShape is set to \"1TRACK\", this field is required to define the width of the airspace track as measured from the left of the track segment line. If provided, the field widthUnit is required.",
            "type": "number",
            "example": 5.2
          },
          "widthRight": {
            "format": "double",
            "description": "Given an ordered pair of spatial coordinates (p0, p1), defines a distance extending into the RIGHT half-plane relative to the direction of the vector that maps p0 to p1. If cmShape is set to \"1TRACK\", this field is required to define the width of the airspace track as measured from the right of the track segment line. If provided, the field widthUnit is required.",
            "type": "number",
            "example": 10.4
          },
          "width": {
            "format": "double",
            "description": "Used to describe the \"side to side\" distance of a target, object or area. If cmShape is set to \"CORRIDOR\" or \"AORBIT\", this field is required and is mapped to the width parameter. If provided, the field widthUnit is required.",
            "type": "number",
            "example": 15.6
          },
          "widthUnit": {
            "description": "Specifies the unit of length for which widths are given. Use M for meters, KM for kilometers, or NM for nautical miles.",
            "maxLength": 8,
            "type": "string",
            "example": "KM"
          },
          "corrWayPoints": {
            "description": "An array of at least two alphanumeric symbols used to serially identify the corridor waypoints. If cmShape is set to \"CORRIDOR\", one of either corrWayPoints or polyCoord is required to specify the centerline of the corridor path.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "POB",
              "RDU",
              "IAD"
            ]
          },
          "orbitAlignment": {
            "description": "Orbit alignment look-up code. Can be C=Center, L=Left, R=Right.",
            "maxLength": 1,
            "type": "string",
            "example": "C"
          },
          "effVDim": {
            "description": "Description of the airspace vertical dimension.",
            "maxLength": 16,
            "type": "string",
            "example": "BRRA:GL-100AGL"
          },
          "airspaceTimePeriod": {
            "description": "The timePeriods set describes the effective datetime for a given airspace control means.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirspaceTimePeriod_Ingest"
            }
          },
          "airspaceControlPoint": {
            "description": "The controlPoint set describes any reference/controlling/rendezvous point for a given airspace control means.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirspaceControlPoint_Ingest"
            }
          },
          "cntrlAuth": {
            "description": "The commander responsible within a specified geographical area for the airspace control operation assigned to him.",
            "maxLength": 36,
            "type": "string",
            "example": "RHEIN MAIN CP"
          },
          "cntrlAuthFreqs": {
            "description": "The frequency for the airspace control authority. Can specify HZ, KHZ, MHZ, GHZ or a DESIG frequency designator code.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "125.25MHZ"
            ]
          },
          "genTextInd": {
            "description": "Used to provide transit instructions for the airspace control means.",
            "maxLength": 64,
            "type": "string",
            "example": "SITUATION"
          },
          "freeText": {
            "description": "General informat detailing the transit instruction for the airspace control means.",
            "maxLength": 128,
            "type": "string",
            "example": "1. CAPACITY: MDM TK, 50 VEHICLE CONVOY. 2. CHOKE POINTS: EXIT 5"
          }
        }
      },
      "AirspaceControlMeansStatus_Abridged": {
        "description": "Mandatory nested segment to report multiple airspace control means statuses within an ACOID.",
        "type": "object",
        "properties": {
          "cmStat": {
            "description": "Status of Airspace Control Means. Must be ADD, CHANGE, or DELETE.",
            "maxLength": 8,
            "type": "string",
            "example": "ADD"
          },
          "cmStatId": {
            "description": "Airspace control means name or designator. Mandatory if acmStat equals \"DELETE,\" otherwise this field is prohibited.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "DESIGN:B35",
              "NAME:ERMA",
              "RANG:C21-C25"
            ]
          },
          "airspaceControlMeans": {
            "description": "A conditional nested segment to report multiple airspace control means within a particular airspace control means status.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirspaceControlMeans_Abridged"
            }
          }
        }
      },
      "AirspaceControlMeansStatus_Full": {
        "description": "Mandatory nested segment to report multiple airspace control means statuses within an ACOID.",
        "type": "object",
        "properties": {
          "cmStat": {
            "description": "Status of Airspace Control Means. Must be ADD, CHANGE, or DELETE.",
            "maxLength": 8,
            "type": "string",
            "example": "ADD"
          },
          "cmStatId": {
            "description": "Airspace control means name or designator. Mandatory if acmStat equals \"DELETE,\" otherwise this field is prohibited.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "DESIGN:B35",
              "NAME:ERMA",
              "RANG:C21-C25"
            ]
          },
          "airspaceControlMeans": {
            "description": "A conditional nested segment to report multiple airspace control means within a particular airspace control means status.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirspaceControlMeans_Full"
            }
          }
        }
      },
      "AirspaceControlMeansStatus_Ingest": {
        "description": "Mandatory nested segment to report multiple airspace control means statuses within an ACOID.",
        "type": "object",
        "properties": {
          "cmStat": {
            "description": "Status of Airspace Control Means. Must be ADD, CHANGE, or DELETE.",
            "maxLength": 8,
            "type": "string",
            "example": "ADD"
          },
          "cmStatId": {
            "description": "Airspace control means name or designator. Mandatory if acmStat equals \"DELETE,\" otherwise this field is prohibited.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "DESIGN:B35",
              "NAME:ERMA",
              "RANG:C21-C25"
            ]
          },
          "airspaceControlMeans": {
            "description": "A conditional nested segment to report multiple airspace control means within a particular airspace control means status.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirspaceControlMeans_Ingest"
            }
          }
        }
      },
      "AirspaceControlOrder_Abridged": {
        "description": "Beta Version Airspace Control Order: Contains airspace coordination information and instructions that have been issued by an airspace control authority.",
        "required": [
          "classificationMarking",
          "opExName",
          "originator",
          "startTime",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "c44b0a80-9fef-63d9-6267-79037fb93e4c"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "rawFileURI": {
            "description": "Optional URI location in the document repository of the raw file parsed by the system to produce this record. To download the raw file, prepend https://udl-hostname/scs/download?id= to this value.",
            "maxLength": 256,
            "type": "string",
            "readOnly": true,
            "example": "EXAMPLE URI"
          },
          "opExName": {
            "description": "Specifies the unique operation or exercise name, nickname, or codeword assigned to a joint exercise or operation plan.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "DESERT WIND"
          },
          "originator": {
            "description": "The identifier of the originator of this message.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "USCENTCOM"
          },
          "startTime": {
            "format": "date-time",
            "description": "The start of the effective time period of this airspace control order, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T13:55:43.123Z"
          },
          "stopTime": {
            "format": "date-time",
            "description": "The end of the effective time period of this airspace control order, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-08T13:55:43.123Z"
          },
          "stopQualifier": {
            "description": "A qualifier for the end of the effective time period of this airspace control order, such as AFTER, ASOF, NLT, etc. Used with field stopTime to indicate a relative time.",
            "maxLength": 8,
            "type": "string",
            "example": "AFTER"
          },
          "opExInfo": {
            "description": "Supplementary name that can be used to further identify exercise nicknames, or to provide the primary nickname of the option or the alternative of an operational plan.",
            "maxLength": 32,
            "type": "string",
            "example": "CONTROL"
          },
          "opExInfoAlt": {
            "description": "The secondary supplementary nickname of the option or the alternative of the operational plan or order.",
            "maxLength": 24,
            "type": "string",
            "example": "ORANGE"
          },
          "planOrigNum": {
            "description": "The official identifier of the military establishment responsible for the operation plan and the identification number assigned to this plan.",
            "maxLength": 36,
            "type": "string",
            "example": "SACEUR 106"
          },
          "serialNum": {
            "description": "The unique message identifier sequentially assigned by the originator.",
            "maxLength": 16,
            "type": "string",
            "example": "1201003"
          },
          "month": {
            "description": "The month in which the message originated.",
            "maxLength": 12,
            "type": "string",
            "example": "OCT"
          },
          "qualifier": {
            "description": "The qualifier which caveats the message status.",
            "maxLength": 8,
            "type": "string",
            "example": "CHG"
          },
          "qualSN": {
            "format": "int32",
            "description": "The serial number associated with the message qualifier.",
            "type": "integer",
            "example": 1
          },
          "areaOfValidity": {
            "description": "Name of the area of the command for which the ACO is valid.",
            "maxLength": 32,
            "type": "string",
            "example": "FORT BRAGG"
          },
          "acoSerialNum": {
            "description": "The serial number of this airspace control order.",
            "maxLength": 8,
            "type": "string",
            "example": "27B"
          },
          "geoDatum": {
            "description": "Specifies the geodetic datum by which the spatial coordinates of the controlled airspace are calculated.",
            "maxLength": 8,
            "type": "string",
            "example": "EUR-T"
          },
          "acoComments": {
            "description": "Free text information expressed in natural language.",
            "maxLength": 128,
            "type": "string",
            "example": "CHOKE POINTS"
          },
          "airspaceControlOrderReferences": {
            "description": "The airspaceControlReferences set provides both USMTF and non-USMTF references for this airspace control order.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirspaceControlOrderReference_Abridged"
            }
          },
          "airspaceControlMeansStatus": {
            "description": "Mandatory nested segment to report multiple airspace control means statuses within an ACOID.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirspaceControlMeansStatus_Abridged"
            }
          },
          "undLnkTrks": {
            "description": "Array of unique link 16 identifiers that will be assigned to a future airspace control means.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "A2467",
              "A3466",
              "AA232"
            ]
          },
          "classSource": {
            "description": "Markings defining the source material or the original classification authority for the ACO message.",
            "maxLength": 64,
            "type": "string",
            "example": "ORIG:USJFCOM"
          },
          "classReasons": {
            "description": "Mandatory if classSource uses the \"IORIG\" designator. Must be a REASON FOR CLASSIFICATION code.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "15C",
              "10C"
            ]
          },
          "downgradeInsDates": {
            "description": "Markings providing the literal guidance or date for downgrading or declassifying the airspace control order.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "NST:AT EXERCISE ENDEX",
              "DATE:25NOV1997"
            ]
          },
          "declassExemptionCodes": {
            "description": "Coded entries that provide justification for exemption from automatic downgrading or declassification of the airspace control order.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "X1",
              "X2"
            ]
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "AirspaceControlOrder_Full": {
        "description": "Beta Version Airspace Control Order: Contains airspace coordination information and instructions that have been issued by an airspace control authority.",
        "required": [
          "classificationMarking",
          "opExName",
          "originator",
          "startTime",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "c44b0a80-9fef-63d9-6267-79037fb93e4c"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "rawFileURI": {
            "description": "Optional URI location in the document repository of the raw file parsed by the system to produce this record. To download the raw file, prepend https://udl-hostname/scs/download?id= to this value.",
            "maxLength": 256,
            "type": "string",
            "readOnly": true,
            "example": "EXAMPLE URI"
          },
          "opExName": {
            "description": "Specifies the unique operation or exercise name, nickname, or codeword assigned to a joint exercise or operation plan.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "DESERT WIND"
          },
          "originator": {
            "description": "The identifier of the originator of this message.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "USCENTCOM"
          },
          "startTime": {
            "format": "date-time",
            "description": "The start of the effective time period of this airspace control order, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T13:55:43.123Z"
          },
          "stopTime": {
            "format": "date-time",
            "description": "The end of the effective time period of this airspace control order, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-08T13:55:43.123Z"
          },
          "stopQualifier": {
            "description": "A qualifier for the end of the effective time period of this airspace control order, such as AFTER, ASOF, NLT, etc. Used with field stopTime to indicate a relative time.",
            "maxLength": 8,
            "type": "string",
            "example": "AFTER"
          },
          "opExInfo": {
            "description": "Supplementary name that can be used to further identify exercise nicknames, or to provide the primary nickname of the option or the alternative of an operational plan.",
            "maxLength": 32,
            "type": "string",
            "example": "CONTROL"
          },
          "opExInfoAlt": {
            "description": "The secondary supplementary nickname of the option or the alternative of the operational plan or order.",
            "maxLength": 24,
            "type": "string",
            "example": "ORANGE"
          },
          "planOrigNum": {
            "description": "The official identifier of the military establishment responsible for the operation plan and the identification number assigned to this plan.",
            "maxLength": 36,
            "type": "string",
            "example": "SACEUR 106"
          },
          "serialNum": {
            "description": "The unique message identifier sequentially assigned by the originator.",
            "maxLength": 16,
            "type": "string",
            "example": "1201003"
          },
          "month": {
            "description": "The month in which the message originated.",
            "maxLength": 12,
            "type": "string",
            "example": "OCT"
          },
          "qualifier": {
            "description": "The qualifier which caveats the message status.",
            "maxLength": 8,
            "type": "string",
            "example": "CHG"
          },
          "qualSN": {
            "format": "int32",
            "description": "The serial number associated with the message qualifier.",
            "type": "integer",
            "example": 1
          },
          "areaOfValidity": {
            "description": "Name of the area of the command for which the ACO is valid.",
            "maxLength": 32,
            "type": "string",
            "example": "FORT BRAGG"
          },
          "acoSerialNum": {
            "description": "The serial number of this airspace control order.",
            "maxLength": 8,
            "type": "string",
            "example": "27B"
          },
          "geoDatum": {
            "description": "Specifies the geodetic datum by which the spatial coordinates of the controlled airspace are calculated.",
            "maxLength": 8,
            "type": "string",
            "example": "EUR-T"
          },
          "acoComments": {
            "description": "Free text information expressed in natural language.",
            "maxLength": 128,
            "type": "string",
            "example": "CHOKE POINTS"
          },
          "airspaceControlOrderReferences": {
            "description": "The airspaceControlReferences set provides both USMTF and non-USMTF references for this airspace control order.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirspaceControlOrderReference_Full"
            }
          },
          "airspaceControlMeansStatus": {
            "description": "Mandatory nested segment to report multiple airspace control means statuses within an ACOID.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirspaceControlMeansStatus_Full"
            }
          },
          "undLnkTrks": {
            "description": "Array of unique link 16 identifiers that will be assigned to a future airspace control means.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "A2467",
              "A3466",
              "AA232"
            ]
          },
          "classSource": {
            "description": "Markings defining the source material or the original classification authority for the ACO message.",
            "maxLength": 64,
            "type": "string",
            "example": "ORIG:USJFCOM"
          },
          "classReasons": {
            "description": "Mandatory if classSource uses the \"IORIG\" designator. Must be a REASON FOR CLASSIFICATION code.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "15C",
              "10C"
            ]
          },
          "downgradeInsDates": {
            "description": "Markings providing the literal guidance or date for downgrading or declassifying the airspace control order.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "NST:AT EXERCISE ENDEX",
              "DATE:25NOV1997"
            ]
          },
          "declassExemptionCodes": {
            "description": "Coded entries that provide justification for exemption from automatic downgrading or declassification of the airspace control order.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "X1",
              "X2"
            ]
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "AirspaceControlOrder_Ingest": {
        "description": "Beta Version Airspace Control Order: Contains airspace coordination information and instructions that have been issued by an airspace control authority.",
        "required": [
          "classificationMarking",
          "opExName",
          "originator",
          "startTime",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "c44b0a80-9fef-63d9-6267-79037fb93e4c"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "rawFileURI": {
            "description": "Optional URI location in the document repository of the raw file parsed by the system to produce this record. To download the raw file, prepend https://udl-hostname/scs/download?id= to this value.",
            "maxLength": 256,
            "type": "string",
            "readOnly": true,
            "example": "EXAMPLE URI"
          },
          "opExName": {
            "description": "Specifies the unique operation or exercise name, nickname, or codeword assigned to a joint exercise or operation plan.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "DESERT WIND"
          },
          "originator": {
            "description": "The identifier of the originator of this message.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "USCENTCOM"
          },
          "startTime": {
            "format": "date-time",
            "description": "The start of the effective time period of this airspace control order, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T13:55:43.123Z"
          },
          "stopTime": {
            "format": "date-time",
            "description": "The end of the effective time period of this airspace control order, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-08T13:55:43.123Z"
          },
          "stopQualifier": {
            "description": "A qualifier for the end of the effective time period of this airspace control order, such as AFTER, ASOF, NLT, etc. Used with field stopTime to indicate a relative time.",
            "maxLength": 8,
            "type": "string",
            "example": "AFTER"
          },
          "opExInfo": {
            "description": "Supplementary name that can be used to further identify exercise nicknames, or to provide the primary nickname of the option or the alternative of an operational plan.",
            "maxLength": 32,
            "type": "string",
            "example": "CONTROL"
          },
          "opExInfoAlt": {
            "description": "The secondary supplementary nickname of the option or the alternative of the operational plan or order.",
            "maxLength": 24,
            "type": "string",
            "example": "ORANGE"
          },
          "planOrigNum": {
            "description": "The official identifier of the military establishment responsible for the operation plan and the identification number assigned to this plan.",
            "maxLength": 36,
            "type": "string",
            "example": "SACEUR 106"
          },
          "serialNum": {
            "description": "The unique message identifier sequentially assigned by the originator.",
            "maxLength": 16,
            "type": "string",
            "example": "1201003"
          },
          "month": {
            "description": "The month in which the message originated.",
            "maxLength": 12,
            "type": "string",
            "example": "OCT"
          },
          "qualifier": {
            "description": "The qualifier which caveats the message status.",
            "maxLength": 8,
            "type": "string",
            "example": "CHG"
          },
          "qualSN": {
            "format": "int32",
            "description": "The serial number associated with the message qualifier.",
            "type": "integer",
            "example": 1
          },
          "areaOfValidity": {
            "description": "Name of the area of the command for which the ACO is valid.",
            "maxLength": 32,
            "type": "string",
            "example": "FORT BRAGG"
          },
          "acoSerialNum": {
            "description": "The serial number of this airspace control order.",
            "maxLength": 8,
            "type": "string",
            "example": "27B"
          },
          "geoDatum": {
            "description": "Specifies the geodetic datum by which the spatial coordinates of the controlled airspace are calculated.",
            "maxLength": 8,
            "type": "string",
            "example": "EUR-T"
          },
          "acoComments": {
            "description": "Free text information expressed in natural language.",
            "maxLength": 128,
            "type": "string",
            "example": "CHOKE POINTS"
          },
          "airspaceControlOrderReferences": {
            "description": "The airspaceControlReferences set provides both USMTF and non-USMTF references for this airspace control order.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirspaceControlOrderReference_Ingest"
            }
          },
          "airspaceControlMeansStatus": {
            "description": "Mandatory nested segment to report multiple airspace control means statuses within an ACOID.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirspaceControlMeansStatus_Ingest"
            }
          },
          "undLnkTrks": {
            "description": "Array of unique link 16 identifiers that will be assigned to a future airspace control means.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "A2467",
              "A3466",
              "AA232"
            ]
          },
          "classSource": {
            "description": "Markings defining the source material or the original classification authority for the ACO message.",
            "maxLength": 64,
            "type": "string",
            "example": "ORIG:USJFCOM"
          },
          "classReasons": {
            "description": "Mandatory if classSource uses the \"IORIG\" designator. Must be a REASON FOR CLASSIFICATION code.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "15C",
              "10C"
            ]
          },
          "downgradeInsDates": {
            "description": "Markings providing the literal guidance or date for downgrading or declassifying the airspace control order.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "NST:AT EXERCISE ENDEX",
              "DATE:25NOV1997"
            ]
          },
          "declassExemptionCodes": {
            "description": "Coded entries that provide justification for exemption from automatic downgrading or declassification of the airspace control order.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "X1",
              "X2"
            ]
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "AirspaceControlOrderReference_Abridged": {
        "description": "The airspaceControlReferences set provides both USMTF and non-USMTF references for this airspace control order.",
        "type": "object",
        "properties": {
          "refSId": {
            "description": "Specifies an alphabetic serial number identifying a reference pertaining to this message.",
            "maxLength": 8,
            "type": "string",
            "example": "A"
          },
          "refType": {
            "description": "Specifies the type for this reference.",
            "maxLength": 64,
            "type": "string",
            "example": "NBC1"
          },
          "refOriginator": {
            "description": "The originator of this reference.",
            "maxLength": 36,
            "type": "string",
            "example": "SHAPE"
          },
          "refTs": {
            "format": "date-time",
            "description": "Timestamp of the referenced message, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T13:55:43.123Z"
          },
          "refSerialNum": {
            "description": "The reference serial number.",
            "maxLength": 16,
            "type": "string",
            "example": "100"
          },
          "refSpecialNotation": {
            "description": "Indicates any special actions, restrictions, guidance, or information relating to this reference.",
            "maxLength": 8,
            "type": "string",
            "example": "NOTAL"
          },
          "refSICs": {
            "description": "Array of NATO Subject Indicator Codes (SIC) or filing numbers of the document being referenced.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "RCA",
              "FN:4503B"
            ]
          }
        }
      },
      "AirspaceControlOrderReference_Full": {
        "description": "The airspaceControlReferences set provides both USMTF and non-USMTF references for this airspace control order.",
        "type": "object",
        "properties": {
          "refSId": {
            "description": "Specifies an alphabetic serial number identifying a reference pertaining to this message.",
            "maxLength": 8,
            "type": "string",
            "example": "A"
          },
          "refType": {
            "description": "Specifies the type for this reference.",
            "maxLength": 64,
            "type": "string",
            "example": "NBC1"
          },
          "refOriginator": {
            "description": "The originator of this reference.",
            "maxLength": 36,
            "type": "string",
            "example": "SHAPE"
          },
          "refTs": {
            "format": "date-time",
            "description": "Timestamp of the referenced message, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T13:55:43.123Z"
          },
          "refSerialNum": {
            "description": "The reference serial number.",
            "maxLength": 16,
            "type": "string",
            "example": "100"
          },
          "refSpecialNotation": {
            "description": "Indicates any special actions, restrictions, guidance, or information relating to this reference.",
            "maxLength": 8,
            "type": "string",
            "example": "NOTAL"
          },
          "refSICs": {
            "description": "Array of NATO Subject Indicator Codes (SIC) or filing numbers of the document being referenced.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "RCA",
              "FN:4503B"
            ]
          }
        }
      },
      "AirspaceControlOrderReference_Ingest": {
        "description": "The airspaceControlReferences set provides both USMTF and non-USMTF references for this airspace control order.",
        "type": "object",
        "properties": {
          "refSId": {
            "description": "Specifies an alphabetic serial number identifying a reference pertaining to this message.",
            "maxLength": 8,
            "type": "string",
            "example": "A"
          },
          "refType": {
            "description": "Specifies the type for this reference.",
            "maxLength": 64,
            "type": "string",
            "example": "NBC1"
          },
          "refOriginator": {
            "description": "The originator of this reference.",
            "maxLength": 36,
            "type": "string",
            "example": "SHAPE"
          },
          "refTs": {
            "format": "date-time",
            "description": "Timestamp of the referenced message, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-07T13:55:43.123Z"
          },
          "refSerialNum": {
            "description": "The reference serial number.",
            "maxLength": 16,
            "type": "string",
            "example": "100"
          },
          "refSpecialNotation": {
            "description": "Indicates any special actions, restrictions, guidance, or information relating to this reference.",
            "maxLength": 8,
            "type": "string",
            "example": "NOTAL"
          },
          "refSICs": {
            "description": "Array of NATO Subject Indicator Codes (SIC) or filing numbers of the document being referenced.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "RCA",
              "FN:4503B"
            ]
          }
        }
      },
      "AirspaceControlPoint_Abridged": {
        "description": "The controlPoint set describes any reference/controlling/rendezvous point for a given airspace control means.",
        "type": "object",
        "properties": {
          "ctrlPtType": {
            "description": "One of possible control point type codes, such as CP, ER, OT, etc.",
            "maxLength": 2,
            "type": "string",
            "example": "CP"
          },
          "ctrlPtName": {
            "description": "The name applied to the control point, used as a reference.",
            "maxLength": 32,
            "type": "string",
            "example": "APPLE"
          },
          "ctrlPtLocation": {
            "description": "A geospatial point coordinate specified in DMS (Degrees, Minutes, Seconds) format that represents the location of the control point.",
            "maxLength": 16,
            "type": "string",
            "example": "203632N0594256E"
          },
          "ctrlPtAltitude": {
            "description": "The altitude of the control point.",
            "maxLength": 32,
            "type": "string",
            "example": "BRFL:MSL-FL230"
          }
        }
      },
      "AirspaceControlPoint_Full": {
        "description": "The controlPoint set describes any reference/controlling/rendezvous point for a given airspace control means.",
        "type": "object",
        "properties": {
          "ctrlPtType": {
            "description": "One of possible control point type codes, such as CP, ER, OT, etc.",
            "maxLength": 2,
            "type": "string",
            "example": "CP"
          },
          "ctrlPtName": {
            "description": "The name applied to the control point, used as a reference.",
            "maxLength": 32,
            "type": "string",
            "example": "APPLE"
          },
          "ctrlPtLocation": {
            "description": "A geospatial point coordinate specified in DMS (Degrees, Minutes, Seconds) format that represents the location of the control point.",
            "maxLength": 16,
            "type": "string",
            "example": "203632N0594256E"
          },
          "ctrlPtAltitude": {
            "description": "The altitude of the control point.",
            "maxLength": 32,
            "type": "string",
            "example": "BRFL:MSL-FL230"
          }
        }
      },
      "AirspaceControlPoint_Ingest": {
        "description": "The controlPoint set describes any reference/controlling/rendezvous point for a given airspace control means.",
        "type": "object",
        "properties": {
          "ctrlPtType": {
            "description": "One of possible control point type codes, such as CP, ER, OT, etc.",
            "maxLength": 2,
            "type": "string",
            "example": "CP"
          },
          "ctrlPtName": {
            "description": "The name applied to the control point, used as a reference.",
            "maxLength": 32,
            "type": "string",
            "example": "APPLE"
          },
          "ctrlPtLocation": {
            "description": "A geospatial point coordinate specified in DMS (Degrees, Minutes, Seconds) format that represents the location of the control point.",
            "maxLength": 16,
            "type": "string",
            "example": "203632N0594256E"
          },
          "ctrlPtAltitude": {
            "description": "The altitude of the control point.",
            "maxLength": 32,
            "type": "string",
            "example": "BRFL:MSL-FL230"
          }
        }
      },
      "AirspaceTimePeriod_Abridged": {
        "description": "The timePeriods set describes the effective datetime for a given airspace control means.",
        "type": "object",
        "properties": {
          "timeMode": {
            "description": "The airspace time code associated with the ACO. Can be DISCRETE, a fixed time block, or INTERVAL, a repeating time block.",
            "maxLength": 8,
            "type": "string",
            "example": "DISCRETE"
          },
          "timeStart": {
            "description": "The start time designating that the airspace control order is active.",
            "maxLength": 16,
            "type": "string",
            "example": "141325ZFEB2002"
          },
          "timeEnd": {
            "description": "The end time designating that the airspace control order is no longer active. Can contain datetime information or a stop time qualifier code, such as AFTER, NET, UFN, etc.",
            "maxLength": 16,
            "type": "string",
            "example": "141325ZFEB2002"
          },
          "intFreq": {
            "description": "Mandatory if timeMode is INTERVAL. Can be one of the interval frequency codes, such as BIWEEKLY, DAILY, YEARLY, etc.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "WEEKLY"
            ]
          },
          "intDur": {
            "description": "Mandatory if timeMode is INTERVAL. Can be a numerical multiplier on an interval frequency code, a stop time qualifier code such as AFTER, NET, UFN, etc, or a datetime like string.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "65WK"
            ]
          }
        }
      },
      "AirspaceTimePeriod_Full": {
        "description": "The timePeriods set describes the effective datetime for a given airspace control means.",
        "type": "object",
        "properties": {
          "timeMode": {
            "description": "The airspace time code associated with the ACO. Can be DISCRETE, a fixed time block, or INTERVAL, a repeating time block.",
            "maxLength": 8,
            "type": "string",
            "example": "DISCRETE"
          },
          "timeStart": {
            "description": "The start time designating that the airspace control order is active.",
            "maxLength": 16,
            "type": "string",
            "example": "141325ZFEB2002"
          },
          "timeEnd": {
            "description": "The end time designating that the airspace control order is no longer active. Can contain datetime information or a stop time qualifier code, such as AFTER, NET, UFN, etc.",
            "maxLength": 16,
            "type": "string",
            "example": "141325ZFEB2002"
          },
          "intFreq": {
            "description": "Mandatory if timeMode is INTERVAL. Can be one of the interval frequency codes, such as BIWEEKLY, DAILY, YEARLY, etc.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "WEEKLY"
            ]
          },
          "intDur": {
            "description": "Mandatory if timeMode is INTERVAL. Can be a numerical multiplier on an interval frequency code, a stop time qualifier code such as AFTER, NET, UFN, etc, or a datetime like string.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "65WK"
            ]
          }
        }
      },
      "AirspaceTimePeriod_Ingest": {
        "description": "The timePeriods set describes the effective datetime for a given airspace control means.",
        "type": "object",
        "properties": {
          "timeMode": {
            "description": "The airspace time code associated with the ACO. Can be DISCRETE, a fixed time block, or INTERVAL, a repeating time block.",
            "maxLength": 8,
            "type": "string",
            "example": "DISCRETE"
          },
          "timeStart": {
            "description": "The start time designating that the airspace control order is active.",
            "maxLength": 16,
            "type": "string",
            "example": "141325ZFEB2002"
          },
          "timeEnd": {
            "description": "The end time designating that the airspace control order is no longer active. Can contain datetime information or a stop time qualifier code, such as AFTER, NET, UFN, etc.",
            "maxLength": 16,
            "type": "string",
            "example": "141325ZFEB2002"
          },
          "intFreq": {
            "description": "Mandatory if timeMode is INTERVAL. Can be one of the interval frequency codes, such as BIWEEKLY, DAILY, YEARLY, etc.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "WEEKLY"
            ]
          },
          "intDur": {
            "description": "Mandatory if timeMode is INTERVAL. Can be a numerical multiplier on an interval frequency code, a stop time qualifier code such as AFTER, NET, UFN, etc, or a datetime like string.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "65WK"
            ]
          }
        }
      },
      "AirTaskingOrder_Abridged": {
        "description": "Beta Version Air Tasking Order: The ATO is used to task air missions, assign cross force tasking as well as intraservice tasking.",
        "required": [
          "classificationMarking",
          "opExerName",
          "beginTs",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "POI-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "rawFileURI": {
            "description": "Optional URI location in the document repository of the raw file parsed by the system to produce this record. To download the raw file, prepend https://udl-hostname/scs/download?id= to this value.",
            "maxLength": 256,
            "type": "string",
            "readOnly": true,
            "example": "Example URI"
          },
          "opExerName": {
            "description": "Specifies the unique operation or exercise name, nickname, or codeword assigned to a joint exercise or operation plan.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "DESERT WIND"
          },
          "msgOriginator": {
            "description": "The identifier of the originator of the message.",
            "maxLength": 36,
            "type": "string",
            "example": "USCENTCOM"
          },
          "msgSN": {
            "description": "The unique message identifier sequentially assigned by the originator.",
            "maxLength": 16,
            "type": "string",
            "example": "ATO A"
          },
          "msgMonth": {
            "description": "The month in which the message originated.",
            "maxLength": 16,
            "type": "string",
            "example": "OCT"
          },
          "msgQualifier": {
            "description": "The qualifier which caveats the message status.",
            "maxLength": 8,
            "type": "string",
            "example": "CHG"
          },
          "ackReqInd": {
            "description": "The indicator specifying an affirmative or a negatice condition for this message.",
            "maxLength": 8,
            "type": "string",
            "example": "YES"
          },
          "ackUnitInstructions": {
            "description": "Specifies textual data amplifying the data contained in the acknowledgement requirement indicator (ackRedInd) field or the unit required to acknowledge.",
            "maxLength": 36,
            "type": "string",
            "example": "INST:45TS"
          },
          "beginTs": {
            "format": "date-time",
            "description": "The effective begin time for this ATO in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-10-25T12:00:00.123Z"
          },
          "endTs": {
            "format": "date-time",
            "description": "The effective end time for this ATO in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-10-27T12:00:00.123Z"
          },
          "genText": {
            "description": "A collection that details special instructions, important information, guidance, and amplifying information regarding this ATO.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenText_Abridged"
            }
          },
          "acMsnTasking": {
            "description": "A collection that specifies the tasked country, tasked service, unit and mission level tasking for this ATO.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AircraftMissionTasking_Abridged"
            }
          },
          "navalFltOps": {
            "description": "A collection that specifies the naval flight operations for this ATO.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NavalFlightOperations_Abridged"
            }
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "AirTaskingOrder_Full": {
        "description": "Beta Version Air Tasking Order: The ATO is used to task air missions, assign cross force tasking as well as intraservice tasking.",
        "required": [
          "classificationMarking",
          "opExerName",
          "beginTs",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "POI-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "rawFileURI": {
            "description": "Optional URI location in the document repository of the raw file parsed by the system to produce this record. To download the raw file, prepend https://udl-hostname/scs/download?id= to this value.",
            "maxLength": 256,
            "type": "string",
            "readOnly": true,
            "example": "Example URI"
          },
          "opExerName": {
            "description": "Specifies the unique operation or exercise name, nickname, or codeword assigned to a joint exercise or operation plan.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "DESERT WIND"
          },
          "msgOriginator": {
            "description": "The identifier of the originator of the message.",
            "maxLength": 36,
            "type": "string",
            "example": "USCENTCOM"
          },
          "msgSN": {
            "description": "The unique message identifier sequentially assigned by the originator.",
            "maxLength": 16,
            "type": "string",
            "example": "ATO A"
          },
          "msgMonth": {
            "description": "The month in which the message originated.",
            "maxLength": 16,
            "type": "string",
            "example": "OCT"
          },
          "msgQualifier": {
            "description": "The qualifier which caveats the message status.",
            "maxLength": 8,
            "type": "string",
            "example": "CHG"
          },
          "ackReqInd": {
            "description": "The indicator specifying an affirmative or a negatice condition for this message.",
            "maxLength": 8,
            "type": "string",
            "example": "YES"
          },
          "ackUnitInstructions": {
            "description": "Specifies textual data amplifying the data contained in the acknowledgement requirement indicator (ackRedInd) field or the unit required to acknowledge.",
            "maxLength": 36,
            "type": "string",
            "example": "INST:45TS"
          },
          "beginTs": {
            "format": "date-time",
            "description": "The effective begin time for this ATO in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-10-25T12:00:00.123Z"
          },
          "endTs": {
            "format": "date-time",
            "description": "The effective end time for this ATO in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-10-27T12:00:00.123Z"
          },
          "genText": {
            "description": "A collection that details special instructions, important information, guidance, and amplifying information regarding this ATO.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenText_Full"
            }
          },
          "acMsnTasking": {
            "description": "A collection that specifies the tasked country, tasked service, unit and mission level tasking for this ATO.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AircraftMissionTasking_Full"
            }
          },
          "navalFltOps": {
            "description": "A collection that specifies the naval flight operations for this ATO.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NavalFlightOperations_Full"
            }
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "AirTaskingOrder_Ingest": {
        "description": "Beta Version Air Tasking Order: The ATO is used to task air missions, assign cross force tasking as well as intraservice tasking.",
        "required": [
          "classificationMarking",
          "opExerName",
          "beginTs",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "POI-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "rawFileURI": {
            "description": "Optional URI location in the document repository of the raw file parsed by the system to produce this record. To download the raw file, prepend https://udl-hostname/scs/download?id= to this value.",
            "maxLength": 256,
            "type": "string",
            "readOnly": true,
            "example": "Example URI"
          },
          "opExerName": {
            "description": "Specifies the unique operation or exercise name, nickname, or codeword assigned to a joint exercise or operation plan.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "DESERT WIND"
          },
          "msgOriginator": {
            "description": "The identifier of the originator of the message.",
            "maxLength": 36,
            "type": "string",
            "example": "USCENTCOM"
          },
          "msgSN": {
            "description": "The unique message identifier sequentially assigned by the originator.",
            "maxLength": 16,
            "type": "string",
            "example": "ATO A"
          },
          "msgMonth": {
            "description": "The month in which the message originated.",
            "maxLength": 16,
            "type": "string",
            "example": "OCT"
          },
          "msgQualifier": {
            "description": "The qualifier which caveats the message status.",
            "maxLength": 8,
            "type": "string",
            "example": "CHG"
          },
          "ackReqInd": {
            "description": "The indicator specifying an affirmative or a negatice condition for this message.",
            "maxLength": 8,
            "type": "string",
            "example": "YES"
          },
          "ackUnitInstructions": {
            "description": "Specifies textual data amplifying the data contained in the acknowledgement requirement indicator (ackRedInd) field or the unit required to acknowledge.",
            "maxLength": 36,
            "type": "string",
            "example": "INST:45TS"
          },
          "beginTs": {
            "format": "date-time",
            "description": "The effective begin time for this ATO in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-10-25T12:00:00.123Z"
          },
          "endTs": {
            "format": "date-time",
            "description": "The effective end time for this ATO in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-10-27T12:00:00.123Z"
          },
          "genText": {
            "description": "A collection that details special instructions, important information, guidance, and amplifying information regarding this ATO.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenText_Ingest"
            }
          },
          "acMsnTasking": {
            "description": "A collection that specifies the tasked country, tasked service, unit and mission level tasking for this ATO.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AircraftMissionTasking_Ingest"
            }
          },
          "navalFltOps": {
            "description": "A collection that specifies the naval flight operations for this ATO.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NavalFlightOperations_Ingest"
            }
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "AirTransportMission_Abridged": {
        "description": "The information in an Air Transport Mission contains unique identification, description of the mission objective, aircraft and crew assignments, mission alias, embarkation/debarkation cargo locations, priority, and other mission characteristics.",
        "required": [
          "classificationMarking",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "bdad6945-c9e4-b829-f7be-1ad075541921"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "origMissionId": {
            "description": "The mission identifier provided by the originating source.",
            "maxLength": 36,
            "type": "string",
            "example": "614bebb6-a62e-053c-ca51-e79f8a402b28"
          },
          "amcMissionId": {
            "description": "Air Mobility Command (AMC) mission identifier according to Mobility Air Forces (MAF) Encode/Decode procedures.",
            "maxLength": 36,
            "type": "string",
            "example": "AJM7939B1123"
          },
          "gdssMissionId": {
            "description": "Global Decision Support System (GDSS) mission unique identifier.",
            "maxLength": 36,
            "type": "string",
            "example": "1e6edeec-72e9-aaec-d33c-51147cb5ffdd"
          },
          "atoMissionId": {
            "description": "The mission number according to the Air Tasking Order (ATO).",
            "maxLength": 4,
            "type": "string",
            "example": "8900"
          },
          "prevMissionId": {
            "description": "Unique identifier of the previous air transport mission provided by the originating source. Provides a method for the data provider to link air transport missions together chronologically for tasking and planning purposes.",
            "maxLength": 36,
            "type": "string",
            "example": "a77055df-edc3-4047-a5fa-604f80b9fe3c"
          },
          "prevAMCMissionId": {
            "description": "Air Mobility Command (AMC) mission identifier of the previous air transport mission. Provides a method for AMC to link air transport missions together chronologically for tasking and planning purposes.",
            "maxLength": 36,
            "type": "string",
            "example": "AJM7939B1122"
          },
          "nextMissionId": {
            "description": "Unique identifier of the next mission provided by the originating source. Provides a method for the data provider to link air transport missions together chronologically for tasking and planning purposes.",
            "maxLength": 36,
            "type": "string",
            "example": "186e5658-1079-45c0-bccc-02d2fa31b663"
          },
          "nextAMCMissionId": {
            "description": "Air Mobility Command (AMC) mission identifier of the next air transport mission. Provides a method for AMC to link air transport missions together chronologically for tasking and planning purposes.",
            "maxLength": 36,
            "type": "string",
            "example": "AJM7939B1124"
          },
          "objective": {
            "description": "A description of this mission's objective.",
            "maxLength": 1024,
            "type": "string",
            "example": "Deliver water to island X."
          },
          "purpose": {
            "description": "A description of this mission's purpose (e.g. why this mission needs to happen, what is the mission supporting, etc.).",
            "maxLength": 1024,
            "type": "string",
            "example": "People at island X need water ASAP. Two previous attempts failed due to weather."
          },
          "jcsPriority": {
            "description": "Highest Joint Chiefs of Staff priority of this mission.",
            "maxLength": 3,
            "minLength": 3,
            "type": "string",
            "example": "1A3"
          },
          "cw": {
            "description": "Flag indicating this is a close watch mission.",
            "type": "boolean",
            "example": true
          },
          "type": {
            "description": "The type of mission (e.g. SAAM, CHNL, etc.).",
            "maxLength": 32,
            "type": "string",
            "example": "SAAM"
          },
          "firstPickUp": {
            "description": "The International Civil Aviation Organization (ICAO) site code of first cargo pick up.",
            "maxLength": 4,
            "minLength": 4,
            "type": "string",
            "example": "KFAY"
          },
          "lastDropOff": {
            "description": "The International Civil Aviation Organization (ICAO) site code of last cargo drop off.",
            "maxLength": 4,
            "minLength": 4,
            "type": "string",
            "example": "PGUA"
          },
          "alias": {
            "description": "Mission alias.",
            "maxLength": 48,
            "type": "string",
            "example": "PACIFIC DEPLOY / CHAP 3 MOVEMENT"
          },
          "callSign": {
            "description": "The call sign for this mission.",
            "maxLength": 32,
            "type": "string",
            "example": "RCH123"
          },
          "atoCallSign": {
            "description": "The call sign assigned to this mission according to the Air Tasking Order (ATO).",
            "maxLength": 24,
            "type": "string",
            "example": "CHARLIE"
          },
          "m1": {
            "description": "Mode-1 interrogation response (mission code), indicating mission or aircraft type.",
            "maxLength": 2,
            "minLength": 2,
            "type": "string",
            "example": "11"
          },
          "m2": {
            "description": "Mode-2 interrogation response (military identification code).",
            "maxLength": 4,
            "minLength": 4,
            "type": "string",
            "example": "3214"
          },
          "m3a": {
            "description": "Mode-3/A interrogation response (aircraft identification), provides a 4-digit octal identification code for the aircraft, assigned by the air traffic controller. Mode-3/A is shared military/civilian use.",
            "maxLength": 4,
            "minLength": 4,
            "type": "string",
            "example": "6655"
          },
          "naf": {
            "description": "Numbered Air Force (NAF) organization that owns the mission.",
            "maxLength": 100,
            "type": "string",
            "example": "18AF"
          },
          "allocatedUnit": {
            "description": "The unit the mission is allocated to.",
            "maxLength": 256,
            "type": "string",
            "example": "437 AEW"
          },
          "node": {
            "description": "Designates the location responsible for mission transportation, logistics, or distribution activities for an Area of Responsibility (AOR) within USTRANSCOM.",
            "maxLength": 256,
            "type": "string",
            "example": "45TEST"
          },
          "abp": {
            "description": "The Air Battle Plan used to coordinate and integrate air assets for this mission.",
            "maxLength": 4,
            "type": "string",
            "example": "ZZ12"
          },
          "loadCategoryType": {
            "description": "Load type of this mission (e.g. CARGO, MIXED, PASSENGER).",
            "maxLength": 32,
            "type": "string",
            "example": "MIXED"
          },
          "state": {
            "description": "Current state of the mission.",
            "maxLength": 32,
            "type": "string",
            "example": "EXECUTION"
          },
          "sourceSysDeviation": {
            "format": "double",
            "description": "The number of minutes a mission is off schedule based on the source system's business rules. Positive numbers are early, negative numbers are late.",
            "type": "number",
            "example": -90.12
          },
          "apacsId": {
            "description": "The Aircraft and Personnel Automated Clearance System (APACS) system identifier used to process and approve clearance requests.",
            "maxLength": 64,
            "type": "string",
            "example": "1083034"
          },
          "dipWorksheetName": {
            "description": "Identifier of the Diplomatic Clearance Worksheet used to coordinate aircraft clearance requests.",
            "maxLength": 256,
            "type": "string",
            "example": "G2-182402-AB"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "requirements": {
            "description": "Collection of Requirements planned to be associated with this Air Transport Mission.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AircraftMissionRequirements_Abridged"
            }
          },
          "remarks": {
            "description": "Information related to the planning, load, status, and deployment or dispatch of one aircraft to carry out a mission.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AircraftMissionRemarks_Abridged"
            }
          },
          "hazMat": {
            "description": "Collection of Hazardous Material information planned to be associated with this Air Transport Mission.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirTransportMissionHazMat_Abridged"
            }
          }
        }
      },
      "AirTransportMission_Full": {
        "description": "The information in an Air Transport Mission contains unique identification, description of the mission objective, aircraft and crew assignments, mission alias, embarkation/debarkation cargo locations, priority, and other mission characteristics.",
        "required": [
          "classificationMarking",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "bdad6945-c9e4-b829-f7be-1ad075541921"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "origMissionId": {
            "description": "The mission identifier provided by the originating source.",
            "maxLength": 36,
            "type": "string",
            "example": "614bebb6-a62e-053c-ca51-e79f8a402b28"
          },
          "amcMissionId": {
            "description": "Air Mobility Command (AMC) mission identifier according to Mobility Air Forces (MAF) Encode/Decode procedures.",
            "maxLength": 36,
            "type": "string",
            "example": "AJM7939B1123"
          },
          "gdssMissionId": {
            "description": "Global Decision Support System (GDSS) mission unique identifier.",
            "maxLength": 36,
            "type": "string",
            "example": "1e6edeec-72e9-aaec-d33c-51147cb5ffdd"
          },
          "atoMissionId": {
            "description": "The mission number according to the Air Tasking Order (ATO).",
            "maxLength": 4,
            "type": "string",
            "example": "8900"
          },
          "prevMissionId": {
            "description": "Unique identifier of the previous air transport mission provided by the originating source. Provides a method for the data provider to link air transport missions together chronologically for tasking and planning purposes.",
            "maxLength": 36,
            "type": "string",
            "example": "a77055df-edc3-4047-a5fa-604f80b9fe3c"
          },
          "prevAMCMissionId": {
            "description": "Air Mobility Command (AMC) mission identifier of the previous air transport mission. Provides a method for AMC to link air transport missions together chronologically for tasking and planning purposes.",
            "maxLength": 36,
            "type": "string",
            "example": "AJM7939B1122"
          },
          "nextMissionId": {
            "description": "Unique identifier of the next mission provided by the originating source. Provides a method for the data provider to link air transport missions together chronologically for tasking and planning purposes.",
            "maxLength": 36,
            "type": "string",
            "example": "186e5658-1079-45c0-bccc-02d2fa31b663"
          },
          "nextAMCMissionId": {
            "description": "Air Mobility Command (AMC) mission identifier of the next air transport mission. Provides a method for AMC to link air transport missions together chronologically for tasking and planning purposes.",
            "maxLength": 36,
            "type": "string",
            "example": "AJM7939B1124"
          },
          "objective": {
            "description": "A description of this mission's objective.",
            "maxLength": 1024,
            "type": "string",
            "example": "Deliver water to island X."
          },
          "purpose": {
            "description": "A description of this mission's purpose (e.g. why this mission needs to happen, what is the mission supporting, etc.).",
            "maxLength": 1024,
            "type": "string",
            "example": "People at island X need water ASAP. Two previous attempts failed due to weather."
          },
          "jcsPriority": {
            "description": "Highest Joint Chiefs of Staff priority of this mission.",
            "maxLength": 3,
            "minLength": 3,
            "type": "string",
            "example": "1A3"
          },
          "cw": {
            "description": "Flag indicating this is a close watch mission.",
            "type": "boolean",
            "example": true
          },
          "type": {
            "description": "The type of mission (e.g. SAAM, CHNL, etc.).",
            "maxLength": 32,
            "type": "string",
            "example": "SAAM"
          },
          "firstPickUp": {
            "description": "The International Civil Aviation Organization (ICAO) site code of first cargo pick up.",
            "maxLength": 4,
            "minLength": 4,
            "type": "string",
            "example": "KFAY"
          },
          "lastDropOff": {
            "description": "The International Civil Aviation Organization (ICAO) site code of last cargo drop off.",
            "maxLength": 4,
            "minLength": 4,
            "type": "string",
            "example": "PGUA"
          },
          "alias": {
            "description": "Mission alias.",
            "maxLength": 48,
            "type": "string",
            "example": "PACIFIC DEPLOY / CHAP 3 MOVEMENT"
          },
          "callSign": {
            "description": "The call sign for this mission.",
            "maxLength": 32,
            "type": "string",
            "example": "RCH123"
          },
          "atoCallSign": {
            "description": "The call sign assigned to this mission according to the Air Tasking Order (ATO).",
            "maxLength": 24,
            "type": "string",
            "example": "CHARLIE"
          },
          "m1": {
            "description": "Mode-1 interrogation response (mission code), indicating mission or aircraft type.",
            "maxLength": 2,
            "minLength": 2,
            "type": "string",
            "example": "11"
          },
          "m2": {
            "description": "Mode-2 interrogation response (military identification code).",
            "maxLength": 4,
            "minLength": 4,
            "type": "string",
            "example": "3214"
          },
          "m3a": {
            "description": "Mode-3/A interrogation response (aircraft identification), provides a 4-digit octal identification code for the aircraft, assigned by the air traffic controller. Mode-3/A is shared military/civilian use.",
            "maxLength": 4,
            "minLength": 4,
            "type": "string",
            "example": "6655"
          },
          "naf": {
            "description": "Numbered Air Force (NAF) organization that owns the mission.",
            "maxLength": 100,
            "type": "string",
            "example": "18AF"
          },
          "allocatedUnit": {
            "description": "The unit the mission is allocated to.",
            "maxLength": 256,
            "type": "string",
            "example": "437 AEW"
          },
          "node": {
            "description": "Designates the location responsible for mission transportation, logistics, or distribution activities for an Area of Responsibility (AOR) within USTRANSCOM.",
            "maxLength": 256,
            "type": "string",
            "example": "45TEST"
          },
          "abp": {
            "description": "The Air Battle Plan used to coordinate and integrate air assets for this mission.",
            "maxLength": 4,
            "type": "string",
            "example": "ZZ12"
          },
          "loadCategoryType": {
            "description": "Load type of this mission (e.g. CARGO, MIXED, PASSENGER).",
            "maxLength": 32,
            "type": "string",
            "example": "MIXED"
          },
          "state": {
            "description": "Current state of the mission.",
            "maxLength": 32,
            "type": "string",
            "example": "EXECUTION"
          },
          "sourceSysDeviation": {
            "format": "double",
            "description": "The number of minutes a mission is off schedule based on the source system's business rules. Positive numbers are early, negative numbers are late.",
            "type": "number",
            "example": -90.12
          },
          "apacsId": {
            "description": "The Aircraft and Personnel Automated Clearance System (APACS) system identifier used to process and approve clearance requests.",
            "maxLength": 64,
            "type": "string",
            "example": "1083034"
          },
          "dipWorksheetName": {
            "description": "Identifier of the Diplomatic Clearance Worksheet used to coordinate aircraft clearance requests.",
            "maxLength": 256,
            "type": "string",
            "example": "G2-182402-AB"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "requirements": {
            "description": "Collection of Requirements planned to be associated with this Air Transport Mission.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AircraftMissionRequirements_Full"
            }
          },
          "remarks": {
            "description": "Information related to the planning, load, status, and deployment or dispatch of one aircraft to carry out a mission.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AircraftMissionRemarks_Full"
            }
          },
          "hazMat": {
            "description": "Collection of Hazardous Material information planned to be associated with this Air Transport Mission.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirTransportMissionHazMat_Full"
            }
          },
          "aircraftSorties": {
            "description": "The Aircraft Sortie Records linked to this mission. Do not set this field to send data to the UDL. This field is set by the UDL when returning full Air Transport Mission records.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AircraftSortie_Full"
            },
            "readOnly": true
          }
        }
      },
      "AirTransportMission_Ingest": {
        "description": "The information in an Air Transport Mission contains unique identification, description of the mission objective, aircraft and crew assignments, mission alias, embarkation/debarkation cargo locations, priority, and other mission characteristics.",
        "required": [
          "classificationMarking",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "bdad6945-c9e4-b829-f7be-1ad075541921"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "origMissionId": {
            "description": "The mission identifier provided by the originating source.",
            "maxLength": 36,
            "type": "string",
            "example": "614bebb6-a62e-053c-ca51-e79f8a402b28"
          },
          "amcMissionId": {
            "description": "Air Mobility Command (AMC) mission identifier according to Mobility Air Forces (MAF) Encode/Decode procedures.",
            "maxLength": 36,
            "type": "string",
            "example": "AJM7939B1123"
          },
          "gdssMissionId": {
            "description": "Global Decision Support System (GDSS) mission unique identifier.",
            "maxLength": 36,
            "type": "string",
            "example": "1e6edeec-72e9-aaec-d33c-51147cb5ffdd"
          },
          "atoMissionId": {
            "description": "The mission number according to the Air Tasking Order (ATO).",
            "maxLength": 4,
            "type": "string",
            "example": "8900"
          },
          "prevMissionId": {
            "description": "Unique identifier of the previous air transport mission provided by the originating source. Provides a method for the data provider to link air transport missions together chronologically for tasking and planning purposes.",
            "maxLength": 36,
            "type": "string",
            "example": "a77055df-edc3-4047-a5fa-604f80b9fe3c"
          },
          "prevAMCMissionId": {
            "description": "Air Mobility Command (AMC) mission identifier of the previous air transport mission. Provides a method for AMC to link air transport missions together chronologically for tasking and planning purposes.",
            "maxLength": 36,
            "type": "string",
            "example": "AJM7939B1122"
          },
          "nextMissionId": {
            "description": "Unique identifier of the next mission provided by the originating source. Provides a method for the data provider to link air transport missions together chronologically for tasking and planning purposes.",
            "maxLength": 36,
            "type": "string",
            "example": "186e5658-1079-45c0-bccc-02d2fa31b663"
          },
          "nextAMCMissionId": {
            "description": "Air Mobility Command (AMC) mission identifier of the next air transport mission. Provides a method for AMC to link air transport missions together chronologically for tasking and planning purposes.",
            "maxLength": 36,
            "type": "string",
            "example": "AJM7939B1124"
          },
          "objective": {
            "description": "A description of this mission's objective.",
            "maxLength": 1024,
            "type": "string",
            "example": "Deliver water to island X."
          },
          "purpose": {
            "description": "A description of this mission's purpose (e.g. why this mission needs to happen, what is the mission supporting, etc.).",
            "maxLength": 1024,
            "type": "string",
            "example": "People at island X need water ASAP. Two previous attempts failed due to weather."
          },
          "jcsPriority": {
            "description": "Highest Joint Chiefs of Staff priority of this mission.",
            "maxLength": 3,
            "minLength": 3,
            "type": "string",
            "example": "1A3"
          },
          "cw": {
            "description": "Flag indicating this is a close watch mission.",
            "type": "boolean",
            "example": true
          },
          "type": {
            "description": "The type of mission (e.g. SAAM, CHNL, etc.).",
            "maxLength": 32,
            "type": "string",
            "example": "SAAM"
          },
          "firstPickUp": {
            "description": "The International Civil Aviation Organization (ICAO) site code of first cargo pick up.",
            "maxLength": 4,
            "minLength": 4,
            "type": "string",
            "example": "KFAY"
          },
          "lastDropOff": {
            "description": "The International Civil Aviation Organization (ICAO) site code of last cargo drop off.",
            "maxLength": 4,
            "minLength": 4,
            "type": "string",
            "example": "PGUA"
          },
          "alias": {
            "description": "Mission alias.",
            "maxLength": 48,
            "type": "string",
            "example": "PACIFIC DEPLOY / CHAP 3 MOVEMENT"
          },
          "callSign": {
            "description": "The call sign for this mission.",
            "maxLength": 32,
            "type": "string",
            "example": "RCH123"
          },
          "atoCallSign": {
            "description": "The call sign assigned to this mission according to the Air Tasking Order (ATO).",
            "maxLength": 24,
            "type": "string",
            "example": "CHARLIE"
          },
          "m1": {
            "description": "Mode-1 interrogation response (mission code), indicating mission or aircraft type.",
            "maxLength": 2,
            "minLength": 2,
            "type": "string",
            "example": "11"
          },
          "m2": {
            "description": "Mode-2 interrogation response (military identification code).",
            "maxLength": 4,
            "minLength": 4,
            "type": "string",
            "example": "3214"
          },
          "m3a": {
            "description": "Mode-3/A interrogation response (aircraft identification), provides a 4-digit octal identification code for the aircraft, assigned by the air traffic controller. Mode-3/A is shared military/civilian use.",
            "maxLength": 4,
            "minLength": 4,
            "type": "string",
            "example": "6655"
          },
          "naf": {
            "description": "Numbered Air Force (NAF) organization that owns the mission.",
            "maxLength": 100,
            "type": "string",
            "example": "18AF"
          },
          "allocatedUnit": {
            "description": "The unit the mission is allocated to.",
            "maxLength": 256,
            "type": "string",
            "example": "437 AEW"
          },
          "node": {
            "description": "Designates the location responsible for mission transportation, logistics, or distribution activities for an Area of Responsibility (AOR) within USTRANSCOM.",
            "maxLength": 256,
            "type": "string",
            "example": "45TEST"
          },
          "abp": {
            "description": "The Air Battle Plan used to coordinate and integrate air assets for this mission.",
            "maxLength": 4,
            "type": "string",
            "example": "ZZ12"
          },
          "loadCategoryType": {
            "description": "Load type of this mission (e.g. CARGO, MIXED, PASSENGER).",
            "maxLength": 32,
            "type": "string",
            "example": "MIXED"
          },
          "state": {
            "description": "Current state of the mission.",
            "maxLength": 32,
            "type": "string",
            "example": "EXECUTION"
          },
          "sourceSysDeviation": {
            "format": "double",
            "description": "The number of minutes a mission is off schedule based on the source system's business rules. Positive numbers are early, negative numbers are late.",
            "type": "number",
            "example": -90.12
          },
          "apacsId": {
            "description": "The Aircraft and Personnel Automated Clearance System (APACS) system identifier used to process and approve clearance requests.",
            "maxLength": 64,
            "type": "string",
            "example": "1083034"
          },
          "dipWorksheetName": {
            "description": "Identifier of the Diplomatic Clearance Worksheet used to coordinate aircraft clearance requests.",
            "maxLength": 256,
            "type": "string",
            "example": "G2-182402-AB"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "requirements": {
            "description": "Collection of Requirements planned to be associated with this Air Transport Mission.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AircraftMissionRequirements_Ingest"
            }
          },
          "remarks": {
            "description": "Information related to the planning, load, status, and deployment or dispatch of one aircraft to carry out a mission.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AircraftMissionRemarks_Ingest"
            }
          },
          "hazMat": {
            "description": "Collection of Hazardous Material information planned to be associated with this Air Transport Mission.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirTransportMissionHazMat_Ingest"
            }
          }
        }
      },
      "AirTransportMissionHazMat_Abridged": {
        "description": "Collection of Hazardous Material information planned to be associated with this Air Transport Mission.",
        "type": "object",
        "properties": {
          "extHazMatId": {
            "description": "The hazMat identifier provided by the originating source.",
            "maxLength": 36,
            "type": "string",
            "example": "cb6289e0f38534e01291ab6421d42724"
          },
          "itemName": {
            "description": "United Nations proper shipping name of the hazardous material according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.",
            "maxLength": 1024,
            "type": "string",
            "example": "LITHIUM METAL BATTERIES"
          },
          "unNum": {
            "description": "United Nations number or North America number that identifies hazardous materials according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.",
            "maxLength": 4,
            "type": "string",
            "example": "0181"
          },
          "pieces": {
            "format": "int32",
            "description": "Number of pieces of hazardous cargo.",
            "type": "integer",
            "example": 29
          },
          "weight": {
            "format": "double",
            "description": "Total weight of hazardous cargo, including non-explosive parts, in kilograms.",
            "minimum": 0,
            "type": "number",
            "example": 22.1
          },
          "netExpWt": {
            "format": "double",
            "description": "Net explosive weight of the hazardous material, in kilograms.",
            "minimum": 0,
            "type": "number",
            "example": 12.1
          },
          "classDiv": {
            "format": "double",
            "description": "Class and division of the hazardous material according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.",
            "minimum": 0,
            "type": "number",
            "example": 1.1
          },
          "cgc": {
            "description": "Compatibility group code used to specify the controls for the transportation and storage of hazardous materials according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.",
            "maxLength": 2,
            "type": "string",
            "example": "A"
          },
          "cgn": {
            "description": "Comma delimited list of Note IDs for compatibility groups, specific to GDSS systems.",
            "maxLength": 100,
            "type": "string",
            "example": "4,5,7,8"
          },
          "applicableNotes": {
            "description": "Comma delimited list of Note IDs for Item Class Segregation groups, specific to GDSS systems.",
            "maxLength": 100,
            "type": "string",
            "example": "11,12"
          },
          "onItin": {
            "format": "int32",
            "description": "Itinerary number that identifies where the hazardous material is loaded.",
            "type": "integer",
            "example": 50
          },
          "onICAO": {
            "description": "The International Civil Aviation Organization (ICAO) code of the site where the hazardous material is loaded.",
            "maxLength": 4,
            "type": "string",
            "example": "LIRQ"
          },
          "offItin": {
            "format": "int32",
            "description": "Itinerary number that identifies where the hazardous material is unloaded.",
            "type": "integer",
            "example": 300
          },
          "offICAO": {
            "description": "The International Civil Aviation Organization (ICAO) code of the site where the hazardous material is unloaded.",
            "maxLength": 4,
            "type": "string",
            "example": "MBPV"
          },
          "planned": {
            "description": "Flag indicating if hazardous material is associated with this air transport mission. Possible values are P (planned to be associated with the mission) or A (actually associated with the mission). Enum: [P, A].",
            "maxLength": 1,
            "type": "string",
            "example": "P"
          }
        }
      },
      "AirTransportMissionHazMat_Full": {
        "description": "Collection of Hazardous Material information planned to be associated with this Air Transport Mission.",
        "type": "object",
        "properties": {
          "extHazMatId": {
            "description": "The hazMat identifier provided by the originating source.",
            "maxLength": 36,
            "type": "string",
            "example": "cb6289e0f38534e01291ab6421d42724"
          },
          "itemName": {
            "description": "United Nations proper shipping name of the hazardous material according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.",
            "maxLength": 1024,
            "type": "string",
            "example": "LITHIUM METAL BATTERIES"
          },
          "unNum": {
            "description": "United Nations number or North America number that identifies hazardous materials according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.",
            "maxLength": 4,
            "type": "string",
            "example": "0181"
          },
          "pieces": {
            "format": "int32",
            "description": "Number of pieces of hazardous cargo.",
            "type": "integer",
            "example": 29
          },
          "weight": {
            "format": "double",
            "description": "Total weight of hazardous cargo, including non-explosive parts, in kilograms.",
            "minimum": 0,
            "type": "number",
            "example": 22.1
          },
          "netExpWt": {
            "format": "double",
            "description": "Net explosive weight of the hazardous material, in kilograms.",
            "minimum": 0,
            "type": "number",
            "example": 12.1
          },
          "classDiv": {
            "format": "double",
            "description": "Class and division of the hazardous material according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.",
            "minimum": 0,
            "type": "number",
            "example": 1.1
          },
          "cgc": {
            "description": "Compatibility group code used to specify the controls for the transportation and storage of hazardous materials according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.",
            "maxLength": 2,
            "type": "string",
            "example": "A"
          },
          "cgn": {
            "description": "Comma delimited list of Note IDs for compatibility groups, specific to GDSS systems.",
            "maxLength": 100,
            "type": "string",
            "example": "4,5,7,8"
          },
          "applicableNotes": {
            "description": "Comma delimited list of Note IDs for Item Class Segregation groups, specific to GDSS systems.",
            "maxLength": 100,
            "type": "string",
            "example": "11,12"
          },
          "onItin": {
            "format": "int32",
            "description": "Itinerary number that identifies where the hazardous material is loaded.",
            "type": "integer",
            "example": 50
          },
          "onICAO": {
            "description": "The International Civil Aviation Organization (ICAO) code of the site where the hazardous material is loaded.",
            "maxLength": 4,
            "type": "string",
            "example": "LIRQ"
          },
          "offItin": {
            "format": "int32",
            "description": "Itinerary number that identifies where the hazardous material is unloaded.",
            "type": "integer",
            "example": 300
          },
          "offICAO": {
            "description": "The International Civil Aviation Organization (ICAO) code of the site where the hazardous material is unloaded.",
            "maxLength": 4,
            "type": "string",
            "example": "MBPV"
          },
          "planned": {
            "description": "Flag indicating if hazardous material is associated with this air transport mission. Possible values are P (planned to be associated with the mission) or A (actually associated with the mission). Enum: [P, A].",
            "maxLength": 1,
            "type": "string",
            "example": "P"
          }
        }
      },
      "AirTransportMissionHazMat_Ingest": {
        "description": "Collection of Hazardous Material information planned to be associated with this Air Transport Mission.",
        "type": "object",
        "properties": {
          "extHazMatId": {
            "description": "The hazMat identifier provided by the originating source.",
            "maxLength": 36,
            "type": "string",
            "example": "cb6289e0f38534e01291ab6421d42724"
          },
          "itemName": {
            "description": "United Nations proper shipping name of the hazardous material according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.",
            "maxLength": 1024,
            "type": "string",
            "example": "LITHIUM METAL BATTERIES"
          },
          "unNum": {
            "description": "United Nations number or North America number that identifies hazardous materials according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.",
            "maxLength": 4,
            "type": "string",
            "example": "0181"
          },
          "pieces": {
            "format": "int32",
            "description": "Number of pieces of hazardous cargo.",
            "type": "integer",
            "example": 29
          },
          "weight": {
            "format": "double",
            "description": "Total weight of hazardous cargo, including non-explosive parts, in kilograms.",
            "minimum": 0,
            "type": "number",
            "example": 22.1
          },
          "netExpWt": {
            "format": "double",
            "description": "Net explosive weight of the hazardous material, in kilograms.",
            "minimum": 0,
            "type": "number",
            "example": 12.1
          },
          "classDiv": {
            "format": "double",
            "description": "Class and division of the hazardous material according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.",
            "minimum": 0,
            "type": "number",
            "example": 1.1
          },
          "cgc": {
            "description": "Compatibility group code used to specify the controls for the transportation and storage of hazardous materials according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.",
            "maxLength": 2,
            "type": "string",
            "example": "A"
          },
          "cgn": {
            "description": "Comma delimited list of Note IDs for compatibility groups, specific to GDSS systems.",
            "maxLength": 100,
            "type": "string",
            "example": "4,5,7,8"
          },
          "applicableNotes": {
            "description": "Comma delimited list of Note IDs for Item Class Segregation groups, specific to GDSS systems.",
            "maxLength": 100,
            "type": "string",
            "example": "11,12"
          },
          "onItin": {
            "format": "int32",
            "description": "Itinerary number that identifies where the hazardous material is loaded.",
            "type": "integer",
            "example": 50
          },
          "onICAO": {
            "description": "The International Civil Aviation Organization (ICAO) code of the site where the hazardous material is loaded.",
            "maxLength": 4,
            "type": "string",
            "example": "LIRQ"
          },
          "offItin": {
            "format": "int32",
            "description": "Itinerary number that identifies where the hazardous material is unloaded.",
            "type": "integer",
            "example": 300
          },
          "offICAO": {
            "description": "The International Civil Aviation Organization (ICAO) code of the site where the hazardous material is unloaded.",
            "maxLength": 4,
            "type": "string",
            "example": "MBPV"
          },
          "planned": {
            "description": "Flag indicating if hazardous material is associated with this air transport mission. Possible values are P (planned to be associated with the mission) or A (actually associated with the mission). Enum: [P, A].",
            "maxLength": 1,
            "type": "string",
            "example": "P"
          }
        }
      },
      "AltitudeBlocks_Abridged": {
        "description": "Minimum and maximum altitude bounds for the track.",
        "type": "object",
        "properties": {
          "altitudeSequenceId": {
            "description": "Sequencing field for the altitude block.",
            "maxLength": 24,
            "type": "string",
            "example": "A1"
          },
          "lowerAltitude": {
            "format": "double",
            "description": "Lowest altitude of the track route altitude block above mean sea level in feet.",
            "type": "number",
            "example": 27000.1
          },
          "upperAltitude": {
            "format": "double",
            "description": "Highest altitude of the track route altitude block above mean sea level in feet.",
            "type": "number",
            "example": 27200.5
          }
        }
      },
      "AltitudeBlocks_Full": {
        "description": "Minimum and maximum altitude bounds for the track.",
        "type": "object",
        "properties": {
          "altitudeSequenceId": {
            "description": "Sequencing field for the altitude block.",
            "maxLength": 24,
            "type": "string",
            "example": "A1"
          },
          "lowerAltitude": {
            "format": "double",
            "description": "Lowest altitude of the track route altitude block above mean sea level in feet.",
            "type": "number",
            "example": 27000.1
          },
          "upperAltitude": {
            "format": "double",
            "description": "Highest altitude of the track route altitude block above mean sea level in feet.",
            "type": "number",
            "example": 27200.5
          }
        }
      },
      "AltitudeBlocks_Ingest": {
        "description": "Minimum and maximum altitude bounds for the track.",
        "type": "object",
        "properties": {
          "altitudeSequenceId": {
            "description": "Sequencing field for the altitude block.",
            "maxLength": 24,
            "type": "string",
            "example": "A1"
          },
          "lowerAltitude": {
            "format": "double",
            "description": "Lowest altitude of the track route altitude block above mean sea level in feet.",
            "type": "number",
            "example": 27000.1
          },
          "upperAltitude": {
            "format": "double",
            "description": "Highest altitude of the track route altitude block above mean sea level in feet.",
            "type": "number",
            "example": 27200.5
          }
        }
      },
      "AviationRiskManagement_Abridged": {
        "description": "Aviation Risk Management is used to identify, evaluate, and track risks when mission planning by accounting for factors such as crew fatigue and mission complexity.",
        "required": [
          "classificationMarking",
          "idMission",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system if not provided on create operations.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "026dd511-8ba5-47d3-9909-836149f87686"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idMission": {
            "description": "The unique identifier of the mission to which this risk management record is assigned.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "fa18d96e-91ea-60da-a7a8-1af6500066c8"
          },
          "extMissionId": {
            "description": "Optional mission ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "MCD04250106123509230"
          },
          "missionNumber": {
            "description": "The mission number of the mission associated with this record.",
            "maxLength": 16,
            "type": "string",
            "example": "LVM134412001"
          },
          "unitId": {
            "description": "Identifier for the unit which this risk management record is evaluated.",
            "maxLength": 36,
            "type": "string",
            "example": "63"
          },
          "orgId": {
            "description": "Identifier for the organization which this risk management record is evaluated.",
            "maxLength": 36,
            "type": "string",
            "example": "50000002"
          },
          "aviationRiskManagementWorksheetRecord": {
            "description": "Collection of Aviation Risk Management Worksheet Records.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AviationRiskManagementWorksheetRecord_Abridged"
            }
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "AviationRiskManagement_Full": {
        "description": "Aviation Risk Management is used to identify, evaluate, and track risks when mission planning by accounting for factors such as crew fatigue and mission complexity.",
        "required": [
          "classificationMarking",
          "idMission",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system if not provided on create operations.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "026dd511-8ba5-47d3-9909-836149f87686"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idMission": {
            "description": "The unique identifier of the mission to which this risk management record is assigned.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "fa18d96e-91ea-60da-a7a8-1af6500066c8"
          },
          "extMissionId": {
            "description": "Optional mission ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "MCD04250106123509230"
          },
          "missionNumber": {
            "description": "The mission number of the mission associated with this record.",
            "maxLength": 16,
            "type": "string",
            "example": "LVM134412001"
          },
          "unitId": {
            "description": "Identifier for the unit which this risk management record is evaluated.",
            "maxLength": 36,
            "type": "string",
            "example": "63"
          },
          "orgId": {
            "description": "Identifier for the organization which this risk management record is evaluated.",
            "maxLength": 36,
            "type": "string",
            "example": "50000002"
          },
          "aviationRiskManagementWorksheetRecord": {
            "description": "Collection of Aviation Risk Management Worksheet Records.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AviationRiskManagementWorksheetRecord_Full"
            }
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "AviationRiskManagement_Ingest": {
        "description": "Aviation Risk Management is used to identify, evaluate, and track risks when mission planning by accounting for factors such as crew fatigue and mission complexity.",
        "required": [
          "classificationMarking",
          "idMission",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system if not provided on create operations.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "026dd511-8ba5-47d3-9909-836149f87686"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idMission": {
            "description": "The unique identifier of the mission to which this risk management record is assigned.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "fa18d96e-91ea-60da-a7a8-1af6500066c8"
          },
          "extMissionId": {
            "description": "Optional mission ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "MCD04250106123509230"
          },
          "missionNumber": {
            "description": "The mission number of the mission associated with this record.",
            "maxLength": 16,
            "type": "string",
            "example": "LVM134412001"
          },
          "unitId": {
            "description": "Identifier for the unit which this risk management record is evaluated.",
            "maxLength": 36,
            "type": "string",
            "example": "63"
          },
          "orgId": {
            "description": "Identifier for the organization which this risk management record is evaluated.",
            "maxLength": 36,
            "type": "string",
            "example": "50000002"
          },
          "aviationRiskManagementWorksheetRecord": {
            "description": "Collection of Aviation Risk Management Worksheet Records.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AviationRiskManagementWorksheetRecord_Ingest"
            }
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "AviationRiskManagementSortie_Abridged": {
        "description": "Collection of aviation risk management worksheet record score aircraft sorties.",
        "type": "object",
        "properties": {
          "idSortie": {
            "description": "Unique identifier of the Aircraft Sortie associated with this crew record.",
            "maxLength": 36,
            "type": "string",
            "example": "4ef3d1e8-ab08-ab70-498f-edc479734e5c"
          },
          "extSortieId": {
            "description": "Optional aircraft sortie ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "MB014313032022407540"
          },
          "legNum": {
            "format": "int32",
            "description": "The leg number of the sortie.",
            "type": "integer",
            "example": 100
          },
          "sortieScore": {
            "format": "int32",
            "description": "The score of the associated aircraft sortie as defined by the data source. Value ranges from 0 to 3, where a value of 0 indicates a low and a value of 3 indicates severe. A value of -1 indicates no score.",
            "type": "integer",
            "example": 3
          }
        }
      },
      "AviationRiskManagementSortie_Full": {
        "description": "Collection of aviation risk management worksheet record score aircraft sorties.",
        "type": "object",
        "properties": {
          "idSortie": {
            "description": "Unique identifier of the Aircraft Sortie associated with this crew record.",
            "maxLength": 36,
            "type": "string",
            "example": "4ef3d1e8-ab08-ab70-498f-edc479734e5c"
          },
          "extSortieId": {
            "description": "Optional aircraft sortie ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "MB014313032022407540"
          },
          "legNum": {
            "format": "int32",
            "description": "The leg number of the sortie.",
            "type": "integer",
            "example": 100
          },
          "sortieScore": {
            "format": "int32",
            "description": "The score of the associated aircraft sortie as defined by the data source. Value ranges from 0 to 3, where a value of 0 indicates a low and a value of 3 indicates severe. A value of -1 indicates no score.",
            "type": "integer",
            "example": 3
          }
        }
      },
      "AviationRiskManagementSortie_Ingest": {
        "description": "Collection of aviation risk management worksheet record score aircraft sorties.",
        "type": "object",
        "properties": {
          "idSortie": {
            "description": "Unique identifier of the Aircraft Sortie associated with this crew record.",
            "maxLength": 36,
            "type": "string",
            "example": "4ef3d1e8-ab08-ab70-498f-edc479734e5c"
          },
          "extSortieId": {
            "description": "Optional aircraft sortie ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "MB014313032022407540"
          },
          "legNum": {
            "format": "int32",
            "description": "The leg number of the sortie.",
            "type": "integer",
            "example": 100
          },
          "sortieScore": {
            "format": "int32",
            "description": "The score of the associated aircraft sortie as defined by the data source. Value ranges from 0 to 3, where a value of 0 indicates a low and a value of 3 indicates severe. A value of -1 indicates no score.",
            "type": "integer",
            "example": 3
          }
        }
      },
      "AviationRiskManagementWorksheetRecord_Abridged": {
        "description": "Collection of Aviation Risk Management Worksheet Records.",
        "required": [
          "missionDate"
        ],
        "type": "object",
        "properties": {
          "extRecordId": {
            "description": "Optional identifier of the worksheet record provided by the data source. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 64,
            "type": "string",
            "example": "B022401191649232716"
          },
          "userId": {
            "description": "User identifier associated to the worksheet record.",
            "maxLength": 256,
            "type": "string",
            "example": "TIER0SCORING"
          },
          "itinerary": {
            "description": "Sequential order of itinerary locations associated for the mission.",
            "maxLength": 256,
            "type": "string",
            "example": "RJTY-PGUA-RJTY"
          },
          "totalScore": {
            "format": "int32",
            "description": "Total score for the worksheet record as defined by the data source. Larger values indicate a higher risk level. For example, values between 0-10 may indicate a low risk level, where values greater then 40 indicate a severe risk level.",
            "type": "integer",
            "example": 11
          },
          "tierNumber": {
            "format": "int32",
            "description": "Tier number which the mission is being scored as determined by the data source. For example, Tier 1 may indicate mission planners, Tier 2 may indicate operations personnel, Tier 3 may indicate squadron leadership, and Tier 4 may indicate the aircrew.",
            "type": "integer",
            "example": 2
          },
          "submissionDate": {
            "format": "date-time",
            "description": "Timestamp the worksheet record was submitted, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-11-01T16:00:00.123Z"
          },
          "missionDate": {
            "format": "date",
            "description": "Date of the mission in ISO 8601 date-only format (YYYY-MM-DD).",
            "type": "string",
            "example": "2024-11-25"
          },
          "lastUpdatedAt": {
            "format": "date-time",
            "description": "Timestamp the worksheet record was updated, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-11-02T16:00:00.123Z"
          },
          "aircraftMDS": {
            "description": "The aircraft Model Design Series (MDS) designation (e.g. E-2C HAWKEYE, F-15 EAGLE, KC-130 HERCULES, etc.) of the aircraft associated with this risk management worksheet record. Intended as, but not constrained to, MIL-STD-6016 environment dependent specific type designations.",
            "maxLength": 128,
            "type": "string",
            "example": "E-2C HAWKEYE"
          },
          "severityLevel": {
            "format": "int32",
            "description": "Numeric assignment for the worksheet record severity. 0 - LOW; 1 - MODERATE; 2 - HIGH; 3 - SEVERE.",
            "type": "integer",
            "example": 0
          },
          "approvalPending": {
            "description": "Flag indicating the worksheet record is pending approval.",
            "type": "boolean",
            "example": true
          },
          "approved": {
            "description": "Flag indicating the worksheet record is approved.",
            "type": "boolean",
            "example": false
          },
          "dispositionComments": {
            "description": "Comment(s) explaining why the worksheet record has been approved or disapproved.",
            "maxLength": 512,
            "type": "string",
            "example": "Disposition comment."
          },
          "remarks": {
            "description": "Remarks and/or comments regarding the worksheet record.",
            "maxLength": 2048,
            "type": "string",
            "example": "Worksheet record remark."
          },
          "aviationRiskManagementWorksheetScore": {
            "description": "Collection of Aviation Risk Management worksheet record scores.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AviationRiskManagementWorksheetScore_Abridged"
            }
          }
        }
      },
      "AviationRiskManagementWorksheetRecord_Full": {
        "description": "Collection of Aviation Risk Management Worksheet Records.",
        "required": [
          "missionDate"
        ],
        "type": "object",
        "properties": {
          "extRecordId": {
            "description": "Optional identifier of the worksheet record provided by the data source. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 64,
            "type": "string",
            "example": "B022401191649232716"
          },
          "userId": {
            "description": "User identifier associated to the worksheet record.",
            "maxLength": 256,
            "type": "string",
            "example": "TIER0SCORING"
          },
          "itinerary": {
            "description": "Sequential order of itinerary locations associated for the mission.",
            "maxLength": 256,
            "type": "string",
            "example": "RJTY-PGUA-RJTY"
          },
          "totalScore": {
            "format": "int32",
            "description": "Total score for the worksheet record as defined by the data source. Larger values indicate a higher risk level. For example, values between 0-10 may indicate a low risk level, where values greater then 40 indicate a severe risk level.",
            "type": "integer",
            "example": 11
          },
          "tierNumber": {
            "format": "int32",
            "description": "Tier number which the mission is being scored as determined by the data source. For example, Tier 1 may indicate mission planners, Tier 2 may indicate operations personnel, Tier 3 may indicate squadron leadership, and Tier 4 may indicate the aircrew.",
            "type": "integer",
            "example": 2
          },
          "submissionDate": {
            "format": "date-time",
            "description": "Timestamp the worksheet record was submitted, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-11-01T16:00:00.123Z"
          },
          "missionDate": {
            "format": "date",
            "description": "Date of the mission in ISO 8601 date-only format (YYYY-MM-DD).",
            "type": "string",
            "example": "2024-11-25"
          },
          "lastUpdatedAt": {
            "format": "date-time",
            "description": "Timestamp the worksheet record was updated, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-11-02T16:00:00.123Z"
          },
          "aircraftMDS": {
            "description": "The aircraft Model Design Series (MDS) designation (e.g. E-2C HAWKEYE, F-15 EAGLE, KC-130 HERCULES, etc.) of the aircraft associated with this risk management worksheet record. Intended as, but not constrained to, MIL-STD-6016 environment dependent specific type designations.",
            "maxLength": 128,
            "type": "string",
            "example": "E-2C HAWKEYE"
          },
          "severityLevel": {
            "format": "int32",
            "description": "Numeric assignment for the worksheet record severity. 0 - LOW; 1 - MODERATE; 2 - HIGH; 3 - SEVERE.",
            "type": "integer",
            "example": 0
          },
          "approvalPending": {
            "description": "Flag indicating the worksheet record is pending approval.",
            "type": "boolean",
            "example": true
          },
          "approved": {
            "description": "Flag indicating the worksheet record is approved.",
            "type": "boolean",
            "example": false
          },
          "dispositionComments": {
            "description": "Comment(s) explaining why the worksheet record has been approved or disapproved.",
            "maxLength": 512,
            "type": "string",
            "example": "Disposition comment."
          },
          "remarks": {
            "description": "Remarks and/or comments regarding the worksheet record.",
            "maxLength": 2048,
            "type": "string",
            "example": "Worksheet record remark."
          },
          "aviationRiskManagementWorksheetScore": {
            "description": "Collection of Aviation Risk Management worksheet record scores.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AviationRiskManagementWorksheetScore_Full"
            }
          }
        }
      },
      "AviationRiskManagementWorksheetRecord_Ingest": {
        "description": "Collection of Aviation Risk Management Worksheet Records.",
        "required": [
          "missionDate"
        ],
        "type": "object",
        "properties": {
          "extRecordId": {
            "description": "Optional identifier of the worksheet record provided by the data source. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 64,
            "type": "string",
            "example": "B022401191649232716"
          },
          "userId": {
            "description": "User identifier associated to the worksheet record.",
            "maxLength": 256,
            "type": "string",
            "example": "TIER0SCORING"
          },
          "itinerary": {
            "description": "Sequential order of itinerary locations associated for the mission.",
            "maxLength": 256,
            "type": "string",
            "example": "RJTY-PGUA-RJTY"
          },
          "totalScore": {
            "format": "int32",
            "description": "Total score for the worksheet record as defined by the data source. Larger values indicate a higher risk level. For example, values between 0-10 may indicate a low risk level, where values greater then 40 indicate a severe risk level.",
            "type": "integer",
            "example": 11
          },
          "tierNumber": {
            "format": "int32",
            "description": "Tier number which the mission is being scored as determined by the data source. For example, Tier 1 may indicate mission planners, Tier 2 may indicate operations personnel, Tier 3 may indicate squadron leadership, and Tier 4 may indicate the aircrew.",
            "type": "integer",
            "example": 2
          },
          "submissionDate": {
            "format": "date-time",
            "description": "Timestamp the worksheet record was submitted, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-11-01T16:00:00.123Z"
          },
          "missionDate": {
            "format": "date",
            "description": "Date of the mission in ISO 8601 date-only format (YYYY-MM-DD).",
            "type": "string",
            "example": "2024-11-25"
          },
          "lastUpdatedAt": {
            "format": "date-time",
            "description": "Timestamp the worksheet record was updated, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-11-02T16:00:00.123Z"
          },
          "aircraftMDS": {
            "description": "The aircraft Model Design Series (MDS) designation (e.g. E-2C HAWKEYE, F-15 EAGLE, KC-130 HERCULES, etc.) of the aircraft associated with this risk management worksheet record. Intended as, but not constrained to, MIL-STD-6016 environment dependent specific type designations.",
            "maxLength": 128,
            "type": "string",
            "example": "E-2C HAWKEYE"
          },
          "severityLevel": {
            "format": "int32",
            "description": "Numeric assignment for the worksheet record severity. 0 - LOW; 1 - MODERATE; 2 - HIGH; 3 - SEVERE.",
            "type": "integer",
            "example": 0
          },
          "approvalPending": {
            "description": "Flag indicating the worksheet record is pending approval.",
            "type": "boolean",
            "example": true
          },
          "approved": {
            "description": "Flag indicating the worksheet record is approved.",
            "type": "boolean",
            "example": false
          },
          "dispositionComments": {
            "description": "Comment(s) explaining why the worksheet record has been approved or disapproved.",
            "maxLength": 512,
            "type": "string",
            "example": "Disposition comment."
          },
          "remarks": {
            "description": "Remarks and/or comments regarding the worksheet record.",
            "maxLength": 2048,
            "type": "string",
            "example": "Worksheet record remark."
          },
          "aviationRiskManagementWorksheetScore": {
            "description": "Collection of Aviation Risk Management worksheet record scores.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AviationRiskManagementWorksheetScore_Ingest"
            }
          }
        }
      },
      "AviationRiskManagementWorksheetScore_Abridged": {
        "description": "Collection of Aviation Risk Management worksheet record scores.",
        "type": "object",
        "properties": {
          "extScoreId": {
            "description": "Optional identifier of the worksheet record score provided by the data source. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 64,
            "type": "string",
            "example": "BM022301191649232740"
          },
          "score": {
            "format": "int32",
            "description": "Score of the worksheet record risk factor. Value ranges from 0 to 3, where a value of 0 indicates a low and a value of 3 indicates severe. A value of -1 indicates no score.",
            "type": "integer",
            "example": 1
          },
          "approvedCode": {
            "format": "int32",
            "description": "Numeric assignment used to determine score approval. 0 - APPROVAL PENDING (used when score value is 2 or 3); 1 - APPROVED (used when score value is 2 or 3); 2 - DISAPPROVED.",
            "type": "integer",
            "example": 0
          },
          "approvedBy": {
            "description": "Name of the individual who approved or disapproved of the score.",
            "maxLength": 256,
            "type": "string",
            "example": "John Smith"
          },
          "approvalDate": {
            "format": "date-time",
            "description": "Timestamp the worksheet record score was approval or disapproval, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-11-01T16:00:00.123Z"
          },
          "riskCategory": {
            "description": "The category of the risk factor.",
            "maxLength": 36,
            "type": "string",
            "example": "Crew/Aircraft"
          },
          "riskKey": {
            "description": "Code or identifier of the risk factor category as defined by the data source.",
            "maxLength": 32,
            "type": "string",
            "example": "26"
          },
          "riskName": {
            "description": "Name of the risk factor.",
            "maxLength": 512,
            "type": "string",
            "example": "Crew Qualification"
          },
          "riskDescription": {
            "description": "Description of the risk factor.",
            "maxLength": 512,
            "type": "string",
            "example": "Upgrade training"
          },
          "scoreRemark": {
            "description": "Remarks and/or comments regarding the worksheet score.",
            "maxLength": 2048,
            "type": "string",
            "example": "Worksheet score remark."
          },
          "aviationRiskManagementSortie": {
            "description": "Collection of aviation risk management worksheet record score aircraft sorties",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AviationRiskManagementSortie_Abridged"
            }
          }
        }
      },
      "AviationRiskManagementWorksheetScore_Full": {
        "description": "Collection of Aviation Risk Management worksheet record scores.",
        "type": "object",
        "properties": {
          "extScoreId": {
            "description": "Optional identifier of the worksheet record score provided by the data source. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 64,
            "type": "string",
            "example": "BM022301191649232740"
          },
          "score": {
            "format": "int32",
            "description": "Score of the worksheet record risk factor. Value ranges from 0 to 3, where a value of 0 indicates a low and a value of 3 indicates severe. A value of -1 indicates no score.",
            "type": "integer",
            "example": 1
          },
          "approvedCode": {
            "format": "int32",
            "description": "Numeric assignment used to determine score approval. 0 - APPROVAL PENDING (used when score value is 2 or 3); 1 - APPROVED (used when score value is 2 or 3); 2 - DISAPPROVED.",
            "type": "integer",
            "example": 0
          },
          "approvedBy": {
            "description": "Name of the individual who approved or disapproved of the score.",
            "maxLength": 256,
            "type": "string",
            "example": "John Smith"
          },
          "approvalDate": {
            "format": "date-time",
            "description": "Timestamp the worksheet record score was approval or disapproval, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-11-01T16:00:00.123Z"
          },
          "riskCategory": {
            "description": "The category of the risk factor.",
            "maxLength": 36,
            "type": "string",
            "example": "Crew/Aircraft"
          },
          "riskKey": {
            "description": "Code or identifier of the risk factor category as defined by the data source.",
            "maxLength": 32,
            "type": "string",
            "example": "26"
          },
          "riskName": {
            "description": "Name of the risk factor.",
            "maxLength": 512,
            "type": "string",
            "example": "Crew Qualification"
          },
          "riskDescription": {
            "description": "Description of the risk factor.",
            "maxLength": 512,
            "type": "string",
            "example": "Upgrade training"
          },
          "scoreRemark": {
            "description": "Remarks and/or comments regarding the worksheet score.",
            "maxLength": 2048,
            "type": "string",
            "example": "Worksheet score remark."
          },
          "aviationRiskManagementSortie": {
            "description": "Collection of aviation risk management worksheet record score aircraft sorties",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AviationRiskManagementSortie_Full"
            }
          }
        }
      },
      "AviationRiskManagementWorksheetScore_Ingest": {
        "description": "Collection of Aviation Risk Management worksheet record scores.",
        "type": "object",
        "properties": {
          "extScoreId": {
            "description": "Optional identifier of the worksheet record score provided by the data source. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 64,
            "type": "string",
            "example": "BM022301191649232740"
          },
          "score": {
            "format": "int32",
            "description": "Score of the worksheet record risk factor. Value ranges from 0 to 3, where a value of 0 indicates a low and a value of 3 indicates severe. A value of -1 indicates no score.",
            "type": "integer",
            "example": 1
          },
          "approvedCode": {
            "format": "int32",
            "description": "Numeric assignment used to determine score approval. 0 - APPROVAL PENDING (used when score value is 2 or 3); 1 - APPROVED (used when score value is 2 or 3); 2 - DISAPPROVED.",
            "type": "integer",
            "example": 0
          },
          "approvedBy": {
            "description": "Name of the individual who approved or disapproved of the score.",
            "maxLength": 256,
            "type": "string",
            "example": "John Smith"
          },
          "approvalDate": {
            "format": "date-time",
            "description": "Timestamp the worksheet record score was approval or disapproval, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-11-01T16:00:00.123Z"
          },
          "riskCategory": {
            "description": "The category of the risk factor.",
            "maxLength": 36,
            "type": "string",
            "example": "Crew/Aircraft"
          },
          "riskKey": {
            "description": "Code or identifier of the risk factor category as defined by the data source.",
            "maxLength": 32,
            "type": "string",
            "example": "26"
          },
          "riskName": {
            "description": "Name of the risk factor.",
            "maxLength": 512,
            "type": "string",
            "example": "Crew Qualification"
          },
          "riskDescription": {
            "description": "Description of the risk factor.",
            "maxLength": 512,
            "type": "string",
            "example": "Upgrade training"
          },
          "scoreRemark": {
            "description": "Remarks and/or comments regarding the worksheet score.",
            "maxLength": 2048,
            "type": "string",
            "example": "Worksheet score remark."
          },
          "aviationRiskManagementSortie": {
            "description": "Collection of aviation risk management worksheet record score aircraft sorties",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AviationRiskManagementSortie_Ingest"
            }
          }
        }
      },
      "Crew_Full": {
        "description": "Crew Services.",
        "required": [
          "classificationMarking",
          "origCrewId",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "bdad6945-c9e4-b829-f7be-1ad075541921"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "origCrewId": {
            "description": "Unique identifier of the formed crew provided by the originating source. Provided for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "JHJDHjhuu929o92"
          },
          "crewName": {
            "description": "Name of the formed crew.",
            "maxLength": 36,
            "type": "string",
            "example": "falcon"
          },
          "status": {
            "description": "Crew status (e.g. NEEDCREW, ASSIGNED, APPROVED, NOTIFIED, PARTIAL, UNKNOWN, etc.).",
            "maxLength": 64,
            "type": "string",
            "example": "APPROVED"
          },
          "idSortie": {
            "description": "Unique identifier of the Aircraft Sortie associated with this crew record.",
            "maxLength": 36,
            "type": "string",
            "example": "4ef3d1e8-ab08-ab70-498f-edc479734e5c"
          },
          "missionId": {
            "description": "The mission ID the crew is supporting according to the source system.",
            "maxLength": 36,
            "type": "string",
            "example": "AJM123456123"
          },
          "missionAlias": {
            "description": "User-defined alias designation for the mission.",
            "maxLength": 64,
            "type": "string",
            "example": "PACIFIC DEPLOY / CHAP 3 MOVEMENT"
          },
          "crewSource": {
            "description": "The military component that comprises the crew (e.g., ACTIVE, RESERVE, GUARD, MIXED, UNKNOWN, etc.).",
            "maxLength": 16,
            "type": "string",
            "example": "ACTIVE"
          },
          "crewRole": {
            "description": "The crew's role on the mission (e.g., DEADHEAD, MEDICAL, PRIMARY).",
            "maxLength": 8,
            "type": "string",
            "example": "DEADHEAD"
          },
          "crewType": {
            "description": "The type of crew required to meet mission objectives (e.g., AIRDROP, AIRLAND, AIR REFUELING, etc.).",
            "maxLength": 32,
            "type": "string",
            "example": "AIRLAND"
          },
          "personnelType": {
            "description": "The type of personnel that comprises the crew (e.g., AIRCREW, MEDCREW, etc.).",
            "maxLength": 16,
            "type": "string",
            "example": "AIRCREW"
          },
          "stageName": {
            "description": "Stage name for the crew.  A stage is a pool of crews supporting a given operation plan.",
            "maxLength": 32,
            "type": "string",
            "example": "Falcon Squadron"
          },
          "crewWing": {
            "description": "The wing the crew serves.",
            "maxLength": 32,
            "type": "string",
            "example": "60AMW"
          },
          "crewSquadron": {
            "description": "The squadron the crew serves.",
            "maxLength": 32,
            "type": "string",
            "example": "21AS"
          },
          "maleOfficerQty": {
            "format": "int32",
            "description": "The number of male officer crew members.",
            "type": "integer",
            "example": 1
          },
          "femaleOfficerQty": {
            "format": "int32",
            "description": "The number of female officer crew members.",
            "type": "integer",
            "example": 1
          },
          "maleEnlistedQty": {
            "format": "int32",
            "description": "The number of male enlisted crew members.",
            "type": "integer",
            "example": 3
          },
          "femaleEnlistedQty": {
            "format": "int32",
            "description": "The number of female enlisted crew members.",
            "type": "integer",
            "example": 2
          },
          "commanderId": {
            "description": "Unique identifier of the crew commander assigned by the originating source.",
            "maxLength": 32,
            "type": "string",
            "example": "763a1c1e8d2f3c16af825a11e3f1f579"
          },
          "commanderName": {
            "description": "The name of the crew commander.",
            "maxLength": 64,
            "type": "string",
            "example": "John Doe"
          },
          "commanderLast4SSN": {
            "description": "Last four digits of the crew commander's social security number.",
            "maxLength": 4,
            "type": "string",
            "example": "1234"
          },
          "legalAlertTime": {
            "format": "date-time",
            "description": "Time the crew is legal for alert, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2022-01-01T16:00:00.123Z"
          },
          "legalBravoTime": {
            "format": "date-time",
            "description": "Time the crew is legally authorized or scheduled to remain on standby for duty, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2022-01-01T16:00:00.123Z"
          },
          "alertedTime": {
            "format": "date-time",
            "description": "Time the crew was alerted, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2022-01-01T16:00:00.123Z"
          },
          "lastAlertTime": {
            "format": "date-time",
            "description": "The last time the crew can be alerted, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "alertType": {
            "description": "Type of alert for the crew (e.g., ALPHA for maximum readiness, BRAVO for standby, etc.).",
            "maxLength": 20,
            "type": "string",
            "example": "ALPHA"
          },
          "pickupTime": {
            "format": "date-time",
            "description": "Time the crew will be picked up from lodging, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "returnTime": {
            "format": "date-time",
            "description": "Scheduled return time, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2022-01-01T16:00:00.123Z"
          },
          "adjReturnTime": {
            "format": "date-time",
            "description": "Adjusted return time, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "adjReturnTimeApprover": {
            "description": "Last name of the adjusted return time approver.",
            "maxLength": 64,
            "type": "string",
            "example": "Smith"
          },
          "preRestStart": {
            "format": "date-time",
            "description": "Start time of the crew rest period before the mission, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "preRestApplied": {
            "description": "Flag indicating whether pre-mission crew rest is applied to the first sortie of a crew's task.",
            "type": "boolean",
            "example": false
          },
          "postRestEnd": {
            "format": "date-time",
            "description": "End time of the crew rest period after the mission, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-02T16:00:00.123Z"
          },
          "postRestApplied": {
            "description": "Flag indicating whether post-mission crew rest is applied to the last sortie of a crew's task.",
            "type": "boolean",
            "example": false
          },
          "postRestOffset": {
            "description": "The scheduled delay or adjustment in the start time of a crew's rest period after a mission, expressed as +/-HH:MM.",
            "maxLength": 6,
            "type": "string",
            "example": "+05:00"
          },
          "stageTime": {
            "format": "date-time",
            "description": "Time the crew entered the stage, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "stage1Qual": {
            "description": "The stage 1 qualifications the crew must have for a mission, such as having basic knowledge of crew operations and aircraft systems.",
            "maxLength": 8,
            "type": "string",
            "example": "1AXXX"
          },
          "stage2Qual": {
            "description": "The stage 2 qualifications the crew must have for a mission, such as completion of advanced mission-specific training.",
            "maxLength": 8,
            "type": "string",
            "example": "2AXXX"
          },
          "stage3Qual": {
            "description": "The stage 3 qualifications the crew must have for a mission, such as full mission-ready certification and the capability of leading complex operations.",
            "maxLength": 8,
            "type": "string",
            "example": "3AXXX"
          },
          "crewHome": {
            "description": "Flag indicating whether this crew task takes the crew home and out of the stage.",
            "type": "boolean",
            "example": false
          },
          "linkedTask": {
            "description": "Flag indicating whether this crew is part of a linked flying task.",
            "type": "boolean",
            "example": false
          },
          "initStartTime": {
            "format": "date-time",
            "description": "Initial start time of the crew's linked task that was delinked due to mission closure, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "currentICAO": {
            "description": "The International Civil Aviation Organization (ICAO) code of the airfield at which the crew is currently located.",
            "maxLength": 4,
            "type": "string",
            "example": "KCOS"
          },
          "idSiteCurrent": {
            "description": "Unique identifier of the Site at which the crew is currently located. This ID can be used to obtain additional information on a Site using the 'get by ID' operation (e.g. /udl/site/{id}). For example, the Site object with idSite = abc would be queried as /udl/site/abc.",
            "maxLength": 36,
            "type": "string",
            "example": "b677cf3b-d44d-450e-8b8f-d23f997f8778"
          },
          "fltAuthNum": {
            "description": "Authorization number used on the flight order.",
            "maxLength": 8,
            "type": "string",
            "example": "KT001"
          },
          "reqQualCode": {
            "description": "Array of qualification codes required for this crew (e.g., AL for Aircraft Leader, CS for Combat Systems Operator, etc.).",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "AL",
              "CS"
            ]
          },
          "assignedQualCode": {
            "description": "Array of qualification codes assigned to this crew (e.g., AL for Aircraft Leader, CS for Combat Systems Operator, etc.).",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "AL",
              "CS"
            ]
          },
          "transportReq": {
            "description": "Flag indicating that one or more crew members requires transportation to the departure location.",
            "type": "boolean",
            "example": true
          },
          "crewRMS": {
            "description": "The resource management system managing and reporting data on this crew.",
            "maxLength": 32,
            "type": "string",
            "example": "ARMS"
          },
          "crewUnit": {
            "description": "The crew's squadron as identified in its resource management system. If the crew is composed of members from multiple units, then the Crew Commander's unit should be indicated as the crew unit.",
            "maxLength": 32,
            "type": "string",
            "example": "00016ALSQ"
          },
          "fdpEligType": {
            "description": "Crew Flight Duty Period (FDP) eligibility type.",
            "maxLength": 32,
            "type": "string",
            "example": "A"
          },
          "fdpType": {
            "description": "Flight Duty Period (FDP) type.",
            "maxLength": 32,
            "type": "string",
            "example": "A"
          },
          "tripKit": {
            "description": "Identifies the trip kit needed by the crew. A trip kit contains charts, regulations, maps, etc. carried by the crew during missions.",
            "maxLength": 16,
            "type": "string",
            "example": "TK-1234"
          },
          "aircraftMDS": {
            "description": "The aircraft Model Design Series designation assigned for this crew.",
            "maxLength": 36,
            "type": "string",
            "example": "C017A"
          },
          "armsCrewUnit": {
            "description": "The crew's Aviation Resource Management System (ARMS) unit.  If multiple units exist, use the Aircraft Commander's Unit.",
            "maxLength": 32,
            "type": "string",
            "example": "00016ALSQ"
          },
          "crewMembers": {
            "description": "CrewMembers Collection.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrewMembers_Full"
            }
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "CrewMembers_Full": {
        "description": "Schema for Crew Member data.",
        "type": "object",
        "properties": {
          "lastName": {
            "description": "The last name of the crew member.",
            "maxLength": 64,
            "type": "string",
            "example": "Smith"
          },
          "firstName": {
            "description": "The first name of the crew member.",
            "maxLength": 64,
            "type": "string",
            "example": "Freddie"
          },
          "middleInitial": {
            "description": "The middle initial of the crew member.",
            "maxLength": 1,
            "type": "string",
            "example": "G"
          },
          "gender": {
            "description": "Gender of the crew member.",
            "maxLength": 1,
            "type": "string",
            "example": "F"
          },
          "memberId": {
            "description": "Unique identifier of the crew member assigned by the originating source.",
            "maxLength": 32,
            "type": "string",
            "example": "12345678abc"
          },
          "civilian": {
            "description": "Flag indicating this crew member is a civilian or non-military person.",
            "type": "boolean",
            "example": false
          },
          "commander": {
            "description": "Flag indicating this person is the aircraft commander.",
            "type": "boolean",
            "example": false
          },
          "last4SSN": {
            "description": "Last four digits of the crew member's social security number.",
            "maxLength": 4,
            "type": "string",
            "example": "1234"
          },
          "dodID": {
            "description": "The crew member's 10-digit DoD ID number.",
            "maxLength": 10,
            "type": "string",
            "example": "0123456789"
          },
          "username": {
            "description": "The Mattermost username of this crew member.",
            "maxLength": 64,
            "type": "string",
            "example": "fgsmith"
          },
          "dutyPosition": {
            "description": "The duty position of the crew member.",
            "maxLength": 32,
            "type": "string",
            "example": "IP"
          },
          "crewPosition": {
            "description": "The crew position of the crew member.",
            "maxLength": 32,
            "type": "string",
            "example": "EP A"
          },
          "memberType": {
            "description": "Amplifying details about the crew member type (e.g. RAVEN, FCC, COMCAM, AIRCREW, MEP, OTHER, etc.).",
            "maxLength": 32,
            "type": "string",
            "example": "AIRCREW"
          },
          "branch": {
            "description": "The military branch assignment of the crew member.",
            "maxLength": 32,
            "type": "string",
            "example": "Air Force"
          },
          "rank": {
            "description": "The rank of the crew member.",
            "maxLength": 32,
            "type": "string",
            "example": "Capt"
          },
          "wing": {
            "description": "The wing the crew member serves.",
            "maxLength": 32,
            "type": "string",
            "example": "60AMW"
          },
          "squadron": {
            "description": "The squadron the crew member serves.",
            "maxLength": 32,
            "type": "string",
            "example": "21AS"
          },
          "flySquadron": {
            "description": "The flying squadron assignment of the crew member.",
            "maxLength": 256,
            "type": "string",
            "example": "141ARS"
          },
          "loanedTo": {
            "description": "The squadron the crew member has been temporarily loaned to.",
            "maxLength": 256,
            "type": "string",
            "example": "Thunderbirds"
          },
          "memberSource": {
            "description": "The military component for the crew member (e.g., ACTIVE, RESERVE, GUARD, UNKNOWN, etc.).",
            "maxLength": 16,
            "type": "string",
            "example": "ACTIVE"
          },
          "dutyStatus": {
            "description": "The current duty status code of this crew member (e.g., AGR for Active Guard and Reserve, IDT for Inactive Duty Training, etc.).",
            "maxLength": 16,
            "type": "string",
            "example": "AGR"
          },
          "memberStageName": {
            "description": "Stage name for the crew member.  A stage is a pool of crews supporting a given operation plan.",
            "maxLength": 32,
            "type": "string",
            "example": "Falcon Squadron"
          },
          "rmsMDS": {
            "description": "The primary aircraft type for the crew member according to the personnel resource management system indicated in the crewRMS field.",
            "maxLength": 8,
            "type": "string",
            "example": "C017A"
          },
          "phoneNumber": {
            "description": "Crew member lodging phone number.",
            "maxLength": 16,
            "type": "string",
            "example": "+14155552671"
          },
          "lodging": {
            "description": "Crew member lodging location.",
            "maxLength": 128,
            "type": "string",
            "example": "Peterson SFB"
          },
          "memberTransportReq": {
            "description": "Flag indicating whether this crew member needs transportation to the departure location.",
            "type": "boolean",
            "example": true
          },
          "memberPreRestTime": {
            "format": "date-time",
            "description": "Start time of this crew member's rest period before the mission, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "memberLegalAlertTime": {
            "format": "date-time",
            "description": "Time this crew member becomes eligible to be alerted for the mission, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "memberSchedAlertTime": {
            "format": "date-time",
            "description": "Time this crew member is scheduled to be alerted for the mission, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-02-26T09:15:00.123Z"
          },
          "memberActualAlertTime": {
            "format": "date-time",
            "description": "Time this crew member was actually alerted for the mission, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-02-26T09:15:00.123Z"
          },
          "memberLastAlertTime": {
            "format": "date-time",
            "description": "The latest possible time the crew member can legally be alerted for a task, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "memberPickupTime": {
            "format": "date-time",
            "description": "Time this crew member will be picked up from lodging, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-02-26T10:15:00.123Z"
          },
          "showTime": {
            "format": "date-time",
            "description": "Time this crew member is required to report for duty before this flight/mission, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-02-26T10:15:00.123Z"
          },
          "memberReturnTime": {
            "format": "date-time",
            "description": "Scheduled return time for this crew member, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "memberAdjReturnTime": {
            "format": "date-time",
            "description": "Adjusted return time for the crew member, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "memberAdjReturnTimeApprover": {
            "description": "Last name of the crew member's adjusted return time approver.",
            "maxLength": 64,
            "type": "string",
            "example": "Smith"
          },
          "memberInitStartTime": {
            "format": "date-time",
            "description": "Initial start time of the crew member's linked task that was delinked due to mission closure, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "memberPostRestTime": {
            "format": "date-time",
            "description": "End time of this crew member's rest period after the mission, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-02T16:00:00.123Z"
          },
          "memberPostRestOffset": {
            "description": "The scheduled delay or adjustment in the start time of a crew member's rest period after a mission, expressed as +/-HH:MM.",
            "maxLength": 6,
            "type": "string",
            "example": "+05:00"
          },
          "allSortie": {
            "description": "Flag indicating this crew member is assigned to all sorties of the crew itinerary.",
            "type": "boolean",
            "example": true
          },
          "attached": {
            "description": "Flag indicating whether this crew member is attached to his/her squadron. Crew members that are not attached are considered assigned.",
            "type": "boolean",
            "example": true
          },
          "funded": {
            "description": "Flag indicating whether this crew member is funded.",
            "type": "boolean",
            "example": true
          },
          "approved": {
            "description": "Flag indicating whether this crew member has been approved for the associated task.",
            "type": "boolean",
            "example": true
          },
          "notified": {
            "description": "Flag indicating whether this crew member has been notified of an event.",
            "type": "boolean",
            "example": true
          },
          "alerted": {
            "description": "Flag indicating whether this crew member has been alerted of the associated task.",
            "type": "boolean",
            "example": true
          },
          "emailed": {
            "description": "Flag indicating whether this crew member has been notified of an event by email.",
            "type": "boolean",
            "example": true
          },
          "extraTime": {
            "description": "Flag indicating whether this crew member requires an additional amount of time to report for duty.",
            "type": "boolean",
            "example": true
          },
          "grounded": {
            "description": "Flag indicating whether this crew member is grounded (i.e., his/her duties do not include flying).",
            "type": "boolean",
            "example": true
          },
          "guestStart": {
            "format": "date-time",
            "description": "Date when this crew member starts acting as guest help for the squadron, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "guestStop": {
            "format": "date-time",
            "description": "Date when this crew member stops acting as guest help for the squadron, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "physAvCode": {
            "description": "Code indicating a crew member's current physical fitness status and whether they are medically cleared to fly (e.g., D for Duties Not Including Flying, E for Physical Overdue, etc.).",
            "maxLength": 16,
            "type": "string",
            "example": "D"
          },
          "physAvStatus": {
            "description": "Code indicating a crew member's physical availabiility status (e.g., DISQUALIFIED, OVERDUE, etc.).",
            "maxLength": 128,
            "type": "string",
            "example": "OVERDUE"
          },
          "physDue": {
            "format": "date-time",
            "description": "Due date for the crew member's physical, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "trainingDate": {
            "format": "date-time",
            "description": "The date this crew member accomplished physiological or altitude chamber training, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "lastFltDate": {
            "format": "date-time",
            "description": "Date of the last flight for this crew member, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "fltRecDate": {
            "format": "date-time",
            "description": "The date this crew member's records review was completed, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "fltRecDue": {
            "format": "date-time",
            "description": "The date this crew member's records review is due, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "fltCurrencyExp": {
            "format": "date-time",
            "description": "The earliest flying currency expiration date for this crew member, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "fltCurrencyExpId": {
            "description": "The training task identifier associated with the flying currency expiration date for this crew member.",
            "maxLength": 8,
            "type": "string",
            "example": "SS05AM"
          },
          "gndCurrencyExp": {
            "format": "date-time",
            "description": "The earliest ground currency expiration date for this crew member, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "gndCurrencyExpId": {
            "description": "The training task identifier associated with the ground currency expiration date for this crew member.",
            "maxLength": 8,
            "type": "string",
            "example": "AH03YM"
          },
          "remarkCode": {
            "description": "Remark code used to designate attributes of this crew member. For more information, contact the provider source.",
            "maxLength": 64,
            "type": "string",
            "example": "ABE33"
          },
          "memberRemarks": {
            "description": "Remarks concerning the crew member.",
            "maxLength": 512,
            "type": "string",
            "example": "Crew member remark"
          }
        }
      },
      "DiplomaticClearance_Abridged": {
        "description": "A diplomatic clearance is an authorization for an aircraft to traverse or land within a specified country.",
        "required": [
          "classificationMarking",
          "idMission",
          "firstDepDate",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system if not provided on create operations.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "25059135-4afc-45c2-b78b-d6e843dbd96d"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idMission": {
            "description": "Unique identifier of the Mission associated with this diplomatic clearance record.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "0dba1363-2d09-49fa-a784-4bb4cbb1674a"
          },
          "externalWorksheetId": {
            "description": "Optional diplomatic clearance worksheet ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "990ae849089e3d6cad69655324176bb6"
          },
          "dipWorksheetName": {
            "description": "Identifier of the Diplomatic Clearance Worksheet used to coordinate aircraft clearance requests.",
            "maxLength": 256,
            "type": "string",
            "example": "G2-939911-AC"
          },
          "firstDepDate": {
            "format": "date-time",
            "description": "The First Departure Date (FDD) the mission is scheduled for departure, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "docDeadline": {
            "format": "date-time",
            "description": "Suspense date for the diplomatic clearance worksheet to be worked, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "apacsId": {
            "description": "The Aircraft and Personnel Automated Clearance System (APACS) system identifier used to process and approve this clearance request.",
            "maxLength": 40,
            "type": "string",
            "example": "1083034"
          },
          "diplomaticClearanceDetails": {
            "description": "Collection of diplomatic clearance details.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiplomaticClearanceDetails_Abridged"
            }
          },
          "diplomaticClearanceRemarks": {
            "description": "Collection of diplomatic clearance remarks.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiplomaticClearanceRemarks_Abridged"
            }
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "DiplomaticClearance_Full": {
        "description": "A diplomatic clearance is an authorization for an aircraft to traverse or land within a specified country.",
        "required": [
          "classificationMarking",
          "idMission",
          "firstDepDate",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system if not provided on create operations.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "25059135-4afc-45c2-b78b-d6e843dbd96d"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idMission": {
            "description": "Unique identifier of the Mission associated with this diplomatic clearance record.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "0dba1363-2d09-49fa-a784-4bb4cbb1674a"
          },
          "externalWorksheetId": {
            "description": "Optional diplomatic clearance worksheet ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "990ae849089e3d6cad69655324176bb6"
          },
          "dipWorksheetName": {
            "description": "Identifier of the Diplomatic Clearance Worksheet used to coordinate aircraft clearance requests.",
            "maxLength": 256,
            "type": "string",
            "example": "G2-939911-AC"
          },
          "firstDepDate": {
            "format": "date-time",
            "description": "The First Departure Date (FDD) the mission is scheduled for departure, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "docDeadline": {
            "format": "date-time",
            "description": "Suspense date for the diplomatic clearance worksheet to be worked, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "apacsId": {
            "description": "The Aircraft and Personnel Automated Clearance System (APACS) system identifier used to process and approve this clearance request.",
            "maxLength": 40,
            "type": "string",
            "example": "1083034"
          },
          "diplomaticClearanceDetails": {
            "description": "Collection of diplomatic clearance details.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiplomaticClearanceDetails_Full"
            }
          },
          "diplomaticClearanceRemarks": {
            "description": "Collection of diplomatic clearance remarks.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiplomaticClearanceRemarks_Full"
            }
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "DiplomaticClearance_Ingest": {
        "description": "A diplomatic clearance is an authorization for an aircraft to traverse or land within a specified country.",
        "required": [
          "classificationMarking",
          "idMission",
          "firstDepDate",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system if not provided on create operations.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "25059135-4afc-45c2-b78b-d6e843dbd96d"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idMission": {
            "description": "Unique identifier of the Mission associated with this diplomatic clearance record.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "0dba1363-2d09-49fa-a784-4bb4cbb1674a"
          },
          "externalWorksheetId": {
            "description": "Optional diplomatic clearance worksheet ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "990ae849089e3d6cad69655324176bb6"
          },
          "dipWorksheetName": {
            "description": "Identifier of the Diplomatic Clearance Worksheet used to coordinate aircraft clearance requests.",
            "maxLength": 256,
            "type": "string",
            "example": "G2-939911-AC"
          },
          "firstDepDate": {
            "format": "date-time",
            "description": "The First Departure Date (FDD) the mission is scheduled for departure, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "docDeadline": {
            "format": "date-time",
            "description": "Suspense date for the diplomatic clearance worksheet to be worked, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "apacsId": {
            "description": "The Aircraft and Personnel Automated Clearance System (APACS) system identifier used to process and approve this clearance request.",
            "maxLength": 40,
            "type": "string",
            "example": "1083034"
          },
          "diplomaticClearanceDetails": {
            "description": "Collection of diplomatic clearance details.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiplomaticClearanceDetails_Ingest"
            }
          },
          "diplomaticClearanceRemarks": {
            "description": "Collection of diplomatic clearance remarks.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiplomaticClearanceRemarks_Ingest"
            }
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "DiplomaticClearanceCountry_Abridged": {
        "description": "Diplomatic Clearance Country provides information such as entry/exit points, requirements, and points of contact for countries diplomatic clearances are being created for.",
        "required": [
          "classificationMarking",
          "lastChangedDate",
          "countryCode",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "25059135-4afc-45c2-b78b-d6e843dbd96d"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "lastChangedDate": {
            "format": "date-time",
            "description": "Last time this country's diplomatic clearance profile information was updated, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "countryCode": {
            "description": "The DoD Standard Country Code designator for the country for which the diplomatic clearance will be issued. This field should be set to \"OTHR\" if the source value does not match a UDL country code value (ISO-3166-ALPHA-2).",
            "maxLength": 4,
            "minLength": 1,
            "type": "string",
            "example": "NL"
          },
          "altCountryCode": {
            "description": "Specifies an alternate country code if the data provider code is not part of an official Country Code standard such as ISO-3166 or FIPS. This field will be set to the value provided by the source and should be used for all Queries specifying a Country Code.",
            "maxLength": 16,
            "type": "string",
            "example": "IZ"
          },
          "countryId": {
            "description": "System generated code used to identify a country.",
            "maxLength": 36,
            "type": "string",
            "example": "GDSSBL010412140742262246"
          },
          "countryName": {
            "description": "Name of the country for which the diplomatic clearance will be issued.",
            "maxLength": 128,
            "type": "string",
            "example": "NETHERLANDS"
          },
          "gmtOffset": {
            "description": "Time difference between the location of the country for which the diplomatic clearance will be issued and the Greenwich Mean Time (GMT), expressed as +/-HH:MM. Time zones east of Greenwich have positive offsets and time zones west of Greenwich are negative.",
            "maxLength": 6,
            "type": "string",
            "example": "-04:30"
          },
          "countryRemark": {
            "description": "Remarks concerning the country for which the diplomatic clearance will be issued.",
            "maxLength": 1024,
            "type": "string",
            "example": "Amsterdam airport EHAM will not accept hazardous cargo."
          },
          "existingProfile": {
            "description": "Flag indicating whether a diplomatic clearance profile exists for this country.",
            "type": "boolean",
            "example": true
          },
          "openMon": {
            "description": "Flag indicating whether this country's diplomatic clearance office is open on Monday.",
            "type": "boolean",
            "example": true
          },
          "openTue": {
            "description": "Flag indicating whether this country's diplomatic clearance office is open on Tuesday.",
            "type": "boolean",
            "example": true
          },
          "openWed": {
            "description": "Flag indicating whether this country's diplomatic clearance office is open on Wednesday.",
            "type": "boolean",
            "example": true
          },
          "openThu": {
            "description": "Flag indicating whether this country's diplomatic clearance office is open on Thursday.",
            "type": "boolean",
            "example": true
          },
          "openFri": {
            "description": "Flag indicating whether this country's diplomatic clearance office is open on Friday.",
            "type": "boolean",
            "example": true
          },
          "openSat": {
            "description": "Flag indicating whether this country's diplomatic clearance office is open on Saturday.",
            "type": "boolean",
            "example": false
          },
          "openSun": {
            "description": "Flag indicating whether this country's diplomatic clearance office is open on Sunday.",
            "type": "boolean",
            "example": false
          },
          "openTime": {
            "description": "Zulu opening time of this country's diplomatic clearance office expressed in HH:MM format.",
            "maxLength": 5,
            "type": "string",
            "example": "07:00"
          },
          "closeTime": {
            "description": "Zulu closing time of this country's diplomatic clearance office expressed in HH:MM format.",
            "maxLength": 5,
            "type": "string",
            "example": "16:00"
          },
          "acceptsEmail": {
            "description": "Flag indicating whether this country's diplomatic clearance office can receive messages via email.",
            "type": "boolean",
            "example": true
          },
          "acceptsDMS": {
            "description": "Flag indicating whether this country's diplomatic clearance office can receive messages using the Defense Message System (DMS).",
            "type": "boolean",
            "example": true
          },
          "acceptsFax": {
            "description": "Flag indicating whether this country's diplomatic clearance office can receive messages via fax.",
            "type": "boolean",
            "example": true
          },
          "acceptsSIPRNet": {
            "description": "Flag indicating whether this country's diplomatic clearance office can receive messages via SIPRNet.",
            "type": "boolean",
            "example": false
          },
          "agency": {
            "description": "The source agency of the diplomatic clearance country data.",
            "maxLength": 32,
            "type": "string",
            "example": "TACC"
          },
          "officeName": {
            "description": "Name of this country's diplomatic clearance office.",
            "maxLength": 32,
            "type": "string",
            "example": "DAO.EU"
          },
          "officePOC": {
            "description": "Name of the point of contact for this country's diplomatic clearance office.",
            "maxLength": 64,
            "type": "string",
            "example": "John Smith"
          },
          "officeRemark": {
            "description": "Remarks concerning this country's diplomatic clearance office.",
            "maxLength": 1024,
            "type": "string",
            "example": "Diplomatic clearance office remark"
          },
          "diplomaticClearanceCountryEntryExitPoints": {
            "description": "Collection of diplomatic clearance profile information for this country.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiplomaticClearanceCountryEntryExitPoint_Abridged"
            }
          },
          "diplomaticClearanceCountryProfiles": {
            "description": "Collection of diplomatic clearance profile information for this country.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiplomaticClearanceCountryProfile_Abridged"
            }
          },
          "diplomaticClearanceCountryContacts": {
            "description": "Collection of diplomatic clearance profile information for this country.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiplomaticClearanceCountryContact_Abridged"
            }
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "DiplomaticClearanceCountry_Full": {
        "description": "Diplomatic Clearance Country provides information such as entry/exit points, requirements, and points of contact for countries diplomatic clearances are being created for.",
        "required": [
          "classificationMarking",
          "lastChangedDate",
          "countryCode",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "25059135-4afc-45c2-b78b-d6e843dbd96d"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "lastChangedDate": {
            "format": "date-time",
            "description": "Last time this country's diplomatic clearance profile information was updated, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "countryCode": {
            "description": "The DoD Standard Country Code designator for the country for which the diplomatic clearance will be issued. This field should be set to \"OTHR\" if the source value does not match a UDL country code value (ISO-3166-ALPHA-2).",
            "maxLength": 4,
            "minLength": 1,
            "type": "string",
            "example": "NL"
          },
          "altCountryCode": {
            "description": "Specifies an alternate country code if the data provider code is not part of an official Country Code standard such as ISO-3166 or FIPS. This field will be set to the value provided by the source and should be used for all Queries specifying a Country Code.",
            "maxLength": 16,
            "type": "string",
            "example": "IZ"
          },
          "countryId": {
            "description": "System generated code used to identify a country.",
            "maxLength": 36,
            "type": "string",
            "example": "GDSSBL010412140742262246"
          },
          "countryName": {
            "description": "Name of the country for which the diplomatic clearance will be issued.",
            "maxLength": 128,
            "type": "string",
            "example": "NETHERLANDS"
          },
          "gmtOffset": {
            "description": "Time difference between the location of the country for which the diplomatic clearance will be issued and the Greenwich Mean Time (GMT), expressed as +/-HH:MM. Time zones east of Greenwich have positive offsets and time zones west of Greenwich are negative.",
            "maxLength": 6,
            "type": "string",
            "example": "-04:30"
          },
          "countryRemark": {
            "description": "Remarks concerning the country for which the diplomatic clearance will be issued.",
            "maxLength": 1024,
            "type": "string",
            "example": "Amsterdam airport EHAM will not accept hazardous cargo."
          },
          "existingProfile": {
            "description": "Flag indicating whether a diplomatic clearance profile exists for this country.",
            "type": "boolean",
            "example": true
          },
          "openMon": {
            "description": "Flag indicating whether this country's diplomatic clearance office is open on Monday.",
            "type": "boolean",
            "example": true
          },
          "openTue": {
            "description": "Flag indicating whether this country's diplomatic clearance office is open on Tuesday.",
            "type": "boolean",
            "example": true
          },
          "openWed": {
            "description": "Flag indicating whether this country's diplomatic clearance office is open on Wednesday.",
            "type": "boolean",
            "example": true
          },
          "openThu": {
            "description": "Flag indicating whether this country's diplomatic clearance office is open on Thursday.",
            "type": "boolean",
            "example": true
          },
          "openFri": {
            "description": "Flag indicating whether this country's diplomatic clearance office is open on Friday.",
            "type": "boolean",
            "example": true
          },
          "openSat": {
            "description": "Flag indicating whether this country's diplomatic clearance office is open on Saturday.",
            "type": "boolean",
            "example": false
          },
          "openSun": {
            "description": "Flag indicating whether this country's diplomatic clearance office is open on Sunday.",
            "type": "boolean",
            "example": false
          },
          "openTime": {
            "description": "Zulu opening time of this country's diplomatic clearance office expressed in HH:MM format.",
            "maxLength": 5,
            "type": "string",
            "example": "07:00"
          },
          "closeTime": {
            "description": "Zulu closing time of this country's diplomatic clearance office expressed in HH:MM format.",
            "maxLength": 5,
            "type": "string",
            "example": "16:00"
          },
          "acceptsEmail": {
            "description": "Flag indicating whether this country's diplomatic clearance office can receive messages via email.",
            "type": "boolean",
            "example": true
          },
          "acceptsDMS": {
            "description": "Flag indicating whether this country's diplomatic clearance office can receive messages using the Defense Message System (DMS).",
            "type": "boolean",
            "example": true
          },
          "acceptsFax": {
            "description": "Flag indicating whether this country's diplomatic clearance office can receive messages via fax.",
            "type": "boolean",
            "example": true
          },
          "acceptsSIPRNet": {
            "description": "Flag indicating whether this country's diplomatic clearance office can receive messages via SIPRNet.",
            "type": "boolean",
            "example": false
          },
          "agency": {
            "description": "The source agency of the diplomatic clearance country data.",
            "maxLength": 32,
            "type": "string",
            "example": "TACC"
          },
          "officeName": {
            "description": "Name of this country's diplomatic clearance office.",
            "maxLength": 32,
            "type": "string",
            "example": "DAO.EU"
          },
          "officePOC": {
            "description": "Name of the point of contact for this country's diplomatic clearance office.",
            "maxLength": 64,
            "type": "string",
            "example": "John Smith"
          },
          "officeRemark": {
            "description": "Remarks concerning this country's diplomatic clearance office.",
            "maxLength": 1024,
            "type": "string",
            "example": "Diplomatic clearance office remark"
          },
          "diplomaticClearanceCountryEntryExitPoints": {
            "description": "Collection of diplomatic clearance profile information for this country.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiplomaticClearanceCountryEntryExitPoint_Full"
            }
          },
          "diplomaticClearanceCountryProfiles": {
            "description": "Collection of diplomatic clearance profile information for this country.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiplomaticClearanceCountryProfile_Full"
            }
          },
          "diplomaticClearanceCountryContacts": {
            "description": "Collection of diplomatic clearance profile information for this country.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiplomaticClearanceCountryContact_Full"
            }
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "DiplomaticClearanceCountry_Ingest": {
        "description": "Diplomatic Clearance Country provides information such as entry/exit points, requirements, and points of contact for countries diplomatic clearances are being created for.",
        "required": [
          "classificationMarking",
          "lastChangedDate",
          "countryCode",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "25059135-4afc-45c2-b78b-d6e843dbd96d"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "lastChangedDate": {
            "format": "date-time",
            "description": "Last time this country's diplomatic clearance profile information was updated, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "countryCode": {
            "description": "The DoD Standard Country Code designator for the country for which the diplomatic clearance will be issued. This field should be set to \"OTHR\" if the source value does not match a UDL country code value (ISO-3166-ALPHA-2).",
            "maxLength": 4,
            "minLength": 1,
            "type": "string",
            "example": "NL"
          },
          "altCountryCode": {
            "description": "Specifies an alternate country code if the data provider code is not part of an official Country Code standard such as ISO-3166 or FIPS. This field will be set to the value provided by the source and should be used for all Queries specifying a Country Code.",
            "maxLength": 16,
            "type": "string",
            "example": "IZ"
          },
          "countryId": {
            "description": "System generated code used to identify a country.",
            "maxLength": 36,
            "type": "string",
            "example": "GDSSBL010412140742262246"
          },
          "countryName": {
            "description": "Name of the country for which the diplomatic clearance will be issued.",
            "maxLength": 128,
            "type": "string",
            "example": "NETHERLANDS"
          },
          "gmtOffset": {
            "description": "Time difference between the location of the country for which the diplomatic clearance will be issued and the Greenwich Mean Time (GMT), expressed as +/-HH:MM. Time zones east of Greenwich have positive offsets and time zones west of Greenwich are negative.",
            "maxLength": 6,
            "type": "string",
            "example": "-04:30"
          },
          "countryRemark": {
            "description": "Remarks concerning the country for which the diplomatic clearance will be issued.",
            "maxLength": 1024,
            "type": "string",
            "example": "Amsterdam airport EHAM will not accept hazardous cargo."
          },
          "existingProfile": {
            "description": "Flag indicating whether a diplomatic clearance profile exists for this country.",
            "type": "boolean",
            "example": true
          },
          "openMon": {
            "description": "Flag indicating whether this country's diplomatic clearance office is open on Monday.",
            "type": "boolean",
            "example": true
          },
          "openTue": {
            "description": "Flag indicating whether this country's diplomatic clearance office is open on Tuesday.",
            "type": "boolean",
            "example": true
          },
          "openWed": {
            "description": "Flag indicating whether this country's diplomatic clearance office is open on Wednesday.",
            "type": "boolean",
            "example": true
          },
          "openThu": {
            "description": "Flag indicating whether this country's diplomatic clearance office is open on Thursday.",
            "type": "boolean",
            "example": true
          },
          "openFri": {
            "description": "Flag indicating whether this country's diplomatic clearance office is open on Friday.",
            "type": "boolean",
            "example": true
          },
          "openSat": {
            "description": "Flag indicating whether this country's diplomatic clearance office is open on Saturday.",
            "type": "boolean",
            "example": false
          },
          "openSun": {
            "description": "Flag indicating whether this country's diplomatic clearance office is open on Sunday.",
            "type": "boolean",
            "example": false
          },
          "openTime": {
            "description": "Zulu opening time of this country's diplomatic clearance office expressed in HH:MM format.",
            "maxLength": 5,
            "type": "string",
            "example": "07:00"
          },
          "closeTime": {
            "description": "Zulu closing time of this country's diplomatic clearance office expressed in HH:MM format.",
            "maxLength": 5,
            "type": "string",
            "example": "16:00"
          },
          "acceptsEmail": {
            "description": "Flag indicating whether this country's diplomatic clearance office can receive messages via email.",
            "type": "boolean",
            "example": true
          },
          "acceptsDMS": {
            "description": "Flag indicating whether this country's diplomatic clearance office can receive messages using the Defense Message System (DMS).",
            "type": "boolean",
            "example": true
          },
          "acceptsFax": {
            "description": "Flag indicating whether this country's diplomatic clearance office can receive messages via fax.",
            "type": "boolean",
            "example": true
          },
          "acceptsSIPRNet": {
            "description": "Flag indicating whether this country's diplomatic clearance office can receive messages via SIPRNet.",
            "type": "boolean",
            "example": false
          },
          "agency": {
            "description": "The source agency of the diplomatic clearance country data.",
            "maxLength": 32,
            "type": "string",
            "example": "TACC"
          },
          "officeName": {
            "description": "Name of this country's diplomatic clearance office.",
            "maxLength": 32,
            "type": "string",
            "example": "DAO.EU"
          },
          "officePOC": {
            "description": "Name of the point of contact for this country's diplomatic clearance office.",
            "maxLength": 64,
            "type": "string",
            "example": "John Smith"
          },
          "officeRemark": {
            "description": "Remarks concerning this country's diplomatic clearance office.",
            "maxLength": 1024,
            "type": "string",
            "example": "Diplomatic clearance office remark"
          },
          "diplomaticClearanceCountryEntryExitPoints": {
            "description": "Collection of diplomatic clearance profile information for this country.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiplomaticClearanceCountryEntryExitPoint_Ingest"
            }
          },
          "diplomaticClearanceCountryProfiles": {
            "description": "Collection of diplomatic clearance profile information for this country.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiplomaticClearanceCountryProfile_Ingest"
            }
          },
          "diplomaticClearanceCountryContacts": {
            "description": "Collection of diplomatic clearance profile information for this country.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiplomaticClearanceCountryContact_Ingest"
            }
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "DiplomaticClearanceCountryContact_Abridged": {
        "description": "Collection of contact information for this country.",
        "type": "object",
        "properties": {
          "contactId": {
            "description": "Identifier of the contact for this country.",
            "maxLength": 36,
            "type": "string",
            "example": "GDSSMC112108191329534522"
          },
          "contactName": {
            "description": "Name of the contact for this country.",
            "maxLength": 64,
            "type": "string",
            "example": "John Smith"
          },
          "dsnSpdDialCode": {
            "description": "Defense Switched Network (DSN) speed dial code for this contact.",
            "maxLength": 4,
            "type": "string",
            "example": "94"
          },
          "dsnNum": {
            "description": "Defense Switched Network (DSN) phone number for this contact.",
            "maxLength": 64,
            "type": "string",
            "example": "513827215"
          },
          "commSpdDialCode": {
            "description": "Commercial speed dial code for this contact.",
            "maxLength": 4,
            "type": "string",
            "example": "74"
          },
          "commNum": {
            "description": "Commercial phone number for this contact.",
            "maxLength": 64,
            "type": "string",
            "example": "904716104"
          },
          "ahSpdDialCode": {
            "description": "Speed dial code for this contact after regular business hours.",
            "maxLength": 4,
            "type": "string",
            "example": "75"
          },
          "ahNum": {
            "description": "Phone number for this contact after regular business hours.",
            "maxLength": 64,
            "type": "string",
            "example": "256039858"
          },
          "faxNum": {
            "description": "Fax number for this contact.",
            "maxLength": 64,
            "type": "string",
            "example": "571654897"
          },
          "niprNum": {
            "description": "Phone number to contact the Diplomatic Attache Office (DAO) for this country over a secure NIPR line.",
            "maxLength": 64,
            "type": "string",
            "example": "525574441"
          },
          "siprNum": {
            "description": "Phone number to contact the Diplomatic Attache Office (DAO) for this country over a secure SIPR line.",
            "maxLength": 64,
            "type": "string",
            "example": "546144352"
          },
          "contactRemark": {
            "description": "Remarks about this contact.",
            "maxLength": 256,
            "type": "string",
            "example": "Contact remark"
          }
        }
      },
      "DiplomaticClearanceCountryContact_Full": {
        "description": "Collection of contact information for this country.",
        "type": "object",
        "properties": {
          "contactId": {
            "description": "Identifier of the contact for this country.",
            "maxLength": 36,
            "type": "string",
            "example": "GDSSMC112108191329534522"
          },
          "contactName": {
            "description": "Name of the contact for this country.",
            "maxLength": 64,
            "type": "string",
            "example": "John Smith"
          },
          "dsnSpdDialCode": {
            "description": "Defense Switched Network (DSN) speed dial code for this contact.",
            "maxLength": 4,
            "type": "string",
            "example": "94"
          },
          "dsnNum": {
            "description": "Defense Switched Network (DSN) phone number for this contact.",
            "maxLength": 64,
            "type": "string",
            "example": "513827215"
          },
          "commSpdDialCode": {
            "description": "Commercial speed dial code for this contact.",
            "maxLength": 4,
            "type": "string",
            "example": "74"
          },
          "commNum": {
            "description": "Commercial phone number for this contact.",
            "maxLength": 64,
            "type": "string",
            "example": "904716104"
          },
          "ahSpdDialCode": {
            "description": "Speed dial code for this contact after regular business hours.",
            "maxLength": 4,
            "type": "string",
            "example": "75"
          },
          "ahNum": {
            "description": "Phone number for this contact after regular business hours.",
            "maxLength": 64,
            "type": "string",
            "example": "256039858"
          },
          "faxNum": {
            "description": "Fax number for this contact.",
            "maxLength": 64,
            "type": "string",
            "example": "571654897"
          },
          "niprNum": {
            "description": "Phone number to contact the Diplomatic Attache Office (DAO) for this country over a secure NIPR line.",
            "maxLength": 64,
            "type": "string",
            "example": "525574441"
          },
          "siprNum": {
            "description": "Phone number to contact the Diplomatic Attache Office (DAO) for this country over a secure SIPR line.",
            "maxLength": 64,
            "type": "string",
            "example": "546144352"
          },
          "contactRemark": {
            "description": "Remarks about this contact.",
            "maxLength": 256,
            "type": "string",
            "example": "Contact remark"
          }
        }
      },
      "DiplomaticClearanceCountryContact_Ingest": {
        "description": "Collection of contact information for this country.",
        "type": "object",
        "properties": {
          "contactId": {
            "description": "Identifier of the contact for this country.",
            "maxLength": 36,
            "type": "string",
            "example": "GDSSMC112108191329534522"
          },
          "contactName": {
            "description": "Name of the contact for this country.",
            "maxLength": 64,
            "type": "string",
            "example": "John Smith"
          },
          "dsnSpdDialCode": {
            "description": "Defense Switched Network (DSN) speed dial code for this contact.",
            "maxLength": 4,
            "type": "string",
            "example": "94"
          },
          "dsnNum": {
            "description": "Defense Switched Network (DSN) phone number for this contact.",
            "maxLength": 64,
            "type": "string",
            "example": "513827215"
          },
          "commSpdDialCode": {
            "description": "Commercial speed dial code for this contact.",
            "maxLength": 4,
            "type": "string",
            "example": "74"
          },
          "commNum": {
            "description": "Commercial phone number for this contact.",
            "maxLength": 64,
            "type": "string",
            "example": "904716104"
          },
          "ahSpdDialCode": {
            "description": "Speed dial code for this contact after regular business hours.",
            "maxLength": 4,
            "type": "string",
            "example": "75"
          },
          "ahNum": {
            "description": "Phone number for this contact after regular business hours.",
            "maxLength": 64,
            "type": "string",
            "example": "256039858"
          },
          "faxNum": {
            "description": "Fax number for this contact.",
            "maxLength": 64,
            "type": "string",
            "example": "571654897"
          },
          "niprNum": {
            "description": "Phone number to contact the Diplomatic Attache Office (DAO) for this country over a secure NIPR line.",
            "maxLength": 64,
            "type": "string",
            "example": "525574441"
          },
          "siprNum": {
            "description": "Phone number to contact the Diplomatic Attache Office (DAO) for this country over a secure SIPR line.",
            "maxLength": 64,
            "type": "string",
            "example": "546144352"
          },
          "contactRemark": {
            "description": "Remarks about this contact.",
            "maxLength": 256,
            "type": "string",
            "example": "Contact remark"
          }
        }
      },
      "DiplomaticClearanceCountryEntryExitPoint_Abridged": {
        "description": "Collection of entry and exit points for this country.",
        "type": "object",
        "properties": {
          "pointName": {
            "description": "Name of this entry/exit point.",
            "maxLength": 64,
            "type": "string",
            "example": "BATEL"
          },
          "isEntry": {
            "description": "Flag indicating whether this is a point of entry for this country.",
            "type": "boolean",
            "example": true
          },
          "isExit": {
            "description": "Flag indicating whether this is a point of exit for this country.",
            "type": "boolean",
            "example": true
          }
        }
      },
      "DiplomaticClearanceCountryEntryExitPoint_Full": {
        "description": "Collection of entry and exit points for this country.",
        "type": "object",
        "properties": {
          "pointName": {
            "description": "Name of this entry/exit point.",
            "maxLength": 64,
            "type": "string",
            "example": "BATEL"
          },
          "isEntry": {
            "description": "Flag indicating whether this is a point of entry for this country.",
            "type": "boolean",
            "example": true
          },
          "isExit": {
            "description": "Flag indicating whether this is a point of exit for this country.",
            "type": "boolean",
            "example": true
          }
        }
      },
      "DiplomaticClearanceCountryEntryExitPoint_Ingest": {
        "description": "Collection of entry and exit points for this country.",
        "type": "object",
        "properties": {
          "pointName": {
            "description": "Name of this entry/exit point.",
            "maxLength": 64,
            "type": "string",
            "example": "BATEL"
          },
          "isEntry": {
            "description": "Flag indicating whether this is a point of entry for this country.",
            "type": "boolean",
            "example": true
          },
          "isExit": {
            "description": "Flag indicating whether this is a point of exit for this country.",
            "type": "boolean",
            "example": true
          }
        }
      },
      "DiplomaticClearanceCountryProfile_Abridged": {
        "description": "Collection of diplomatic clearance profile information for this country.",
        "type": "object",
        "properties": {
          "profileId": {
            "description": "Identifier of the diplomatic clearance country profile.",
            "maxLength": 36,
            "type": "string",
            "example": "GDSSBL010412140742262247"
          },
          "profile": {
            "description": "The diplomatic clearance profile name used within clearance management systems.",
            "maxLength": 128,
            "type": "string",
            "example": "Netherlands Non Haz Landing"
          },
          "profileAgency": {
            "description": "The agency to which this profile applies.",
            "maxLength": 32,
            "type": "string",
            "example": "USAFE"
          },
          "clearanceId": {
            "description": "Identifier of the associated diplomatic clearance issued by the host country.",
            "maxLength": 32,
            "type": "string",
            "example": "MDCNPER231360050AAR"
          },
          "reqACAltName": {
            "description": "Flag indicating whether alternate aircraft names are required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqCrewComp": {
            "description": "Flag indicating whether the number of crew members on a flight is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqCrewDetail": {
            "description": "Flag indicating whether the names, ranks, and positions of crew members are required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqDV": {
            "description": "Flag indicating whether distinguished visitors are required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqRaven": {
            "description": "Flag indicating whether ravens are required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqCargoList": {
            "description": "Flag indicating whether a cargo list is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqFltPlanRoute": {
            "description": "Flag indicating whether a flight plan route is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqICAO": {
            "description": "Flag indicating whether this diplomatic clearance profile applies to specific ICAO(s). These specific ICAO(s) should be clarified in the fltInfoRemark field.",
            "type": "boolean",
            "example": false
          },
          "reqEntryExitCoord": {
            "description": "Flag indicating whether entry/exit coordinates need to be specified for this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqTailNum": {
            "description": "Flag indicating whether an aircraft tail number is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqFltInfo": {
            "description": "Flag indicating whether flight information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "fltInfoRemark": {
            "description": "Remarks concerning flight information for this country profile.",
            "maxLength": 1024,
            "type": "string",
            "example": "Flight info remark"
          },
          "reqCrewInfo": {
            "description": "Flag indicating whether crew information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "crewInfoRemark": {
            "description": "Remarks concerning crew information for this country profile.",
            "maxLength": 1024,
            "type": "string",
            "example": "Crew info remark"
          },
          "reqCargoPax": {
            "description": "Flag indicating whether aircraft cargo and passenger information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "cargoPaxRemark": {
            "description": "Remarks concerning aircraft cargo and passenger information for this country profile.",
            "maxLength": 1024,
            "type": "string",
            "example": "Cargo passenger remark"
          },
          "reqHazInfo": {
            "description": "Flag indicating whether hazardous material information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqAllHazInfo": {
            "description": "Flag indicating whether all hazardous material information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "hazInfoRemark": {
            "description": "Remarks concerning hazardous material information for this country profile.",
            "maxLength": 1024,
            "type": "string",
            "example": "Hazmat remark"
          },
          "reqPassportInfo": {
            "description": "Flag indicating whether passport information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqFundSource": {
            "description": "Flag indicating whether aviation funding sources are required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqAMCStdInfo": {
            "description": "Flag indicating whether standard AMC information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqClass1Info": {
            "description": "Flag indicating whether Class 1 hazardous material information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqDiv1Info": {
            "description": "Flag indicating whether Division 1.1 hazardous material information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqClass9Info": {
            "description": "Flag indicating whether Class 9 hazardous material information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqWeaponsInfo": {
            "description": "Flag indicating whether weapons information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqRepChange": {
            "description": "Flag indicating whether changes are required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "undefinedCrewReporting": {
            "description": "Flag indicating whether crew reporting is undefined for the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "defEntryRemark": {
            "description": "Remarks concerning the default entry point for this country.",
            "maxLength": 64,
            "type": "string",
            "example": "Default entry remark"
          },
          "defEntryTime": {
            "description": "Zulu default entry time for this country expressed in HH:MM format.",
            "maxLength": 5,
            "type": "string",
            "example": "15:00"
          },
          "defExitRemark": {
            "description": "Remarks concerning the default exit point for this country.",
            "maxLength": 64,
            "type": "string",
            "example": "Default exit remark"
          },
          "defExitTime": {
            "description": "Zulu default exit time for this country expressed in HH:MM format.",
            "maxLength": 5,
            "type": "string",
            "example": "17:00"
          },
          "defClearanceStatus": {
            "description": "Code denoting the status of the default diplomatic clearance (e.g., A for Approved via APACS, E for Requested via email, etc.).",
            "maxLength": 1,
            "type": "string",
            "example": "R"
          },
          "landDefProf": {
            "description": "Flag indicating whether this is the default landing profile for this country.",
            "type": "boolean",
            "example": true
          },
          "landLeadTime": {
            "format": "int32",
            "description": "Amount of lead time required for an aircraft to land in this country. Units need to be specified in the landLeadTimeUnit field.",
            "type": "integer",
            "example": 7
          },
          "landLeadTimeUnit": {
            "description": "Unit of time specified for the landLeadTime field to indicate the landing lead time required for this country.",
            "maxLength": 16,
            "type": "string",
            "example": "Day"
          },
          "landLeadTimeRemark": {
            "description": "Remarks concerning the landing lead time required for this country.",
            "maxLength": 256,
            "type": "string",
            "example": "Landing lead time remark"
          },
          "landValidPeriodPlus": {
            "format": "int32",
            "description": "Amount of time after the landing valid period that an aircraft is allowed to land in this country for this profile. The unit of time should be specified in the landValidPeriodUnit field.",
            "type": "integer",
            "example": 72
          },
          "landValidPeriodMinus": {
            "format": "int32",
            "description": "Amount of time before the landing valid period that an aircraft is allowed to land in this country for this profile. The unit of time should be specified in the landValidPeriodUnit field.",
            "type": "integer",
            "example": 0
          },
          "landValidPeriodUnit": {
            "description": "Unit of time specified for the landValidPeriodPlus and landValidPeriodMinus fields to indicate the valid landing period for this country.",
            "maxLength": 16,
            "type": "string",
            "example": "Hour"
          },
          "landValidPeriodRemark": {
            "description": "Remarks concerning the valid landing time period for this country.",
            "maxLength": 256,
            "type": "string",
            "example": "Landing valid period remark"
          },
          "overflyDefProf": {
            "description": "Flag indicating whether this is the default overfly profile for this country.",
            "type": "boolean",
            "example": true
          },
          "overflyLeadTime": {
            "format": "int32",
            "description": "Amount of lead time required for an aircraft to enter and fly over the airspace of this country. Units need to be specified in the overflyLeadTimeUnit field.",
            "type": "integer",
            "example": 7
          },
          "overflyLeadTimeUnit": {
            "description": "Unit of time specified for the overflyLeadTime field to indicate the overfly lead time required for this country.",
            "maxLength": 16,
            "type": "string",
            "example": "Day"
          },
          "overflyLeadTimeRemark": {
            "description": "Remarks concerning the overfly lead time required for this country.",
            "maxLength": 256,
            "type": "string",
            "example": "Overfly remark"
          },
          "overflyValidPeriodPlus": {
            "format": "int32",
            "description": "Amount of time after the overfly valid period that an aircraft is allowed to fly over this country for this profile. The unit of time should be specified in the overflyValidPeriodUnit field.",
            "type": "integer",
            "example": 72
          },
          "overflyValidPeriodMinus": {
            "format": "int32",
            "description": "Amount of time before the overfly valid period that an aircraft is allowed to fly over this country for this profile. The unit of time should be specified in the overflyValidPeriodUnit field.",
            "type": "integer",
            "example": 0
          },
          "overflyValidPeriodUnit": {
            "description": "Unit of time specified for the overflyValidPeriodPlus and overflyValidPeriodMinus fields to indicate the valid overfly period for this country.",
            "maxLength": 16,
            "type": "string",
            "example": "Hour"
          },
          "overflyValidPeriodRemark": {
            "description": "Remarks concerning the valid overfly time period for this country.",
            "maxLength": 256,
            "type": "string",
            "example": "Overfly valid period remark"
          },
          "profileRemark": {
            "description": "Remarks concerning this country profile.",
            "maxLength": 1024,
            "type": "string",
            "example": "Profile remark"
          }
        }
      },
      "DiplomaticClearanceCountryProfile_Full": {
        "description": "Collection of diplomatic clearance profile information for this country.",
        "type": "object",
        "properties": {
          "profileId": {
            "description": "Identifier of the diplomatic clearance country profile.",
            "maxLength": 36,
            "type": "string",
            "example": "GDSSBL010412140742262247"
          },
          "profile": {
            "description": "The diplomatic clearance profile name used within clearance management systems.",
            "maxLength": 128,
            "type": "string",
            "example": "Netherlands Non Haz Landing"
          },
          "profileAgency": {
            "description": "The agency to which this profile applies.",
            "maxLength": 32,
            "type": "string",
            "example": "USAFE"
          },
          "clearanceId": {
            "description": "Identifier of the associated diplomatic clearance issued by the host country.",
            "maxLength": 32,
            "type": "string",
            "example": "MDCNPER231360050AAR"
          },
          "reqACAltName": {
            "description": "Flag indicating whether alternate aircraft names are required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqCrewComp": {
            "description": "Flag indicating whether the number of crew members on a flight is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqCrewDetail": {
            "description": "Flag indicating whether the names, ranks, and positions of crew members are required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqDV": {
            "description": "Flag indicating whether distinguished visitors are required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqRaven": {
            "description": "Flag indicating whether ravens are required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqCargoList": {
            "description": "Flag indicating whether a cargo list is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqFltPlanRoute": {
            "description": "Flag indicating whether a flight plan route is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqICAO": {
            "description": "Flag indicating whether this diplomatic clearance profile applies to specific ICAO(s). These specific ICAO(s) should be clarified in the fltInfoRemark field.",
            "type": "boolean",
            "example": false
          },
          "reqEntryExitCoord": {
            "description": "Flag indicating whether entry/exit coordinates need to be specified for this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqTailNum": {
            "description": "Flag indicating whether an aircraft tail number is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqFltInfo": {
            "description": "Flag indicating whether flight information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "fltInfoRemark": {
            "description": "Remarks concerning flight information for this country profile.",
            "maxLength": 1024,
            "type": "string",
            "example": "Flight info remark"
          },
          "reqCrewInfo": {
            "description": "Flag indicating whether crew information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "crewInfoRemark": {
            "description": "Remarks concerning crew information for this country profile.",
            "maxLength": 1024,
            "type": "string",
            "example": "Crew info remark"
          },
          "reqCargoPax": {
            "description": "Flag indicating whether aircraft cargo and passenger information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "cargoPaxRemark": {
            "description": "Remarks concerning aircraft cargo and passenger information for this country profile.",
            "maxLength": 1024,
            "type": "string",
            "example": "Cargo passenger remark"
          },
          "reqHazInfo": {
            "description": "Flag indicating whether hazardous material information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqAllHazInfo": {
            "description": "Flag indicating whether all hazardous material information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "hazInfoRemark": {
            "description": "Remarks concerning hazardous material information for this country profile.",
            "maxLength": 1024,
            "type": "string",
            "example": "Hazmat remark"
          },
          "reqPassportInfo": {
            "description": "Flag indicating whether passport information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqFundSource": {
            "description": "Flag indicating whether aviation funding sources are required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqAMCStdInfo": {
            "description": "Flag indicating whether standard AMC information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqClass1Info": {
            "description": "Flag indicating whether Class 1 hazardous material information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqDiv1Info": {
            "description": "Flag indicating whether Division 1.1 hazardous material information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqClass9Info": {
            "description": "Flag indicating whether Class 9 hazardous material information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqWeaponsInfo": {
            "description": "Flag indicating whether weapons information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqRepChange": {
            "description": "Flag indicating whether changes are required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "undefinedCrewReporting": {
            "description": "Flag indicating whether crew reporting is undefined for the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "defEntryRemark": {
            "description": "Remarks concerning the default entry point for this country.",
            "maxLength": 64,
            "type": "string",
            "example": "Default entry remark"
          },
          "defEntryTime": {
            "description": "Zulu default entry time for this country expressed in HH:MM format.",
            "maxLength": 5,
            "type": "string",
            "example": "15:00"
          },
          "defExitRemark": {
            "description": "Remarks concerning the default exit point for this country.",
            "maxLength": 64,
            "type": "string",
            "example": "Default exit remark"
          },
          "defExitTime": {
            "description": "Zulu default exit time for this country expressed in HH:MM format.",
            "maxLength": 5,
            "type": "string",
            "example": "17:00"
          },
          "defClearanceStatus": {
            "description": "Code denoting the status of the default diplomatic clearance (e.g., A for Approved via APACS, E for Requested via email, etc.).",
            "maxLength": 1,
            "type": "string",
            "example": "R"
          },
          "landDefProf": {
            "description": "Flag indicating whether this is the default landing profile for this country.",
            "type": "boolean",
            "example": true
          },
          "landLeadTime": {
            "format": "int32",
            "description": "Amount of lead time required for an aircraft to land in this country. Units need to be specified in the landLeadTimeUnit field.",
            "type": "integer",
            "example": 7
          },
          "landLeadTimeUnit": {
            "description": "Unit of time specified for the landLeadTime field to indicate the landing lead time required for this country.",
            "maxLength": 16,
            "type": "string",
            "example": "Day"
          },
          "landLeadTimeRemark": {
            "description": "Remarks concerning the landing lead time required for this country.",
            "maxLength": 256,
            "type": "string",
            "example": "Landing lead time remark"
          },
          "landValidPeriodPlus": {
            "format": "int32",
            "description": "Amount of time after the landing valid period that an aircraft is allowed to land in this country for this profile. The unit of time should be specified in the landValidPeriodUnit field.",
            "type": "integer",
            "example": 72
          },
          "landValidPeriodMinus": {
            "format": "int32",
            "description": "Amount of time before the landing valid period that an aircraft is allowed to land in this country for this profile. The unit of time should be specified in the landValidPeriodUnit field.",
            "type": "integer",
            "example": 0
          },
          "landValidPeriodUnit": {
            "description": "Unit of time specified for the landValidPeriodPlus and landValidPeriodMinus fields to indicate the valid landing period for this country.",
            "maxLength": 16,
            "type": "string",
            "example": "Hour"
          },
          "landValidPeriodRemark": {
            "description": "Remarks concerning the valid landing time period for this country.",
            "maxLength": 256,
            "type": "string",
            "example": "Landing valid period remark"
          },
          "overflyDefProf": {
            "description": "Flag indicating whether this is the default overfly profile for this country.",
            "type": "boolean",
            "example": true
          },
          "overflyLeadTime": {
            "format": "int32",
            "description": "Amount of lead time required for an aircraft to enter and fly over the airspace of this country. Units need to be specified in the overflyLeadTimeUnit field.",
            "type": "integer",
            "example": 7
          },
          "overflyLeadTimeUnit": {
            "description": "Unit of time specified for the overflyLeadTime field to indicate the overfly lead time required for this country.",
            "maxLength": 16,
            "type": "string",
            "example": "Day"
          },
          "overflyLeadTimeRemark": {
            "description": "Remarks concerning the overfly lead time required for this country.",
            "maxLength": 256,
            "type": "string",
            "example": "Overfly remark"
          },
          "overflyValidPeriodPlus": {
            "format": "int32",
            "description": "Amount of time after the overfly valid period that an aircraft is allowed to fly over this country for this profile. The unit of time should be specified in the overflyValidPeriodUnit field.",
            "type": "integer",
            "example": 72
          },
          "overflyValidPeriodMinus": {
            "format": "int32",
            "description": "Amount of time before the overfly valid period that an aircraft is allowed to fly over this country for this profile. The unit of time should be specified in the overflyValidPeriodUnit field.",
            "type": "integer",
            "example": 0
          },
          "overflyValidPeriodUnit": {
            "description": "Unit of time specified for the overflyValidPeriodPlus and overflyValidPeriodMinus fields to indicate the valid overfly period for this country.",
            "maxLength": 16,
            "type": "string",
            "example": "Hour"
          },
          "overflyValidPeriodRemark": {
            "description": "Remarks concerning the valid overfly time period for this country.",
            "maxLength": 256,
            "type": "string",
            "example": "Overfly valid period remark"
          },
          "profileRemark": {
            "description": "Remarks concerning this country profile.",
            "maxLength": 1024,
            "type": "string",
            "example": "Profile remark"
          }
        }
      },
      "DiplomaticClearanceCountryProfile_Ingest": {
        "description": "Collection of diplomatic clearance profile information for this country.",
        "type": "object",
        "properties": {
          "profileId": {
            "description": "Identifier of the diplomatic clearance country profile.",
            "maxLength": 36,
            "type": "string",
            "example": "GDSSBL010412140742262247"
          },
          "profile": {
            "description": "The diplomatic clearance profile name used within clearance management systems.",
            "maxLength": 128,
            "type": "string",
            "example": "Netherlands Non Haz Landing"
          },
          "profileAgency": {
            "description": "The agency to which this profile applies.",
            "maxLength": 32,
            "type": "string",
            "example": "USAFE"
          },
          "clearanceId": {
            "description": "Identifier of the associated diplomatic clearance issued by the host country.",
            "maxLength": 32,
            "type": "string",
            "example": "MDCNPER231360050AAR"
          },
          "reqACAltName": {
            "description": "Flag indicating whether alternate aircraft names are required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqCrewComp": {
            "description": "Flag indicating whether the number of crew members on a flight is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqCrewDetail": {
            "description": "Flag indicating whether the names, ranks, and positions of crew members are required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqDV": {
            "description": "Flag indicating whether distinguished visitors are required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqRaven": {
            "description": "Flag indicating whether ravens are required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqCargoList": {
            "description": "Flag indicating whether a cargo list is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqFltPlanRoute": {
            "description": "Flag indicating whether a flight plan route is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqICAO": {
            "description": "Flag indicating whether this diplomatic clearance profile applies to specific ICAO(s). These specific ICAO(s) should be clarified in the fltInfoRemark field.",
            "type": "boolean",
            "example": false
          },
          "reqEntryExitCoord": {
            "description": "Flag indicating whether entry/exit coordinates need to be specified for this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqTailNum": {
            "description": "Flag indicating whether an aircraft tail number is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqFltInfo": {
            "description": "Flag indicating whether flight information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "fltInfoRemark": {
            "description": "Remarks concerning flight information for this country profile.",
            "maxLength": 1024,
            "type": "string",
            "example": "Flight info remark"
          },
          "reqCrewInfo": {
            "description": "Flag indicating whether crew information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "crewInfoRemark": {
            "description": "Remarks concerning crew information for this country profile.",
            "maxLength": 1024,
            "type": "string",
            "example": "Crew info remark"
          },
          "reqCargoPax": {
            "description": "Flag indicating whether aircraft cargo and passenger information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "cargoPaxRemark": {
            "description": "Remarks concerning aircraft cargo and passenger information for this country profile.",
            "maxLength": 1024,
            "type": "string",
            "example": "Cargo passenger remark"
          },
          "reqHazInfo": {
            "description": "Flag indicating whether hazardous material information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqAllHazInfo": {
            "description": "Flag indicating whether all hazardous material information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "hazInfoRemark": {
            "description": "Remarks concerning hazardous material information for this country profile.",
            "maxLength": 1024,
            "type": "string",
            "example": "Hazmat remark"
          },
          "reqPassportInfo": {
            "description": "Flag indicating whether passport information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqFundSource": {
            "description": "Flag indicating whether aviation funding sources are required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqAMCStdInfo": {
            "description": "Flag indicating whether standard AMC information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqClass1Info": {
            "description": "Flag indicating whether Class 1 hazardous material information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqDiv1Info": {
            "description": "Flag indicating whether Division 1.1 hazardous material information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqClass9Info": {
            "description": "Flag indicating whether Class 9 hazardous material information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqWeaponsInfo": {
            "description": "Flag indicating whether weapons information is required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "reqRepChange": {
            "description": "Flag indicating whether changes are required to be reported to the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "undefinedCrewReporting": {
            "description": "Flag indicating whether crew reporting is undefined for the country using this diplomatic clearance profile.",
            "type": "boolean",
            "example": false
          },
          "defEntryRemark": {
            "description": "Remarks concerning the default entry point for this country.",
            "maxLength": 64,
            "type": "string",
            "example": "Default entry remark"
          },
          "defEntryTime": {
            "description": "Zulu default entry time for this country expressed in HH:MM format.",
            "maxLength": 5,
            "type": "string",
            "example": "15:00"
          },
          "defExitRemark": {
            "description": "Remarks concerning the default exit point for this country.",
            "maxLength": 64,
            "type": "string",
            "example": "Default exit remark"
          },
          "defExitTime": {
            "description": "Zulu default exit time for this country expressed in HH:MM format.",
            "maxLength": 5,
            "type": "string",
            "example": "17:00"
          },
          "defClearanceStatus": {
            "description": "Code denoting the status of the default diplomatic clearance (e.g., A for Approved via APACS, E for Requested via email, etc.).",
            "maxLength": 1,
            "type": "string",
            "example": "R"
          },
          "landDefProf": {
            "description": "Flag indicating whether this is the default landing profile for this country.",
            "type": "boolean",
            "example": true
          },
          "landLeadTime": {
            "format": "int32",
            "description": "Amount of lead time required for an aircraft to land in this country. Units need to be specified in the landLeadTimeUnit field.",
            "type": "integer",
            "example": 7
          },
          "landLeadTimeUnit": {
            "description": "Unit of time specified for the landLeadTime field to indicate the landing lead time required for this country.",
            "maxLength": 16,
            "type": "string",
            "example": "Day"
          },
          "landLeadTimeRemark": {
            "description": "Remarks concerning the landing lead time required for this country.",
            "maxLength": 256,
            "type": "string",
            "example": "Landing lead time remark"
          },
          "landValidPeriodPlus": {
            "format": "int32",
            "description": "Amount of time after the landing valid period that an aircraft is allowed to land in this country for this profile. The unit of time should be specified in the landValidPeriodUnit field.",
            "type": "integer",
            "example": 72
          },
          "landValidPeriodMinus": {
            "format": "int32",
            "description": "Amount of time before the landing valid period that an aircraft is allowed to land in this country for this profile. The unit of time should be specified in the landValidPeriodUnit field.",
            "type": "integer",
            "example": 0
          },
          "landValidPeriodUnit": {
            "description": "Unit of time specified for the landValidPeriodPlus and landValidPeriodMinus fields to indicate the valid landing period for this country.",
            "maxLength": 16,
            "type": "string",
            "example": "Hour"
          },
          "landValidPeriodRemark": {
            "description": "Remarks concerning the valid landing time period for this country.",
            "maxLength": 256,
            "type": "string",
            "example": "Landing valid period remark"
          },
          "overflyDefProf": {
            "description": "Flag indicating whether this is the default overfly profile for this country.",
            "type": "boolean",
            "example": true
          },
          "overflyLeadTime": {
            "format": "int32",
            "description": "Amount of lead time required for an aircraft to enter and fly over the airspace of this country. Units need to be specified in the overflyLeadTimeUnit field.",
            "type": "integer",
            "example": 7
          },
          "overflyLeadTimeUnit": {
            "description": "Unit of time specified for the overflyLeadTime field to indicate the overfly lead time required for this country.",
            "maxLength": 16,
            "type": "string",
            "example": "Day"
          },
          "overflyLeadTimeRemark": {
            "description": "Remarks concerning the overfly lead time required for this country.",
            "maxLength": 256,
            "type": "string",
            "example": "Overfly remark"
          },
          "overflyValidPeriodPlus": {
            "format": "int32",
            "description": "Amount of time after the overfly valid period that an aircraft is allowed to fly over this country for this profile. The unit of time should be specified in the overflyValidPeriodUnit field.",
            "type": "integer",
            "example": 72
          },
          "overflyValidPeriodMinus": {
            "format": "int32",
            "description": "Amount of time before the overfly valid period that an aircraft is allowed to fly over this country for this profile. The unit of time should be specified in the overflyValidPeriodUnit field.",
            "type": "integer",
            "example": 0
          },
          "overflyValidPeriodUnit": {
            "description": "Unit of time specified for the overflyValidPeriodPlus and overflyValidPeriodMinus fields to indicate the valid overfly period for this country.",
            "maxLength": 16,
            "type": "string",
            "example": "Hour"
          },
          "overflyValidPeriodRemark": {
            "description": "Remarks concerning the valid overfly time period for this country.",
            "maxLength": 256,
            "type": "string",
            "example": "Overfly valid period remark"
          },
          "profileRemark": {
            "description": "Remarks concerning this country profile.",
            "maxLength": 1024,
            "type": "string",
            "example": "Profile remark"
          }
        }
      },
      "DiplomaticClearanceDetails_Abridged": {
        "description": "Collection of diplomatic clearance details.",
        "type": "object",
        "properties": {
          "idSortie": {
            "description": "Unique identifier of the Aircraft Sortie associated with this diplomatic clearance record.",
            "maxLength": 36,
            "type": "string",
            "example": "207010e0-f97d-431c-8c00-7e46acfef0f5"
          },
          "legNum": {
            "format": "int32",
            "description": "Identifies the Itinerary point of a sortie where an air event occurs.",
            "type": "integer",
            "example": 825
          },
          "routeString": {
            "description": "The 1801 fileable route of flight string associated with this diplomatic clearance. The route of flight string contains route designators, significant points, change of speed/altitude, change of flight rules, and cruise climbs.",
            "maxLength": 4000,
            "type": "string",
            "example": "DCT DOH P430 BAYAN/M062F150 P430 RAMKI"
          },
          "validStartTime": {
            "format": "date-time",
            "description": "The start time of the validity of this diplomatic clearance, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "validEndTime": {
            "format": "date-time",
            "description": "The end time of the validity of this diplomatic clearance, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "clearanceId": {
            "description": "Identifier of this diplomatic clearance issued by the host country.",
            "maxLength": 32,
            "type": "string",
            "example": "MFMW225662GHQ"
          },
          "externalClearanceId": {
            "description": "Optional clearance ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "aa714f4d52a37ab1a00b21af9566e379"
          },
          "clearedCallSign": {
            "description": "The call sign of the sortie cleared with this diplomatic clearance.",
            "maxLength": 24,
            "type": "string",
            "example": "FALCN09"
          },
          "sequenceNum": {
            "format": "int32",
            "description": "The placement of this diplomatic clearance within a sequence of clearances used on a sortie. For example, a sequence value of 3 means that it is the third diplomatic clearance the aircraft will use.",
            "type": "integer",
            "example": 3
          },
          "countryCode": {
            "description": "The DoD Standard Country Code designator for the country issuing the diplomatic clearance. This field will be set to \"OTHR\" if the source value does not match a UDL Country code value (ISO-3166-ALPHA-2).",
            "maxLength": 4,
            "type": "string",
            "example": "NL"
          },
          "altCountryCode": {
            "description": "Specifies an alternate country code if the data provider code is not part of an official Country Code standard such as ISO-3166 or FIPS. This field will be set to the value provided by the source and should be used for all Queries specifying a Country Code.",
            "maxLength": 16,
            "type": "string",
            "example": "IZ"
          },
          "countryName": {
            "description": "Name of the country issuing this diplomatic clearance.",
            "maxLength": 50,
            "type": "string",
            "example": "NETHERLANDS"
          },
          "validDesc": {
            "description": "Description of when this diplomatic clearance is valid.",
            "maxLength": 256,
            "type": "string",
            "example": "CY2023"
          },
          "windowRemark": {
            "description": "Remarks concerning the valid diplomatic clearance window.",
            "maxLength": 256,
            "type": "string",
            "example": "Period remarks"
          },
          "entryPoint": {
            "description": "The navigation point name where the aircraft must enter the country.",
            "maxLength": 38,
            "type": "string",
            "example": "LOMOS"
          },
          "entryNET": {
            "format": "date-time",
            "description": "Earliest time the aircraft may enter the country, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "exitPoint": {
            "description": "The navigation point name where the aircraft must exit the country.",
            "maxLength": 38,
            "type": "string",
            "example": "BUDOP"
          },
          "exitNLT": {
            "format": "date-time",
            "description": "Latest time the aircraft may exit the country, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "reqICAO": {
            "description": "Flag indicating whether the clearance request requires ICAO specific information.",
            "type": "boolean",
            "example": true
          },
          "action": {
            "description": "The type of action the aircraft can take with this diplomatic clearance (e.g. O for Overfly, L for Land, etc.).",
            "maxLength": 1,
            "type": "string",
            "example": "O"
          },
          "status": {
            "description": "Indicates the current status of the diplomatic clearance request.",
            "maxLength": 16,
            "type": "string",
            "example": "IN WORK"
          },
          "profile": {
            "description": "The diplomatic clearance profile name used within clearance management systems.",
            "maxLength": 100,
            "type": "string",
            "example": "T LAND/OFLY IATA COMPLIANT CARGO 23"
          },
          "reqPoint": {
            "description": "Flag indicating whether entry/exit points are required for clearances.",
            "type": "boolean",
            "example": true
          },
          "clearanceRemark": {
            "description": "Remarks concerning this diplomatic clearance.",
            "maxLength": 1024,
            "type": "string",
            "example": "Clearance remarks"
          }
        }
      },
      "DiplomaticClearanceDetails_Full": {
        "description": "Collection of diplomatic clearance details.",
        "type": "object",
        "properties": {
          "idSortie": {
            "description": "Unique identifier of the Aircraft Sortie associated with this diplomatic clearance record.",
            "maxLength": 36,
            "type": "string",
            "example": "207010e0-f97d-431c-8c00-7e46acfef0f5"
          },
          "legNum": {
            "format": "int32",
            "description": "Identifies the Itinerary point of a sortie where an air event occurs.",
            "type": "integer",
            "example": 825
          },
          "routeString": {
            "description": "The 1801 fileable route of flight string associated with this diplomatic clearance. The route of flight string contains route designators, significant points, change of speed/altitude, change of flight rules, and cruise climbs.",
            "maxLength": 4000,
            "type": "string",
            "example": "DCT DOH P430 BAYAN/M062F150 P430 RAMKI"
          },
          "validStartTime": {
            "format": "date-time",
            "description": "The start time of the validity of this diplomatic clearance, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "validEndTime": {
            "format": "date-time",
            "description": "The end time of the validity of this diplomatic clearance, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "clearanceId": {
            "description": "Identifier of this diplomatic clearance issued by the host country.",
            "maxLength": 32,
            "type": "string",
            "example": "MFMW225662GHQ"
          },
          "externalClearanceId": {
            "description": "Optional clearance ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "aa714f4d52a37ab1a00b21af9566e379"
          },
          "clearedCallSign": {
            "description": "The call sign of the sortie cleared with this diplomatic clearance.",
            "maxLength": 24,
            "type": "string",
            "example": "FALCN09"
          },
          "sequenceNum": {
            "format": "int32",
            "description": "The placement of this diplomatic clearance within a sequence of clearances used on a sortie. For example, a sequence value of 3 means that it is the third diplomatic clearance the aircraft will use.",
            "type": "integer",
            "example": 3
          },
          "countryCode": {
            "description": "The DoD Standard Country Code designator for the country issuing the diplomatic clearance. This field will be set to \"OTHR\" if the source value does not match a UDL Country code value (ISO-3166-ALPHA-2).",
            "maxLength": 4,
            "type": "string",
            "example": "NL"
          },
          "altCountryCode": {
            "description": "Specifies an alternate country code if the data provider code is not part of an official Country Code standard such as ISO-3166 or FIPS. This field will be set to the value provided by the source and should be used for all Queries specifying a Country Code.",
            "maxLength": 16,
            "type": "string",
            "example": "IZ"
          },
          "countryName": {
            "description": "Name of the country issuing this diplomatic clearance.",
            "maxLength": 50,
            "type": "string",
            "example": "NETHERLANDS"
          },
          "validDesc": {
            "description": "Description of when this diplomatic clearance is valid.",
            "maxLength": 256,
            "type": "string",
            "example": "CY2023"
          },
          "windowRemark": {
            "description": "Remarks concerning the valid diplomatic clearance window.",
            "maxLength": 256,
            "type": "string",
            "example": "Period remarks"
          },
          "entryPoint": {
            "description": "The navigation point name where the aircraft must enter the country.",
            "maxLength": 38,
            "type": "string",
            "example": "LOMOS"
          },
          "entryNET": {
            "format": "date-time",
            "description": "Earliest time the aircraft may enter the country, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "exitPoint": {
            "description": "The navigation point name where the aircraft must exit the country.",
            "maxLength": 38,
            "type": "string",
            "example": "BUDOP"
          },
          "exitNLT": {
            "format": "date-time",
            "description": "Latest time the aircraft may exit the country, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "reqICAO": {
            "description": "Flag indicating whether the clearance request requires ICAO specific information.",
            "type": "boolean",
            "example": true
          },
          "action": {
            "description": "The type of action the aircraft can take with this diplomatic clearance (e.g. O for Overfly, L for Land, etc.).",
            "maxLength": 1,
            "type": "string",
            "example": "O"
          },
          "status": {
            "description": "Indicates the current status of the diplomatic clearance request.",
            "maxLength": 16,
            "type": "string",
            "example": "IN WORK"
          },
          "profile": {
            "description": "The diplomatic clearance profile name used within clearance management systems.",
            "maxLength": 100,
            "type": "string",
            "example": "T LAND/OFLY IATA COMPLIANT CARGO 23"
          },
          "reqPoint": {
            "description": "Flag indicating whether entry/exit points are required for clearances.",
            "type": "boolean",
            "example": true
          },
          "clearanceRemark": {
            "description": "Remarks concerning this diplomatic clearance.",
            "maxLength": 1024,
            "type": "string",
            "example": "Clearance remarks"
          }
        }
      },
      "DiplomaticClearanceDetails_Ingest": {
        "description": "Collection of diplomatic clearance details.",
        "type": "object",
        "properties": {
          "idSortie": {
            "description": "Unique identifier of the Aircraft Sortie associated with this diplomatic clearance record.",
            "maxLength": 36,
            "type": "string",
            "example": "207010e0-f97d-431c-8c00-7e46acfef0f5"
          },
          "legNum": {
            "format": "int32",
            "description": "Identifies the Itinerary point of a sortie where an air event occurs.",
            "type": "integer",
            "example": 825
          },
          "routeString": {
            "description": "The 1801 fileable route of flight string associated with this diplomatic clearance. The route of flight string contains route designators, significant points, change of speed/altitude, change of flight rules, and cruise climbs.",
            "maxLength": 4000,
            "type": "string",
            "example": "DCT DOH P430 BAYAN/M062F150 P430 RAMKI"
          },
          "validStartTime": {
            "format": "date-time",
            "description": "The start time of the validity of this diplomatic clearance, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "validEndTime": {
            "format": "date-time",
            "description": "The end time of the validity of this diplomatic clearance, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "clearanceId": {
            "description": "Identifier of this diplomatic clearance issued by the host country.",
            "maxLength": 32,
            "type": "string",
            "example": "MFMW225662GHQ"
          },
          "externalClearanceId": {
            "description": "Optional clearance ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "aa714f4d52a37ab1a00b21af9566e379"
          },
          "clearedCallSign": {
            "description": "The call sign of the sortie cleared with this diplomatic clearance.",
            "maxLength": 24,
            "type": "string",
            "example": "FALCN09"
          },
          "sequenceNum": {
            "format": "int32",
            "description": "The placement of this diplomatic clearance within a sequence of clearances used on a sortie. For example, a sequence value of 3 means that it is the third diplomatic clearance the aircraft will use.",
            "type": "integer",
            "example": 3
          },
          "countryCode": {
            "description": "The DoD Standard Country Code designator for the country issuing the diplomatic clearance. This field will be set to \"OTHR\" if the source value does not match a UDL Country code value (ISO-3166-ALPHA-2).",
            "maxLength": 4,
            "type": "string",
            "example": "NL"
          },
          "altCountryCode": {
            "description": "Specifies an alternate country code if the data provider code is not part of an official Country Code standard such as ISO-3166 or FIPS. This field will be set to the value provided by the source and should be used for all Queries specifying a Country Code.",
            "maxLength": 16,
            "type": "string",
            "example": "IZ"
          },
          "countryName": {
            "description": "Name of the country issuing this diplomatic clearance.",
            "maxLength": 50,
            "type": "string",
            "example": "NETHERLANDS"
          },
          "validDesc": {
            "description": "Description of when this diplomatic clearance is valid.",
            "maxLength": 256,
            "type": "string",
            "example": "CY2023"
          },
          "windowRemark": {
            "description": "Remarks concerning the valid diplomatic clearance window.",
            "maxLength": 256,
            "type": "string",
            "example": "Period remarks"
          },
          "entryPoint": {
            "description": "The navigation point name where the aircraft must enter the country.",
            "maxLength": 38,
            "type": "string",
            "example": "LOMOS"
          },
          "entryNET": {
            "format": "date-time",
            "description": "Earliest time the aircraft may enter the country, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "exitPoint": {
            "description": "The navigation point name where the aircraft must exit the country.",
            "maxLength": 38,
            "type": "string",
            "example": "BUDOP"
          },
          "exitNLT": {
            "format": "date-time",
            "description": "Latest time the aircraft may exit the country, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "reqICAO": {
            "description": "Flag indicating whether the clearance request requires ICAO specific information.",
            "type": "boolean",
            "example": true
          },
          "action": {
            "description": "The type of action the aircraft can take with this diplomatic clearance (e.g. O for Overfly, L for Land, etc.).",
            "maxLength": 1,
            "type": "string",
            "example": "O"
          },
          "status": {
            "description": "Indicates the current status of the diplomatic clearance request.",
            "maxLength": 16,
            "type": "string",
            "example": "IN WORK"
          },
          "profile": {
            "description": "The diplomatic clearance profile name used within clearance management systems.",
            "maxLength": 100,
            "type": "string",
            "example": "T LAND/OFLY IATA COMPLIANT CARGO 23"
          },
          "reqPoint": {
            "description": "Flag indicating whether entry/exit points are required for clearances.",
            "type": "boolean",
            "example": true
          },
          "clearanceRemark": {
            "description": "Remarks concerning this diplomatic clearance.",
            "maxLength": 1024,
            "type": "string",
            "example": "Clearance remarks"
          }
        }
      },
      "DiplomaticClearanceRemarks_Abridged": {
        "description": "Collection of diplomatic clearance remarks.",
        "type": "object",
        "properties": {
          "gdssRemarkId": {
            "description": "Global Decision Support System (GDSS) remark identifier.",
            "maxLength": 36,
            "type": "string",
            "example": "GDSSREMARK-ID"
          },
          "text": {
            "description": "Text of the remark.",
            "maxLength": 1024,
            "type": "string",
            "example": "Example mission remarks."
          },
          "date": {
            "format": "date-time",
            "description": "Date the remark was published, in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "user": {
            "description": "User who published the remark.",
            "maxLength": 20,
            "type": "string",
            "example": "John Doe"
          }
        }
      },
      "DiplomaticClearanceRemarks_Full": {
        "description": "Collection of diplomatic clearance remarks.",
        "type": "object",
        "properties": {
          "gdssRemarkId": {
            "description": "Global Decision Support System (GDSS) remark identifier.",
            "maxLength": 36,
            "type": "string",
            "example": "GDSSREMARK-ID"
          },
          "text": {
            "description": "Text of the remark.",
            "maxLength": 1024,
            "type": "string",
            "example": "Example mission remarks."
          },
          "date": {
            "format": "date-time",
            "description": "Date the remark was published, in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "user": {
            "description": "User who published the remark.",
            "maxLength": 20,
            "type": "string",
            "example": "John Doe"
          }
        }
      },
      "DiplomaticClearanceRemarks_Ingest": {
        "description": "Collection of diplomatic clearance remarks.",
        "type": "object",
        "properties": {
          "gdssRemarkId": {
            "description": "Global Decision Support System (GDSS) remark identifier.",
            "maxLength": 36,
            "type": "string",
            "example": "GDSSREMARK-ID"
          },
          "text": {
            "description": "Text of the remark.",
            "maxLength": 1024,
            "type": "string",
            "example": "Example mission remarks."
          },
          "date": {
            "format": "date-time",
            "description": "Date the remark was published, in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "user": {
            "description": "User who published the remark.",
            "maxLength": 20,
            "type": "string",
            "example": "John Doe"
          }
        }
      },
      "FlightPlan_Abridged": {
        "description": "Flight Plan contains data specifying the details of an intended flight including schedule and expected route.",
        "required": [
          "classificationMarking",
          "depAirfield",
          "arrAirfield",
          "genTS",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system if not provided on create operations.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "c44b0a80-9fef-63d9-6267-79037fb93e4c"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "amcMissionId": {
            "description": "Air Mobility Command (AMC) mission identifier according to Mobility Air Forces (MAF) encode/decode procedures.",
            "maxLength": 36,
            "type": "string",
            "example": "AJM7939B1123"
          },
          "idSortie": {
            "description": "The UDL unique identifier of the aircraft sortie associated with this flight plan.",
            "maxLength": 36,
            "type": "string",
            "example": "9d60c1b1-10b1-b2a7-e403-84c5d7eeb170"
          },
          "idAircraft": {
            "description": "The UDL unique identifier of the aircraft associated with this flight plan.",
            "maxLength": 36,
            "type": "string",
            "example": "4f4a67c6-40fd-11ee-be56-0242ac120002"
          },
          "legNum": {
            "format": "int32",
            "description": "The leg number of this flight plan.",
            "type": "integer",
            "example": 100
          },
          "idDepAirfield": {
            "description": "The UDL unique identifier of the departure airfield associated with this flight plan.",
            "maxLength": 36,
            "type": "string",
            "example": "2a9020f6-40fd-11ee-be56-0242ac120002"
          },
          "depAirfield": {
            "description": "The airfield identifier of the departure location, International Civil Aviation Organization (ICAO) code preferred.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "KSLV"
          },
          "idArrAirfield": {
            "description": "The UDL unique identifier of the arrival airfield associated with this flight plan.",
            "maxLength": 36,
            "type": "string",
            "example": "363080c2-40fd-11ee-be56-0242ac120002"
          },
          "arrAirfield": {
            "description": "The airfield identifier of the arrival location, International Civil Aviation Organization (ICAO) code preferred.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "KCHS"
          },
          "externalId": {
            "description": "The source ID of the flight plan from the generating system.",
            "maxLength": 36,
            "type": "string",
            "example": "AFMAPP20322347140001"
          },
          "genTS": {
            "format": "date-time",
            "description": "The generation time of this flight plan in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2023-05-01T01:01:01.123Z"
          },
          "aircraftMDS": {
            "description": "The aircraft Model Design Series (MDS) designation (e.g. E-2C HAWKEYE, F-15 EAGLE, KC-130 HERCULES, etc.) of the aircraft associated with this flight plan. Intended as, but not constrained to, MIL-STD-6016 environment dependent specific type designations.",
            "maxLength": 128,
            "type": "string",
            "example": "KC-130 HERCULES"
          },
          "tailNumber": {
            "description": "The tail number of the aircraft associated with this flight plan.",
            "maxLength": 16,
            "type": "string",
            "example": "77187"
          },
          "callSign": {
            "description": "The call sign assigned to the aircraft for this flight plan.",
            "maxLength": 8,
            "type": "string",
            "example": "HKY629"
          },
          "status": {
            "description": "Status of this flight plan (e.g., ACTIVE, APPROVED, PLANNED, etc.).",
            "maxLength": 16,
            "type": "string",
            "example": "APPROVED"
          },
          "wxValidStart": {
            "format": "date-time",
            "description": "The date and time the weather valid period begins in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2023-05-01T01:01:01.123Z"
          },
          "wxValidEnd": {
            "format": "date-time",
            "description": "The date and time the weather valid period ends in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2023-05-01T01:01:01.123Z"
          },
          "estDepTime": {
            "format": "date-time",
            "description": "The estimated time of departure for the aircraft, in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2023-05-01T01:01:01.123Z"
          },
          "dragIndex": {
            "format": "double",
            "description": "The percent degrade due to drag for this aircraft.",
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "example": 16.9
          },
          "fuelDegrade": {
            "format": "double",
            "description": "The fuel degrade percentage used for this mission.",
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "example": 10.3
          },
          "opWeight": {
            "format": "double",
            "description": "Operating weight of the aircraft in pounds.",
            "type": "number",
            "example": 251830.5
          },
          "msnIndex": {
            "format": "double",
            "description": "The mission index value for this mission. The mission index is the ratio of time-related cost of aircraft operation to the cost of fuel.",
            "type": "number",
            "example": 44.1
          },
          "rampFuel": {
            "format": "double",
            "description": "Total of all fuel required to complete the flight in pounds, including fuel to be dispensed on a refueling mission.",
            "type": "number",
            "example": 180000.1
          },
          "taxiFuel": {
            "format": "double",
            "description": "Fuel required to start engines and taxi to the end of the runway in pounds.",
            "type": "number",
            "example": 1500.1
          },
          "takeoffFuel": {
            "format": "double",
            "description": "Fuel at takeoff, which is calculated as the ramp fuel minus the taxi fuel in pounds.",
            "type": "number",
            "example": 178500.1
          },
          "climbFuel": {
            "format": "double",
            "description": "Fuel required from brake release to Top of Climb in pounds.",
            "type": "number",
            "example": 7000.1
          },
          "climbTime": {
            "description": "Time required from brake release to Top of Climb expressed as HH:MM.",
            "maxLength": 6,
            "type": "string",
            "example": "00:13"
          },
          "holdDownFuel": {
            "format": "double",
            "description": "Additional fuel burned at Top of Climb in pounds.",
            "type": "number",
            "example": 500.1
          },
          "tocIceFuel": {
            "format": "double",
            "description": "Additional fuel burned at Top of Climb for icing in pounds.",
            "type": "number",
            "example": 1000.1
          },
          "tocFuel": {
            "format": "double",
            "description": "Fuel remaining at Top of Climb in pounds.",
            "type": "number",
            "example": 160000.1
          },
          "enrouteFuel": {
            "format": "double",
            "description": "Fuel required to fly from Top of Climb to Top of Descent in pounds.",
            "type": "number",
            "example": 155000.1
          },
          "enrouteTime": {
            "description": "Time required to fly from Top of Climb to Top of Descent expressed as HH:MM.",
            "maxLength": 6,
            "type": "string",
            "example": "06:30"
          },
          "thunderAvoidFuel": {
            "format": "double",
            "description": "Additional fuel burned at Top of Descent for thunderstorm avoidance in pounds.",
            "type": "number",
            "example": 1000.1
          },
          "todIceFuel": {
            "format": "double",
            "description": "Additional fuel burned at Top of Descent for icing in pounds.",
            "type": "number",
            "example": 2000.1
          },
          "opConditionFuel": {
            "format": "double",
            "description": "Additional fuel burned at Top of Descent for the operational condition in pounds.",
            "type": "number",
            "example": 5000.1
          },
          "todFuel": {
            "format": "double",
            "description": "Fuel remaining at Top of Descent in pounds.",
            "type": "number",
            "example": 32000.1
          },
          "earlyDescentFuel": {
            "format": "double",
            "description": "Additional fuel burned at landing/missed approach for an early descent in pounds.",
            "type": "number",
            "example": 500.1
          },
          "arrIceFuel": {
            "format": "double",
            "description": "Additional fuel burned at landing/missed approach for icing during arrival in pounds.",
            "type": "number",
            "example": 1000.1
          },
          "holdFuel": {
            "format": "double",
            "description": "Additional fuel burned at the destination for holding in pounds.",
            "type": "number",
            "example": 6000.1
          },
          "holdTime": {
            "description": "Additional time for holding at the destination expressed as HH:MM.",
            "maxLength": 6,
            "type": "string",
            "example": "01:00"
          },
          "appLandingFuel": {
            "format": "double",
            "description": "Fuel burned from the initial approach point to landing in pounds.",
            "type": "number",
            "example": 3000.1
          },
          "burnedFuel": {
            "format": "double",
            "description": "Fuel planned to be burned during the flight in pounds.",
            "type": "number",
            "example": 145000.1
          },
          "landingFuel": {
            "format": "double",
            "description": "Fuel planned to be remaining on the airplane at landing in pounds.",
            "type": "number",
            "example": 19000.1
          },
          "minDivertFuel": {
            "format": "double",
            "description": "The minimum fuel on board required to divert in pounds.",
            "type": "number",
            "example": 25000.1
          },
          "arrAlternate1Fuel": {
            "format": "double",
            "description": "Fuel required to fly to alternate landing site 1 and land in pounds.",
            "type": "number",
            "example": 6000.1
          },
          "arrAlternate2Fuel": {
            "format": "double",
            "description": "Fuel required to fly to alternate landing site 2 and land in pounds.",
            "type": "number",
            "example": 6000.1
          },
          "contingencyFuel": {
            "format": "double",
            "description": "The amount of contingency fuel in pounds.",
            "type": "number",
            "example": 3000.1
          },
          "reserveFuel": {
            "format": "double",
            "description": "The amount of reserve fuel in pounds.",
            "type": "number",
            "example": 10000.1
          },
          "depressFuel": {
            "format": "double",
            "description": "The depressurization fuel required to fly from the Equal Time Point to the Last Suitable/First Suitable airfield at depressurization altitude in pounds.",
            "type": "number",
            "example": 20000.1
          },
          "unusableFuel": {
            "format": "double",
            "description": "The amount of unusable fuel in pounds.",
            "type": "number",
            "example": 2300.1
          },
          "unidentExtraFuel": {
            "format": "double",
            "description": "The amount of unidentified extra fuel required to get to min landing in pounds.",
            "type": "number",
            "example": 5000.1
          },
          "identExtraFuel": {
            "format": "double",
            "description": "The amount of identified extra fuel carried and not available in the burn plan in pounds.",
            "type": "number",
            "example": 5000.1
          },
          "remAlternate1Fuel": {
            "format": "double",
            "description": "Total fuel remaining at alternate landing site 1 in pounds.",
            "type": "number",
            "example": 18000.1
          },
          "remAlternate2Fuel": {
            "format": "double",
            "description": "Total fuel remaining at alternate landing site 2 in pounds.",
            "type": "number",
            "example": 18000.1
          },
          "enduranceTime": {
            "description": "Total endurance time based on the fuel on board expressed as HH:MM.",
            "maxLength": 6,
            "type": "string",
            "example": "08:45"
          },
          "sid": {
            "description": "Name of the planned Standard Instrument Departure (SID) procedure.",
            "maxLength": 32,
            "type": "string",
            "example": "RENV3B"
          },
          "star": {
            "description": "Name of the planned Standard Terminal Arrival (STAR) procedure.",
            "maxLength": 32,
            "type": "string",
            "example": "ADANA"
          },
          "gpsRAIM": {
            "description": "The GPS Receiver Autonomous Integrity Monitoring (RAIM) message. A RAIM system assesses the integrity of the GPS signals. This system predicts outages for a specified geographical area. These predictions are based on the location, path, and scheduled GPS satellite outages.",
            "maxLength": 128,
            "type": "string",
            "example": "Failed by FAA SAPT 184022AUG2022"
          },
          "depRunway": {
            "description": "The departure runway for this flight.",
            "maxLength": 8,
            "type": "string",
            "example": "05L"
          },
          "arrRunway": {
            "description": "The arrival runway for this flight.",
            "maxLength": 8,
            "type": "string",
            "example": "05L"
          },
          "routeString": {
            "description": "The 1801 fileable route of flight string for this flight. The route of flight string contains route designators, significant points, change of speed/altitude, change of flight rules, and cruise climbs.",
            "maxLength": 1024,
            "type": "string",
            "example": "RENV3B RENVI Y86 GOSVA/N0317F260 DCT EVLIT DCT UMUGI DCT NISIX DCT GIGOD DCT DIPEB DCT\nGORPI Z80 TILAV L87 RAKIT Z717 PODUS Z130 MAG/N0298F220 Z20 KENIG/N0319F220 Z20 ORTAG T177\nESEGU Z20 BEBLA DCT MASEK/N0300F200 DCT GISEM/N0319F200 DCT BOMBI/N0276F060 DCT RIDSU DCT"
          },
          "countryCodes": {
            "description": "Array of country codes for the countries overflown during this flight in ISO 3166-1 Alpha-2 format.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "US",
              "CA",
              "UK"
            ]
          },
          "etopsRating": {
            "description": "The Extended Operations (ETOPS) rating used to calculate this flight plan.",
            "maxLength": 16,
            "type": "string",
            "example": "85 MINUTES"
          },
          "etopsAirfields": {
            "description": "Array of Extended Operations (ETOPS) adequate landing airfields that are within the mission region.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "KHSV",
              "KISP",
              "KBG",
              "LTBS"
            ]
          },
          "etopsAltAirfields": {
            "description": "Array of Extended Operations (ETOPS) alternate suitable landing airfields that are within the mission region.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "KHSV",
              "KISP",
              "KBG",
              "LTBS"
            ]
          },
          "etopsValWindow": {
            "description": "The Extended Operations (ETOPS) validity window for the alternate airfield.",
            "maxLength": 64,
            "type": "string",
            "example": "LPLA: 0317Z-0722Z"
          },
          "plannerRemark": {
            "description": "Remarks from the planners concerning this flight plan.",
            "maxLength": 512,
            "type": "string",
            "example": "Flight plan is good for 2 days before airspace closes over the UK."
          },
          "cargoRemark": {
            "description": "Remarks about the planned cargo associated with this flight plan.",
            "maxLength": 512,
            "type": "string",
            "example": "Expecting 55,000 lbs. If different, call us."
          },
          "windFac1": {
            "format": "double",
            "description": "Wind factor for the first half of the route. This is the average wind factor from first Top of Climb to the mid-time of the entire route in knots. A positive value indicates a headwind, while a negative value indicates a tailwind.",
            "type": "number",
            "example": -1.1
          },
          "windFac2": {
            "format": "double",
            "description": "Wind factor for the second half of the route. This is the average wind factor from the mid-time of the entire route to last Top of Descent in knots. A positive value indicates a headwind, while a negative value indicates a tailwind.",
            "type": "number",
            "example": 10.1
          },
          "windFacAvg": {
            "format": "double",
            "description": "Average wind factor from Top of Climb to Top of Descent in knots. A positive value indicates a headwind, while a negative value indicates a tailwind.",
            "type": "number",
            "example": 5.1
          },
          "avgTempDev": {
            "format": "double",
            "description": "Average temperature deviation of the primary, divert, and alternate path for the route between first Top of Climb and last Top of Descent in degrees Celsius.",
            "type": "number",
            "example": 16.1
          },
          "atcAddresses": {
            "description": "Array of Air Traffic Control (ATC) addresses.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "EYCBZMFO",
              "EUCHZMFP",
              "ETARYXYX",
              "EDUUZVZI"
            ]
          },
          "originator": {
            "description": "Air Traffic Control address filing the flight plan.",
            "maxLength": 24,
            "type": "string",
            "example": "ETARYXYX"
          },
          "numAircraft": {
            "format": "int32",
            "description": "The number of aircraft flying this flight plan.",
            "type": "integer",
            "example": 1
          },
          "flightRules": {
            "description": "The flight rules this flight plan is being filed under.",
            "maxLength": 8,
            "type": "string",
            "example": "l"
          },
          "flightType": {
            "description": "The type of flight (MILITARY, CIVILIAN, etc).",
            "maxLength": 16,
            "type": "string",
            "example": "MILITARY"
          },
          "initialCruiseSpeed": {
            "description": "A character string representation of the initial filed cruise speed for this flight (prepended values of K, N, and M represent kilometers per hour, knots, and Mach, respectively).",
            "maxLength": 8,
            "type": "string",
            "example": "N0305"
          },
          "initialFlightLevel": {
            "description": "A character string representation of the initial filed altitude level for this flight (prepended values of F, S, A, and M represent flight level in hundreds of feet, standard metric level in tens of meters, altitude in hundreds of feet, and altitude in tens of meters, respectively).",
            "maxLength": 8,
            "type": "string",
            "example": "F270"
          },
          "arrAlternate1": {
            "description": "The first designated alternate arrival airfield, International Civil Aviation Organization (ICAO) code preferred.",
            "maxLength": 36,
            "type": "string",
            "example": "EDDS"
          },
          "arrAlternate2": {
            "description": "The second designated alternate arrival airfield, International Civil Aviation Organization (ICAO) code preferred.",
            "maxLength": 36,
            "type": "string",
            "example": "EDDM"
          },
          "depAlternate": {
            "description": "The designated alternate departure airfield, International Civil Aviation Organization (ICAO) code preferred.",
            "maxLength": 36,
            "type": "string",
            "example": "LFPO"
          },
          "wakeTurbCat": {
            "description": "The wake turbulence category for this flight. The categories are assigned by the International Civil Aviation Organization (ICAO) and are based on maximum certified takeoff mass for the purpose of separating aircraft in flight due to wake turbulence. Valid values include LIGHT, MEDIUM, LARGE, HEAVY, and SUPER.",
            "maxLength": 8,
            "type": "string",
            "example": "MEDIUM"
          },
          "equipment": {
            "description": "The list of equipment on the aircraft as defined in the Flight Information Publications (FLIP) General Planning (GP) manual.",
            "maxLength": 36,
            "type": "string",
            "example": "SDFGHIRTUWXYZ/H"
          },
          "notes": {
            "description": "Additional remarks for air traffic control for this flight.",
            "maxLength": 64,
            "type": "string",
            "example": "STS/STATE PBN/A1B2B5C2C4D2D4 EUR/PROTECTED"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "airRefuelEvents": {
            "description": "Collection of air refueling events occurring on this flight.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlightPlanAirRefuelEvents_Abridged"
            }
          },
          "flightPlanMessages": {
            "description": "Collection of messages associated with this flight plan indicating the severity, the point where the message was generated, the path (Primary, Alternate, etc.), and the text of the message.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlightPlanMessages_Abridged"
            }
          },
          "flightPlanWaypoints": {
            "description": "Collection of waypoints associated with this flight plan.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlightPlanWaypoints_Abridged"
            }
          },
          "flightPlanPointGroups": {
            "description": "Collection of point groups generated for this flight plan. Groups include point sets for Extended Operations (ETOPS), Critical Fuel Point, and Equal Time Point (ETP).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlightPlanPointGroups_Abridged"
            }
          }
        }
      },
      "FlightPlan_Full": {
        "description": "Flight Plan contains data specifying the details of an intended flight including schedule and expected route.",
        "required": [
          "classificationMarking",
          "depAirfield",
          "arrAirfield",
          "genTS",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system if not provided on create operations.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "c44b0a80-9fef-63d9-6267-79037fb93e4c"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "amcMissionId": {
            "description": "Air Mobility Command (AMC) mission identifier according to Mobility Air Forces (MAF) encode/decode procedures.",
            "maxLength": 36,
            "type": "string",
            "example": "AJM7939B1123"
          },
          "idSortie": {
            "description": "The UDL unique identifier of the aircraft sortie associated with this flight plan.",
            "maxLength": 36,
            "type": "string",
            "example": "9d60c1b1-10b1-b2a7-e403-84c5d7eeb170"
          },
          "idAircraft": {
            "description": "The UDL unique identifier of the aircraft associated with this flight plan.",
            "maxLength": 36,
            "type": "string",
            "example": "4f4a67c6-40fd-11ee-be56-0242ac120002"
          },
          "legNum": {
            "format": "int32",
            "description": "The leg number of this flight plan.",
            "type": "integer",
            "example": 100
          },
          "idDepAirfield": {
            "description": "The UDL unique identifier of the departure airfield associated with this flight plan.",
            "maxLength": 36,
            "type": "string",
            "example": "2a9020f6-40fd-11ee-be56-0242ac120002"
          },
          "depAirfield": {
            "description": "The airfield identifier of the departure location, International Civil Aviation Organization (ICAO) code preferred.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "KSLV"
          },
          "idArrAirfield": {
            "description": "The UDL unique identifier of the arrival airfield associated with this flight plan.",
            "maxLength": 36,
            "type": "string",
            "example": "363080c2-40fd-11ee-be56-0242ac120002"
          },
          "arrAirfield": {
            "description": "The airfield identifier of the arrival location, International Civil Aviation Organization (ICAO) code preferred.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "KCHS"
          },
          "externalId": {
            "description": "The source ID of the flight plan from the generating system.",
            "maxLength": 36,
            "type": "string",
            "example": "AFMAPP20322347140001"
          },
          "genTS": {
            "format": "date-time",
            "description": "The generation time of this flight plan in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2023-05-01T01:01:01.123Z"
          },
          "aircraftMDS": {
            "description": "The aircraft Model Design Series (MDS) designation (e.g. E-2C HAWKEYE, F-15 EAGLE, KC-130 HERCULES, etc.) of the aircraft associated with this flight plan. Intended as, but not constrained to, MIL-STD-6016 environment dependent specific type designations.",
            "maxLength": 128,
            "type": "string",
            "example": "KC-130 HERCULES"
          },
          "tailNumber": {
            "description": "The tail number of the aircraft associated with this flight plan.",
            "maxLength": 16,
            "type": "string",
            "example": "77187"
          },
          "callSign": {
            "description": "The call sign assigned to the aircraft for this flight plan.",
            "maxLength": 8,
            "type": "string",
            "example": "HKY629"
          },
          "status": {
            "description": "Status of this flight plan (e.g., ACTIVE, APPROVED, PLANNED, etc.).",
            "maxLength": 16,
            "type": "string",
            "example": "APPROVED"
          },
          "wxValidStart": {
            "format": "date-time",
            "description": "The date and time the weather valid period begins in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2023-05-01T01:01:01.123Z"
          },
          "wxValidEnd": {
            "format": "date-time",
            "description": "The date and time the weather valid period ends in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2023-05-01T01:01:01.123Z"
          },
          "estDepTime": {
            "format": "date-time",
            "description": "The estimated time of departure for the aircraft, in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2023-05-01T01:01:01.123Z"
          },
          "dragIndex": {
            "format": "double",
            "description": "The percent degrade due to drag for this aircraft.",
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "example": 16.9
          },
          "fuelDegrade": {
            "format": "double",
            "description": "The fuel degrade percentage used for this mission.",
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "example": 10.3
          },
          "opWeight": {
            "format": "double",
            "description": "Operating weight of the aircraft in pounds.",
            "type": "number",
            "example": 251830.5
          },
          "msnIndex": {
            "format": "double",
            "description": "The mission index value for this mission. The mission index is the ratio of time-related cost of aircraft operation to the cost of fuel.",
            "type": "number",
            "example": 44.1
          },
          "rampFuel": {
            "format": "double",
            "description": "Total of all fuel required to complete the flight in pounds, including fuel to be dispensed on a refueling mission.",
            "type": "number",
            "example": 180000.1
          },
          "taxiFuel": {
            "format": "double",
            "description": "Fuel required to start engines and taxi to the end of the runway in pounds.",
            "type": "number",
            "example": 1500.1
          },
          "takeoffFuel": {
            "format": "double",
            "description": "Fuel at takeoff, which is calculated as the ramp fuel minus the taxi fuel in pounds.",
            "type": "number",
            "example": 178500.1
          },
          "climbFuel": {
            "format": "double",
            "description": "Fuel required from brake release to Top of Climb in pounds.",
            "type": "number",
            "example": 7000.1
          },
          "climbTime": {
            "description": "Time required from brake release to Top of Climb expressed as HH:MM.",
            "maxLength": 6,
            "type": "string",
            "example": "00:13"
          },
          "holdDownFuel": {
            "format": "double",
            "description": "Additional fuel burned at Top of Climb in pounds.",
            "type": "number",
            "example": 500.1
          },
          "tocIceFuel": {
            "format": "double",
            "description": "Additional fuel burned at Top of Climb for icing in pounds.",
            "type": "number",
            "example": 1000.1
          },
          "tocFuel": {
            "format": "double",
            "description": "Fuel remaining at Top of Climb in pounds.",
            "type": "number",
            "example": 160000.1
          },
          "enrouteFuel": {
            "format": "double",
            "description": "Fuel required to fly from Top of Climb to Top of Descent in pounds.",
            "type": "number",
            "example": 155000.1
          },
          "enrouteTime": {
            "description": "Time required to fly from Top of Climb to Top of Descent expressed as HH:MM.",
            "maxLength": 6,
            "type": "string",
            "example": "06:30"
          },
          "thunderAvoidFuel": {
            "format": "double",
            "description": "Additional fuel burned at Top of Descent for thunderstorm avoidance in pounds.",
            "type": "number",
            "example": 1000.1
          },
          "todIceFuel": {
            "format": "double",
            "description": "Additional fuel burned at Top of Descent for icing in pounds.",
            "type": "number",
            "example": 2000.1
          },
          "opConditionFuel": {
            "format": "double",
            "description": "Additional fuel burned at Top of Descent for the operational condition in pounds.",
            "type": "number",
            "example": 5000.1
          },
          "todFuel": {
            "format": "double",
            "description": "Fuel remaining at Top of Descent in pounds.",
            "type": "number",
            "example": 32000.1
          },
          "earlyDescentFuel": {
            "format": "double",
            "description": "Additional fuel burned at landing/missed approach for an early descent in pounds.",
            "type": "number",
            "example": 500.1
          },
          "arrIceFuel": {
            "format": "double",
            "description": "Additional fuel burned at landing/missed approach for icing during arrival in pounds.",
            "type": "number",
            "example": 1000.1
          },
          "holdFuel": {
            "format": "double",
            "description": "Additional fuel burned at the destination for holding in pounds.",
            "type": "number",
            "example": 6000.1
          },
          "holdTime": {
            "description": "Additional time for holding at the destination expressed as HH:MM.",
            "maxLength": 6,
            "type": "string",
            "example": "01:00"
          },
          "appLandingFuel": {
            "format": "double",
            "description": "Fuel burned from the initial approach point to landing in pounds.",
            "type": "number",
            "example": 3000.1
          },
          "burnedFuel": {
            "format": "double",
            "description": "Fuel planned to be burned during the flight in pounds.",
            "type": "number",
            "example": 145000.1
          },
          "landingFuel": {
            "format": "double",
            "description": "Fuel planned to be remaining on the airplane at landing in pounds.",
            "type": "number",
            "example": 19000.1
          },
          "minDivertFuel": {
            "format": "double",
            "description": "The minimum fuel on board required to divert in pounds.",
            "type": "number",
            "example": 25000.1
          },
          "arrAlternate1Fuel": {
            "format": "double",
            "description": "Fuel required to fly to alternate landing site 1 and land in pounds.",
            "type": "number",
            "example": 6000.1
          },
          "arrAlternate2Fuel": {
            "format": "double",
            "description": "Fuel required to fly to alternate landing site 2 and land in pounds.",
            "type": "number",
            "example": 6000.1
          },
          "contingencyFuel": {
            "format": "double",
            "description": "The amount of contingency fuel in pounds.",
            "type": "number",
            "example": 3000.1
          },
          "reserveFuel": {
            "format": "double",
            "description": "The amount of reserve fuel in pounds.",
            "type": "number",
            "example": 10000.1
          },
          "depressFuel": {
            "format": "double",
            "description": "The depressurization fuel required to fly from the Equal Time Point to the Last Suitable/First Suitable airfield at depressurization altitude in pounds.",
            "type": "number",
            "example": 20000.1
          },
          "unusableFuel": {
            "format": "double",
            "description": "The amount of unusable fuel in pounds.",
            "type": "number",
            "example": 2300.1
          },
          "unidentExtraFuel": {
            "format": "double",
            "description": "The amount of unidentified extra fuel required to get to min landing in pounds.",
            "type": "number",
            "example": 5000.1
          },
          "identExtraFuel": {
            "format": "double",
            "description": "The amount of identified extra fuel carried and not available in the burn plan in pounds.",
            "type": "number",
            "example": 5000.1
          },
          "remAlternate1Fuel": {
            "format": "double",
            "description": "Total fuel remaining at alternate landing site 1 in pounds.",
            "type": "number",
            "example": 18000.1
          },
          "remAlternate2Fuel": {
            "format": "double",
            "description": "Total fuel remaining at alternate landing site 2 in pounds.",
            "type": "number",
            "example": 18000.1
          },
          "enduranceTime": {
            "description": "Total endurance time based on the fuel on board expressed as HH:MM.",
            "maxLength": 6,
            "type": "string",
            "example": "08:45"
          },
          "sid": {
            "description": "Name of the planned Standard Instrument Departure (SID) procedure.",
            "maxLength": 32,
            "type": "string",
            "example": "RENV3B"
          },
          "star": {
            "description": "Name of the planned Standard Terminal Arrival (STAR) procedure.",
            "maxLength": 32,
            "type": "string",
            "example": "ADANA"
          },
          "gpsRAIM": {
            "description": "The GPS Receiver Autonomous Integrity Monitoring (RAIM) message. A RAIM system assesses the integrity of the GPS signals. This system predicts outages for a specified geographical area. These predictions are based on the location, path, and scheduled GPS satellite outages.",
            "maxLength": 128,
            "type": "string",
            "example": "Failed by FAA SAPT 184022AUG2022"
          },
          "depRunway": {
            "description": "The departure runway for this flight.",
            "maxLength": 8,
            "type": "string",
            "example": "05L"
          },
          "arrRunway": {
            "description": "The arrival runway for this flight.",
            "maxLength": 8,
            "type": "string",
            "example": "05L"
          },
          "routeString": {
            "description": "The 1801 fileable route of flight string for this flight. The route of flight string contains route designators, significant points, change of speed/altitude, change of flight rules, and cruise climbs.",
            "maxLength": 1024,
            "type": "string",
            "example": "RENV3B RENVI Y86 GOSVA/N0317F260 DCT EVLIT DCT UMUGI DCT NISIX DCT GIGOD DCT DIPEB DCT\nGORPI Z80 TILAV L87 RAKIT Z717 PODUS Z130 MAG/N0298F220 Z20 KENIG/N0319F220 Z20 ORTAG T177\nESEGU Z20 BEBLA DCT MASEK/N0300F200 DCT GISEM/N0319F200 DCT BOMBI/N0276F060 DCT RIDSU DCT"
          },
          "countryCodes": {
            "description": "Array of country codes for the countries overflown during this flight in ISO 3166-1 Alpha-2 format.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "US",
              "CA",
              "UK"
            ]
          },
          "etopsRating": {
            "description": "The Extended Operations (ETOPS) rating used to calculate this flight plan.",
            "maxLength": 16,
            "type": "string",
            "example": "85 MINUTES"
          },
          "etopsAirfields": {
            "description": "Array of Extended Operations (ETOPS) adequate landing airfields that are within the mission region.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "KHSV",
              "KISP",
              "KBG",
              "LTBS"
            ]
          },
          "etopsAltAirfields": {
            "description": "Array of Extended Operations (ETOPS) alternate suitable landing airfields that are within the mission region.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "KHSV",
              "KISP",
              "KBG",
              "LTBS"
            ]
          },
          "etopsValWindow": {
            "description": "The Extended Operations (ETOPS) validity window for the alternate airfield.",
            "maxLength": 64,
            "type": "string",
            "example": "LPLA: 0317Z-0722Z"
          },
          "plannerRemark": {
            "description": "Remarks from the planners concerning this flight plan.",
            "maxLength": 512,
            "type": "string",
            "example": "Flight plan is good for 2 days before airspace closes over the UK."
          },
          "cargoRemark": {
            "description": "Remarks about the planned cargo associated with this flight plan.",
            "maxLength": 512,
            "type": "string",
            "example": "Expecting 55,000 lbs. If different, call us."
          },
          "windFac1": {
            "format": "double",
            "description": "Wind factor for the first half of the route. This is the average wind factor from first Top of Climb to the mid-time of the entire route in knots. A positive value indicates a headwind, while a negative value indicates a tailwind.",
            "type": "number",
            "example": -1.1
          },
          "windFac2": {
            "format": "double",
            "description": "Wind factor for the second half of the route. This is the average wind factor from the mid-time of the entire route to last Top of Descent in knots. A positive value indicates a headwind, while a negative value indicates a tailwind.",
            "type": "number",
            "example": 10.1
          },
          "windFacAvg": {
            "format": "double",
            "description": "Average wind factor from Top of Climb to Top of Descent in knots. A positive value indicates a headwind, while a negative value indicates a tailwind.",
            "type": "number",
            "example": 5.1
          },
          "avgTempDev": {
            "format": "double",
            "description": "Average temperature deviation of the primary, divert, and alternate path for the route between first Top of Climb and last Top of Descent in degrees Celsius.",
            "type": "number",
            "example": 16.1
          },
          "atcAddresses": {
            "description": "Array of Air Traffic Control (ATC) addresses.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "EYCBZMFO",
              "EUCHZMFP",
              "ETARYXYX",
              "EDUUZVZI"
            ]
          },
          "originator": {
            "description": "Air Traffic Control address filing the flight plan.",
            "maxLength": 24,
            "type": "string",
            "example": "ETARYXYX"
          },
          "numAircraft": {
            "format": "int32",
            "description": "The number of aircraft flying this flight plan.",
            "type": "integer",
            "example": 1
          },
          "flightRules": {
            "description": "The flight rules this flight plan is being filed under.",
            "maxLength": 8,
            "type": "string",
            "example": "l"
          },
          "flightType": {
            "description": "The type of flight (MILITARY, CIVILIAN, etc).",
            "maxLength": 16,
            "type": "string",
            "example": "MILITARY"
          },
          "initialCruiseSpeed": {
            "description": "A character string representation of the initial filed cruise speed for this flight (prepended values of K, N, and M represent kilometers per hour, knots, and Mach, respectively).",
            "maxLength": 8,
            "type": "string",
            "example": "N0305"
          },
          "initialFlightLevel": {
            "description": "A character string representation of the initial filed altitude level for this flight (prepended values of F, S, A, and M represent flight level in hundreds of feet, standard metric level in tens of meters, altitude in hundreds of feet, and altitude in tens of meters, respectively).",
            "maxLength": 8,
            "type": "string",
            "example": "F270"
          },
          "arrAlternate1": {
            "description": "The first designated alternate arrival airfield, International Civil Aviation Organization (ICAO) code preferred.",
            "maxLength": 36,
            "type": "string",
            "example": "EDDS"
          },
          "arrAlternate2": {
            "description": "The second designated alternate arrival airfield, International Civil Aviation Organization (ICAO) code preferred.",
            "maxLength": 36,
            "type": "string",
            "example": "EDDM"
          },
          "depAlternate": {
            "description": "The designated alternate departure airfield, International Civil Aviation Organization (ICAO) code preferred.",
            "maxLength": 36,
            "type": "string",
            "example": "LFPO"
          },
          "wakeTurbCat": {
            "description": "The wake turbulence category for this flight. The categories are assigned by the International Civil Aviation Organization (ICAO) and are based on maximum certified takeoff mass for the purpose of separating aircraft in flight due to wake turbulence. Valid values include LIGHT, MEDIUM, LARGE, HEAVY, and SUPER.",
            "maxLength": 8,
            "type": "string",
            "example": "MEDIUM"
          },
          "equipment": {
            "description": "The list of equipment on the aircraft as defined in the Flight Information Publications (FLIP) General Planning (GP) manual.",
            "maxLength": 36,
            "type": "string",
            "example": "SDFGHIRTUWXYZ/H"
          },
          "notes": {
            "description": "Additional remarks for air traffic control for this flight.",
            "maxLength": 64,
            "type": "string",
            "example": "STS/STATE PBN/A1B2B5C2C4D2D4 EUR/PROTECTED"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "airRefuelEvents": {
            "description": "Collection of air refueling events occurring on this flight.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlightPlanAirRefuelEvents_Full"
            }
          },
          "flightPlanMessages": {
            "description": "Collection of messages associated with this flight plan indicating the severity, the point where the message was generated, the path (Primary, Alternate, etc.), and the text of the message.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlightPlanMessages_Full"
            }
          },
          "flightPlanWaypoints": {
            "description": "Collection of waypoints associated with this flight plan.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlightPlanWaypoints_Full"
            }
          },
          "flightPlanPointGroups": {
            "description": "Collection of point groups generated for this flight plan. Groups include point sets for Extended Operations (ETOPS), Critical Fuel Point, and Equal Time Point (ETP).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlightPlanPointGroups_Full"
            }
          }
        }
      },
      "FlightPlan_Ingest": {
        "description": "Flight Plan contains data specifying the details of an intended flight including schedule and expected route.",
        "required": [
          "classificationMarking",
          "depAirfield",
          "arrAirfield",
          "genTS",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system if not provided on create operations.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "c44b0a80-9fef-63d9-6267-79037fb93e4c"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "amcMissionId": {
            "description": "Air Mobility Command (AMC) mission identifier according to Mobility Air Forces (MAF) encode/decode procedures.",
            "maxLength": 36,
            "type": "string",
            "example": "AJM7939B1123"
          },
          "idSortie": {
            "description": "The UDL unique identifier of the aircraft sortie associated with this flight plan.",
            "maxLength": 36,
            "type": "string",
            "example": "9d60c1b1-10b1-b2a7-e403-84c5d7eeb170"
          },
          "idAircraft": {
            "description": "The UDL unique identifier of the aircraft associated with this flight plan.",
            "maxLength": 36,
            "type": "string",
            "example": "4f4a67c6-40fd-11ee-be56-0242ac120002"
          },
          "legNum": {
            "format": "int32",
            "description": "The leg number of this flight plan.",
            "type": "integer",
            "example": 100
          },
          "idDepAirfield": {
            "description": "The UDL unique identifier of the departure airfield associated with this flight plan.",
            "maxLength": 36,
            "type": "string",
            "example": "2a9020f6-40fd-11ee-be56-0242ac120002"
          },
          "depAirfield": {
            "description": "The airfield identifier of the departure location, International Civil Aviation Organization (ICAO) code preferred.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "KSLV"
          },
          "idArrAirfield": {
            "description": "The UDL unique identifier of the arrival airfield associated with this flight plan.",
            "maxLength": 36,
            "type": "string",
            "example": "363080c2-40fd-11ee-be56-0242ac120002"
          },
          "arrAirfield": {
            "description": "The airfield identifier of the arrival location, International Civil Aviation Organization (ICAO) code preferred.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "KCHS"
          },
          "externalId": {
            "description": "The source ID of the flight plan from the generating system.",
            "maxLength": 36,
            "type": "string",
            "example": "AFMAPP20322347140001"
          },
          "genTS": {
            "format": "date-time",
            "description": "The generation time of this flight plan in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2023-05-01T01:01:01.123Z"
          },
          "aircraftMDS": {
            "description": "The aircraft Model Design Series (MDS) designation (e.g. E-2C HAWKEYE, F-15 EAGLE, KC-130 HERCULES, etc.) of the aircraft associated with this flight plan. Intended as, but not constrained to, MIL-STD-6016 environment dependent specific type designations.",
            "maxLength": 128,
            "type": "string",
            "example": "KC-130 HERCULES"
          },
          "tailNumber": {
            "description": "The tail number of the aircraft associated with this flight plan.",
            "maxLength": 16,
            "type": "string",
            "example": "77187"
          },
          "callSign": {
            "description": "The call sign assigned to the aircraft for this flight plan.",
            "maxLength": 8,
            "type": "string",
            "example": "HKY629"
          },
          "status": {
            "description": "Status of this flight plan (e.g., ACTIVE, APPROVED, PLANNED, etc.).",
            "maxLength": 16,
            "type": "string",
            "example": "APPROVED"
          },
          "wxValidStart": {
            "format": "date-time",
            "description": "The date and time the weather valid period begins in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2023-05-01T01:01:01.123Z"
          },
          "wxValidEnd": {
            "format": "date-time",
            "description": "The date and time the weather valid period ends in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2023-05-01T01:01:01.123Z"
          },
          "estDepTime": {
            "format": "date-time",
            "description": "The estimated time of departure for the aircraft, in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2023-05-01T01:01:01.123Z"
          },
          "dragIndex": {
            "format": "double",
            "description": "The percent degrade due to drag for this aircraft.",
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "example": 16.9
          },
          "fuelDegrade": {
            "format": "double",
            "description": "The fuel degrade percentage used for this mission.",
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "example": 10.3
          },
          "opWeight": {
            "format": "double",
            "description": "Operating weight of the aircraft in pounds.",
            "type": "number",
            "example": 251830.5
          },
          "msnIndex": {
            "format": "double",
            "description": "The mission index value for this mission. The mission index is the ratio of time-related cost of aircraft operation to the cost of fuel.",
            "type": "number",
            "example": 44.1
          },
          "rampFuel": {
            "format": "double",
            "description": "Total of all fuel required to complete the flight in pounds, including fuel to be dispensed on a refueling mission.",
            "type": "number",
            "example": 180000.1
          },
          "taxiFuel": {
            "format": "double",
            "description": "Fuel required to start engines and taxi to the end of the runway in pounds.",
            "type": "number",
            "example": 1500.1
          },
          "takeoffFuel": {
            "format": "double",
            "description": "Fuel at takeoff, which is calculated as the ramp fuel minus the taxi fuel in pounds.",
            "type": "number",
            "example": 178500.1
          },
          "climbFuel": {
            "format": "double",
            "description": "Fuel required from brake release to Top of Climb in pounds.",
            "type": "number",
            "example": 7000.1
          },
          "climbTime": {
            "description": "Time required from brake release to Top of Climb expressed as HH:MM.",
            "maxLength": 6,
            "type": "string",
            "example": "00:13"
          },
          "holdDownFuel": {
            "format": "double",
            "description": "Additional fuel burned at Top of Climb in pounds.",
            "type": "number",
            "example": 500.1
          },
          "tocIceFuel": {
            "format": "double",
            "description": "Additional fuel burned at Top of Climb for icing in pounds.",
            "type": "number",
            "example": 1000.1
          },
          "tocFuel": {
            "format": "double",
            "description": "Fuel remaining at Top of Climb in pounds.",
            "type": "number",
            "example": 160000.1
          },
          "enrouteFuel": {
            "format": "double",
            "description": "Fuel required to fly from Top of Climb to Top of Descent in pounds.",
            "type": "number",
            "example": 155000.1
          },
          "enrouteTime": {
            "description": "Time required to fly from Top of Climb to Top of Descent expressed as HH:MM.",
            "maxLength": 6,
            "type": "string",
            "example": "06:30"
          },
          "thunderAvoidFuel": {
            "format": "double",
            "description": "Additional fuel burned at Top of Descent for thunderstorm avoidance in pounds.",
            "type": "number",
            "example": 1000.1
          },
          "todIceFuel": {
            "format": "double",
            "description": "Additional fuel burned at Top of Descent for icing in pounds.",
            "type": "number",
            "example": 2000.1
          },
          "opConditionFuel": {
            "format": "double",
            "description": "Additional fuel burned at Top of Descent for the operational condition in pounds.",
            "type": "number",
            "example": 5000.1
          },
          "todFuel": {
            "format": "double",
            "description": "Fuel remaining at Top of Descent in pounds.",
            "type": "number",
            "example": 32000.1
          },
          "earlyDescentFuel": {
            "format": "double",
            "description": "Additional fuel burned at landing/missed approach for an early descent in pounds.",
            "type": "number",
            "example": 500.1
          },
          "arrIceFuel": {
            "format": "double",
            "description": "Additional fuel burned at landing/missed approach for icing during arrival in pounds.",
            "type": "number",
            "example": 1000.1
          },
          "holdFuel": {
            "format": "double",
            "description": "Additional fuel burned at the destination for holding in pounds.",
            "type": "number",
            "example": 6000.1
          },
          "holdTime": {
            "description": "Additional time for holding at the destination expressed as HH:MM.",
            "maxLength": 6,
            "type": "string",
            "example": "01:00"
          },
          "appLandingFuel": {
            "format": "double",
            "description": "Fuel burned from the initial approach point to landing in pounds.",
            "type": "number",
            "example": 3000.1
          },
          "burnedFuel": {
            "format": "double",
            "description": "Fuel planned to be burned during the flight in pounds.",
            "type": "number",
            "example": 145000.1
          },
          "landingFuel": {
            "format": "double",
            "description": "Fuel planned to be remaining on the airplane at landing in pounds.",
            "type": "number",
            "example": 19000.1
          },
          "minDivertFuel": {
            "format": "double",
            "description": "The minimum fuel on board required to divert in pounds.",
            "type": "number",
            "example": 25000.1
          },
          "arrAlternate1Fuel": {
            "format": "double",
            "description": "Fuel required to fly to alternate landing site 1 and land in pounds.",
            "type": "number",
            "example": 6000.1
          },
          "arrAlternate2Fuel": {
            "format": "double",
            "description": "Fuel required to fly to alternate landing site 2 and land in pounds.",
            "type": "number",
            "example": 6000.1
          },
          "contingencyFuel": {
            "format": "double",
            "description": "The amount of contingency fuel in pounds.",
            "type": "number",
            "example": 3000.1
          },
          "reserveFuel": {
            "format": "double",
            "description": "The amount of reserve fuel in pounds.",
            "type": "number",
            "example": 10000.1
          },
          "depressFuel": {
            "format": "double",
            "description": "The depressurization fuel required to fly from the Equal Time Point to the Last Suitable/First Suitable airfield at depressurization altitude in pounds.",
            "type": "number",
            "example": 20000.1
          },
          "unusableFuel": {
            "format": "double",
            "description": "The amount of unusable fuel in pounds.",
            "type": "number",
            "example": 2300.1
          },
          "unidentExtraFuel": {
            "format": "double",
            "description": "The amount of unidentified extra fuel required to get to min landing in pounds.",
            "type": "number",
            "example": 5000.1
          },
          "identExtraFuel": {
            "format": "double",
            "description": "The amount of identified extra fuel carried and not available in the burn plan in pounds.",
            "type": "number",
            "example": 5000.1
          },
          "remAlternate1Fuel": {
            "format": "double",
            "description": "Total fuel remaining at alternate landing site 1 in pounds.",
            "type": "number",
            "example": 18000.1
          },
          "remAlternate2Fuel": {
            "format": "double",
            "description": "Total fuel remaining at alternate landing site 2 in pounds.",
            "type": "number",
            "example": 18000.1
          },
          "enduranceTime": {
            "description": "Total endurance time based on the fuel on board expressed as HH:MM.",
            "maxLength": 6,
            "type": "string",
            "example": "08:45"
          },
          "sid": {
            "description": "Name of the planned Standard Instrument Departure (SID) procedure.",
            "maxLength": 32,
            "type": "string",
            "example": "RENV3B"
          },
          "star": {
            "description": "Name of the planned Standard Terminal Arrival (STAR) procedure.",
            "maxLength": 32,
            "type": "string",
            "example": "ADANA"
          },
          "gpsRAIM": {
            "description": "The GPS Receiver Autonomous Integrity Monitoring (RAIM) message. A RAIM system assesses the integrity of the GPS signals. This system predicts outages for a specified geographical area. These predictions are based on the location, path, and scheduled GPS satellite outages.",
            "maxLength": 128,
            "type": "string",
            "example": "Failed by FAA SAPT 184022AUG2022"
          },
          "depRunway": {
            "description": "The departure runway for this flight.",
            "maxLength": 8,
            "type": "string",
            "example": "05L"
          },
          "arrRunway": {
            "description": "The arrival runway for this flight.",
            "maxLength": 8,
            "type": "string",
            "example": "05L"
          },
          "routeString": {
            "description": "The 1801 fileable route of flight string for this flight. The route of flight string contains route designators, significant points, change of speed/altitude, change of flight rules, and cruise climbs.",
            "maxLength": 1024,
            "type": "string",
            "example": "RENV3B RENVI Y86 GOSVA/N0317F260 DCT EVLIT DCT UMUGI DCT NISIX DCT GIGOD DCT DIPEB DCT\nGORPI Z80 TILAV L87 RAKIT Z717 PODUS Z130 MAG/N0298F220 Z20 KENIG/N0319F220 Z20 ORTAG T177\nESEGU Z20 BEBLA DCT MASEK/N0300F200 DCT GISEM/N0319F200 DCT BOMBI/N0276F060 DCT RIDSU DCT"
          },
          "countryCodes": {
            "description": "Array of country codes for the countries overflown during this flight in ISO 3166-1 Alpha-2 format.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "US",
              "CA",
              "UK"
            ]
          },
          "etopsRating": {
            "description": "The Extended Operations (ETOPS) rating used to calculate this flight plan.",
            "maxLength": 16,
            "type": "string",
            "example": "85 MINUTES"
          },
          "etopsAirfields": {
            "description": "Array of Extended Operations (ETOPS) adequate landing airfields that are within the mission region.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "KHSV",
              "KISP",
              "KBG",
              "LTBS"
            ]
          },
          "etopsAltAirfields": {
            "description": "Array of Extended Operations (ETOPS) alternate suitable landing airfields that are within the mission region.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "KHSV",
              "KISP",
              "KBG",
              "LTBS"
            ]
          },
          "etopsValWindow": {
            "description": "The Extended Operations (ETOPS) validity window for the alternate airfield.",
            "maxLength": 64,
            "type": "string",
            "example": "LPLA: 0317Z-0722Z"
          },
          "plannerRemark": {
            "description": "Remarks from the planners concerning this flight plan.",
            "maxLength": 512,
            "type": "string",
            "example": "Flight plan is good for 2 days before airspace closes over the UK."
          },
          "cargoRemark": {
            "description": "Remarks about the planned cargo associated with this flight plan.",
            "maxLength": 512,
            "type": "string",
            "example": "Expecting 55,000 lbs. If different, call us."
          },
          "windFac1": {
            "format": "double",
            "description": "Wind factor for the first half of the route. This is the average wind factor from first Top of Climb to the mid-time of the entire route in knots. A positive value indicates a headwind, while a negative value indicates a tailwind.",
            "type": "number",
            "example": -1.1
          },
          "windFac2": {
            "format": "double",
            "description": "Wind factor for the second half of the route. This is the average wind factor from the mid-time of the entire route to last Top of Descent in knots. A positive value indicates a headwind, while a negative value indicates a tailwind.",
            "type": "number",
            "example": 10.1
          },
          "windFacAvg": {
            "format": "double",
            "description": "Average wind factor from Top of Climb to Top of Descent in knots. A positive value indicates a headwind, while a negative value indicates a tailwind.",
            "type": "number",
            "example": 5.1
          },
          "avgTempDev": {
            "format": "double",
            "description": "Average temperature deviation of the primary, divert, and alternate path for the route between first Top of Climb and last Top of Descent in degrees Celsius.",
            "type": "number",
            "example": 16.1
          },
          "atcAddresses": {
            "description": "Array of Air Traffic Control (ATC) addresses.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "EYCBZMFO",
              "EUCHZMFP",
              "ETARYXYX",
              "EDUUZVZI"
            ]
          },
          "originator": {
            "description": "Air Traffic Control address filing the flight plan.",
            "maxLength": 24,
            "type": "string",
            "example": "ETARYXYX"
          },
          "numAircraft": {
            "format": "int32",
            "description": "The number of aircraft flying this flight plan.",
            "type": "integer",
            "example": 1
          },
          "flightRules": {
            "description": "The flight rules this flight plan is being filed under.",
            "maxLength": 8,
            "type": "string",
            "example": "l"
          },
          "flightType": {
            "description": "The type of flight (MILITARY, CIVILIAN, etc).",
            "maxLength": 16,
            "type": "string",
            "example": "MILITARY"
          },
          "initialCruiseSpeed": {
            "description": "A character string representation of the initial filed cruise speed for this flight (prepended values of K, N, and M represent kilometers per hour, knots, and Mach, respectively).",
            "maxLength": 8,
            "type": "string",
            "example": "N0305"
          },
          "initialFlightLevel": {
            "description": "A character string representation of the initial filed altitude level for this flight (prepended values of F, S, A, and M represent flight level in hundreds of feet, standard metric level in tens of meters, altitude in hundreds of feet, and altitude in tens of meters, respectively).",
            "maxLength": 8,
            "type": "string",
            "example": "F270"
          },
          "arrAlternate1": {
            "description": "The first designated alternate arrival airfield, International Civil Aviation Organization (ICAO) code preferred.",
            "maxLength": 36,
            "type": "string",
            "example": "EDDS"
          },
          "arrAlternate2": {
            "description": "The second designated alternate arrival airfield, International Civil Aviation Organization (ICAO) code preferred.",
            "maxLength": 36,
            "type": "string",
            "example": "EDDM"
          },
          "depAlternate": {
            "description": "The designated alternate departure airfield, International Civil Aviation Organization (ICAO) code preferred.",
            "maxLength": 36,
            "type": "string",
            "example": "LFPO"
          },
          "wakeTurbCat": {
            "description": "The wake turbulence category for this flight. The categories are assigned by the International Civil Aviation Organization (ICAO) and are based on maximum certified takeoff mass for the purpose of separating aircraft in flight due to wake turbulence. Valid values include LIGHT, MEDIUM, LARGE, HEAVY, and SUPER.",
            "maxLength": 8,
            "type": "string",
            "example": "MEDIUM"
          },
          "equipment": {
            "description": "The list of equipment on the aircraft as defined in the Flight Information Publications (FLIP) General Planning (GP) manual.",
            "maxLength": 36,
            "type": "string",
            "example": "SDFGHIRTUWXYZ/H"
          },
          "notes": {
            "description": "Additional remarks for air traffic control for this flight.",
            "maxLength": 64,
            "type": "string",
            "example": "STS/STATE PBN/A1B2B5C2C4D2D4 EUR/PROTECTED"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "airRefuelEvents": {
            "description": "Collection of air refueling events occurring on this flight.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlightPlanAirRefuelEvents_Ingest"
            }
          },
          "flightPlanMessages": {
            "description": "Collection of messages associated with this flight plan indicating the severity, the point where the message was generated, the path (Primary, Alternate, etc.), and the text of the message.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlightPlanMessages_Ingest"
            }
          },
          "flightPlanWaypoints": {
            "description": "Collection of waypoints associated with this flight plan.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlightPlanWaypoints_Ingest"
            }
          },
          "flightPlanPointGroups": {
            "description": "Collection of point groups generated for this flight plan. Groups include point sets for Extended Operations (ETOPS), Critical Fuel Point, and Equal Time Point (ETP).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlightPlanPointGroups_Ingest"
            }
          }
        }
      },
      "FlightPlanAirRefuelEvents_Abridged": {
        "description": "Collection of air refueling events occurring on this flight.",
        "type": "object",
        "properties": {
          "arDegrade": {
            "format": "double",
            "description": "Additional degrade for air refueling, cumulative with fuelDegrade field percent.",
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "example": 3.1
          },
          "arNum": {
            "format": "int32",
            "description": "The number of this air refueling event within the flight plan.",
            "type": "integer",
            "example": 2
          },
          "arExchangedFuel": {
            "format": "double",
            "description": "Fuel onloaded (use positive numbers) or fuel offloaded (use negative numbers) in pounds.",
            "type": "number",
            "example": 1500.1
          },
          "divertFuel": {
            "format": "double",
            "description": "Fuel required to fly from air refueling exit point to air refueling divert alternate airfield in pounds.",
            "type": "number",
            "example": 143000.1
          },
          "exitFuel": {
            "format": "double",
            "description": "Fuel remaining at the air refueling exit in pounds.",
            "type": "number",
            "example": 160000.1
          }
        }
      },
      "FlightPlanAirRefuelEvents_Full": {
        "description": "Collection of air refueling events occurring on this flight.",
        "type": "object",
        "properties": {
          "arDegrade": {
            "format": "double",
            "description": "Additional degrade for air refueling, cumulative with fuelDegrade field percent.",
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "example": 3.1
          },
          "arNum": {
            "format": "int32",
            "description": "The number of this air refueling event within the flight plan.",
            "type": "integer",
            "example": 2
          },
          "arExchangedFuel": {
            "format": "double",
            "description": "Fuel onloaded (use positive numbers) or fuel offloaded (use negative numbers) in pounds.",
            "type": "number",
            "example": 1500.1
          },
          "divertFuel": {
            "format": "double",
            "description": "Fuel required to fly from air refueling exit point to air refueling divert alternate airfield in pounds.",
            "type": "number",
            "example": 143000.1
          },
          "exitFuel": {
            "format": "double",
            "description": "Fuel remaining at the air refueling exit in pounds.",
            "type": "number",
            "example": 160000.1
          }
        }
      },
      "FlightPlanAirRefuelEvents_Ingest": {
        "description": "Collection of air refueling events occurring on this flight.",
        "type": "object",
        "properties": {
          "arDegrade": {
            "format": "double",
            "description": "Additional degrade for air refueling, cumulative with fuelDegrade field percent.",
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "example": 3.1
          },
          "arNum": {
            "format": "int32",
            "description": "The number of this air refueling event within the flight plan.",
            "type": "integer",
            "example": 2
          },
          "arExchangedFuel": {
            "format": "double",
            "description": "Fuel onloaded (use positive numbers) or fuel offloaded (use negative numbers) in pounds.",
            "type": "number",
            "example": 1500.1
          },
          "divertFuel": {
            "format": "double",
            "description": "Fuel required to fly from air refueling exit point to air refueling divert alternate airfield in pounds.",
            "type": "number",
            "example": 143000.1
          },
          "exitFuel": {
            "format": "double",
            "description": "Fuel remaining at the air refueling exit in pounds.",
            "type": "number",
            "example": 160000.1
          }
        }
      },
      "FlightPlanMessages_Abridged": {
        "description": "Collection of messages associated with this flight plan indicating the severity, the point where the message was generated, the path (Primary, Alternate, etc.), and the text of the message.",
        "type": "object",
        "properties": {
          "severity": {
            "description": "The severity of the message.",
            "maxLength": 16,
            "type": "string",
            "example": "SEVERE"
          },
          "wpNum": {
            "description": "The waypoint number for which the message was generated, or enter \"PLAN\" for a message impacting the entire route.",
            "maxLength": 8,
            "type": "string",
            "example": "20"
          },
          "routePath": {
            "description": "The flight path that generated the message (PRIMARY, ALTERNATE, etc.).",
            "maxLength": 16,
            "type": "string",
            "example": "PRIMARY"
          },
          "msgText": {
            "description": "The text of the message.",
            "maxLength": 256,
            "type": "string",
            "example": "Message text"
          }
        }
      },
      "FlightPlanMessages_Full": {
        "description": "Collection of messages associated with this flight plan indicating the severity, the point where the message was generated, the path (Primary, Alternate, etc.), and the text of the message.",
        "type": "object",
        "properties": {
          "severity": {
            "description": "The severity of the message.",
            "maxLength": 16,
            "type": "string",
            "example": "SEVERE"
          },
          "wpNum": {
            "description": "The waypoint number for which the message was generated, or enter \"PLAN\" for a message impacting the entire route.",
            "maxLength": 8,
            "type": "string",
            "example": "20"
          },
          "routePath": {
            "description": "The flight path that generated the message (PRIMARY, ALTERNATE, etc.).",
            "maxLength": 16,
            "type": "string",
            "example": "PRIMARY"
          },
          "msgText": {
            "description": "The text of the message.",
            "maxLength": 256,
            "type": "string",
            "example": "Message text"
          }
        }
      },
      "FlightPlanMessages_Ingest": {
        "description": "Collection of messages associated with this flight plan indicating the severity, the point where the message was generated, the path (Primary, Alternate, etc.), and the text of the message.",
        "type": "object",
        "properties": {
          "severity": {
            "description": "The severity of the message.",
            "maxLength": 16,
            "type": "string",
            "example": "SEVERE"
          },
          "wpNum": {
            "description": "The waypoint number for which the message was generated, or enter \"PLAN\" for a message impacting the entire route.",
            "maxLength": 8,
            "type": "string",
            "example": "20"
          },
          "routePath": {
            "description": "The flight path that generated the message (PRIMARY, ALTERNATE, etc.).",
            "maxLength": 16,
            "type": "string",
            "example": "PRIMARY"
          },
          "msgText": {
            "description": "The text of the message.",
            "maxLength": 256,
            "type": "string",
            "example": "Message text"
          }
        }
      },
      "FlightPlanPointGroups_Abridged": {
        "description": "Collection of point groups generated for this flight plan. Groups include point sets for Extended Operations (ETOPS), Critical Fuel Point, and Equal Time Point (ETP).",
        "type": "object",
        "properties": {
          "pointGroupName": {
            "description": "Name of the point group, usually Extended Operations (ETOPS), Critical Fuel Point, and Equal Time Point (ETP) sections.",
            "maxLength": 36,
            "type": "string",
            "example": "ETOPS_CF_POINT_1"
          },
          "worstFuelCase": {
            "description": "Specifies which Point Group case requires the most fuel.",
            "maxLength": 48,
            "type": "string",
            "example": "DEPRESSURIZED ENGINE OUT ETP"
          },
          "lsafName": {
            "description": "Name of the last suitable airfield, International Civil Aviation Organization (ICAO) code preferred.",
            "maxLength": 5,
            "type": "string",
            "example": "LPPD"
          },
          "lsafDistance": {
            "format": "double",
            "description": "Distance from the Equal Time Point (ETP) to the last suitable airfield in nautical miles.",
            "type": "number",
            "example": 684.1
          },
          "fsafDistance": {
            "format": "double",
            "description": "Distance from the Equal Time Point (ETP) to the first suitable airfield in nautical miles.",
            "type": "number",
            "example": 684.1
          },
          "etopsDistance": {
            "format": "double",
            "description": "Distance from the Extended Operations (ETOPS) point to the recovery airfield in nautical miles.",
            "type": "number",
            "example": 684.1
          },
          "lsafTime": {
            "description": "Time to fly from the Equal Time Point (ETP) to the last suitable airfield expressed in HH:MM format.",
            "maxLength": 6,
            "type": "string",
            "example": "01:23"
          },
          "fsafTime": {
            "description": "Time to fly from the Equal Time Point (ETP) to the first suitable airfield expressed in HH:MM format.",
            "maxLength": 6,
            "type": "string",
            "example": "01:23"
          },
          "etopsTime": {
            "description": "Time to fly from the Extended Operations (ETOPS) point to the recovery airfield expressed in HH:MM format.",
            "maxLength": 6,
            "type": "string",
            "example": "01:23"
          },
          "lsafAvgWindFactor": {
            "format": "double",
            "description": "Average wind factor from the Equal Time Point (ETP) to the last suitable airfield in knots.",
            "type": "number",
            "example": 13.1
          },
          "fsafAvgWindFactor": {
            "format": "double",
            "description": "Average wind factor from the Equal Time Point (ETP) to the first suitable airfield in knots.",
            "type": "number",
            "example": 10.1
          },
          "etopsAvgWindFactor": {
            "format": "double",
            "description": "Average wind factor from the Extended Operations (ETOPS) point to the recovery airfield in knots.",
            "type": "number",
            "example": 10.1
          },
          "lsafTempDev": {
            "format": "double",
            "description": "Temperature deviation from the Equal Time Point (ETP) to the last suitable airfield in degrees Celsius.",
            "type": "number",
            "example": 9.1
          },
          "fsafTempDev": {
            "format": "double",
            "description": "Temperature deviation from the Equal Time Point (ETP) to the first suitable airfield in degrees Celsius.",
            "type": "number",
            "example": 9.1
          },
          "etopsTempDev": {
            "format": "double",
            "description": "Temperature deviation from the Extended Operations (ETOPS) point to the recovery airfield in degrees Celsius.",
            "type": "number",
            "example": 9.1
          },
          "lsafReqFuel": {
            "format": "double",
            "description": "Fuel required to fly from the Equal Time Point (ETP) to the last suitable airfield in pounds.",
            "type": "number",
            "example": 50787.1
          },
          "fsafReqFuel": {
            "format": "double",
            "description": "Fuel required to fly from the Equal Time Point (ETP) to the first suitable airfield in pounds.",
            "type": "number",
            "example": 50380.1
          },
          "etopsReqFuel": {
            "format": "double",
            "description": "Fuel required to fly from the Extended Operations (ETOPS) point to the recovery airfield in pounds.",
            "type": "number",
            "example": 4412.1
          },
          "fromTakeoffTime": {
            "description": "Total time from takeoff when the point is reached expressed in HH:MM format.",
            "maxLength": 6,
            "type": "string",
            "example": "07:29"
          },
          "plannedFuel": {
            "format": "double",
            "description": "Amount of planned fuel on board when the point is reached in pounds.",
            "type": "number",
            "example": 190319.1
          },
          "fuelCalcAlt": {
            "format": "double",
            "description": "Flight level of the point at which the fuel was calculated in feet.",
            "type": "number",
            "example": 100.1
          },
          "fuelCalcSpd": {
            "format": "double",
            "description": "True airspeed at which the fuel was calculated in knots.",
            "type": "number",
            "example": 365.1
          },
          "avgFuelFlow": {
            "format": "double",
            "description": "Average fuel flow at which the fuel was calculated in pounds per hour.",
            "type": "number",
            "example": 19693.1
          },
          "flightPlanPoints": {
            "description": "Array of point data for this Point Group.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlightPlanPoints_Abridged"
            }
          }
        }
      },
      "FlightPlanPointGroups_Full": {
        "description": "Collection of point groups generated for this flight plan. Groups include point sets for Extended Operations (ETOPS), Critical Fuel Point, and Equal Time Point (ETP).",
        "type": "object",
        "properties": {
          "pointGroupName": {
            "description": "Name of the point group, usually Extended Operations (ETOPS), Critical Fuel Point, and Equal Time Point (ETP) sections.",
            "maxLength": 36,
            "type": "string",
            "example": "ETOPS_CF_POINT_1"
          },
          "worstFuelCase": {
            "description": "Specifies which Point Group case requires the most fuel.",
            "maxLength": 48,
            "type": "string",
            "example": "DEPRESSURIZED ENGINE OUT ETP"
          },
          "lsafName": {
            "description": "Name of the last suitable airfield, International Civil Aviation Organization (ICAO) code preferred.",
            "maxLength": 5,
            "type": "string",
            "example": "LPPD"
          },
          "lsafDistance": {
            "format": "double",
            "description": "Distance from the Equal Time Point (ETP) to the last suitable airfield in nautical miles.",
            "type": "number",
            "example": 684.1
          },
          "fsafDistance": {
            "format": "double",
            "description": "Distance from the Equal Time Point (ETP) to the first suitable airfield in nautical miles.",
            "type": "number",
            "example": 684.1
          },
          "etopsDistance": {
            "format": "double",
            "description": "Distance from the Extended Operations (ETOPS) point to the recovery airfield in nautical miles.",
            "type": "number",
            "example": 684.1
          },
          "lsafTime": {
            "description": "Time to fly from the Equal Time Point (ETP) to the last suitable airfield expressed in HH:MM format.",
            "maxLength": 6,
            "type": "string",
            "example": "01:23"
          },
          "fsafTime": {
            "description": "Time to fly from the Equal Time Point (ETP) to the first suitable airfield expressed in HH:MM format.",
            "maxLength": 6,
            "type": "string",
            "example": "01:23"
          },
          "etopsTime": {
            "description": "Time to fly from the Extended Operations (ETOPS) point to the recovery airfield expressed in HH:MM format.",
            "maxLength": 6,
            "type": "string",
            "example": "01:23"
          },
          "lsafAvgWindFactor": {
            "format": "double",
            "description": "Average wind factor from the Equal Time Point (ETP) to the last suitable airfield in knots.",
            "type": "number",
            "example": 13.1
          },
          "fsafAvgWindFactor": {
            "format": "double",
            "description": "Average wind factor from the Equal Time Point (ETP) to the first suitable airfield in knots.",
            "type": "number",
            "example": 10.1
          },
          "etopsAvgWindFactor": {
            "format": "double",
            "description": "Average wind factor from the Extended Operations (ETOPS) point to the recovery airfield in knots.",
            "type": "number",
            "example": 10.1
          },
          "lsafTempDev": {
            "format": "double",
            "description": "Temperature deviation from the Equal Time Point (ETP) to the last suitable airfield in degrees Celsius.",
            "type": "number",
            "example": 9.1
          },
          "fsafTempDev": {
            "format": "double",
            "description": "Temperature deviation from the Equal Time Point (ETP) to the first suitable airfield in degrees Celsius.",
            "type": "number",
            "example": 9.1
          },
          "etopsTempDev": {
            "format": "double",
            "description": "Temperature deviation from the Extended Operations (ETOPS) point to the recovery airfield in degrees Celsius.",
            "type": "number",
            "example": 9.1
          },
          "lsafReqFuel": {
            "format": "double",
            "description": "Fuel required to fly from the Equal Time Point (ETP) to the last suitable airfield in pounds.",
            "type": "number",
            "example": 50787.1
          },
          "fsafReqFuel": {
            "format": "double",
            "description": "Fuel required to fly from the Equal Time Point (ETP) to the first suitable airfield in pounds.",
            "type": "number",
            "example": 50380.1
          },
          "etopsReqFuel": {
            "format": "double",
            "description": "Fuel required to fly from the Extended Operations (ETOPS) point to the recovery airfield in pounds.",
            "type": "number",
            "example": 4412.1
          },
          "fromTakeoffTime": {
            "description": "Total time from takeoff when the point is reached expressed in HH:MM format.",
            "maxLength": 6,
            "type": "string",
            "example": "07:29"
          },
          "plannedFuel": {
            "format": "double",
            "description": "Amount of planned fuel on board when the point is reached in pounds.",
            "type": "number",
            "example": 190319.1
          },
          "fuelCalcAlt": {
            "format": "double",
            "description": "Flight level of the point at which the fuel was calculated in feet.",
            "type": "number",
            "example": 100.1
          },
          "fuelCalcSpd": {
            "format": "double",
            "description": "True airspeed at which the fuel was calculated in knots.",
            "type": "number",
            "example": 365.1
          },
          "avgFuelFlow": {
            "format": "double",
            "description": "Average fuel flow at which the fuel was calculated in pounds per hour.",
            "type": "number",
            "example": 19693.1
          },
          "flightPlanPoints": {
            "description": "Array of point data for this Point Group.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlightPlanPoints_Full"
            }
          }
        }
      },
      "FlightPlanPointGroups_Ingest": {
        "description": "Collection of point groups generated for this flight plan. Groups include point sets for Extended Operations (ETOPS), Critical Fuel Point, and Equal Time Point (ETP).",
        "type": "object",
        "properties": {
          "pointGroupName": {
            "description": "Name of the point group, usually Extended Operations (ETOPS), Critical Fuel Point, and Equal Time Point (ETP) sections.",
            "maxLength": 36,
            "type": "string",
            "example": "ETOPS_CF_POINT_1"
          },
          "worstFuelCase": {
            "description": "Specifies which Point Group case requires the most fuel.",
            "maxLength": 48,
            "type": "string",
            "example": "DEPRESSURIZED ENGINE OUT ETP"
          },
          "lsafName": {
            "description": "Name of the last suitable airfield, International Civil Aviation Organization (ICAO) code preferred.",
            "maxLength": 5,
            "type": "string",
            "example": "LPPD"
          },
          "lsafDistance": {
            "format": "double",
            "description": "Distance from the Equal Time Point (ETP) to the last suitable airfield in nautical miles.",
            "type": "number",
            "example": 684.1
          },
          "fsafDistance": {
            "format": "double",
            "description": "Distance from the Equal Time Point (ETP) to the first suitable airfield in nautical miles.",
            "type": "number",
            "example": 684.1
          },
          "etopsDistance": {
            "format": "double",
            "description": "Distance from the Extended Operations (ETOPS) point to the recovery airfield in nautical miles.",
            "type": "number",
            "example": 684.1
          },
          "lsafTime": {
            "description": "Time to fly from the Equal Time Point (ETP) to the last suitable airfield expressed in HH:MM format.",
            "maxLength": 6,
            "type": "string",
            "example": "01:23"
          },
          "fsafTime": {
            "description": "Time to fly from the Equal Time Point (ETP) to the first suitable airfield expressed in HH:MM format.",
            "maxLength": 6,
            "type": "string",
            "example": "01:23"
          },
          "etopsTime": {
            "description": "Time to fly from the Extended Operations (ETOPS) point to the recovery airfield expressed in HH:MM format.",
            "maxLength": 6,
            "type": "string",
            "example": "01:23"
          },
          "lsafAvgWindFactor": {
            "format": "double",
            "description": "Average wind factor from the Equal Time Point (ETP) to the last suitable airfield in knots.",
            "type": "number",
            "example": 13.1
          },
          "fsafAvgWindFactor": {
            "format": "double",
            "description": "Average wind factor from the Equal Time Point (ETP) to the first suitable airfield in knots.",
            "type": "number",
            "example": 10.1
          },
          "etopsAvgWindFactor": {
            "format": "double",
            "description": "Average wind factor from the Extended Operations (ETOPS) point to the recovery airfield in knots.",
            "type": "number",
            "example": 10.1
          },
          "lsafTempDev": {
            "format": "double",
            "description": "Temperature deviation from the Equal Time Point (ETP) to the last suitable airfield in degrees Celsius.",
            "type": "number",
            "example": 9.1
          },
          "fsafTempDev": {
            "format": "double",
            "description": "Temperature deviation from the Equal Time Point (ETP) to the first suitable airfield in degrees Celsius.",
            "type": "number",
            "example": 9.1
          },
          "etopsTempDev": {
            "format": "double",
            "description": "Temperature deviation from the Extended Operations (ETOPS) point to the recovery airfield in degrees Celsius.",
            "type": "number",
            "example": 9.1
          },
          "lsafReqFuel": {
            "format": "double",
            "description": "Fuel required to fly from the Equal Time Point (ETP) to the last suitable airfield in pounds.",
            "type": "number",
            "example": 50787.1
          },
          "fsafReqFuel": {
            "format": "double",
            "description": "Fuel required to fly from the Equal Time Point (ETP) to the first suitable airfield in pounds.",
            "type": "number",
            "example": 50380.1
          },
          "etopsReqFuel": {
            "format": "double",
            "description": "Fuel required to fly from the Extended Operations (ETOPS) point to the recovery airfield in pounds.",
            "type": "number",
            "example": 4412.1
          },
          "fromTakeoffTime": {
            "description": "Total time from takeoff when the point is reached expressed in HH:MM format.",
            "maxLength": 6,
            "type": "string",
            "example": "07:29"
          },
          "plannedFuel": {
            "format": "double",
            "description": "Amount of planned fuel on board when the point is reached in pounds.",
            "type": "number",
            "example": 190319.1
          },
          "fuelCalcAlt": {
            "format": "double",
            "description": "Flight level of the point at which the fuel was calculated in feet.",
            "type": "number",
            "example": 100.1
          },
          "fuelCalcSpd": {
            "format": "double",
            "description": "True airspeed at which the fuel was calculated in knots.",
            "type": "number",
            "example": 365.1
          },
          "avgFuelFlow": {
            "format": "double",
            "description": "Average fuel flow at which the fuel was calculated in pounds per hour.",
            "type": "number",
            "example": 19693.1
          },
          "flightPlanPoints": {
            "description": "Array of point data for this Point Group.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlightPlanPoints_Ingest"
            }
          }
        }
      },
      "FlightPlanPoints_Abridged": {
        "description": "Array of point data for this Point Group.",
        "type": "object",
        "properties": {
          "pointName": {
            "description": "Name of this point.",
            "maxLength": 36,
            "type": "string",
            "example": "CRUISE ALTITUDE ETP"
          },
          "fppLat": {
            "format": "double",
            "description": "WGS84 latitude of the point location, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 45.23
          },
          "fppLon": {
            "format": "double",
            "description": "WGS84 longitude of the point location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 179.1
          },
          "fppEta": {
            "format": "date-time",
            "description": "Estimated Time of Arrival (ETA) at this point in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2023-09-09T01:00:00.123Z"
          },
          "fppReqFuel": {
            "format": "double",
            "description": "Fuel required at this point to execute an Equal Time Point (ETP) or Extended Operations (ETOPS) plan in pounds.",
            "type": "number",
            "example": 4250.1
          }
        }
      },
      "FlightPlanPoints_Full": {
        "description": "Array of point data for this Point Group.",
        "type": "object",
        "properties": {
          "pointName": {
            "description": "Name of this point.",
            "maxLength": 36,
            "type": "string",
            "example": "CRUISE ALTITUDE ETP"
          },
          "fppLat": {
            "format": "double",
            "description": "WGS84 latitude of the point location, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 45.23
          },
          "fppLon": {
            "format": "double",
            "description": "WGS84 longitude of the point location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 179.1
          },
          "fppEta": {
            "format": "date-time",
            "description": "Estimated Time of Arrival (ETA) at this point in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2023-09-09T01:00:00.123Z"
          },
          "fppReqFuel": {
            "format": "double",
            "description": "Fuel required at this point to execute an Equal Time Point (ETP) or Extended Operations (ETOPS) plan in pounds.",
            "type": "number",
            "example": 4250.1
          }
        }
      },
      "FlightPlanPoints_Ingest": {
        "description": "Array of point data for this Point Group.",
        "type": "object",
        "properties": {
          "pointName": {
            "description": "Name of this point.",
            "maxLength": 36,
            "type": "string",
            "example": "CRUISE ALTITUDE ETP"
          },
          "fppLat": {
            "format": "double",
            "description": "WGS84 latitude of the point location, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 45.23
          },
          "fppLon": {
            "format": "double",
            "description": "WGS84 longitude of the point location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 179.1
          },
          "fppEta": {
            "format": "date-time",
            "description": "Estimated Time of Arrival (ETA) at this point in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2023-09-09T01:00:00.123Z"
          },
          "fppReqFuel": {
            "format": "double",
            "description": "Fuel required at this point to execute an Equal Time Point (ETP) or Extended Operations (ETOPS) plan in pounds.",
            "type": "number",
            "example": 4250.1
          }
        }
      },
      "FlightPlanWaypoints_Abridged": {
        "description": "Collection of waypoints associated with this flight plan.",
        "required": [
          "type",
          "waypointName"
        ],
        "type": "object",
        "properties": {
          "type": {
            "description": "Points are designated by type as either a comment point or a waypoint. A comment point conveys important information about the point for pilots but is not entered into a flight management system. A waypoint is a point that is entered into a flight management system and/or filed with Air Traffic Control.",
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "example": "COMMENT"
          },
          "waypointName": {
            "description": "Name of the point. The name of a comment point identifies important information about that point, e.g. Top of Climb. The name of a waypoint identifies the location of that point.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "example": "KCHS"
          },
          "waypointNum": {
            "format": "int32",
            "description": "The waypoint number on the route. Comment points do not get a waypoint number.",
            "type": "integer",
            "example": 20
          },
          "airway": {
            "description": "The flight path flown for this leg.",
            "maxLength": 16,
            "type": "string",
            "example": "W15"
          },
          "arpt": {
            "description": "Point identifying an air refueling track/anchor or fixed track.",
            "maxLength": 16,
            "type": "string",
            "example": "ARIP"
          },
          "lat": {
            "format": "double",
            "description": "WGS84 latitude of the point location, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 45.23
          },
          "lon": {
            "format": "double",
            "description": "WGS84 longitude of the point location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 179.1
          },
          "arId": {
            "description": "The ID of the air refueling track/anchor or fixed track.",
            "maxLength": 16,
            "type": "string",
            "example": "AR202"
          },
          "navaid": {
            "description": "Navigational Aid (NAVAID) identification code.",
            "maxLength": 16,
            "type": "string",
            "example": "HTO"
          },
          "tacanChannel": {
            "description": "Tactical Air Navigation (TACAN) channel for the Navigational Aid (NAVAID).",
            "maxLength": 16,
            "type": "string",
            "example": "83X"
          },
          "vorFreq": {
            "format": "double",
            "description": "VHF Omni-directional Range (VOR) frequency for the Navigational Aid (NAVAID) in megahertz.",
            "type": "number",
            "example": 113.6
          },
          "turbCat": {
            "description": "The turbulence intensity classification for this flight (LIGHT, MODERATE, etc).",
            "maxLength": 16,
            "type": "string",
            "example": "EXTREME"
          },
          "iceCat": {
            "description": "The icing intensity classification for this flight (LIGHT, MODERATE, etc).",
            "maxLength": 16,
            "type": "string",
            "example": "MODERATE"
          },
          "thunderCat": {
            "description": "The thunderstorm intensity classification for this flight (LIGHT, MODERATE, etc).",
            "maxLength": 16,
            "type": "string",
            "example": "MODERATE"
          },
          "alt": {
            "format": "double",
            "description": "Altitude of a level, point, or object measured in feet above mean sea level.",
            "type": "number",
            "example": 27000.1
          },
          "tempDev": {
            "format": "double",
            "description": "Average temperature deviation from standard day profile for this leg in degrees Celsius.",
            "type": "number",
            "example": 12.1
          },
          "legFuelDegrade": {
            "format": "double",
            "description": "The fuel degrade percentage used for this leg.",
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "example": 10.1
          },
          "legMach": {
            "format": "double",
            "description": "The average Mach speed for this leg.",
            "type": "number",
            "example": 0.74
          },
          "legMsnIndex": {
            "format": "double",
            "description": "The mission index value for this leg. The mission index is the ratio of time-related cost of aircraft operation to the cost of fuel.",
            "type": "number",
            "example": 65
          },
          "legDragIndex": {
            "format": "double",
            "description": "The percent degrade due to drag for this aircraft for this leg.",
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "example": 1.2
          },
          "avgCalAirspeed": {
            "format": "double",
            "description": "The average calibrated airspeed (CAS) for this leg in knots.",
            "type": "number",
            "example": 200.1
          },
          "avgTrueAirspeed": {
            "format": "double",
            "description": "The average true airspeed (TAS) for this leg in knots.",
            "type": "number",
            "example": 210.1
          },
          "avgGroundSpeed": {
            "format": "double",
            "description": "The average ground speed for this leg in knots.",
            "type": "number",
            "example": 300.1
          },
          "priFreq": {
            "format": "double",
            "description": "The primary UHF radio frequency used for the air refueling track or anchor in megahertz.",
            "type": "number",
            "example": 357.5
          },
          "pointWindDir": {
            "format": "double",
            "description": "The wind direction at this specific point in degrees from true north.",
            "type": "number",
            "example": 165.5
          },
          "pointWindSpeed": {
            "format": "double",
            "description": "The wind velocity at this specific point in knots.",
            "type": "number",
            "example": 14.4
          },
          "avgWindDir": {
            "format": "double",
            "description": "The average wind direction for this leg in degrees from true north.",
            "type": "number",
            "example": 165.5
          },
          "avgWindSpeed": {
            "format": "double",
            "description": "The average wind speed for this leg in knots.",
            "type": "number",
            "example": 14.4
          },
          "legWindFac": {
            "format": "double",
            "description": "The wind factor for this leg in knots. A positive value indicates a headwind, while a negative value indicates a tailwind.",
            "type": "number",
            "example": -32.1
          },
          "avgDriftAng": {
            "format": "double",
            "description": "The average drift angle for this leg in degrees from true north.",
            "type": "number",
            "example": -3.2
          },
          "secFreq": {
            "format": "double",
            "description": "The secondary UHF radio frequency used for the air refueling track or anchor in megahertz.",
            "type": "number",
            "example": 357.5
          },
          "magCourse": {
            "format": "double",
            "description": "The magnetic course at leg midpoint in degrees from true north.",
            "type": "number",
            "example": 338.1
          },
          "trueCourse": {
            "format": "double",
            "description": "The true course at leg midpoint in degrees from true north.",
            "type": "number",
            "example": 328.1
          },
          "magHeading": {
            "format": "double",
            "description": "The magnetic heading at leg midpoint in degrees from true north.",
            "type": "number",
            "example": 212.1
          },
          "aaTacanChannel": {
            "description": "The air-to-air Tactical Air Navigation (TACAN) channels used by the receiver/tanker during air refueling.",
            "maxLength": 16,
            "type": "string",
            "example": "31/94"
          },
          "zoneDistance": {
            "format": "double",
            "description": "The zone/leg distance flown in nautical miles.",
            "type": "number",
            "example": 212.1
          },
          "totalFlownDistance": {
            "format": "double",
            "description": "The total distance flown to this waypoint calculated from point of departure in nautical miles.",
            "type": "number",
            "example": 688.1
          },
          "totalRemDistance": {
            "format": "double",
            "description": "The total distance remaining from this waypoint to the point of arrival in nautical miles.",
            "type": "number",
            "example": 1288.1
          },
          "zoneTime": {
            "format": "double",
            "description": "The time to fly this zone/leg in minutes.",
            "type": "number",
            "example": 36.1
          },
          "totalTime": {
            "description": "The total time accumulated from takeoff to this waypoint expressed as HH:MM.",
            "maxLength": 6,
            "type": "string",
            "example": "08:45"
          },
          "totalTimeRem": {
            "description": "The total time remaining from this waypoint to the point of arrival expressed as HH:MM.",
            "maxLength": 6,
            "type": "string",
            "example": "01:43"
          },
          "zoneFuel": {
            "format": "double",
            "description": "The amount of fuel used on this zone/leg in pounds.",
            "type": "number",
            "example": 1120.1
          },
          "totalUsedFuel": {
            "format": "double",
            "description": "The total fuel used to this waypoint from point of departure in pounds.",
            "type": "number",
            "example": 70431.1
          },
          "totalRemFuel": {
            "format": "double",
            "description": "The total fuel remaining at this waypoint in pounds.",
            "type": "number",
            "example": 30453.1
          },
          "exchangedFuel": {
            "format": "double",
            "description": "The amount of fuel onloaded or offloaded at this waypoint in pounds (negative value for offload).",
            "type": "number",
            "example": -30400.1
          },
          "airDistance": {
            "format": "double",
            "description": "The air distance of this leg in nautical miles.",
            "type": "number",
            "example": 321.1
          },
          "totalAirDistance": {
            "format": "double",
            "description": "The total air distance to this waypoint in nautical miles.",
            "type": "number",
            "example": 3251.1
          },
          "totalWeight": {
            "format": "double",
            "description": "The total weight of the aircraft at this waypoint in pounds.",
            "type": "number",
            "example": 207123.1
          },
          "eta": {
            "format": "date-time",
            "description": "Estimated Time of Arrival (ETA) at this waypoint in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2023-09-09T01:00:00.123Z"
          },
          "ata": {
            "format": "date-time",
            "description": "Actual Time of Arrival (ATA) at this waypoint in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2023-09-09T01:00:00.123Z"
          },
          "fuelFlow": {
            "format": "double",
            "description": "The leg fuel flow in pounds per hour.",
            "type": "number",
            "example": 17654.1
          },
          "legAlternate": {
            "description": "The planned alternate leg based on user-defined constraints, International Civil Aviation Organization (ICAO) code preferred.",
            "maxLength": 16,
            "type": "string",
            "example": "KCHS"
          },
          "magVar": {
            "format": "double",
            "description": "The magnetic variation for this leg in degrees.",
            "type": "number",
            "example": -13.2
          },
          "dayLowAlt": {
            "format": "double",
            "description": "The day low level altitude in feet above sea level for the leg ending at this waypoint.",
            "type": "number",
            "example": 1500.1
          },
          "nightLowAlt": {
            "format": "double",
            "description": "The night low level altitude in feet above sea level for the leg ending at this waypoint.",
            "type": "number",
            "example": 2300.1
          },
          "nvgLowAlt": {
            "format": "double",
            "description": "The night vision goggle low level altitude in feet above sea level for the leg ending at this waypoint.",
            "type": "number",
            "example": 2450.1
          }
        }
      },
      "FlightPlanWaypoints_Full": {
        "description": "Collection of waypoints associated with this flight plan.",
        "required": [
          "type",
          "waypointName"
        ],
        "type": "object",
        "properties": {
          "type": {
            "description": "Points are designated by type as either a comment point or a waypoint. A comment point conveys important information about the point for pilots but is not entered into a flight management system. A waypoint is a point that is entered into a flight management system and/or filed with Air Traffic Control.",
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "example": "COMMENT"
          },
          "waypointName": {
            "description": "Name of the point. The name of a comment point identifies important information about that point, e.g. Top of Climb. The name of a waypoint identifies the location of that point.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "example": "KCHS"
          },
          "waypointNum": {
            "format": "int32",
            "description": "The waypoint number on the route. Comment points do not get a waypoint number.",
            "type": "integer",
            "example": 20
          },
          "airway": {
            "description": "The flight path flown for this leg.",
            "maxLength": 16,
            "type": "string",
            "example": "W15"
          },
          "arpt": {
            "description": "Point identifying an air refueling track/anchor or fixed track.",
            "maxLength": 16,
            "type": "string",
            "example": "ARIP"
          },
          "lat": {
            "format": "double",
            "description": "WGS84 latitude of the point location, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 45.23
          },
          "lon": {
            "format": "double",
            "description": "WGS84 longitude of the point location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 179.1
          },
          "arId": {
            "description": "The ID of the air refueling track/anchor or fixed track.",
            "maxLength": 16,
            "type": "string",
            "example": "AR202"
          },
          "navaid": {
            "description": "Navigational Aid (NAVAID) identification code.",
            "maxLength": 16,
            "type": "string",
            "example": "HTO"
          },
          "tacanChannel": {
            "description": "Tactical Air Navigation (TACAN) channel for the Navigational Aid (NAVAID).",
            "maxLength": 16,
            "type": "string",
            "example": "83X"
          },
          "vorFreq": {
            "format": "double",
            "description": "VHF Omni-directional Range (VOR) frequency for the Navigational Aid (NAVAID) in megahertz.",
            "type": "number",
            "example": 113.6
          },
          "turbCat": {
            "description": "The turbulence intensity classification for this flight (LIGHT, MODERATE, etc).",
            "maxLength": 16,
            "type": "string",
            "example": "EXTREME"
          },
          "iceCat": {
            "description": "The icing intensity classification for this flight (LIGHT, MODERATE, etc).",
            "maxLength": 16,
            "type": "string",
            "example": "MODERATE"
          },
          "thunderCat": {
            "description": "The thunderstorm intensity classification for this flight (LIGHT, MODERATE, etc).",
            "maxLength": 16,
            "type": "string",
            "example": "MODERATE"
          },
          "alt": {
            "format": "double",
            "description": "Altitude of a level, point, or object measured in feet above mean sea level.",
            "type": "number",
            "example": 27000.1
          },
          "tempDev": {
            "format": "double",
            "description": "Average temperature deviation from standard day profile for this leg in degrees Celsius.",
            "type": "number",
            "example": 12.1
          },
          "legFuelDegrade": {
            "format": "double",
            "description": "The fuel degrade percentage used for this leg.",
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "example": 10.1
          },
          "legMach": {
            "format": "double",
            "description": "The average Mach speed for this leg.",
            "type": "number",
            "example": 0.74
          },
          "legMsnIndex": {
            "format": "double",
            "description": "The mission index value for this leg. The mission index is the ratio of time-related cost of aircraft operation to the cost of fuel.",
            "type": "number",
            "example": 65
          },
          "legDragIndex": {
            "format": "double",
            "description": "The percent degrade due to drag for this aircraft for this leg.",
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "example": 1.2
          },
          "avgCalAirspeed": {
            "format": "double",
            "description": "The average calibrated airspeed (CAS) for this leg in knots.",
            "type": "number",
            "example": 200.1
          },
          "avgTrueAirspeed": {
            "format": "double",
            "description": "The average true airspeed (TAS) for this leg in knots.",
            "type": "number",
            "example": 210.1
          },
          "avgGroundSpeed": {
            "format": "double",
            "description": "The average ground speed for this leg in knots.",
            "type": "number",
            "example": 300.1
          },
          "priFreq": {
            "format": "double",
            "description": "The primary UHF radio frequency used for the air refueling track or anchor in megahertz.",
            "type": "number",
            "example": 357.5
          },
          "pointWindDir": {
            "format": "double",
            "description": "The wind direction at this specific point in degrees from true north.",
            "type": "number",
            "example": 165.5
          },
          "pointWindSpeed": {
            "format": "double",
            "description": "The wind velocity at this specific point in knots.",
            "type": "number",
            "example": 14.4
          },
          "avgWindDir": {
            "format": "double",
            "description": "The average wind direction for this leg in degrees from true north.",
            "type": "number",
            "example": 165.5
          },
          "avgWindSpeed": {
            "format": "double",
            "description": "The average wind speed for this leg in knots.",
            "type": "number",
            "example": 14.4
          },
          "legWindFac": {
            "format": "double",
            "description": "The wind factor for this leg in knots. A positive value indicates a headwind, while a negative value indicates a tailwind.",
            "type": "number",
            "example": -32.1
          },
          "avgDriftAng": {
            "format": "double",
            "description": "The average drift angle for this leg in degrees from true north.",
            "type": "number",
            "example": -3.2
          },
          "secFreq": {
            "format": "double",
            "description": "The secondary UHF radio frequency used for the air refueling track or anchor in megahertz.",
            "type": "number",
            "example": 357.5
          },
          "magCourse": {
            "format": "double",
            "description": "The magnetic course at leg midpoint in degrees from true north.",
            "type": "number",
            "example": 338.1
          },
          "trueCourse": {
            "format": "double",
            "description": "The true course at leg midpoint in degrees from true north.",
            "type": "number",
            "example": 328.1
          },
          "magHeading": {
            "format": "double",
            "description": "The magnetic heading at leg midpoint in degrees from true north.",
            "type": "number",
            "example": 212.1
          },
          "aaTacanChannel": {
            "description": "The air-to-air Tactical Air Navigation (TACAN) channels used by the receiver/tanker during air refueling.",
            "maxLength": 16,
            "type": "string",
            "example": "31/94"
          },
          "zoneDistance": {
            "format": "double",
            "description": "The zone/leg distance flown in nautical miles.",
            "type": "number",
            "example": 212.1
          },
          "totalFlownDistance": {
            "format": "double",
            "description": "The total distance flown to this waypoint calculated from point of departure in nautical miles.",
            "type": "number",
            "example": 688.1
          },
          "totalRemDistance": {
            "format": "double",
            "description": "The total distance remaining from this waypoint to the point of arrival in nautical miles.",
            "type": "number",
            "example": 1288.1
          },
          "zoneTime": {
            "format": "double",
            "description": "The time to fly this zone/leg in minutes.",
            "type": "number",
            "example": 36.1
          },
          "totalTime": {
            "description": "The total time accumulated from takeoff to this waypoint expressed as HH:MM.",
            "maxLength": 6,
            "type": "string",
            "example": "08:45"
          },
          "totalTimeRem": {
            "description": "The total time remaining from this waypoint to the point of arrival expressed as HH:MM.",
            "maxLength": 6,
            "type": "string",
            "example": "01:43"
          },
          "zoneFuel": {
            "format": "double",
            "description": "The amount of fuel used on this zone/leg in pounds.",
            "type": "number",
            "example": 1120.1
          },
          "totalUsedFuel": {
            "format": "double",
            "description": "The total fuel used to this waypoint from point of departure in pounds.",
            "type": "number",
            "example": 70431.1
          },
          "totalRemFuel": {
            "format": "double",
            "description": "The total fuel remaining at this waypoint in pounds.",
            "type": "number",
            "example": 30453.1
          },
          "exchangedFuel": {
            "format": "double",
            "description": "The amount of fuel onloaded or offloaded at this waypoint in pounds (negative value for offload).",
            "type": "number",
            "example": -30400.1
          },
          "airDistance": {
            "format": "double",
            "description": "The air distance of this leg in nautical miles.",
            "type": "number",
            "example": 321.1
          },
          "totalAirDistance": {
            "format": "double",
            "description": "The total air distance to this waypoint in nautical miles.",
            "type": "number",
            "example": 3251.1
          },
          "totalWeight": {
            "format": "double",
            "description": "The total weight of the aircraft at this waypoint in pounds.",
            "type": "number",
            "example": 207123.1
          },
          "eta": {
            "format": "date-time",
            "description": "Estimated Time of Arrival (ETA) at this waypoint in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2023-09-09T01:00:00.123Z"
          },
          "ata": {
            "format": "date-time",
            "description": "Actual Time of Arrival (ATA) at this waypoint in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2023-09-09T01:00:00.123Z"
          },
          "fuelFlow": {
            "format": "double",
            "description": "The leg fuel flow in pounds per hour.",
            "type": "number",
            "example": 17654.1
          },
          "legAlternate": {
            "description": "The planned alternate leg based on user-defined constraints, International Civil Aviation Organization (ICAO) code preferred.",
            "maxLength": 16,
            "type": "string",
            "example": "KCHS"
          },
          "magVar": {
            "format": "double",
            "description": "The magnetic variation for this leg in degrees.",
            "type": "number",
            "example": -13.2
          },
          "dayLowAlt": {
            "format": "double",
            "description": "The day low level altitude in feet above sea level for the leg ending at this waypoint.",
            "type": "number",
            "example": 1500.1
          },
          "nightLowAlt": {
            "format": "double",
            "description": "The night low level altitude in feet above sea level for the leg ending at this waypoint.",
            "type": "number",
            "example": 2300.1
          },
          "nvgLowAlt": {
            "format": "double",
            "description": "The night vision goggle low level altitude in feet above sea level for the leg ending at this waypoint.",
            "type": "number",
            "example": 2450.1
          }
        }
      },
      "FlightPlanWaypoints_Ingest": {
        "description": "Collection of waypoints associated with this flight plan.",
        "required": [
          "type",
          "waypointName"
        ],
        "type": "object",
        "properties": {
          "type": {
            "description": "Points are designated by type as either a comment point or a waypoint. A comment point conveys important information about the point for pilots but is not entered into a flight management system. A waypoint is a point that is entered into a flight management system and/or filed with Air Traffic Control.",
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "example": "COMMENT"
          },
          "waypointName": {
            "description": "Name of the point. The name of a comment point identifies important information about that point, e.g. Top of Climb. The name of a waypoint identifies the location of that point.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "example": "KCHS"
          },
          "waypointNum": {
            "format": "int32",
            "description": "The waypoint number on the route. Comment points do not get a waypoint number.",
            "type": "integer",
            "example": 20
          },
          "airway": {
            "description": "The flight path flown for this leg.",
            "maxLength": 16,
            "type": "string",
            "example": "W15"
          },
          "arpt": {
            "description": "Point identifying an air refueling track/anchor or fixed track.",
            "maxLength": 16,
            "type": "string",
            "example": "ARIP"
          },
          "lat": {
            "format": "double",
            "description": "WGS84 latitude of the point location, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 45.23
          },
          "lon": {
            "format": "double",
            "description": "WGS84 longitude of the point location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 179.1
          },
          "arId": {
            "description": "The ID of the air refueling track/anchor or fixed track.",
            "maxLength": 16,
            "type": "string",
            "example": "AR202"
          },
          "navaid": {
            "description": "Navigational Aid (NAVAID) identification code.",
            "maxLength": 16,
            "type": "string",
            "example": "HTO"
          },
          "tacanChannel": {
            "description": "Tactical Air Navigation (TACAN) channel for the Navigational Aid (NAVAID).",
            "maxLength": 16,
            "type": "string",
            "example": "83X"
          },
          "vorFreq": {
            "format": "double",
            "description": "VHF Omni-directional Range (VOR) frequency for the Navigational Aid (NAVAID) in megahertz.",
            "type": "number",
            "example": 113.6
          },
          "turbCat": {
            "description": "The turbulence intensity classification for this flight (LIGHT, MODERATE, etc).",
            "maxLength": 16,
            "type": "string",
            "example": "EXTREME"
          },
          "iceCat": {
            "description": "The icing intensity classification for this flight (LIGHT, MODERATE, etc).",
            "maxLength": 16,
            "type": "string",
            "example": "MODERATE"
          },
          "thunderCat": {
            "description": "The thunderstorm intensity classification for this flight (LIGHT, MODERATE, etc).",
            "maxLength": 16,
            "type": "string",
            "example": "MODERATE"
          },
          "alt": {
            "format": "double",
            "description": "Altitude of a level, point, or object measured in feet above mean sea level.",
            "type": "number",
            "example": 27000.1
          },
          "tempDev": {
            "format": "double",
            "description": "Average temperature deviation from standard day profile for this leg in degrees Celsius.",
            "type": "number",
            "example": 12.1
          },
          "legFuelDegrade": {
            "format": "double",
            "description": "The fuel degrade percentage used for this leg.",
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "example": 10.1
          },
          "legMach": {
            "format": "double",
            "description": "The average Mach speed for this leg.",
            "type": "number",
            "example": 0.74
          },
          "legMsnIndex": {
            "format": "double",
            "description": "The mission index value for this leg. The mission index is the ratio of time-related cost of aircraft operation to the cost of fuel.",
            "type": "number",
            "example": 65
          },
          "legDragIndex": {
            "format": "double",
            "description": "The percent degrade due to drag for this aircraft for this leg.",
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "example": 1.2
          },
          "avgCalAirspeed": {
            "format": "double",
            "description": "The average calibrated airspeed (CAS) for this leg in knots.",
            "type": "number",
            "example": 200.1
          },
          "avgTrueAirspeed": {
            "format": "double",
            "description": "The average true airspeed (TAS) for this leg in knots.",
            "type": "number",
            "example": 210.1
          },
          "avgGroundSpeed": {
            "format": "double",
            "description": "The average ground speed for this leg in knots.",
            "type": "number",
            "example": 300.1
          },
          "priFreq": {
            "format": "double",
            "description": "The primary UHF radio frequency used for the air refueling track or anchor in megahertz.",
            "type": "number",
            "example": 357.5
          },
          "pointWindDir": {
            "format": "double",
            "description": "The wind direction at this specific point in degrees from true north.",
            "type": "number",
            "example": 165.5
          },
          "pointWindSpeed": {
            "format": "double",
            "description": "The wind velocity at this specific point in knots.",
            "type": "number",
            "example": 14.4
          },
          "avgWindDir": {
            "format": "double",
            "description": "The average wind direction for this leg in degrees from true north.",
            "type": "number",
            "example": 165.5
          },
          "avgWindSpeed": {
            "format": "double",
            "description": "The average wind speed for this leg in knots.",
            "type": "number",
            "example": 14.4
          },
          "legWindFac": {
            "format": "double",
            "description": "The wind factor for this leg in knots. A positive value indicates a headwind, while a negative value indicates a tailwind.",
            "type": "number",
            "example": -32.1
          },
          "avgDriftAng": {
            "format": "double",
            "description": "The average drift angle for this leg in degrees from true north.",
            "type": "number",
            "example": -3.2
          },
          "secFreq": {
            "format": "double",
            "description": "The secondary UHF radio frequency used for the air refueling track or anchor in megahertz.",
            "type": "number",
            "example": 357.5
          },
          "magCourse": {
            "format": "double",
            "description": "The magnetic course at leg midpoint in degrees from true north.",
            "type": "number",
            "example": 338.1
          },
          "trueCourse": {
            "format": "double",
            "description": "The true course at leg midpoint in degrees from true north.",
            "type": "number",
            "example": 328.1
          },
          "magHeading": {
            "format": "double",
            "description": "The magnetic heading at leg midpoint in degrees from true north.",
            "type": "number",
            "example": 212.1
          },
          "aaTacanChannel": {
            "description": "The air-to-air Tactical Air Navigation (TACAN) channels used by the receiver/tanker during air refueling.",
            "maxLength": 16,
            "type": "string",
            "example": "31/94"
          },
          "zoneDistance": {
            "format": "double",
            "description": "The zone/leg distance flown in nautical miles.",
            "type": "number",
            "example": 212.1
          },
          "totalFlownDistance": {
            "format": "double",
            "description": "The total distance flown to this waypoint calculated from point of departure in nautical miles.",
            "type": "number",
            "example": 688.1
          },
          "totalRemDistance": {
            "format": "double",
            "description": "The total distance remaining from this waypoint to the point of arrival in nautical miles.",
            "type": "number",
            "example": 1288.1
          },
          "zoneTime": {
            "format": "double",
            "description": "The time to fly this zone/leg in minutes.",
            "type": "number",
            "example": 36.1
          },
          "totalTime": {
            "description": "The total time accumulated from takeoff to this waypoint expressed as HH:MM.",
            "maxLength": 6,
            "type": "string",
            "example": "08:45"
          },
          "totalTimeRem": {
            "description": "The total time remaining from this waypoint to the point of arrival expressed as HH:MM.",
            "maxLength": 6,
            "type": "string",
            "example": "01:43"
          },
          "zoneFuel": {
            "format": "double",
            "description": "The amount of fuel used on this zone/leg in pounds.",
            "type": "number",
            "example": 1120.1
          },
          "totalUsedFuel": {
            "format": "double",
            "description": "The total fuel used to this waypoint from point of departure in pounds.",
            "type": "number",
            "example": 70431.1
          },
          "totalRemFuel": {
            "format": "double",
            "description": "The total fuel remaining at this waypoint in pounds.",
            "type": "number",
            "example": 30453.1
          },
          "exchangedFuel": {
            "format": "double",
            "description": "The amount of fuel onloaded or offloaded at this waypoint in pounds (negative value for offload).",
            "type": "number",
            "example": -30400.1
          },
          "airDistance": {
            "format": "double",
            "description": "The air distance of this leg in nautical miles.",
            "type": "number",
            "example": 321.1
          },
          "totalAirDistance": {
            "format": "double",
            "description": "The total air distance to this waypoint in nautical miles.",
            "type": "number",
            "example": 3251.1
          },
          "totalWeight": {
            "format": "double",
            "description": "The total weight of the aircraft at this waypoint in pounds.",
            "type": "number",
            "example": 207123.1
          },
          "eta": {
            "format": "date-time",
            "description": "Estimated Time of Arrival (ETA) at this waypoint in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2023-09-09T01:00:00.123Z"
          },
          "ata": {
            "format": "date-time",
            "description": "Actual Time of Arrival (ATA) at this waypoint in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2023-09-09T01:00:00.123Z"
          },
          "fuelFlow": {
            "format": "double",
            "description": "The leg fuel flow in pounds per hour.",
            "type": "number",
            "example": 17654.1
          },
          "legAlternate": {
            "description": "The planned alternate leg based on user-defined constraints, International Civil Aviation Organization (ICAO) code preferred.",
            "maxLength": 16,
            "type": "string",
            "example": "KCHS"
          },
          "magVar": {
            "format": "double",
            "description": "The magnetic variation for this leg in degrees.",
            "type": "number",
            "example": -13.2
          },
          "dayLowAlt": {
            "format": "double",
            "description": "The day low level altitude in feet above sea level for the leg ending at this waypoint.",
            "type": "number",
            "example": 1500.1
          },
          "nightLowAlt": {
            "format": "double",
            "description": "The night low level altitude in feet above sea level for the leg ending at this waypoint.",
            "type": "number",
            "example": 2300.1
          },
          "nvgLowAlt": {
            "format": "double",
            "description": "The night vision goggle low level altitude in feet above sea level for the leg ending at this waypoint.",
            "type": "number",
            "example": 2450.1
          }
        }
      },
      "GenText_Abridged": {
        "description": "Collection that details special instructions, important information, guidance, and amplifying information regarding this ATO.",
        "type": "object",
        "properties": {
          "textInd": {
            "description": "The indicator for the general text block. Examples include \"OPENING REMARKS\" and \"GENERAL SPINS INFORMATION\".",
            "maxLength": 64,
            "type": "string",
            "example": "OPENING REMARKS"
          },
          "text": {
            "description": "The free text that describes the information specific to the text indicator.",
            "maxLength": 1024,
            "type": "string",
            "example": "FREE-TEXT"
          }
        }
      },
      "GenText_Full": {
        "description": "Collection that details special instructions, important information, guidance, and amplifying information regarding this ATO.",
        "type": "object",
        "properties": {
          "textInd": {
            "description": "The indicator for the general text block. Examples include \"OPENING REMARKS\" and \"GENERAL SPINS INFORMATION\".",
            "maxLength": 64,
            "type": "string",
            "example": "OPENING REMARKS"
          },
          "text": {
            "description": "The free text that describes the information specific to the text indicator.",
            "maxLength": 1024,
            "type": "string",
            "example": "FREE-TEXT"
          }
        }
      },
      "GenText_Ingest": {
        "description": "Collection that details special instructions, important information, guidance, and amplifying information regarding this ATO.",
        "type": "object",
        "properties": {
          "textInd": {
            "description": "The indicator for the general text block. Examples include \"OPENING REMARKS\" and \"GENERAL SPINS INFORMATION\".",
            "maxLength": 64,
            "type": "string",
            "example": "OPENING REMARKS"
          },
          "text": {
            "description": "The free text that describes the information specific to the text indicator.",
            "maxLength": 1024,
            "type": "string",
            "example": "FREE-TEXT"
          }
        }
      },
      "IndividualAircraftTasking_Abridged": {
        "description": "Collection that specifies the naval flight operations for this ATO.",
        "required": [
          "acftType"
        ],
        "type": "object",
        "properties": {
          "numAcft": {
            "format": "int32",
            "description": "The number of aircraft participating in this mission.",
            "type": "integer",
            "example": 2
          },
          "acftType": {
            "description": "The type and model number for the aircraft. The field may specify a value of an aircraft not yet assigned an aircraft code contained in the aircraft codes list.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "F35A"
          },
          "callSign": {
            "description": "The call sign assigned to this mission aircraft.",
            "maxLength": 24,
            "type": "string",
            "example": "EAGLE47"
          },
          "priConfigCode": {
            "description": "The code that indicates the ordinance mix carried on this mission aircraft.",
            "maxLength": 48,
            "type": "string",
            "example": "6A2W3"
          },
          "secConfigCode": {
            "description": "The code for the secondary ordinance mix carried on this mission aircraft.",
            "maxLength": 48,
            "type": "string",
            "example": "2S2WG"
          },
          "link16CallSign": {
            "description": "The Link 16 abbreviated call sign assigned to the ACA. This is normally the first and last letter and the last two numbers of the call sign.",
            "maxLength": 8,
            "type": "string",
            "example": "EE47"
          },
          "tacanChan": {
            "format": "int32",
            "description": "The TACAN channel assigned to this mission aircraft.",
            "type": "integer",
            "example": 123
          },
          "juAddress": {
            "description": "An optional array of link 16 octal track numbers assigned as the primary JTIDS Unit (JU) address for the mission aircraft.",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "example": [
              12345,
              65432
            ]
          },
          "iffSifMode1Code": {
            "description": "The mode 1 and code of the Identification Friend or FOE (IFF) or Selective Identification Feature (SIF).",
            "maxLength": 8,
            "type": "string",
            "example": "111"
          },
          "iffSifMode2Code": {
            "description": "The mode 2 and code of the Identification Friend or FOE (IFF) or Selective Identification Feature (SIF).",
            "maxLength": 8,
            "type": "string",
            "example": "20147"
          },
          "iffSifMode3Code": {
            "description": "The mode 3 and code of the Identification Friend or FOE (IFF) or Selective Identification Feature (SIF).",
            "maxLength": 8,
            "type": "string",
            "example": "30147"
          }
        }
      },
      "IndividualAircraftTasking_Full": {
        "description": "Collection that specifies the naval flight operations for this ATO.",
        "required": [
          "acftType"
        ],
        "type": "object",
        "properties": {
          "numAcft": {
            "format": "int32",
            "description": "The number of aircraft participating in this mission.",
            "type": "integer",
            "example": 2
          },
          "acftType": {
            "description": "The type and model number for the aircraft. The field may specify a value of an aircraft not yet assigned an aircraft code contained in the aircraft codes list.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "F35A"
          },
          "callSign": {
            "description": "The call sign assigned to this mission aircraft.",
            "maxLength": 24,
            "type": "string",
            "example": "EAGLE47"
          },
          "priConfigCode": {
            "description": "The code that indicates the ordinance mix carried on this mission aircraft.",
            "maxLength": 48,
            "type": "string",
            "example": "6A2W3"
          },
          "secConfigCode": {
            "description": "The code for the secondary ordinance mix carried on this mission aircraft.",
            "maxLength": 48,
            "type": "string",
            "example": "2S2WG"
          },
          "link16CallSign": {
            "description": "The Link 16 abbreviated call sign assigned to the ACA. This is normally the first and last letter and the last two numbers of the call sign.",
            "maxLength": 8,
            "type": "string",
            "example": "EE47"
          },
          "tacanChan": {
            "format": "int32",
            "description": "The TACAN channel assigned to this mission aircraft.",
            "type": "integer",
            "example": 123
          },
          "juAddress": {
            "description": "An optional array of link 16 octal track numbers assigned as the primary JTIDS Unit (JU) address for the mission aircraft.",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "example": [
              12345,
              65432
            ]
          },
          "iffSifMode1Code": {
            "description": "The mode 1 and code of the Identification Friend or FOE (IFF) or Selective Identification Feature (SIF).",
            "maxLength": 8,
            "type": "string",
            "example": "111"
          },
          "iffSifMode2Code": {
            "description": "The mode 2 and code of the Identification Friend or FOE (IFF) or Selective Identification Feature (SIF).",
            "maxLength": 8,
            "type": "string",
            "example": "20147"
          },
          "iffSifMode3Code": {
            "description": "The mode 3 and code of the Identification Friend or FOE (IFF) or Selective Identification Feature (SIF).",
            "maxLength": 8,
            "type": "string",
            "example": "30147"
          }
        }
      },
      "IndividualAircraftTasking_Ingest": {
        "description": "Collection that specifies the naval flight operations for this ATO.",
        "required": [
          "acftType"
        ],
        "type": "object",
        "properties": {
          "numAcft": {
            "format": "int32",
            "description": "The number of aircraft participating in this mission.",
            "type": "integer",
            "example": 2
          },
          "acftType": {
            "description": "The type and model number for the aircraft. The field may specify a value of an aircraft not yet assigned an aircraft code contained in the aircraft codes list.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "F35A"
          },
          "callSign": {
            "description": "The call sign assigned to this mission aircraft.",
            "maxLength": 24,
            "type": "string",
            "example": "EAGLE47"
          },
          "priConfigCode": {
            "description": "The code that indicates the ordinance mix carried on this mission aircraft.",
            "maxLength": 48,
            "type": "string",
            "example": "6A2W3"
          },
          "secConfigCode": {
            "description": "The code for the secondary ordinance mix carried on this mission aircraft.",
            "maxLength": 48,
            "type": "string",
            "example": "2S2WG"
          },
          "link16CallSign": {
            "description": "The Link 16 abbreviated call sign assigned to the ACA. This is normally the first and last letter and the last two numbers of the call sign.",
            "maxLength": 8,
            "type": "string",
            "example": "EE47"
          },
          "tacanChan": {
            "format": "int32",
            "description": "The TACAN channel assigned to this mission aircraft.",
            "type": "integer",
            "example": 123
          },
          "juAddress": {
            "description": "An optional array of link 16 octal track numbers assigned as the primary JTIDS Unit (JU) address for the mission aircraft.",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "example": [
              12345,
              65432
            ]
          },
          "iffSifMode1Code": {
            "description": "The mode 1 and code of the Identification Friend or FOE (IFF) or Selective Identification Feature (SIF).",
            "maxLength": 8,
            "type": "string",
            "example": "111"
          },
          "iffSifMode2Code": {
            "description": "The mode 2 and code of the Identification Friend or FOE (IFF) or Selective Identification Feature (SIF).",
            "maxLength": 8,
            "type": "string",
            "example": "20147"
          },
          "iffSifMode3Code": {
            "description": "The mode 3 and code of the Identification Friend or FOE (IFF) or Selective Identification Feature (SIF).",
            "maxLength": 8,
            "type": "string",
            "example": "30147"
          }
        }
      },
      "Item_Abridged": {
        "required": [
          "classificationMarking",
          "scanCode",
          "type",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system if not provided on create operations.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "22f1f6da-a568-655a-ea37-76d013d04853"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idAirLoadPlan": {
            "description": "The UDL ID of the air load plan this item is associated with.",
            "maxLength": 36,
            "type": "string",
            "example": "1038c389-d38e-270f-51cc-6a12e905abe8"
          },
          "scanCode": {
            "description": "The tracking identifier of an item or person. May be similar in representation of a barcode or UPC. If no scanCode or tracking number equivalent is available, 'NONE' should be used.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "12345ABCD"
          },
          "scGenTool": {
            "description": "The algorithm name or standard that generated the scanCode (e.g. UPC-A, EAN-13, GTIN, SSCC, bID, JAN, etc.).",
            "maxLength": 36,
            "type": "string",
            "example": "bID"
          },
          "type": {
            "description": "The item type of this record (e.g. EQUIPMENT, CARGO, PASSENGER).",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "example": "CARGO"
          },
          "cargoType": {
            "description": "The type of cargo (e.g. PALLET, ROLLING STOCK, LOOSE, OTHER). Applicable for cargo item types only.",
            "maxLength": 32,
            "type": "string",
            "example": "PALLET"
          },
          "name": {
            "description": "Name of the item. Applicable for equipment and cargo item types only.",
            "maxLength": 100,
            "type": "string",
            "example": "Product Name"
          },
          "destination": {
            "description": "The destination of the item, typically an ICAO or port code. Applicable for cargo and passenger item types only.",
            "maxLength": 36,
            "type": "string",
            "example": "RMS"
          },
          "departure": {
            "description": "The departure code or location where this item has left or is leaving.",
            "maxLength": 36,
            "type": "string",
            "example": "CHS"
          },
          "receivingUnit": {
            "description": "The name of the unit receiving this item.",
            "maxLength": 100,
            "type": "string",
            "example": "50 SBN"
          },
          "receivingBranch": {
            "description": "The military branch receiving this item.",
            "maxLength": 32,
            "type": "string",
            "example": "Air Force"
          },
          "lastArrDate": {
            "format": "date",
            "description": "The latest acceptable arrival date of the item at the destination, in ISO 8601 date-only format (e.g. YYYY-MM-DD).",
            "type": "string",
            "example": "2023-03-13"
          },
          "uln": {
            "description": "The unit line number of this item.",
            "maxLength": 16,
            "type": "string",
            "example": "T01ME01"
          },
          "weight": {
            "format": "double",
            "description": "Weight of the item in kilograms (if item is a passenger, include on-person bags).",
            "type": "number",
            "example": 5443.335
          },
          "weightTS": {
            "format": "date-time",
            "description": "Timestamp when the weight was taken, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-03-13T16:06:00.123Z"
          },
          "commodityCode": {
            "description": "The classification code of the commodity or group of commodities.",
            "maxLength": 50,
            "type": "string",
            "example": "2304116"
          },
          "commoditySys": {
            "description": "The classification system denoting the commodity code, commodityCode (e.g. AIR, WATER, NMFC, UFC, STCC, DODUNQ, etc.).",
            "maxLength": 36,
            "type": "string",
            "example": "STCC"
          },
          "productCode": {
            "description": "The code denoting the type of material item.",
            "maxLength": 36,
            "type": "string",
            "example": "530500234"
          },
          "productSys": {
            "description": "The assigning system that denotes the type of material item, productCode (e.g. NSN-national stock number, NDC-national drug code, MPN-manufacturer part number, etc.).",
            "maxLength": 32,
            "type": "string",
            "example": "NSN"
          },
          "width": {
            "format": "double",
            "description": "Width of the cargo in meters. Applicable for cargo item types only.",
            "type": "number",
            "example": 1.1
          },
          "length": {
            "format": "double",
            "description": "Length of the cargo in meters. Applicable for cargo item types only.",
            "type": "number",
            "example": 1.1
          },
          "height": {
            "format": "double",
            "description": "Height of the cargo in meters. Applicable for cargo item types only.",
            "type": "number",
            "example": 1.1
          },
          "volume": {
            "format": "double",
            "description": "The volume of the item, in cubic meters. Applicable for cargo item types only.",
            "type": "number",
            "example": 7.8902
          },
          "cg": {
            "format": "double",
            "description": "Center of gravity position of the item, measured from the item's front datum, in centimeters.",
            "type": "number",
            "example": 112.014
          },
          "fs": {
            "format": "double",
            "description": "The fuselage station of the item measured from the reference datum, in centimeters. Applicable for cargo and passenger item types only.",
            "type": "number",
            "example": 412.1
          },
          "centerlineOffset": {
            "format": "double",
            "description": "How far left or right of centerline is the item in meters. Applicable for cargo and passenger item types only.",
            "type": "number",
            "example": 3.1
          },
          "moment": {
            "format": "double",
            "description": "Moment of the item in Newton-meters. Applicable for equipment and cargo item types only.",
            "type": "number",
            "example": 4000.1
          },
          "airdrop": {
            "description": "Flag indicating this item is planned to be airdropped. Applicable for cargo and passenger item types only.",
            "type": "boolean",
            "example": true
          },
          "tcn": {
            "description": "Transportation Control Number of the cargo. Applicable for cargo item types only.",
            "maxLength": 17,
            "type": "string",
            "example": "M1358232245912XXX"
          },
          "hazCodes": {
            "description": "Array of UN hazard classes or division codes that apply to this item.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.1,
              1.2
            ]
          },
          "netExpWt": {
            "format": "double",
            "description": "Net explosive weight of the item, in kilograms.",
            "type": "number",
            "example": 51.437
          },
          "container": {
            "description": "Flag indicating this item acts as a container and contains additional items.",
            "type": "boolean",
            "example": true
          },
          "itemContains": {
            "description": "Array of tracking identifiers that are contained within this item.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "2UJ8843K",
              "745YV1T65"
            ]
          },
          "numPalletPos": {
            "format": "int32",
            "description": "Number of pallet positions or equivalent on the aircraft, ship, or conveyance equipment that this item occupies.",
            "type": "integer",
            "example": 2
          },
          "dvCode": {
            "description": "United States Distinguished Visitor Code, only applicable to people.",
            "maxLength": 16,
            "type": "string",
            "example": "DV-2"
          },
          "notes": {
            "description": "Optional notes or comments about this item.",
            "maxLength": 1024,
            "type": "string",
            "example": "Example notes"
          },
          "keys": {
            "description": "Array of keys that may be associated to this item. The entries in this array must correspond to the position index in the values array. This array must be the same length as values..",
            "maxItems": 64,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "key1",
              "key2"
            ]
          },
          "values": {
            "description": "Array of values for the keys that may be associated to this tracked item. The entries in this array must correspond to the position index in the keys array. This array must be the same length as keys.",
            "maxItems": 64,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "value1",
              "value2"
            ]
          },
          "altDataFormat": {
            "description": "Name of the additional data format so downstream consuming applications can know how to parse it. Typically includes the source system name and the format name.",
            "maxLength": 100,
            "type": "string",
            "example": "Alt Data Format"
          },
          "accSystem": {
            "description": "Name of the system that accepted this item from a customer. Where a user or application could go look for additional information.",
            "maxLength": 100,
            "type": "string",
            "example": "Accepting System"
          },
          "accSysNotes": {
            "description": "Additional data required to find this item in the accepting system.",
            "maxLength": 1024,
            "type": "string",
            "example": "Accepting System Notes"
          },
          "accSysKeys": {
            "description": "Array of keys that may be associated to the accepting system data. The entries in this array must correspond to the position index in accSysValues array. This array must be the same length as accSysValues.",
            "maxItems": 64,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "System key1",
              "System key2"
            ]
          },
          "accSysValues": {
            "description": "Array of values for the keys that may be associated to the accepting system data. The entries in this array must correspond to the position index in accSysKeys array. This array must be the same length as accSysKeys.",
            "maxItems": 64,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "System value1",
              "System value2"
            ]
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2023-03-21T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "Item_Full": {
        "required": [
          "classificationMarking",
          "scanCode",
          "type",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system if not provided on create operations.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "22f1f6da-a568-655a-ea37-76d013d04853"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idAirLoadPlan": {
            "description": "The UDL ID of the air load plan this item is associated with.",
            "maxLength": 36,
            "type": "string",
            "example": "1038c389-d38e-270f-51cc-6a12e905abe8"
          },
          "scanCode": {
            "description": "The tracking identifier of an item or person. May be similar in representation of a barcode or UPC. If no scanCode or tracking number equivalent is available, 'NONE' should be used.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "12345ABCD"
          },
          "scGenTool": {
            "description": "The algorithm name or standard that generated the scanCode (e.g. UPC-A, EAN-13, GTIN, SSCC, bID, JAN, etc.).",
            "maxLength": 36,
            "type": "string",
            "example": "bID"
          },
          "type": {
            "description": "The item type of this record (e.g. EQUIPMENT, CARGO, PASSENGER).",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "example": "CARGO"
          },
          "cargoType": {
            "description": "The type of cargo (e.g. PALLET, ROLLING STOCK, LOOSE, OTHER). Applicable for cargo item types only.",
            "maxLength": 32,
            "type": "string",
            "example": "PALLET"
          },
          "name": {
            "description": "Name of the item. Applicable for equipment and cargo item types only.",
            "maxLength": 100,
            "type": "string",
            "example": "Product Name"
          },
          "destination": {
            "description": "The destination of the item, typically an ICAO or port code. Applicable for cargo and passenger item types only.",
            "maxLength": 36,
            "type": "string",
            "example": "RMS"
          },
          "departure": {
            "description": "The departure code or location where this item has left or is leaving.",
            "maxLength": 36,
            "type": "string",
            "example": "CHS"
          },
          "receivingUnit": {
            "description": "The name of the unit receiving this item.",
            "maxLength": 100,
            "type": "string",
            "example": "50 SBN"
          },
          "receivingBranch": {
            "description": "The military branch receiving this item.",
            "maxLength": 32,
            "type": "string",
            "example": "Air Force"
          },
          "lastArrDate": {
            "format": "date",
            "description": "The latest acceptable arrival date of the item at the destination, in ISO 8601 date-only format (e.g. YYYY-MM-DD).",
            "type": "string",
            "example": "2023-03-13"
          },
          "uln": {
            "description": "The unit line number of this item.",
            "maxLength": 16,
            "type": "string",
            "example": "T01ME01"
          },
          "weight": {
            "format": "double",
            "description": "Weight of the item in kilograms (if item is a passenger, include on-person bags).",
            "type": "number",
            "example": 5443.335
          },
          "weightTS": {
            "format": "date-time",
            "description": "Timestamp when the weight was taken, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-03-13T16:06:00.123Z"
          },
          "commodityCode": {
            "description": "The classification code of the commodity or group of commodities.",
            "maxLength": 50,
            "type": "string",
            "example": "2304116"
          },
          "commoditySys": {
            "description": "The classification system denoting the commodity code, commodityCode (e.g. AIR, WATER, NMFC, UFC, STCC, DODUNQ, etc.).",
            "maxLength": 36,
            "type": "string",
            "example": "STCC"
          },
          "productCode": {
            "description": "The code denoting the type of material item.",
            "maxLength": 36,
            "type": "string",
            "example": "530500234"
          },
          "productSys": {
            "description": "The assigning system that denotes the type of material item, productCode (e.g. NSN-national stock number, NDC-national drug code, MPN-manufacturer part number, etc.).",
            "maxLength": 32,
            "type": "string",
            "example": "NSN"
          },
          "width": {
            "format": "double",
            "description": "Width of the cargo in meters. Applicable for cargo item types only.",
            "type": "number",
            "example": 1.1
          },
          "length": {
            "format": "double",
            "description": "Length of the cargo in meters. Applicable for cargo item types only.",
            "type": "number",
            "example": 1.1
          },
          "height": {
            "format": "double",
            "description": "Height of the cargo in meters. Applicable for cargo item types only.",
            "type": "number",
            "example": 1.1
          },
          "volume": {
            "format": "double",
            "description": "The volume of the item, in cubic meters. Applicable for cargo item types only.",
            "type": "number",
            "example": 7.8902
          },
          "cg": {
            "format": "double",
            "description": "Center of gravity position of the item, measured from the item's front datum, in centimeters.",
            "type": "number",
            "example": 112.014
          },
          "fs": {
            "format": "double",
            "description": "The fuselage station of the item measured from the reference datum, in centimeters. Applicable for cargo and passenger item types only.",
            "type": "number",
            "example": 412.1
          },
          "centerlineOffset": {
            "format": "double",
            "description": "How far left or right of centerline is the item in meters. Applicable for cargo and passenger item types only.",
            "type": "number",
            "example": 3.1
          },
          "moment": {
            "format": "double",
            "description": "Moment of the item in Newton-meters. Applicable for equipment and cargo item types only.",
            "type": "number",
            "example": 4000.1
          },
          "airdrop": {
            "description": "Flag indicating this item is planned to be airdropped. Applicable for cargo and passenger item types only.",
            "type": "boolean",
            "example": true
          },
          "tcn": {
            "description": "Transportation Control Number of the cargo. Applicable for cargo item types only.",
            "maxLength": 17,
            "type": "string",
            "example": "M1358232245912XXX"
          },
          "hazCodes": {
            "description": "Array of UN hazard classes or division codes that apply to this item.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.1,
              1.2
            ]
          },
          "netExpWt": {
            "format": "double",
            "description": "Net explosive weight of the item, in kilograms.",
            "type": "number",
            "example": 51.437
          },
          "container": {
            "description": "Flag indicating this item acts as a container and contains additional items.",
            "type": "boolean",
            "example": true
          },
          "itemContains": {
            "description": "Array of tracking identifiers that are contained within this item.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "2UJ8843K",
              "745YV1T65"
            ]
          },
          "numPalletPos": {
            "format": "int32",
            "description": "Number of pallet positions or equivalent on the aircraft, ship, or conveyance equipment that this item occupies.",
            "type": "integer",
            "example": 2
          },
          "dvCode": {
            "description": "United States Distinguished Visitor Code, only applicable to people.",
            "maxLength": 16,
            "type": "string",
            "example": "DV-2"
          },
          "notes": {
            "description": "Optional notes or comments about this item.",
            "maxLength": 1024,
            "type": "string",
            "example": "Example notes"
          },
          "keys": {
            "description": "Array of keys that may be associated to this item. The entries in this array must correspond to the position index in the values array. This array must be the same length as values..",
            "maxItems": 64,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "key1",
              "key2"
            ]
          },
          "values": {
            "description": "Array of values for the keys that may be associated to this tracked item. The entries in this array must correspond to the position index in the keys array. This array must be the same length as keys.",
            "maxItems": 64,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "value1",
              "value2"
            ]
          },
          "altDataFormat": {
            "description": "Name of the additional data format so downstream consuming applications can know how to parse it. Typically includes the source system name and the format name.",
            "maxLength": 100,
            "type": "string",
            "example": "Alt Data Format"
          },
          "accSystem": {
            "description": "Name of the system that accepted this item from a customer. Where a user or application could go look for additional information.",
            "maxLength": 100,
            "type": "string",
            "example": "Accepting System"
          },
          "accSysNotes": {
            "description": "Additional data required to find this item in the accepting system.",
            "maxLength": 1024,
            "type": "string",
            "example": "Accepting System Notes"
          },
          "accSysKeys": {
            "description": "Array of keys that may be associated to the accepting system data. The entries in this array must correspond to the position index in accSysValues array. This array must be the same length as accSysValues.",
            "maxItems": 64,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "System key1",
              "System key2"
            ]
          },
          "accSysValues": {
            "description": "Array of values for the keys that may be associated to the accepting system data. The entries in this array must correspond to the position index in accSysKeys array. This array must be the same length as accSysKeys.",
            "maxItems": 64,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "System value1",
              "System value2"
            ]
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2023-03-21T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "Item_Ingest": {
        "required": [
          "classificationMarking",
          "scanCode",
          "type",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system if not provided on create operations.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "22f1f6da-a568-655a-ea37-76d013d04853"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idAirLoadPlan": {
            "description": "The UDL ID of the air load plan this item is associated with.",
            "maxLength": 36,
            "type": "string",
            "example": "1038c389-d38e-270f-51cc-6a12e905abe8"
          },
          "scanCode": {
            "description": "The tracking identifier of an item or person. May be similar in representation of a barcode or UPC. If no scanCode or tracking number equivalent is available, 'NONE' should be used.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "12345ABCD"
          },
          "scGenTool": {
            "description": "The algorithm name or standard that generated the scanCode (e.g. UPC-A, EAN-13, GTIN, SSCC, bID, JAN, etc.).",
            "maxLength": 36,
            "type": "string",
            "example": "bID"
          },
          "type": {
            "description": "The item type of this record (e.g. EQUIPMENT, CARGO, PASSENGER).",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "example": "CARGO"
          },
          "cargoType": {
            "description": "The type of cargo (e.g. PALLET, ROLLING STOCK, LOOSE, OTHER). Applicable for cargo item types only.",
            "maxLength": 32,
            "type": "string",
            "example": "PALLET"
          },
          "name": {
            "description": "Name of the item. Applicable for equipment and cargo item types only.",
            "maxLength": 100,
            "type": "string",
            "example": "Product Name"
          },
          "destination": {
            "description": "The destination of the item, typically an ICAO or port code. Applicable for cargo and passenger item types only.",
            "maxLength": 36,
            "type": "string",
            "example": "RMS"
          },
          "departure": {
            "description": "The departure code or location where this item has left or is leaving.",
            "maxLength": 36,
            "type": "string",
            "example": "CHS"
          },
          "receivingUnit": {
            "description": "The name of the unit receiving this item.",
            "maxLength": 100,
            "type": "string",
            "example": "50 SBN"
          },
          "receivingBranch": {
            "description": "The military branch receiving this item.",
            "maxLength": 32,
            "type": "string",
            "example": "Air Force"
          },
          "lastArrDate": {
            "format": "date",
            "description": "The latest acceptable arrival date of the item at the destination, in ISO 8601 date-only format (e.g. YYYY-MM-DD).",
            "type": "string",
            "example": "2023-03-13"
          },
          "uln": {
            "description": "The unit line number of this item.",
            "maxLength": 16,
            "type": "string",
            "example": "T01ME01"
          },
          "weight": {
            "format": "double",
            "description": "Weight of the item in kilograms (if item is a passenger, include on-person bags).",
            "type": "number",
            "example": 5443.335
          },
          "weightTS": {
            "format": "date-time",
            "description": "Timestamp when the weight was taken, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-03-13T16:06:00.123Z"
          },
          "commodityCode": {
            "description": "The classification code of the commodity or group of commodities.",
            "maxLength": 50,
            "type": "string",
            "example": "2304116"
          },
          "commoditySys": {
            "description": "The classification system denoting the commodity code, commodityCode (e.g. AIR, WATER, NMFC, UFC, STCC, DODUNQ, etc.).",
            "maxLength": 36,
            "type": "string",
            "example": "STCC"
          },
          "productCode": {
            "description": "The code denoting the type of material item.",
            "maxLength": 36,
            "type": "string",
            "example": "530500234"
          },
          "productSys": {
            "description": "The assigning system that denotes the type of material item, productCode (e.g. NSN-national stock number, NDC-national drug code, MPN-manufacturer part number, etc.).",
            "maxLength": 32,
            "type": "string",
            "example": "NSN"
          },
          "width": {
            "format": "double",
            "description": "Width of the cargo in meters. Applicable for cargo item types only.",
            "type": "number",
            "example": 1.1
          },
          "length": {
            "format": "double",
            "description": "Length of the cargo in meters. Applicable for cargo item types only.",
            "type": "number",
            "example": 1.1
          },
          "height": {
            "format": "double",
            "description": "Height of the cargo in meters. Applicable for cargo item types only.",
            "type": "number",
            "example": 1.1
          },
          "volume": {
            "format": "double",
            "description": "The volume of the item, in cubic meters. Applicable for cargo item types only.",
            "type": "number",
            "example": 7.8902
          },
          "cg": {
            "format": "double",
            "description": "Center of gravity position of the item, measured from the item's front datum, in centimeters.",
            "type": "number",
            "example": 112.014
          },
          "fs": {
            "format": "double",
            "description": "The fuselage station of the item measured from the reference datum, in centimeters. Applicable for cargo and passenger item types only.",
            "type": "number",
            "example": 412.1
          },
          "centerlineOffset": {
            "format": "double",
            "description": "How far left or right of centerline is the item in meters. Applicable for cargo and passenger item types only.",
            "type": "number",
            "example": 3.1
          },
          "moment": {
            "format": "double",
            "description": "Moment of the item in Newton-meters. Applicable for equipment and cargo item types only.",
            "type": "number",
            "example": 4000.1
          },
          "airdrop": {
            "description": "Flag indicating this item is planned to be airdropped. Applicable for cargo and passenger item types only.",
            "type": "boolean",
            "example": true
          },
          "tcn": {
            "description": "Transportation Control Number of the cargo. Applicable for cargo item types only.",
            "maxLength": 17,
            "type": "string",
            "example": "M1358232245912XXX"
          },
          "hazCodes": {
            "description": "Array of UN hazard classes or division codes that apply to this item.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              1.1,
              1.2
            ]
          },
          "netExpWt": {
            "format": "double",
            "description": "Net explosive weight of the item, in kilograms.",
            "type": "number",
            "example": 51.437
          },
          "container": {
            "description": "Flag indicating this item acts as a container and contains additional items.",
            "type": "boolean",
            "example": true
          },
          "itemContains": {
            "description": "Array of tracking identifiers that are contained within this item.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "2UJ8843K",
              "745YV1T65"
            ]
          },
          "numPalletPos": {
            "format": "int32",
            "description": "Number of pallet positions or equivalent on the aircraft, ship, or conveyance equipment that this item occupies.",
            "type": "integer",
            "example": 2
          },
          "dvCode": {
            "description": "United States Distinguished Visitor Code, only applicable to people.",
            "maxLength": 16,
            "type": "string",
            "example": "DV-2"
          },
          "notes": {
            "description": "Optional notes or comments about this item.",
            "maxLength": 1024,
            "type": "string",
            "example": "Example notes"
          },
          "keys": {
            "description": "Array of keys that may be associated to this item. The entries in this array must correspond to the position index in the values array. This array must be the same length as values..",
            "maxItems": 64,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "key1",
              "key2"
            ]
          },
          "values": {
            "description": "Array of values for the keys that may be associated to this tracked item. The entries in this array must correspond to the position index in the keys array. This array must be the same length as keys.",
            "maxItems": 64,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "value1",
              "value2"
            ]
          },
          "altDataFormat": {
            "description": "Name of the additional data format so downstream consuming applications can know how to parse it. Typically includes the source system name and the format name.",
            "maxLength": 100,
            "type": "string",
            "example": "Alt Data Format"
          },
          "accSystem": {
            "description": "Name of the system that accepted this item from a customer. Where a user or application could go look for additional information.",
            "maxLength": 100,
            "type": "string",
            "example": "Accepting System"
          },
          "accSysNotes": {
            "description": "Additional data required to find this item in the accepting system.",
            "maxLength": 1024,
            "type": "string",
            "example": "Accepting System Notes"
          },
          "accSysKeys": {
            "description": "Array of keys that may be associated to the accepting system data. The entries in this array must correspond to the position index in accSysValues array. This array must be the same length as accSysValues.",
            "maxItems": 64,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "System key1",
              "System key2"
            ]
          },
          "accSysValues": {
            "description": "Array of values for the keys that may be associated to the accepting system data. The entries in this array must correspond to the position index in accSysKeys array. This array must be the same length as accSysKeys.",
            "maxItems": 64,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "System value1",
              "System value2"
            ]
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2023-03-21T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "ItemTracking_Abridged": {
        "required": [
          "classificationMarking",
          "scanCode",
          "scannerId",
          "ts",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "026dd511-8ba5-47d3-9909-836149f87686"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "scanCode": {
            "description": "The tracking identifier of an item or person. May be similar in representation of a barcode or UPC.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ABC1234"
          },
          "scGenTool": {
            "description": "The algorithm name or standard that generated the scanCode (e.g. UPC-A, EAN-13, GTIN, SSCC, bID, JAN, etc.).",
            "maxLength": 36,
            "type": "string",
            "example": "bID"
          },
          "scannerId": {
            "description": "The ID of the scanner or input device.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "2051M"
          },
          "ts": {
            "format": "date-time",
            "description": "The timestamp of the scan, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-03-21T14:22:00.123Z"
          },
          "idItem": {
            "description": "The UDL ID of the item this record is associated with.",
            "maxLength": 36,
            "type": "string",
            "example": "36054487-bcba-6e2d-4f3b-9f25738b2639"
          },
          "type": {
            "description": "The type of item that is being scanned (e.g. CARGO, PERSON, MAIL, MICAP, OTHER).",
            "maxLength": 32,
            "type": "string",
            "example": "CARGO"
          },
          "lat": {
            "format": "double",
            "description": "WGS84 latitude where the item was scanned, in degrees.",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 45.23
          },
          "lon": {
            "format": "double",
            "description": "WGS84 longitude where the item was scanned, in degrees.",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 179.1
          },
          "scanType": {
            "description": "The type of scan for tracking the item within it's journey  (e.g. IN, OUT, RECEIVED, DELIVERED, TRANSIT, ABANDONDED, REFUSED, UNABLE, RETURNED, HELD, OTHER). For example, received and delivered are for when an item is received from or delivered to the end customer. In and out are for stops in between such as being loaded on an airplane or received at a warehouse.",
            "maxLength": 64,
            "type": "string",
            "example": "TRANSIT"
          },
          "dvCode": {
            "description": "The United States distinguished visitor code of the person scanned, only applicable to people.",
            "maxLength": 16,
            "type": "string",
            "example": "DV-4"
          },
          "notes": {
            "description": "Optional notes or comments about the tracking data.",
            "maxLength": 1024,
            "type": "string",
            "example": "Example notes"
          },
          "keys": {
            "description": "Array of keys that may be associated with this tracked item.",
            "maxItems": 64,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "tapeColor",
              "hazmat"
            ]
          },
          "values": {
            "description": "Array of values for the keys that may be associated to this tracked item. The entries in this array must correspond to the position index in the keys array. This array must be the same length as keys.",
            "maxItems": 64,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "yellow",
              "false"
            ]
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2023-03-21T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "ItemTracking_Full": {
        "required": [
          "classificationMarking",
          "scanCode",
          "scannerId",
          "ts",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "026dd511-8ba5-47d3-9909-836149f87686"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "scanCode": {
            "description": "The tracking identifier of an item or person. May be similar in representation of a barcode or UPC.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ABC1234"
          },
          "scGenTool": {
            "description": "The algorithm name or standard that generated the scanCode (e.g. UPC-A, EAN-13, GTIN, SSCC, bID, JAN, etc.).",
            "maxLength": 36,
            "type": "string",
            "example": "bID"
          },
          "scannerId": {
            "description": "The ID of the scanner or input device.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "2051M"
          },
          "ts": {
            "format": "date-time",
            "description": "The timestamp of the scan, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-03-21T14:22:00.123Z"
          },
          "idItem": {
            "description": "The UDL ID of the item this record is associated with.",
            "maxLength": 36,
            "type": "string",
            "example": "36054487-bcba-6e2d-4f3b-9f25738b2639"
          },
          "type": {
            "description": "The type of item that is being scanned (e.g. CARGO, PERSON, MAIL, MICAP, OTHER).",
            "maxLength": 32,
            "type": "string",
            "example": "CARGO"
          },
          "lat": {
            "format": "double",
            "description": "WGS84 latitude where the item was scanned, in degrees.",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 45.23
          },
          "lon": {
            "format": "double",
            "description": "WGS84 longitude where the item was scanned, in degrees.",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 179.1
          },
          "scanType": {
            "description": "The type of scan for tracking the item within it's journey  (e.g. IN, OUT, RECEIVED, DELIVERED, TRANSIT, ABANDONDED, REFUSED, UNABLE, RETURNED, HELD, OTHER). For example, received and delivered are for when an item is received from or delivered to the end customer. In and out are for stops in between such as being loaded on an airplane or received at a warehouse.",
            "maxLength": 64,
            "type": "string",
            "example": "TRANSIT"
          },
          "dvCode": {
            "description": "The United States distinguished visitor code of the person scanned, only applicable to people.",
            "maxLength": 16,
            "type": "string",
            "example": "DV-4"
          },
          "notes": {
            "description": "Optional notes or comments about the tracking data.",
            "maxLength": 1024,
            "type": "string",
            "example": "Example notes"
          },
          "keys": {
            "description": "Array of keys that may be associated with this tracked item.",
            "maxItems": 64,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "tapeColor",
              "hazmat"
            ]
          },
          "values": {
            "description": "Array of values for the keys that may be associated to this tracked item. The entries in this array must correspond to the position index in the keys array. This array must be the same length as keys.",
            "maxItems": 64,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "yellow",
              "false"
            ]
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2023-03-21T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "ItemTracking_Ingest": {
        "required": [
          "classificationMarking",
          "scanCode",
          "scannerId",
          "ts",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "026dd511-8ba5-47d3-9909-836149f87686"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "scanCode": {
            "description": "The tracking identifier of an item or person. May be similar in representation of a barcode or UPC.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ABC1234"
          },
          "scGenTool": {
            "description": "The algorithm name or standard that generated the scanCode (e.g. UPC-A, EAN-13, GTIN, SSCC, bID, JAN, etc.).",
            "maxLength": 36,
            "type": "string",
            "example": "bID"
          },
          "scannerId": {
            "description": "The ID of the scanner or input device.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "2051M"
          },
          "ts": {
            "format": "date-time",
            "description": "The timestamp of the scan, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-03-21T14:22:00.123Z"
          },
          "idItem": {
            "description": "The UDL ID of the item this record is associated with.",
            "maxLength": 36,
            "type": "string",
            "example": "36054487-bcba-6e2d-4f3b-9f25738b2639"
          },
          "type": {
            "description": "The type of item that is being scanned (e.g. CARGO, PERSON, MAIL, MICAP, OTHER).",
            "maxLength": 32,
            "type": "string",
            "example": "CARGO"
          },
          "lat": {
            "format": "double",
            "description": "WGS84 latitude where the item was scanned, in degrees.",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 45.23
          },
          "lon": {
            "format": "double",
            "description": "WGS84 longitude where the item was scanned, in degrees.",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 179.1
          },
          "scanType": {
            "description": "The type of scan for tracking the item within it's journey  (e.g. IN, OUT, RECEIVED, DELIVERED, TRANSIT, ABANDONDED, REFUSED, UNABLE, RETURNED, HELD, OTHER). For example, received and delivered are for when an item is received from or delivered to the end customer. In and out are for stops in between such as being loaded on an airplane or received at a warehouse.",
            "maxLength": 64,
            "type": "string",
            "example": "TRANSIT"
          },
          "dvCode": {
            "description": "The United States distinguished visitor code of the person scanned, only applicable to people.",
            "maxLength": 16,
            "type": "string",
            "example": "DV-4"
          },
          "notes": {
            "description": "Optional notes or comments about the tracking data.",
            "maxLength": 1024,
            "type": "string",
            "example": "Example notes"
          },
          "keys": {
            "description": "Array of keys that may be associated with this tracked item.",
            "maxItems": 64,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "tapeColor",
              "hazmat"
            ]
          },
          "values": {
            "description": "Array of values for the keys that may be associated to this tracked item. The entries in this array must correspond to the position index in the keys array. This array must be the same length as keys.",
            "maxItems": 64,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "yellow",
              "false"
            ]
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2023-03-21T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "LogisticsDiscrepancyInfos_Abridged": {
        "description": "Discrepancy information associated with this LogisticsSupport record.",
        "type": "object",
        "properties": {
          "jcn": {
            "description": "Job Control Number of the discrepancy.",
            "maxLength": 12,
            "type": "string",
            "example": "231942400"
          },
          "discrepancyInfo": {
            "description": "The aircraft discrepancy description.",
            "maxLength": 680,
            "type": "string",
            "example": "PILOT WINDSHIELD PANEL ASSY CRACKED, AND ARCING REQ R2 IAW 56.11.10"
          },
          "jobStTime": {
            "format": "date-time",
            "description": "The job start time, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T10:30:00.123Z"
          },
          "closureTime": {
            "format": "date-time",
            "description": "The discrepancy closure time, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T10:30:00.123Z"
          }
        }
      },
      "LogisticsDiscrepancyInfos_Full": {
        "description": "Discrepancy information associated with this LogisticsSupport record.",
        "type": "object",
        "properties": {
          "jcn": {
            "description": "Job Control Number of the discrepancy.",
            "maxLength": 12,
            "type": "string",
            "example": "231942400"
          },
          "discrepancyInfo": {
            "description": "The aircraft discrepancy description.",
            "maxLength": 680,
            "type": "string",
            "example": "PILOT WINDSHIELD PANEL ASSY CRACKED, AND ARCING REQ R2 IAW 56.11.10"
          },
          "jobStTime": {
            "format": "date-time",
            "description": "The job start time, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T10:30:00.123Z"
          },
          "closureTime": {
            "format": "date-time",
            "description": "The discrepancy closure time, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T10:30:00.123Z"
          }
        }
      },
      "LogisticsDiscrepancyInfos_Ingest": {
        "description": "Discrepancy information associated with this LogisticsSupport record.",
        "type": "object",
        "properties": {
          "jcn": {
            "description": "Job Control Number of the discrepancy.",
            "maxLength": 12,
            "type": "string",
            "example": "231942400"
          },
          "discrepancyInfo": {
            "description": "The aircraft discrepancy description.",
            "maxLength": 680,
            "type": "string",
            "example": "PILOT WINDSHIELD PANEL ASSY CRACKED, AND ARCING REQ R2 IAW 56.11.10"
          },
          "jobStTime": {
            "format": "date-time",
            "description": "The job start time, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T10:30:00.123Z"
          },
          "closureTime": {
            "format": "date-time",
            "description": "The discrepancy closure time, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T10:30:00.123Z"
          }
        }
      },
      "LogisticsParts_Abridged": {
        "description": "The parts associated with this support item.",
        "type": "object",
        "properties": {
          "partNumber": {
            "description": "Requested or supplied part number.",
            "maxLength": 20,
            "type": "string",
            "example": "MS35338-42"
          },
          "nationalStockNumber": {
            "description": "The National Stock Number of the part being requested or supplied.",
            "maxLength": 20,
            "type": "string",
            "example": "5310-00-045-3299"
          },
          "measurementUnitCode": {
            "description": "Code for a unit of measurement.",
            "maxLength": 2,
            "type": "string",
            "example": "EA"
          },
          "workUnitCode": {
            "description": "Work Unit Code (WUC), or for some aircraft types, the Reference Designator.",
            "maxLength": 10,
            "type": "string",
            "example": "5611UU001"
          },
          "technicalOrderText": {
            "description": "Indicates the specified Technical Order manual holding the aircraft information for use in diagnosing a problem or condition.",
            "maxLength": 15,
            "type": "string",
            "example": "1C-17A-4"
          },
          "figureNumber": {
            "description": "Technical order manual figure number for the requested / supplied part.",
            "maxLength": 7,
            "type": "string",
            "example": "3"
          },
          "indexNumber": {
            "description": "Technical order manual index number for the requested part.",
            "maxLength": 4,
            "type": "string",
            "example": "4"
          },
          "requestVerifier": {
            "description": "The person who validated the request for parts.",
            "maxLength": 25,
            "type": "string",
            "example": "JOHN SMITH"
          },
          "locationVerifier": {
            "description": "The person who validated that the sourced location has, and can supply, the requested parts.",
            "maxLength": 25,
            "type": "string",
            "example": "JANE DOE"
          },
          "supplyDocumentNumber": {
            "description": "The supply document number.",
            "maxLength": 17,
            "type": "string",
            "example": "J223FU31908300"
          },
          "logisticsStocks": {
            "description": "The supply stocks for this support item.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsStocks_Abridged"
            }
          }
        }
      },
      "LogisticsParts_Full": {
        "description": "The parts associated with this support item.",
        "type": "object",
        "properties": {
          "partNumber": {
            "description": "Requested or supplied part number.",
            "maxLength": 20,
            "type": "string",
            "example": "MS35338-42"
          },
          "nationalStockNumber": {
            "description": "The National Stock Number of the part being requested or supplied.",
            "maxLength": 20,
            "type": "string",
            "example": "5310-00-045-3299"
          },
          "measurementUnitCode": {
            "description": "Code for a unit of measurement.",
            "maxLength": 2,
            "type": "string",
            "example": "EA"
          },
          "workUnitCode": {
            "description": "Work Unit Code (WUC), or for some aircraft types, the Reference Designator.",
            "maxLength": 10,
            "type": "string",
            "example": "5611UU001"
          },
          "technicalOrderText": {
            "description": "Indicates the specified Technical Order manual holding the aircraft information for use in diagnosing a problem or condition.",
            "maxLength": 15,
            "type": "string",
            "example": "1C-17A-4"
          },
          "figureNumber": {
            "description": "Technical order manual figure number for the requested / supplied part.",
            "maxLength": 7,
            "type": "string",
            "example": "3"
          },
          "indexNumber": {
            "description": "Technical order manual index number for the requested part.",
            "maxLength": 4,
            "type": "string",
            "example": "4"
          },
          "requestVerifier": {
            "description": "The person who validated the request for parts.",
            "maxLength": 25,
            "type": "string",
            "example": "JOHN SMITH"
          },
          "locationVerifier": {
            "description": "The person who validated that the sourced location has, and can supply, the requested parts.",
            "maxLength": 25,
            "type": "string",
            "example": "JANE DOE"
          },
          "supplyDocumentNumber": {
            "description": "The supply document number.",
            "maxLength": 17,
            "type": "string",
            "example": "J223FU31908300"
          },
          "logisticsStocks": {
            "description": "The supply stocks for this support item.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsStocks_Full"
            }
          }
        }
      },
      "LogisticsParts_Ingest": {
        "description": "The parts associated with this support item.",
        "type": "object",
        "properties": {
          "partNumber": {
            "description": "Requested or supplied part number.",
            "maxLength": 20,
            "type": "string",
            "example": "MS35338-42"
          },
          "nationalStockNumber": {
            "description": "The National Stock Number of the part being requested or supplied.",
            "maxLength": 20,
            "type": "string",
            "example": "5310-00-045-3299"
          },
          "measurementUnitCode": {
            "description": "Code for a unit of measurement.",
            "maxLength": 2,
            "type": "string",
            "example": "EA"
          },
          "workUnitCode": {
            "description": "Work Unit Code (WUC), or for some aircraft types, the Reference Designator.",
            "maxLength": 10,
            "type": "string",
            "example": "5611UU001"
          },
          "technicalOrderText": {
            "description": "Indicates the specified Technical Order manual holding the aircraft information for use in diagnosing a problem or condition.",
            "maxLength": 15,
            "type": "string",
            "example": "1C-17A-4"
          },
          "figureNumber": {
            "description": "Technical order manual figure number for the requested / supplied part.",
            "maxLength": 7,
            "type": "string",
            "example": "3"
          },
          "indexNumber": {
            "description": "Technical order manual index number for the requested part.",
            "maxLength": 4,
            "type": "string",
            "example": "4"
          },
          "requestVerifier": {
            "description": "The person who validated the request for parts.",
            "maxLength": 25,
            "type": "string",
            "example": "JOHN SMITH"
          },
          "locationVerifier": {
            "description": "The person who validated that the sourced location has, and can supply, the requested parts.",
            "maxLength": 25,
            "type": "string",
            "example": "JANE DOE"
          },
          "supplyDocumentNumber": {
            "description": "The supply document number.",
            "maxLength": 17,
            "type": "string",
            "example": "J223FU31908300"
          },
          "logisticsStocks": {
            "description": "The supply stocks for this support item.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsStocks_Ingest"
            }
          }
        }
      },
      "LogisticsRemarks_Abridged": {
        "description": "Remarks associated with this LogisticsSupport record.",
        "type": "object",
        "properties": {
          "username": {
            "description": "User who published the remark.",
            "maxLength": 32,
            "type": "string",
            "example": "JSMITH"
          },
          "remark": {
            "description": "Text of the remark.",
            "maxLength": 4000,
            "type": "string",
            "example": "EXAMPLE REMARK"
          },
          "lastChanged": {
            "format": "date-time",
            "description": "Date the remark was published or updated, in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T10:30:00.123Z"
          }
        }
      },
      "LogisticsRemarks_Full": {
        "description": "Remarks associated with this LogisticsSupport record.",
        "type": "object",
        "properties": {
          "username": {
            "description": "User who published the remark.",
            "maxLength": 32,
            "type": "string",
            "example": "JSMITH"
          },
          "remark": {
            "description": "Text of the remark.",
            "maxLength": 4000,
            "type": "string",
            "example": "EXAMPLE REMARK"
          },
          "lastChanged": {
            "format": "date-time",
            "description": "Date the remark was published or updated, in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T10:30:00.123Z"
          }
        }
      },
      "LogisticsRemarks_Ingest": {
        "description": "Remarks associated with this LogisticsSupport record.",
        "type": "object",
        "properties": {
          "username": {
            "description": "User who published the remark.",
            "maxLength": 32,
            "type": "string",
            "example": "JSMITH"
          },
          "remark": {
            "description": "Text of the remark.",
            "maxLength": 4000,
            "type": "string",
            "example": "EXAMPLE REMARK"
          },
          "lastChanged": {
            "format": "date-time",
            "description": "Date the remark was published or updated, in ISO 8601 UTC format, with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T10:30:00.123Z"
          }
        }
      },
      "LogisticsSegments_Abridged": {
        "description": "Remarks associated with this LogisticsSupport record.",
        "type": "object",
        "properties": {
          "segmentNumber": {
            "format": "int32",
            "description": "Used to sequence the segments in the transportation plan.",
            "type": "integer",
            "example": 3
          },
          "modeCode": {
            "description": "Transportation mode.  AMC airlift, Commercial airlift, Other, or surface transportation.",
            "maxLength": 1,
            "minLength": 1,
            "type": "string",
            "example": "A"
          },
          "missionType": {
            "description": "The type of mission (e.g. SAAM, CHNL, etc.).",
            "maxLength": 6,
            "type": "string",
            "example": "SAAM"
          },
          "idMission": {
            "description": "The unique identifier of the mission to which this logistics record is assigned.",
            "maxLength": 32,
            "type": "string",
            "example": "EXAMPLE-UUID"
          },
          "extMissionId": {
            "description": "The GDSS mission ID for this segment.",
            "maxLength": 24,
            "type": "string",
            "example": "2001101RF01202307062205"
          },
          "missionNumber": {
            "description": "The user generated identifier for an air mission subgroup.",
            "maxLength": 12,
            "type": "string",
            "example": "TAM308901196"
          },
          "itin": {
            "format": "int32",
            "description": "Start air mission itinerary point identifier.",
            "type": "integer",
            "example": 200
          },
          "segTailNumber": {
            "description": "The identifier that represents a specific aircraft within an aircraft type.",
            "maxLength": 7,
            "type": "string",
            "example": "N819AX"
          },
          "segAircraftMDS": {
            "description": "The aircraft Model Design Series (MDS) designation (e.g. E-2C HAWKEYE, F-15 EAGLE, KC-130 HERCULES, etc.) of this aircraft. Intended as, but not constrained to, MIL-STD-6016 environment dependent specific type designations.",
            "maxLength": 30,
            "type": "string",
            "example": "B7772E"
          },
          "departureICAO": {
            "description": "Airport ICAO departure code.",
            "maxLength": 4,
            "type": "string",
            "example": "PHIK"
          },
          "segActDepTime": {
            "format": "date-time",
            "description": "Actual departure time to the segment destination, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T19:20:00.123Z"
          },
          "arrivalICAO": {
            "description": "Airport ICAO arrival code.",
            "maxLength": 4,
            "type": "string",
            "example": "YBCS"
          },
          "segActArrTime": {
            "format": "date-time",
            "description": "Actual arrival time to segment destination, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T19:20:00.123Z"
          },
          "segEstDepTime": {
            "format": "date-time",
            "description": "GC. LGTPS_C_DT_EST_DEP.  GD2: Estimated departure time from the segment origin. Only supplied when the segment is not attached to a Mission, otherwise the ETD is derived from the Mission segment origin point. This datetime should be in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T19:20:00.123Z"
          },
          "segEstArrTime": {
            "format": "date-time",
            "description": "GC. LGTPS_C_DT_EST_ARR.  GD2: Estimated arrival time to the segment destination. Only supplied when the segment is not attached to a Mission, otherwise the ETA is derived from the Mission segment destination point. This datetime should be in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T19:20:00.123Z"
          }
        }
      },
      "LogisticsSegments_Full": {
        "description": "Remarks associated with this LogisticsSupport record.",
        "type": "object",
        "properties": {
          "segmentNumber": {
            "format": "int32",
            "description": "Used to sequence the segments in the transportation plan.",
            "type": "integer",
            "example": 3
          },
          "modeCode": {
            "description": "Transportation mode.  AMC airlift, Commercial airlift, Other, or surface transportation.",
            "maxLength": 1,
            "minLength": 1,
            "type": "string",
            "example": "A"
          },
          "missionType": {
            "description": "The type of mission (e.g. SAAM, CHNL, etc.).",
            "maxLength": 6,
            "type": "string",
            "example": "SAAM"
          },
          "idMission": {
            "description": "The unique identifier of the mission to which this logistics record is assigned.",
            "maxLength": 32,
            "type": "string",
            "example": "EXAMPLE-UUID"
          },
          "extMissionId": {
            "description": "The GDSS mission ID for this segment.",
            "maxLength": 24,
            "type": "string",
            "example": "2001101RF01202307062205"
          },
          "missionNumber": {
            "description": "The user generated identifier for an air mission subgroup.",
            "maxLength": 12,
            "type": "string",
            "example": "TAM308901196"
          },
          "itin": {
            "format": "int32",
            "description": "Start air mission itinerary point identifier.",
            "type": "integer",
            "example": 200
          },
          "segTailNumber": {
            "description": "The identifier that represents a specific aircraft within an aircraft type.",
            "maxLength": 7,
            "type": "string",
            "example": "N819AX"
          },
          "segAircraftMDS": {
            "description": "The aircraft Model Design Series (MDS) designation (e.g. E-2C HAWKEYE, F-15 EAGLE, KC-130 HERCULES, etc.) of this aircraft. Intended as, but not constrained to, MIL-STD-6016 environment dependent specific type designations.",
            "maxLength": 30,
            "type": "string",
            "example": "B7772E"
          },
          "departureICAO": {
            "description": "Airport ICAO departure code.",
            "maxLength": 4,
            "type": "string",
            "example": "PHIK"
          },
          "segActDepTime": {
            "format": "date-time",
            "description": "Actual departure time to the segment destination, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T19:20:00.123Z"
          },
          "arrivalICAO": {
            "description": "Airport ICAO arrival code.",
            "maxLength": 4,
            "type": "string",
            "example": "YBCS"
          },
          "segActArrTime": {
            "format": "date-time",
            "description": "Actual arrival time to segment destination, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T19:20:00.123Z"
          },
          "segEstDepTime": {
            "format": "date-time",
            "description": "GC. LGTPS_C_DT_EST_DEP.  GD2: Estimated departure time from the segment origin. Only supplied when the segment is not attached to a Mission, otherwise the ETD is derived from the Mission segment origin point. This datetime should be in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T19:20:00.123Z"
          },
          "segEstArrTime": {
            "format": "date-time",
            "description": "GC. LGTPS_C_DT_EST_ARR.  GD2: Estimated arrival time to the segment destination. Only supplied when the segment is not attached to a Mission, otherwise the ETA is derived from the Mission segment destination point. This datetime should be in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T19:20:00.123Z"
          }
        }
      },
      "LogisticsSegments_Ingest": {
        "description": "Remarks associated with this LogisticsSupport record.",
        "type": "object",
        "properties": {
          "segmentNumber": {
            "format": "int32",
            "description": "Used to sequence the segments in the transportation plan.",
            "type": "integer",
            "example": 3
          },
          "modeCode": {
            "description": "Transportation mode.  AMC airlift, Commercial airlift, Other, or surface transportation.",
            "maxLength": 1,
            "minLength": 1,
            "type": "string",
            "example": "A"
          },
          "missionType": {
            "description": "The type of mission (e.g. SAAM, CHNL, etc.).",
            "maxLength": 6,
            "type": "string",
            "example": "SAAM"
          },
          "idMission": {
            "description": "The unique identifier of the mission to which this logistics record is assigned.",
            "maxLength": 32,
            "type": "string",
            "example": "EXAMPLE-UUID"
          },
          "extMissionId": {
            "description": "The GDSS mission ID for this segment.",
            "maxLength": 24,
            "type": "string",
            "example": "2001101RF01202307062205"
          },
          "missionNumber": {
            "description": "The user generated identifier for an air mission subgroup.",
            "maxLength": 12,
            "type": "string",
            "example": "TAM308901196"
          },
          "itin": {
            "format": "int32",
            "description": "Start air mission itinerary point identifier.",
            "type": "integer",
            "example": 200
          },
          "segTailNumber": {
            "description": "The identifier that represents a specific aircraft within an aircraft type.",
            "maxLength": 7,
            "type": "string",
            "example": "N819AX"
          },
          "segAircraftMDS": {
            "description": "The aircraft Model Design Series (MDS) designation (e.g. E-2C HAWKEYE, F-15 EAGLE, KC-130 HERCULES, etc.) of this aircraft. Intended as, but not constrained to, MIL-STD-6016 environment dependent specific type designations.",
            "maxLength": 30,
            "type": "string",
            "example": "B7772E"
          },
          "departureICAO": {
            "description": "Airport ICAO departure code.",
            "maxLength": 4,
            "type": "string",
            "example": "PHIK"
          },
          "segActDepTime": {
            "format": "date-time",
            "description": "Actual departure time to the segment destination, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T19:20:00.123Z"
          },
          "arrivalICAO": {
            "description": "Airport ICAO arrival code.",
            "maxLength": 4,
            "type": "string",
            "example": "YBCS"
          },
          "segActArrTime": {
            "format": "date-time",
            "description": "Actual arrival time to segment destination, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T19:20:00.123Z"
          },
          "segEstDepTime": {
            "format": "date-time",
            "description": "GC. LGTPS_C_DT_EST_DEP.  GD2: Estimated departure time from the segment origin. Only supplied when the segment is not attached to a Mission, otherwise the ETD is derived from the Mission segment origin point. This datetime should be in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T19:20:00.123Z"
          },
          "segEstArrTime": {
            "format": "date-time",
            "description": "GC. LGTPS_C_DT_EST_ARR.  GD2: Estimated arrival time to the segment destination. Only supplied when the segment is not attached to a Mission, otherwise the ETA is derived from the Mission segment destination point. This datetime should be in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T19:20:00.123Z"
          }
        }
      },
      "LogisticsSpecialties_Abridged": {
        "description": "The specialties required to implement this support item.",
        "type": "object",
        "properties": {
          "specialty": {
            "description": "Indicates where the repairs will be performed, or which shop specialty has been assigned responsibility for correcting the discrepancy. Shop specialties are normally listed in abbreviated format.",
            "maxLength": 4,
            "type": "string",
            "example": "ELEN"
          },
          "skillLevel": {
            "format": "int32",
            "description": "Skill level of the mission response team member.",
            "type": "integer",
            "example": 3
          },
          "firstName": {
            "description": "The first name of the specialist.",
            "maxLength": 20,
            "type": "string",
            "example": "JOHN"
          },
          "lastName": {
            "description": "The last name of the specialist.",
            "maxLength": 30,
            "type": "string",
            "example": "SMITH"
          },
          "rankCode": {
            "description": "Military service rank designation.",
            "maxLength": 6,
            "type": "string",
            "example": "MAJ"
          },
          "last4Ssn": {
            "description": "The last four digits of the specialist's social security number.",
            "maxLength": 4,
            "type": "string",
            "example": "9999"
          },
          "roleTypeCode": {
            "description": "Type code that determines role of the mission response team member. TC - Team Chief, TM - Team Member.",
            "maxLength": 2,
            "type": "string",
            "example": "TC"
          }
        }
      },
      "LogisticsSpecialties_Full": {
        "description": "The specialties required to implement this support item.",
        "type": "object",
        "properties": {
          "specialty": {
            "description": "Indicates where the repairs will be performed, or which shop specialty has been assigned responsibility for correcting the discrepancy. Shop specialties are normally listed in abbreviated format.",
            "maxLength": 4,
            "type": "string",
            "example": "ELEN"
          },
          "skillLevel": {
            "format": "int32",
            "description": "Skill level of the mission response team member.",
            "type": "integer",
            "example": 3
          },
          "firstName": {
            "description": "The first name of the specialist.",
            "maxLength": 20,
            "type": "string",
            "example": "JOHN"
          },
          "lastName": {
            "description": "The last name of the specialist.",
            "maxLength": 30,
            "type": "string",
            "example": "SMITH"
          },
          "rankCode": {
            "description": "Military service rank designation.",
            "maxLength": 6,
            "type": "string",
            "example": "MAJ"
          },
          "last4Ssn": {
            "description": "The last four digits of the specialist's social security number.",
            "maxLength": 4,
            "type": "string",
            "example": "9999"
          },
          "roleTypeCode": {
            "description": "Type code that determines role of the mission response team member. TC - Team Chief, TM - Team Member.",
            "maxLength": 2,
            "type": "string",
            "example": "TC"
          }
        }
      },
      "LogisticsSpecialties_Ingest": {
        "description": "The specialties required to implement this support item.",
        "type": "object",
        "properties": {
          "specialty": {
            "description": "Indicates where the repairs will be performed, or which shop specialty has been assigned responsibility for correcting the discrepancy. Shop specialties are normally listed in abbreviated format.",
            "maxLength": 4,
            "type": "string",
            "example": "ELEN"
          },
          "skillLevel": {
            "format": "int32",
            "description": "Skill level of the mission response team member.",
            "type": "integer",
            "example": 3
          },
          "firstName": {
            "description": "The first name of the specialist.",
            "maxLength": 20,
            "type": "string",
            "example": "JOHN"
          },
          "lastName": {
            "description": "The last name of the specialist.",
            "maxLength": 30,
            "type": "string",
            "example": "SMITH"
          },
          "rankCode": {
            "description": "Military service rank designation.",
            "maxLength": 6,
            "type": "string",
            "example": "MAJ"
          },
          "last4Ssn": {
            "description": "The last four digits of the specialist's social security number.",
            "maxLength": 4,
            "type": "string",
            "example": "9999"
          },
          "roleTypeCode": {
            "description": "Type code that determines role of the mission response team member. TC - Team Chief, TM - Team Member.",
            "maxLength": 2,
            "type": "string",
            "example": "TC"
          }
        }
      },
      "LogisticsStocks_Abridged": {
        "description": "The supply stocks for this support item.",
        "type": "object",
        "properties": {
          "sourceICAO": {
            "description": "The ICAO code for the primary location with available parts.",
            "maxLength": 4,
            "type": "string",
            "example": "PHIK"
          },
          "quantity": {
            "format": "int32",
            "description": "The quantity of available parts needed from sourceICAO.",
            "type": "integer",
            "example": 4
          },
          "stockCheckTime": {
            "format": "date-time",
            "description": "The datetime when the parts were sourced, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-13T13:47:00.123Z"
          },
          "stockPOC": {
            "description": "The point of contact at the sourced location.",
            "maxLength": 68,
            "type": "string",
            "example": "SMITH, JOHN J"
          }
        }
      },
      "LogisticsStocks_Full": {
        "description": "The supply stocks for this support item.",
        "type": "object",
        "properties": {
          "sourceICAO": {
            "description": "The ICAO code for the primary location with available parts.",
            "maxLength": 4,
            "type": "string",
            "example": "PHIK"
          },
          "quantity": {
            "format": "int32",
            "description": "The quantity of available parts needed from sourceICAO.",
            "type": "integer",
            "example": 4
          },
          "stockCheckTime": {
            "format": "date-time",
            "description": "The datetime when the parts were sourced, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-13T13:47:00.123Z"
          },
          "stockPOC": {
            "description": "The point of contact at the sourced location.",
            "maxLength": 68,
            "type": "string",
            "example": "SMITH, JOHN J"
          }
        }
      },
      "LogisticsStocks_Ingest": {
        "description": "The supply stocks for this support item.",
        "type": "object",
        "properties": {
          "sourceICAO": {
            "description": "The ICAO code for the primary location with available parts.",
            "maxLength": 4,
            "type": "string",
            "example": "PHIK"
          },
          "quantity": {
            "format": "int32",
            "description": "The quantity of available parts needed from sourceICAO.",
            "type": "integer",
            "example": 4
          },
          "stockCheckTime": {
            "format": "date-time",
            "description": "The datetime when the parts were sourced, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-13T13:47:00.123Z"
          },
          "stockPOC": {
            "description": "The point of contact at the sourced location.",
            "maxLength": 68,
            "type": "string",
            "example": "SMITH, JOHN J"
          }
        }
      },
      "LogisticsSupport_Abridged": {
        "description": "Comprehensive logistical details concerning the planned support of maintenance operations required by an aircraft, including transportation information, supplies coordination, and service personnel.",
        "required": [
          "classificationMarking",
          "rptCreatedTime",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system if not provided on create operations.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "LOGISTICS-SUPPORT-DETAILS UUID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "extSystemId": {
            "description": "Optional system identifier from external systs. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 24,
            "type": "string",
            "example": "GDSSBL012307131347070165"
          },
          "tailNumber": {
            "description": "The tail number of the aircraft that is the subject of this LogisticsSupportDetails record.",
            "maxLength": 7,
            "type": "string",
            "example": "99290"
          },
          "aircraftMDS": {
            "description": "The aircraft Model Design Series (MDS) designation (e.g. E-2C HAWKEYE, F-15 EAGLE, KC-130 HERCULES, etc.) of this aircraft. Intended as, but not constrained to, MIL-STD-6016 environment dependent specific type designations.",
            "maxLength": 8,
            "type": "string",
            "example": "CO17A"
          },
          "currICAO": {
            "description": "The current ICAO of the aircraft that is the subject of this LogisticsSupportDetails record.",
            "maxLength": 4,
            "type": "string",
            "example": "KCOS"
          },
          "suppICAO": {
            "description": "The supplying ICAO of the aircraft that is the subject of this LogisticsSupportDetails record.",
            "maxLength": 4,
            "type": "string",
            "example": "KCOS"
          },
          "rptCreatedTime": {
            "format": "date-time",
            "description": "The time this report was created, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-13T13:47:00.123Z"
          },
          "rptClosedTime": {
            "format": "date-time",
            "description": "The time this report was closed, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-13T13:47:00.123Z"
          },
          "meTime": {
            "format": "date-time",
            "description": "The time indicating when a given aircraft breaks for a mission essential reason. This datetime should be in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-13T13:47:00.123Z"
          },
          "mcTime": {
            "format": "date-time",
            "description": "The time indicating when all mission essential problems with a given aircraft have been fixed and is mission capable. This datetime should be in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-13T13:47:00.123Z"
          },
          "logisticAction": {
            "description": "This field identifies the pacing event for bringing the aircraft to Mission Capable status.  It is used in calculating the Estimated Time Mission Capable (ETMC) value.  Acceptable values are WA (Will Advise), INW (In Work), P+hhh.h (where P=parts and hhh.h is the number of hours up to 999 plus tenths of hours), EQ+hhh.h (EQ=equipment), MRT+hhh.h (MRT=maintenance recovery team).",
            "maxLength": 9,
            "type": "string",
            "example": "WA"
          },
          "logisticsRecordId": {
            "description": "The identifier that represents a Logistics Master Record.",
            "maxLength": 6,
            "type": "string",
            "example": "L62017"
          },
          "etic": {
            "format": "date-time",
            "description": "The estimated time mission capable for the aircraft, in ISO 8601 UCT format with millisecond precision. This is the estimated time when the aircraft is mission ready.",
            "type": "string",
            "example": "2023-07-13T13:47:00.123Z"
          },
          "etmc": {
            "format": "date-time",
            "description": "Logistics estimated time mission capable.",
            "type": "string",
            "example": "2023-07-13T13:47:00.123Z"
          },
          "maintStatusCode": {
            "description": "The maintenance status code of the aircraft which may be based on pilot descriptions or evaluation codes. Contact the source provider for details.",
            "maxLength": 6,
            "type": "string",
            "example": "NMCMU"
          },
          "reopenFlag": {
            "description": "This is used to indicate whether a closed master record has been reopened.",
            "type": "boolean",
            "example": true
          },
          "owner": {
            "description": "The organization that owns this logistics record.",
            "maxLength": 250,
            "type": "string",
            "example": "EXAMPLE_OWNER"
          },
          "logisticsRemarks": {
            "description": "Remarks associated with this LogisticsSupport record.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsRemarks_Abridged"
            }
          },
          "logisticsDiscrepancyInfos": {
            "description": "Discrepancy information associated with this LogisticsSupport record.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsDiscrepancyInfos_Abridged"
            }
          },
          "logisticsTransportationPlans": {
            "description": "Transportation plans associated with this LogisticsSupport record, used to coordinate maintenance efforts.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsTransportationPlans_Abridged"
            }
          },
          "logisticsSupportItems": {
            "description": "Support items associated with this LogisticsSupport record.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsSupportItems_Abridged"
            }
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "LogisticsSupport_Full": {
        "description": "Comprehensive logistical details concerning the planned support of maintenance operations required by an aircraft, including transportation information, supplies coordination, and service personnel.",
        "required": [
          "classificationMarking",
          "rptCreatedTime",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system if not provided on create operations.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "LOGISTICS-SUPPORT-DETAILS UUID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "extSystemId": {
            "description": "Optional system identifier from external systs. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 24,
            "type": "string",
            "example": "GDSSBL012307131347070165"
          },
          "tailNumber": {
            "description": "The tail number of the aircraft that is the subject of this LogisticsSupportDetails record.",
            "maxLength": 7,
            "type": "string",
            "example": "99290"
          },
          "aircraftMDS": {
            "description": "The aircraft Model Design Series (MDS) designation (e.g. E-2C HAWKEYE, F-15 EAGLE, KC-130 HERCULES, etc.) of this aircraft. Intended as, but not constrained to, MIL-STD-6016 environment dependent specific type designations.",
            "maxLength": 8,
            "type": "string",
            "example": "CO17A"
          },
          "currICAO": {
            "description": "The current ICAO of the aircraft that is the subject of this LogisticsSupportDetails record.",
            "maxLength": 4,
            "type": "string",
            "example": "KCOS"
          },
          "suppICAO": {
            "description": "The supplying ICAO of the aircraft that is the subject of this LogisticsSupportDetails record.",
            "maxLength": 4,
            "type": "string",
            "example": "KCOS"
          },
          "rptCreatedTime": {
            "format": "date-time",
            "description": "The time this report was created, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-13T13:47:00.123Z"
          },
          "rptClosedTime": {
            "format": "date-time",
            "description": "The time this report was closed, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-13T13:47:00.123Z"
          },
          "meTime": {
            "format": "date-time",
            "description": "The time indicating when a given aircraft breaks for a mission essential reason. This datetime should be in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-13T13:47:00.123Z"
          },
          "mcTime": {
            "format": "date-time",
            "description": "The time indicating when all mission essential problems with a given aircraft have been fixed and is mission capable. This datetime should be in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-13T13:47:00.123Z"
          },
          "logisticAction": {
            "description": "This field identifies the pacing event for bringing the aircraft to Mission Capable status.  It is used in calculating the Estimated Time Mission Capable (ETMC) value.  Acceptable values are WA (Will Advise), INW (In Work), P+hhh.h (where P=parts and hhh.h is the number of hours up to 999 plus tenths of hours), EQ+hhh.h (EQ=equipment), MRT+hhh.h (MRT=maintenance recovery team).",
            "maxLength": 9,
            "type": "string",
            "example": "WA"
          },
          "logisticsRecordId": {
            "description": "The identifier that represents a Logistics Master Record.",
            "maxLength": 6,
            "type": "string",
            "example": "L62017"
          },
          "etic": {
            "format": "date-time",
            "description": "The estimated time mission capable for the aircraft, in ISO 8601 UCT format with millisecond precision. This is the estimated time when the aircraft is mission ready.",
            "type": "string",
            "example": "2023-07-13T13:47:00.123Z"
          },
          "etmc": {
            "format": "date-time",
            "description": "Logistics estimated time mission capable.",
            "type": "string",
            "example": "2023-07-13T13:47:00.123Z"
          },
          "maintStatusCode": {
            "description": "The maintenance status code of the aircraft which may be based on pilot descriptions or evaluation codes. Contact the source provider for details.",
            "maxLength": 6,
            "type": "string",
            "example": "NMCMU"
          },
          "reopenFlag": {
            "description": "This is used to indicate whether a closed master record has been reopened.",
            "type": "boolean",
            "example": true
          },
          "owner": {
            "description": "The organization that owns this logistics record.",
            "maxLength": 250,
            "type": "string",
            "example": "EXAMPLE_OWNER"
          },
          "logisticsRemarks": {
            "description": "Remarks associated with this LogisticsSupport record.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsRemarks_Full"
            }
          },
          "logisticsDiscrepancyInfos": {
            "description": "Discrepancy information associated with this LogisticsSupport record.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsDiscrepancyInfos_Full"
            }
          },
          "logisticsTransportationPlans": {
            "description": "Transportation plans associated with this LogisticsSupport record, used to coordinate maintenance efforts.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsTransportationPlans_Full"
            }
          },
          "logisticsSupportItems": {
            "description": "Support items associated with this LogisticsSupport record.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsSupportItems_Full"
            }
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "LogisticsSupport_Ingest": {
        "description": "Comprehensive logistical details concerning the planned support of maintenance operations required by an aircraft, including transportation information, supplies coordination, and service personnel.",
        "required": [
          "classificationMarking",
          "rptCreatedTime",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system if not provided on create operations.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "LOGISTICS-SUPPORT-DETAILS UUID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "extSystemId": {
            "description": "Optional system identifier from external systs. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 24,
            "type": "string",
            "example": "GDSSBL012307131347070165"
          },
          "tailNumber": {
            "description": "The tail number of the aircraft that is the subject of this LogisticsSupportDetails record.",
            "maxLength": 7,
            "type": "string",
            "example": "99290"
          },
          "aircraftMDS": {
            "description": "The aircraft Model Design Series (MDS) designation (e.g. E-2C HAWKEYE, F-15 EAGLE, KC-130 HERCULES, etc.) of this aircraft. Intended as, but not constrained to, MIL-STD-6016 environment dependent specific type designations.",
            "maxLength": 8,
            "type": "string",
            "example": "CO17A"
          },
          "currICAO": {
            "description": "The current ICAO of the aircraft that is the subject of this LogisticsSupportDetails record.",
            "maxLength": 4,
            "type": "string",
            "example": "KCOS"
          },
          "suppICAO": {
            "description": "The supplying ICAO of the aircraft that is the subject of this LogisticsSupportDetails record.",
            "maxLength": 4,
            "type": "string",
            "example": "KCOS"
          },
          "rptCreatedTime": {
            "format": "date-time",
            "description": "The time this report was created, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-13T13:47:00.123Z"
          },
          "rptClosedTime": {
            "format": "date-time",
            "description": "The time this report was closed, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-13T13:47:00.123Z"
          },
          "meTime": {
            "format": "date-time",
            "description": "The time indicating when a given aircraft breaks for a mission essential reason. This datetime should be in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-13T13:47:00.123Z"
          },
          "mcTime": {
            "format": "date-time",
            "description": "The time indicating when all mission essential problems with a given aircraft have been fixed and is mission capable. This datetime should be in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-13T13:47:00.123Z"
          },
          "logisticAction": {
            "description": "This field identifies the pacing event for bringing the aircraft to Mission Capable status.  It is used in calculating the Estimated Time Mission Capable (ETMC) value.  Acceptable values are WA (Will Advise), INW (In Work), P+hhh.h (where P=parts and hhh.h is the number of hours up to 999 plus tenths of hours), EQ+hhh.h (EQ=equipment), MRT+hhh.h (MRT=maintenance recovery team).",
            "maxLength": 9,
            "type": "string",
            "example": "WA"
          },
          "logisticsRecordId": {
            "description": "The identifier that represents a Logistics Master Record.",
            "maxLength": 6,
            "type": "string",
            "example": "L62017"
          },
          "etic": {
            "format": "date-time",
            "description": "The estimated time mission capable for the aircraft, in ISO 8601 UCT format with millisecond precision. This is the estimated time when the aircraft is mission ready.",
            "type": "string",
            "example": "2023-07-13T13:47:00.123Z"
          },
          "etmc": {
            "format": "date-time",
            "description": "Logistics estimated time mission capable.",
            "type": "string",
            "example": "2023-07-13T13:47:00.123Z"
          },
          "maintStatusCode": {
            "description": "The maintenance status code of the aircraft which may be based on pilot descriptions or evaluation codes. Contact the source provider for details.",
            "maxLength": 6,
            "type": "string",
            "example": "NMCMU"
          },
          "reopenFlag": {
            "description": "This is used to indicate whether a closed master record has been reopened.",
            "type": "boolean",
            "example": true
          },
          "owner": {
            "description": "The organization that owns this logistics record.",
            "maxLength": 250,
            "type": "string",
            "example": "EXAMPLE_OWNER"
          },
          "logisticsRemarks": {
            "description": "Remarks associated with this LogisticsSupport record.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsRemarks_Ingest"
            }
          },
          "logisticsDiscrepancyInfos": {
            "description": "Discrepancy information associated with this LogisticsSupport record.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsDiscrepancyInfos_Ingest"
            }
          },
          "logisticsTransportationPlans": {
            "description": "Transportation plans associated with this LogisticsSupport record, used to coordinate maintenance efforts.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsTransportationPlans_Ingest"
            }
          },
          "logisticsSupportItems": {
            "description": "Support items associated with this LogisticsSupport record.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsSupportItems_Ingest"
            }
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "LogisticsSupportItems_Abridged": {
        "description": "Support items associated with this LogisticsSupport record.",
        "type": "object",
        "properties": {
          "recoveryRequestTypeCode": {
            "description": "The type of recovery request needed. Contact the source provider for details.",
            "maxLength": 1,
            "minLength": 1,
            "type": "string",
            "example": "E"
          },
          "requestNumber": {
            "description": "The request or record number for this item type (Equipent, Part, or MRT).",
            "maxLength": 5,
            "type": "string",
            "example": "89208"
          },
          "quantity": {
            "format": "int32",
            "description": "Military aircraft discrepancy logistics requisition ordered quantity. The quantity of equipment ordered that is required to fix the aircraft.",
            "type": "integer",
            "example": 1
          },
          "description": {
            "description": "The technical order name of the part ordered.",
            "maxLength": 150,
            "type": "string",
            "example": "HOIST ADAPTER KIT"
          },
          "shipmentUnitId": {
            "description": "Shipment Unit Identifier is the Transportation Control Number (TCN) for shipping that piece of equipment being requested.",
            "maxLength": 17,
            "type": "string",
            "example": "FB44273196X501XXX"
          },
          "redeployShipmentUnitId": {
            "description": "This is the Redeploy (return) Transportation Control Number/Tracking Reference Number for the selected item.",
            "maxLength": 17,
            "type": "string",
            "example": "X400LA31949108"
          },
          "jobControlNumber": {
            "description": "A number assigned by Job Control to monitor and record maintenance actions required to correct the associated aircraft maintenance discrepancy.  It is seven, nine or twelve characters, depending on the base-specific numbering scheme.  If seven characters: characters 1-3 are Julian date, 4-7 are sequence numbers.  If nine characters: characters 1-2 are last two digits of the year, characters 3-5 are Julian date, 6-9 are sequence numbers.  If twelve characters: characters 1-2 are last two digits of the year, 3-5 are Julian date, 6-9 are sequence numbers, and 10-12 are a three-digit supplemental number.",
            "maxLength": 12,
            "type": "string",
            "example": "231942400"
          },
          "sourceICAO": {
            "description": "The code that represents the International Civil Aviation Organization (ICAO) designations of an airport.",
            "maxLength": 4,
            "type": "string",
            "example": "PHIK"
          },
          "deployPlanNumber": {
            "description": "System generated reference id for the transportation plan.  Format: TXXXXXNNNN  T - Transportation, Sequence Number, Node Id.",
            "maxLength": 10,
            "type": "string",
            "example": "T89003"
          },
          "redeployPlanNumber": {
            "description": "System generated reference id for the transportation plan.  Format: TXXXXXNNNN  T - Transportation, Sequence Number, Node Id.",
            "maxLength": 10,
            "type": "string",
            "example": "T89003"
          },
          "cannibalized": {
            "description": "This element indicates whether or not the supplied item is contained within another item.",
            "type": "boolean",
            "example": true
          },
          "siPOC": {
            "description": "The point of contact is a free text field to add information about the individual(s) with knowledge of the referenced requested or supplied item(s). The default value for this field is the last name, first name, and middle initial of the operator who created the records and/or generated the transaction.",
            "maxLength": 68,
            "type": "string",
            "example": "SMITH, JOHN J"
          },
          "readyTime": {
            "format": "date-time",
            "description": "The time the item is ready, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T19:04:00.123Z"
          },
          "receivedTime": {
            "format": "date-time",
            "description": "The time the item is received, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T19:04:00.123Z"
          },
          "resupportFlag": {
            "description": "This element indicates if the supplied item is characterized as additional support.",
            "type": "boolean",
            "example": true
          },
          "itemLastChangedDate": {
            "format": "date-time",
            "description": "The last time this supported item was updated, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T19:04:00.123Z"
          },
          "logisticsParts": {
            "description": "The parts associated with this support item.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsParts_Abridged"
            }
          },
          "logisticsSpecialties": {
            "description": "The specialties required to implement this support item.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsSpecialties_Abridged"
            }
          },
          "logisticsRemarks": {
            "description": "Remarks associated with this support item.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsRemarks_Abridged"
            }
          }
        }
      },
      "LogisticsSupportItems_Full": {
        "description": "Support items associated with this LogisticsSupport record.",
        "type": "object",
        "properties": {
          "recoveryRequestTypeCode": {
            "description": "The type of recovery request needed. Contact the source provider for details.",
            "maxLength": 1,
            "minLength": 1,
            "type": "string",
            "example": "E"
          },
          "requestNumber": {
            "description": "The request or record number for this item type (Equipent, Part, or MRT).",
            "maxLength": 5,
            "type": "string",
            "example": "89208"
          },
          "quantity": {
            "format": "int32",
            "description": "Military aircraft discrepancy logistics requisition ordered quantity. The quantity of equipment ordered that is required to fix the aircraft.",
            "type": "integer",
            "example": 1
          },
          "description": {
            "description": "The technical order name of the part ordered.",
            "maxLength": 150,
            "type": "string",
            "example": "HOIST ADAPTER KIT"
          },
          "shipmentUnitId": {
            "description": "Shipment Unit Identifier is the Transportation Control Number (TCN) for shipping that piece of equipment being requested.",
            "maxLength": 17,
            "type": "string",
            "example": "FB44273196X501XXX"
          },
          "redeployShipmentUnitId": {
            "description": "This is the Redeploy (return) Transportation Control Number/Tracking Reference Number for the selected item.",
            "maxLength": 17,
            "type": "string",
            "example": "X400LA31949108"
          },
          "jobControlNumber": {
            "description": "A number assigned by Job Control to monitor and record maintenance actions required to correct the associated aircraft maintenance discrepancy.  It is seven, nine or twelve characters, depending on the base-specific numbering scheme.  If seven characters: characters 1-3 are Julian date, 4-7 are sequence numbers.  If nine characters: characters 1-2 are last two digits of the year, characters 3-5 are Julian date, 6-9 are sequence numbers.  If twelve characters: characters 1-2 are last two digits of the year, 3-5 are Julian date, 6-9 are sequence numbers, and 10-12 are a three-digit supplemental number.",
            "maxLength": 12,
            "type": "string",
            "example": "231942400"
          },
          "sourceICAO": {
            "description": "The code that represents the International Civil Aviation Organization (ICAO) designations of an airport.",
            "maxLength": 4,
            "type": "string",
            "example": "PHIK"
          },
          "deployPlanNumber": {
            "description": "System generated reference id for the transportation plan.  Format: TXXXXXNNNN  T - Transportation, Sequence Number, Node Id.",
            "maxLength": 10,
            "type": "string",
            "example": "T89003"
          },
          "redeployPlanNumber": {
            "description": "System generated reference id for the transportation plan.  Format: TXXXXXNNNN  T - Transportation, Sequence Number, Node Id.",
            "maxLength": 10,
            "type": "string",
            "example": "T89003"
          },
          "cannibalized": {
            "description": "This element indicates whether or not the supplied item is contained within another item.",
            "type": "boolean",
            "example": true
          },
          "siPOC": {
            "description": "The point of contact is a free text field to add information about the individual(s) with knowledge of the referenced requested or supplied item(s). The default value for this field is the last name, first name, and middle initial of the operator who created the records and/or generated the transaction.",
            "maxLength": 68,
            "type": "string",
            "example": "SMITH, JOHN J"
          },
          "readyTime": {
            "format": "date-time",
            "description": "The time the item is ready, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T19:04:00.123Z"
          },
          "receivedTime": {
            "format": "date-time",
            "description": "The time the item is received, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T19:04:00.123Z"
          },
          "resupportFlag": {
            "description": "This element indicates if the supplied item is characterized as additional support.",
            "type": "boolean",
            "example": true
          },
          "itemLastChangedDate": {
            "format": "date-time",
            "description": "The last time this supported item was updated, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T19:04:00.123Z"
          },
          "logisticsParts": {
            "description": "The parts associated with this support item.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsParts_Full"
            }
          },
          "logisticsSpecialties": {
            "description": "The specialties required to implement this support item.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsSpecialties_Full"
            }
          },
          "logisticsRemarks": {
            "description": "Remarks associated with this support item.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsRemarks_Full"
            }
          }
        }
      },
      "LogisticsSupportItems_Ingest": {
        "description": "Support items associated with this LogisticsSupport record.",
        "type": "object",
        "properties": {
          "recoveryRequestTypeCode": {
            "description": "The type of recovery request needed. Contact the source provider for details.",
            "maxLength": 1,
            "minLength": 1,
            "type": "string",
            "example": "E"
          },
          "requestNumber": {
            "description": "The request or record number for this item type (Equipent, Part, or MRT).",
            "maxLength": 5,
            "type": "string",
            "example": "89208"
          },
          "quantity": {
            "format": "int32",
            "description": "Military aircraft discrepancy logistics requisition ordered quantity. The quantity of equipment ordered that is required to fix the aircraft.",
            "type": "integer",
            "example": 1
          },
          "description": {
            "description": "The technical order name of the part ordered.",
            "maxLength": 150,
            "type": "string",
            "example": "HOIST ADAPTER KIT"
          },
          "shipmentUnitId": {
            "description": "Shipment Unit Identifier is the Transportation Control Number (TCN) for shipping that piece of equipment being requested.",
            "maxLength": 17,
            "type": "string",
            "example": "FB44273196X501XXX"
          },
          "redeployShipmentUnitId": {
            "description": "This is the Redeploy (return) Transportation Control Number/Tracking Reference Number for the selected item.",
            "maxLength": 17,
            "type": "string",
            "example": "X400LA31949108"
          },
          "jobControlNumber": {
            "description": "A number assigned by Job Control to monitor and record maintenance actions required to correct the associated aircraft maintenance discrepancy.  It is seven, nine or twelve characters, depending on the base-specific numbering scheme.  If seven characters: characters 1-3 are Julian date, 4-7 are sequence numbers.  If nine characters: characters 1-2 are last two digits of the year, characters 3-5 are Julian date, 6-9 are sequence numbers.  If twelve characters: characters 1-2 are last two digits of the year, 3-5 are Julian date, 6-9 are sequence numbers, and 10-12 are a three-digit supplemental number.",
            "maxLength": 12,
            "type": "string",
            "example": "231942400"
          },
          "sourceICAO": {
            "description": "The code that represents the International Civil Aviation Organization (ICAO) designations of an airport.",
            "maxLength": 4,
            "type": "string",
            "example": "PHIK"
          },
          "deployPlanNumber": {
            "description": "System generated reference id for the transportation plan.  Format: TXXXXXNNNN  T - Transportation, Sequence Number, Node Id.",
            "maxLength": 10,
            "type": "string",
            "example": "T89003"
          },
          "redeployPlanNumber": {
            "description": "System generated reference id for the transportation plan.  Format: TXXXXXNNNN  T - Transportation, Sequence Number, Node Id.",
            "maxLength": 10,
            "type": "string",
            "example": "T89003"
          },
          "cannibalized": {
            "description": "This element indicates whether or not the supplied item is contained within another item.",
            "type": "boolean",
            "example": true
          },
          "siPOC": {
            "description": "The point of contact is a free text field to add information about the individual(s) with knowledge of the referenced requested or supplied item(s). The default value for this field is the last name, first name, and middle initial of the operator who created the records and/or generated the transaction.",
            "maxLength": 68,
            "type": "string",
            "example": "SMITH, JOHN J"
          },
          "readyTime": {
            "format": "date-time",
            "description": "The time the item is ready, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T19:04:00.123Z"
          },
          "receivedTime": {
            "format": "date-time",
            "description": "The time the item is received, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T19:04:00.123Z"
          },
          "resupportFlag": {
            "description": "This element indicates if the supplied item is characterized as additional support.",
            "type": "boolean",
            "example": true
          },
          "itemLastChangedDate": {
            "format": "date-time",
            "description": "The last time this supported item was updated, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-17T19:04:00.123Z"
          },
          "logisticsParts": {
            "description": "The parts associated with this support item.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsParts_Ingest"
            }
          },
          "logisticsSpecialties": {
            "description": "The specialties required to implement this support item.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsSpecialties_Ingest"
            }
          },
          "logisticsRemarks": {
            "description": "Remarks associated with this support item.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsRemarks_Ingest"
            }
          }
        }
      },
      "LogisticsTransportationPlans_Abridged": {
        "description": "Transportation plans associated with this LogisticsSupport record, used to coordinate maintenance efforts.",
        "type": "object",
        "properties": {
          "plansNumber": {
            "description": "System generated reference id for the transportation plan.  Format: TXXXXXNNNN  T - Transportation, Sequence Number, Node Id.",
            "maxLength": 10,
            "type": "string",
            "example": "T89002"
          },
          "missionChange": {
            "description": "Indicates whether there have been changes to changes to ICAOs, estArrTime, or estDepTime since this Transportation Plan was last edited.",
            "type": "boolean",
            "example": false
          },
          "planDefinition": {
            "description": "Defines the transporation plan as either a deployment or redeployment.",
            "maxLength": 32,
            "type": "string",
            "example": "DEPLOY"
          },
          "statusCode": {
            "description": "Transporation Coordination status code. Cancel, Send to APCC, working, agree, disapprove or blank.",
            "maxLength": 1,
            "minLength": 1,
            "type": "string",
            "example": "N"
          },
          "coordinator": {
            "description": "The AMS username of the operator who alters the coordination status.  Automatically captured by the system.",
            "maxLength": 32,
            "type": "string",
            "example": "SMITH, JOHN"
          },
          "coordinatorUnit": {
            "description": "The AMS user unit_id of the operator who alters the coordination status.  Automatically captured by the system from table AMS_USER.",
            "maxLength": 10,
            "type": "string",
            "example": "TACC"
          },
          "originICAO": {
            "description": "The origin location.",
            "maxLength": 4,
            "type": "string",
            "example": "KATL"
          },
          "estDepTime": {
            "format": "date-time",
            "description": "ETD of the first segment, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-15T14:25:00.123Z"
          },
          "estArrTime": {
            "format": "date-time",
            "description": "ETA of the final segment, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-15T14:25:00.123Z"
          },
          "destinationICAO": {
            "description": "Destination location ICAO.",
            "maxLength": 4,
            "type": "string",
            "example": "YBCS"
          },
          "logisticMasterRecordId": {
            "description": "The identifier that represents a Logistics Master Record.",
            "maxLength": 10,
            "type": "string",
            "example": "L62126"
          },
          "tpTailNumber": {
            "description": "Contains the tail number displayed by GDSS2.",
            "maxLength": 7,
            "type": "string",
            "example": "99209"
          },
          "tpAircraftMDS": {
            "description": "The aircraft Model Design Series (MDS) designation (e.g. E-2C HAWKEYE, F-15 EAGLE, KC-130 HERCULES, etc.) of this aircraft. Intended as, but not constrained to, MIL-STD-6016 environment dependent specific type designations.",
            "maxLength": 8,
            "type": "string",
            "example": "C17A"
          },
          "majcom": {
            "description": "The major command for the current unit.",
            "maxLength": 250,
            "type": "string",
            "example": "HQAMC"
          },
          "approxArrTime": {
            "format": "date-time",
            "description": "Approximate time of arrival of final segement, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-14T20:37:00.123Z"
          },
          "duration": {
            "description": "Transportation plan duration, expressed in the format MMM:SS.",
            "maxLength": 6,
            "type": "string",
            "example": "086:20"
          },
          "actDepTime": {
            "format": "date-time",
            "description": "Actual time of departure of first segment, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-14T19:37:00.123Z"
          },
          "closedDate": {
            "format": "date-time",
            "description": "GC. LGTP_CLSD_DT.  GD2:  Date when the transportation plan was closed, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-14T20:37:00.123Z"
          },
          "cancelledDate": {
            "format": "date-time",
            "description": "GC. LGTP_CANX_DT.  GD2: Date when the transportation plan was cancelled, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-14T20:37:00.123Z"
          },
          "aircraftStatus": {
            "description": "These are the initial maintenance values entered based on the pilot descriptions or the official maintenance evaluation code.",
            "maxLength": 6,
            "type": "string",
            "example": "NMCMU"
          },
          "numEnrouteStops": {
            "format": "int32",
            "description": "Transportation plan enroute stops.",
            "type": "integer",
            "example": 4
          },
          "serialNumber": {
            "description": "GDSS2 uses an 8 character serial number to uniquely identify the aircraft and MDS combination. This is a portion of the full manufacturer serial number.",
            "maxLength": 30,
            "type": "string",
            "example": "9009209"
          },
          "numTransLoads": {
            "format": "int32",
            "description": "The number of transloads for this Transportation Plan.",
            "type": "integer",
            "example": 3
          },
          "lastChangedDate": {
            "format": "date-time",
            "description": "Last time transportation plan was updated, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-14T20:37:00.123Z"
          },
          "logisticsSegments": {
            "description": "The transportation segments associated with this transportation plan.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsSegments_Abridged"
            }
          },
          "logisticsTransportationPlansRemarks": {
            "description": "Remarks associated with this transportation plan.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsRemarks_Abridged"
            }
          }
        }
      },
      "LogisticsTransportationPlans_Full": {
        "description": "Transportation plans associated with this LogisticsSupport record, used to coordinate maintenance efforts.",
        "type": "object",
        "properties": {
          "plansNumber": {
            "description": "System generated reference id for the transportation plan.  Format: TXXXXXNNNN  T - Transportation, Sequence Number, Node Id.",
            "maxLength": 10,
            "type": "string",
            "example": "T89002"
          },
          "missionChange": {
            "description": "Indicates whether there have been changes to changes to ICAOs, estArrTime, or estDepTime since this Transportation Plan was last edited.",
            "type": "boolean",
            "example": false
          },
          "planDefinition": {
            "description": "Defines the transporation plan as either a deployment or redeployment.",
            "maxLength": 32,
            "type": "string",
            "example": "DEPLOY"
          },
          "statusCode": {
            "description": "Transporation Coordination status code. Cancel, Send to APCC, working, agree, disapprove or blank.",
            "maxLength": 1,
            "minLength": 1,
            "type": "string",
            "example": "N"
          },
          "coordinator": {
            "description": "The AMS username of the operator who alters the coordination status.  Automatically captured by the system.",
            "maxLength": 32,
            "type": "string",
            "example": "SMITH, JOHN"
          },
          "coordinatorUnit": {
            "description": "The AMS user unit_id of the operator who alters the coordination status.  Automatically captured by the system from table AMS_USER.",
            "maxLength": 10,
            "type": "string",
            "example": "TACC"
          },
          "originICAO": {
            "description": "The origin location.",
            "maxLength": 4,
            "type": "string",
            "example": "KATL"
          },
          "estDepTime": {
            "format": "date-time",
            "description": "ETD of the first segment, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-15T14:25:00.123Z"
          },
          "estArrTime": {
            "format": "date-time",
            "description": "ETA of the final segment, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-15T14:25:00.123Z"
          },
          "destinationICAO": {
            "description": "Destination location ICAO.",
            "maxLength": 4,
            "type": "string",
            "example": "YBCS"
          },
          "logisticMasterRecordId": {
            "description": "The identifier that represents a Logistics Master Record.",
            "maxLength": 10,
            "type": "string",
            "example": "L62126"
          },
          "tpTailNumber": {
            "description": "Contains the tail number displayed by GDSS2.",
            "maxLength": 7,
            "type": "string",
            "example": "99209"
          },
          "tpAircraftMDS": {
            "description": "The aircraft Model Design Series (MDS) designation (e.g. E-2C HAWKEYE, F-15 EAGLE, KC-130 HERCULES, etc.) of this aircraft. Intended as, but not constrained to, MIL-STD-6016 environment dependent specific type designations.",
            "maxLength": 8,
            "type": "string",
            "example": "C17A"
          },
          "majcom": {
            "description": "The major command for the current unit.",
            "maxLength": 250,
            "type": "string",
            "example": "HQAMC"
          },
          "approxArrTime": {
            "format": "date-time",
            "description": "Approximate time of arrival of final segement, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-14T20:37:00.123Z"
          },
          "duration": {
            "description": "Transportation plan duration, expressed in the format MMM:SS.",
            "maxLength": 6,
            "type": "string",
            "example": "086:20"
          },
          "actDepTime": {
            "format": "date-time",
            "description": "Actual time of departure of first segment, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-14T19:37:00.123Z"
          },
          "closedDate": {
            "format": "date-time",
            "description": "GC. LGTP_CLSD_DT.  GD2:  Date when the transportation plan was closed, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-14T20:37:00.123Z"
          },
          "cancelledDate": {
            "format": "date-time",
            "description": "GC. LGTP_CANX_DT.  GD2: Date when the transportation plan was cancelled, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-14T20:37:00.123Z"
          },
          "aircraftStatus": {
            "description": "These are the initial maintenance values entered based on the pilot descriptions or the official maintenance evaluation code.",
            "maxLength": 6,
            "type": "string",
            "example": "NMCMU"
          },
          "numEnrouteStops": {
            "format": "int32",
            "description": "Transportation plan enroute stops.",
            "type": "integer",
            "example": 4
          },
          "serialNumber": {
            "description": "GDSS2 uses an 8 character serial number to uniquely identify the aircraft and MDS combination. This is a portion of the full manufacturer serial number.",
            "maxLength": 30,
            "type": "string",
            "example": "9009209"
          },
          "numTransLoads": {
            "format": "int32",
            "description": "The number of transloads for this Transportation Plan.",
            "type": "integer",
            "example": 3
          },
          "lastChangedDate": {
            "format": "date-time",
            "description": "Last time transportation plan was updated, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-14T20:37:00.123Z"
          },
          "logisticsSegments": {
            "description": "The transportation segments associated with this transportation plan.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsSegments_Full"
            }
          },
          "logisticsTransportationPlansRemarks": {
            "description": "Remarks associated with this transportation plan.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsRemarks_Full"
            }
          }
        }
      },
      "LogisticsTransportationPlans_Ingest": {
        "description": "Transportation plans associated with this LogisticsSupport record, used to coordinate maintenance efforts.",
        "type": "object",
        "properties": {
          "plansNumber": {
            "description": "System generated reference id for the transportation plan.  Format: TXXXXXNNNN  T - Transportation, Sequence Number, Node Id.",
            "maxLength": 10,
            "type": "string",
            "example": "T89002"
          },
          "missionChange": {
            "description": "Indicates whether there have been changes to changes to ICAOs, estArrTime, or estDepTime since this Transportation Plan was last edited.",
            "type": "boolean",
            "example": false
          },
          "planDefinition": {
            "description": "Defines the transporation plan as either a deployment or redeployment.",
            "maxLength": 32,
            "type": "string",
            "example": "DEPLOY"
          },
          "statusCode": {
            "description": "Transporation Coordination status code. Cancel, Send to APCC, working, agree, disapprove or blank.",
            "maxLength": 1,
            "minLength": 1,
            "type": "string",
            "example": "N"
          },
          "coordinator": {
            "description": "The AMS username of the operator who alters the coordination status.  Automatically captured by the system.",
            "maxLength": 32,
            "type": "string",
            "example": "SMITH, JOHN"
          },
          "coordinatorUnit": {
            "description": "The AMS user unit_id of the operator who alters the coordination status.  Automatically captured by the system from table AMS_USER.",
            "maxLength": 10,
            "type": "string",
            "example": "TACC"
          },
          "originICAO": {
            "description": "The origin location.",
            "maxLength": 4,
            "type": "string",
            "example": "KATL"
          },
          "estDepTime": {
            "format": "date-time",
            "description": "ETD of the first segment, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-15T14:25:00.123Z"
          },
          "estArrTime": {
            "format": "date-time",
            "description": "ETA of the final segment, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-15T14:25:00.123Z"
          },
          "destinationICAO": {
            "description": "Destination location ICAO.",
            "maxLength": 4,
            "type": "string",
            "example": "YBCS"
          },
          "logisticMasterRecordId": {
            "description": "The identifier that represents a Logistics Master Record.",
            "maxLength": 10,
            "type": "string",
            "example": "L62126"
          },
          "tpTailNumber": {
            "description": "Contains the tail number displayed by GDSS2.",
            "maxLength": 7,
            "type": "string",
            "example": "99209"
          },
          "tpAircraftMDS": {
            "description": "The aircraft Model Design Series (MDS) designation (e.g. E-2C HAWKEYE, F-15 EAGLE, KC-130 HERCULES, etc.) of this aircraft. Intended as, but not constrained to, MIL-STD-6016 environment dependent specific type designations.",
            "maxLength": 8,
            "type": "string",
            "example": "C17A"
          },
          "majcom": {
            "description": "The major command for the current unit.",
            "maxLength": 250,
            "type": "string",
            "example": "HQAMC"
          },
          "approxArrTime": {
            "format": "date-time",
            "description": "Approximate time of arrival of final segement, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-14T20:37:00.123Z"
          },
          "duration": {
            "description": "Transportation plan duration, expressed in the format MMM:SS.",
            "maxLength": 6,
            "type": "string",
            "example": "086:20"
          },
          "actDepTime": {
            "format": "date-time",
            "description": "Actual time of departure of first segment, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-14T19:37:00.123Z"
          },
          "closedDate": {
            "format": "date-time",
            "description": "GC. LGTP_CLSD_DT.  GD2:  Date when the transportation plan was closed, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-14T20:37:00.123Z"
          },
          "cancelledDate": {
            "format": "date-time",
            "description": "GC. LGTP_CANX_DT.  GD2: Date when the transportation plan was cancelled, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-14T20:37:00.123Z"
          },
          "aircraftStatus": {
            "description": "These are the initial maintenance values entered based on the pilot descriptions or the official maintenance evaluation code.",
            "maxLength": 6,
            "type": "string",
            "example": "NMCMU"
          },
          "numEnrouteStops": {
            "format": "int32",
            "description": "Transportation plan enroute stops.",
            "type": "integer",
            "example": 4
          },
          "serialNumber": {
            "description": "GDSS2 uses an 8 character serial number to uniquely identify the aircraft and MDS combination. This is a portion of the full manufacturer serial number.",
            "maxLength": 30,
            "type": "string",
            "example": "9009209"
          },
          "numTransLoads": {
            "format": "int32",
            "description": "The number of transloads for this Transportation Plan.",
            "type": "integer",
            "example": 3
          },
          "lastChangedDate": {
            "format": "date-time",
            "description": "Last time transportation plan was updated, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-07-14T20:37:00.123Z"
          },
          "logisticsSegments": {
            "description": "The transportation segments associated with this transportation plan.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsSegments_Ingest"
            }
          },
          "logisticsTransportationPlansRemarks": {
            "description": "Remarks associated with this transportation plan.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogisticsRemarks_Ingest"
            }
          }
        }
      },
      "NavalFlightOperations_Abridged": {
        "description": "Collection that specifies the naval flight operations for this ATO.",
        "required": [
          "shipName"
        ],
        "type": "object",
        "properties": {
          "shipName": {
            "description": "The name of a ship or maritime vessel. Specify UNKNOWN if name is not known.",
            "maxLength": 48,
            "minLength": 1,
            "type": "string",
            "example": "USS WASP"
          },
          "fltOpStart": {
            "format": "date-time",
            "description": "The time when flight operations begin in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123Z"
          },
          "fltOpStop": {
            "format": "date-time",
            "description": "The time when flight operations end in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123Z"
          },
          "schdLaunchRcvyTime": {
            "description": "An array of times at which an aircraft will be launched and/or recovered in ISO8601 UTC format with millisecond precision.",
            "type": "array",
            "items": {
              "format": "date-time",
              "type": "string",
              "example": "2022-03-10T12:15:50"
            },
            "example": [
              "2021-02-25T12:00:00.123Z"
            ]
          }
        }
      },
      "NavalFlightOperations_Full": {
        "description": "Collection that specifies the naval flight operations for this ATO.",
        "required": [
          "shipName"
        ],
        "type": "object",
        "properties": {
          "shipName": {
            "description": "The name of a ship or maritime vessel. Specify UNKNOWN if name is not known.",
            "maxLength": 48,
            "minLength": 1,
            "type": "string",
            "example": "USS WASP"
          },
          "fltOpStart": {
            "format": "date-time",
            "description": "The time when flight operations begin in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123Z"
          },
          "fltOpStop": {
            "format": "date-time",
            "description": "The time when flight operations end in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123Z"
          },
          "schdLaunchRcvyTime": {
            "description": "An array of times at which an aircraft will be launched and/or recovered in ISO8601 UTC format with millisecond precision.",
            "type": "array",
            "items": {
              "format": "date-time",
              "type": "string",
              "example": "2022-03-10T12:15:50"
            },
            "example": [
              "2021-02-25T12:00:00.123Z"
            ]
          }
        }
      },
      "NavalFlightOperations_Ingest": {
        "description": "Collection that specifies the naval flight operations for this ATO.",
        "required": [
          "shipName"
        ],
        "type": "object",
        "properties": {
          "shipName": {
            "description": "The name of a ship or maritime vessel. Specify UNKNOWN if name is not known.",
            "maxLength": 48,
            "minLength": 1,
            "type": "string",
            "example": "USS WASP"
          },
          "fltOpStart": {
            "format": "date-time",
            "description": "The time when flight operations begin in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123Z"
          },
          "fltOpStop": {
            "format": "date-time",
            "description": "The time when flight operations end in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2021-02-25T12:00:00.123Z"
          },
          "schdLaunchRcvyTime": {
            "description": "An array of times at which an aircraft will be launched and/or recovered in ISO8601 UTC format with millisecond precision.",
            "type": "array",
            "items": {
              "format": "date-time",
              "type": "string",
              "example": "2022-03-10T12:15:50"
            },
            "example": [
              "2021-02-25T12:00:00.123Z"
            ]
          }
        }
      },
      "NavigationalObstruction_Abridged": {
        "description": "Beta Version Navigational Obstruction: Information describing navigational obstructions, such as applicable boundaries, locations, heights, data ownership, and currency.",
        "required": [
          "classificationMarking",
          "cycleDate",
          "obstacleType",
          "obstacleId",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "026dd511-8ba5-47d3-9909-836149f87686"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "cycleDate": {
            "format": "date",
            "description": "Start date of this obstruction data set's currency, in ISO 8601 date-only format.",
            "type": "string",
            "example": "2024-06-13"
          },
          "obstacleType": {
            "description": "Type of obstacle (e.g. P for point, V for vector, L for line).",
            "maxLength": 1,
            "minLength": 1,
            "type": "string",
            "example": "V"
          },
          "obstacleId": {
            "description": "The ID of this obstacle.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "example": "359655"
          },
          "externalId": {
            "description": "Optional obstacle ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 32,
            "type": "string",
            "example": "OU812"
          },
          "origId": {
            "description": "The original ID for this obstacle.",
            "maxLength": 36,
            "type": "string",
            "example": "L0000002289"
          },
          "countryCode": {
            "description": "The DoD Standard Country Code designator for the country issuing the diplomatic clearance. This field will be set to \"OTHR\" if the source value does not match a UDL Country code value (ISO-3166-ALPHA-2).",
            "maxLength": 4,
            "type": "string",
            "example": "US"
          },
          "provinceCode": {
            "description": "The Federal Information Processing Standards (FIPS) state/province numeric code of this obstacle's location.",
            "maxLength": 4,
            "type": "string",
            "example": "23"
          },
          "pointLat": {
            "format": "double",
            "description": "WGS-84 latitude of this point obstacle, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 46.757211
          },
          "pointLon": {
            "format": "double",
            "description": "WGS-84 longitude of this point obstacle, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": -67.759494
          },
          "lineNELon": {
            "format": "double",
            "description": "WGS-84 longitude of the northeastern point of the line, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": -122.197891
          },
          "lineNELat": {
            "format": "double",
            "description": "WGS-84 latitude of the northeastern point of the line, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 49.000584
          },
          "lineSWLon": {
            "format": "double",
            "description": "WGS-84 longitude of the southwestern point of the line, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": -122.722946
          },
          "lineSWLat": {
            "format": "double",
            "description": "WGS-84 latitude of the southwestern point of the line, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 48.507027
          },
          "segStartPoint": {
            "format": "int32",
            "description": "ID of the starting point of a line segment.",
            "type": "integer",
            "example": 359655
          },
          "segEndPoint": {
            "format": "int32",
            "description": "ID of the end point of a line segment.",
            "type": "integer",
            "example": 359655
          },
          "segNum": {
            "format": "int32",
            "description": "Identifies the sequence number of a line segment.",
            "type": "integer",
            "example": 1
          },
          "facc": {
            "description": "FACC (Feature and Attribute Coding Catalog) is a five-character code for encoding real-world entities and objects. The first letter of the code is an alphabetic value from \"A\" to \"Z\" which will map to a feature category. The second character will map to a subcategory. Characters three to five are numeric and range from 000 to 999. This value will provide a unit feature type identification within the categories.",
            "maxLength": 5,
            "type": "string",
            "example": "AT040"
          },
          "featureCode": {
            "description": "Identifying code for the type of this point obstacle.",
            "maxLength": 4,
            "type": "string",
            "example": "540"
          },
          "featureType": {
            "description": "Identifying code for the type of this point obstacle.",
            "maxLength": 4,
            "type": "string",
            "example": "540"
          },
          "featureName": {
            "description": "Type name of point obstacle.",
            "maxLength": 64,
            "type": "string",
            "example": "PYLON"
          },
          "featureDescription": {
            "description": "Description of this obstacle, corresponding to the FACC (Feature and Attribute Coding Catalog) value.",
            "maxLength": 64,
            "type": "string",
            "example": "Powerline Pylon, General"
          },
          "wac": {
            "description": "The World Aeronautical Chart (WAC) identifier for the area in which this obstacle is located.",
            "maxLength": 4,
            "type": "string",
            "example": "262"
          },
          "wacINNR": {
            "description": "This obstacle's World Area Code installation number (WAC-INNR).",
            "maxLength": 32,
            "type": "string",
            "example": "0409-00039"
          },
          "multObs": {
            "description": "Indicates if the feature has multiple obstructions (e.g. S = Single, M = Multiple, U = Undetermined).",
            "maxLength": 1,
            "type": "string",
            "example": "S"
          },
          "numObs": {
            "format": "int32",
            "description": "Indicates the number of obstructions associated with a feature.",
            "type": "integer",
            "example": 1
          },
          "horizDatumCode": {
            "description": "Code representing the mathematical model of Earth used to calculate coordinates for this obstacle (e.g. WGS-84, U for undetermined, etc.).  US Forces use the World Geodetic System 1984 (WGS-84), but also use maps by allied countries with local datums.",
            "maxLength": 8,
            "type": "string",
            "example": "WGS-84"
          },
          "heightAGL": {
            "format": "double",
            "description": "The height Above Ground Level (AGL) of the point obstacle in feet.",
            "type": "number",
            "example": 314.1
          },
          "heightAGLAcc": {
            "format": "double",
            "description": "The accuracy of the height Above Ground Level (AGL) AGL value for this point obstacle in feet.",
            "type": "number",
            "example": 30.1
          },
          "heightMSL": {
            "format": "double",
            "description": "The height Above Mean Sea Level (AMSL) of the point obstacle in feet.",
            "type": "number",
            "example": 1154.1
          },
          "heightMSLAcc": {
            "format": "double",
            "description": "The accuracy of the height Above Mean Sea Level (AMSL) value for this point obstacle in feet.",
            "type": "number",
            "example": 34.1
          },
          "elevation": {
            "format": "double",
            "description": "The elevation at the point obstacle's location in feet.",
            "type": "number",
            "example": 840.1
          },
          "elevationAcc": {
            "format": "double",
            "description": "The difference between the assigned elevation of this point and its true elevation, in feet.",
            "type": "number",
            "example": 17.1
          },
          "horizAcc": {
            "format": "double",
            "description": "The difference between the recorded horizontal coordinates of this point obstacle and its true position, in feet.",
            "type": "number",
            "example": 8.1
          },
          "quality": {
            "description": "When horizontal and/or vertical accuracy requirements cannot be met because of inadequate source material, this code indicates the quality of the data.",
            "maxLength": 1,
            "type": "string",
            "example": "0"
          },
          "lightingCode": {
            "description": "Code specifying if this obstacle is lit (e.g. Y = Yes, N = No, U = Unknown).",
            "maxLength": 1,
            "type": "string",
            "example": "U"
          },
          "surfaceMatCode": {
            "description": "The surface material composition code of this point obstacle.",
            "maxLength": 1,
            "type": "string",
            "example": "U"
          },
          "directivityCode": {
            "format": "int32",
            "description": "The side or sides of this obstruction feature which produces the greatest reflectivity potential.",
            "type": "integer",
            "example": 2
          },
          "validationCode": {
            "format": "int32",
            "description": "Method used to confirm the existence of this obstacle.",
            "type": "integer",
            "example": 3
          },
          "transactionCode": {
            "description": "The transaction type/code for this obstacle (e.g. \"D\", \"N\", \"R\", \"S\", \"V\", \"X\").",
            "maxLength": 1,
            "type": "string",
            "example": "V"
          },
          "processCode": {
            "description": "Code denoting the action, review, or process that updated this obstacle.",
            "maxLength": 4,
            "type": "string",
            "example": "OT"
          },
          "actDelCode": {
            "description": "Indicates if this obstacle record is Active (A) or Deleted (D).",
            "maxLength": 1,
            "type": "string",
            "example": "A"
          },
          "producer": {
            "description": "Name of the agency that produced this obstruction data set.",
            "maxLength": 128,
            "type": "string",
            "example": "ACME"
          },
          "derivingOrg": {
            "description": "The organization that entered obstacle data other than the producer.",
            "maxLength": 64,
            "type": "string",
            "example": "ACME"
          },
          "deletingOrg": {
            "description": "The organization that deleted this obstacle record.",
            "maxLength": 64,
            "type": "string",
            "example": "ACME"
          },
          "sourceDate": {
            "format": "date",
            "description": "Source date of this obstacle data, in ISO 8601 date-only format (ex. YYYY-MM-DD).",
            "type": "string",
            "example": "2016-04-01"
          },
          "revDate": {
            "format": "date",
            "description": "Date this obstacle data was revised, in ISO 8601 date-only format (ex. YYYY-MM-DD).",
            "type": "string",
            "example": "2020-02-26"
          },
          "initRecordDate": {
            "format": "date",
            "description": "Date this obstacle was initially added to the data set, in ISO 8601 date-only format (ex. YYYY-MM-DD).",
            "type": "string",
            "example": "1991-03-28"
          },
          "keys": {
            "description": "This field provides an array of keys that can be added to any obstruction feature to provide information that is not already supported. The entries in this array must correspond to the position index in the values array. This array must be the same length as values.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "key1",
              "key2"
            ]
          },
          "values": {
            "description": "This field provides an array of values that can be added to any obstruction feature to provide information that is not already supported. The entries in this array must correspond to the position index in the keys array. This array must be the same length as keys.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "value1",
              "value2"
            ]
          },
          "obstacleRemarks": {
            "description": "Remarks regarding this obstacle.",
            "maxLength": 512,
            "type": "string",
            "example": "Obstacle remarks"
          },
          "nextCycleDate": {
            "format": "date",
            "description": "The date after which this obstruction data set’s currency is stale and should be refreshed, in ISO 8601 date-only format (e.g. YYYY-MM-DD).",
            "type": "string",
            "example": "2024-07-11"
          },
          "baselineCutoffDate": {
            "format": "date",
            "description": "Earliest record date possible in this obstruction data set (not the earliest data item), in ISO 8601 date-only format (e.g. YYYY-MM-DD). If null, this data set is assumed to be a full data pull of holdings until the cutoffDate.  If this field is populated, this data set only contains updates since the last baseline data set.",
            "type": "string",
            "example": "2024-04-23"
          },
          "cutoffDate": {
            "format": "date",
            "description": "Latest record date possible in this obstruction data set (not the most recent data item), in ISO 8601 date-only format (e.g. YYYY-MM-DD).",
            "type": "string",
            "example": "2024-05-21"
          },
          "airacCycle": {
            "format": "int32",
            "description": "The Aeronautical Information Regulation and Control (AIRAC) cycle of this obstruction data set. The format is YYNN where YY is the last two digits of the year and NN is the cycle number.",
            "type": "integer",
            "example": 2406
          },
          "baseAiracCycle": {
            "format": "int32",
            "description": "The baseline Aeronautical Information Regulation and Control (AIRAC) cycle for change sets only. The format is YYNN where YY is the last two digits of the year and NN is the cycle number.",
            "type": "integer",
            "example": 2405
          },
          "ownerCountryCode": {
            "description": "The DoD Standard Country Code designator for the country or political entity that owns the data set associated with this obstruction. This field will be set to \"OTHR\" if the source value does not match a UDL Country code value (ISO-3166-ALPHA-2).",
            "maxLength": 4,
            "type": "string",
            "example": "US"
          },
          "boundNELon": {
            "format": "double",
            "description": "WGS-84 longitude of the northeastern boundary for obstructions contained in this data set, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 99.1
          },
          "boundNELat": {
            "format": "double",
            "description": "WGS-84 latitude of the northeastern boundary for obstructions contained in this data set, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 29.1
          },
          "boundSWLon": {
            "format": "double",
            "description": "WGS-84 longitude of the southwestern boundary for obstructions contained in this data set, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": -144.1
          },
          "boundSWLat": {
            "format": "double",
            "description": "WGS-84 latitude of the southwestern boundary for obstructions contained in this data set, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": -44.1
          },
          "minHeightAGL": {
            "format": "double",
            "description": "The minimum height Above Ground Level (AGL) of the shortest obstruction contained in this data set, in feet.",
            "type": "number",
            "example": 20.1
          },
          "numPoints": {
            "format": "int32",
            "description": "The number of point features associated with this obstruction data set.",
            "type": "integer",
            "example": 21830590
          },
          "numLines": {
            "format": "int32",
            "description": "The number of line features associated with this obstruction data set.",
            "type": "integer",
            "example": 45993
          },
          "dataSetRemarks": {
            "description": "Remarks concerning this obstruction's data set.",
            "maxLength": 512,
            "type": "string",
            "example": "Data set remarks"
          },
          "pointsFilename": {
            "description": "The name of the point file associated with this obstruction data set.",
            "maxLength": 256,
            "type": "string",
            "example": "points.txt"
          },
          "linesFilename": {
            "description": "The name of the line file associated with this obstruction data set.",
            "maxLength": 256,
            "type": "string",
            "example": "lines.txt"
          },
          "vectorsFilename": {
            "description": "The name of the vector file associated with this obstruction data set.",
            "maxLength": 256,
            "type": "string",
            "example": "vectors.txt"
          },
          "rawFileURI": {
            "description": "Optional URI location in the document repository of the raw file parsed by the system to produce this record. To download the raw file, prepend https://udl-hostname/scs/download?id= to this value.",
            "maxLength": 256,
            "type": "string",
            "readOnly": true,
            "example": "Example URI"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "NavigationalObstruction_Full": {
        "description": "Beta Version Navigational Obstruction: Information describing navigational obstructions, such as applicable boundaries, locations, heights, data ownership, and currency.",
        "required": [
          "classificationMarking",
          "cycleDate",
          "obstacleType",
          "obstacleId",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "026dd511-8ba5-47d3-9909-836149f87686"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "cycleDate": {
            "format": "date",
            "description": "Start date of this obstruction data set's currency, in ISO 8601 date-only format.",
            "type": "string",
            "example": "2024-06-13"
          },
          "obstacleType": {
            "description": "Type of obstacle (e.g. P for point, V for vector, L for line).",
            "maxLength": 1,
            "minLength": 1,
            "type": "string",
            "example": "V"
          },
          "obstacleId": {
            "description": "The ID of this obstacle.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "example": "359655"
          },
          "externalId": {
            "description": "Optional obstacle ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 32,
            "type": "string",
            "example": "OU812"
          },
          "origId": {
            "description": "The original ID for this obstacle.",
            "maxLength": 36,
            "type": "string",
            "example": "L0000002289"
          },
          "countryCode": {
            "description": "The DoD Standard Country Code designator for the country issuing the diplomatic clearance. This field will be set to \"OTHR\" if the source value does not match a UDL Country code value (ISO-3166-ALPHA-2).",
            "maxLength": 4,
            "type": "string",
            "example": "US"
          },
          "provinceCode": {
            "description": "The Federal Information Processing Standards (FIPS) state/province numeric code of this obstacle's location.",
            "maxLength": 4,
            "type": "string",
            "example": "23"
          },
          "pointLat": {
            "format": "double",
            "description": "WGS-84 latitude of this point obstacle, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 46.757211
          },
          "pointLon": {
            "format": "double",
            "description": "WGS-84 longitude of this point obstacle, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": -67.759494
          },
          "lineNELon": {
            "format": "double",
            "description": "WGS-84 longitude of the northeastern point of the line, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": -122.197891
          },
          "lineNELat": {
            "format": "double",
            "description": "WGS-84 latitude of the northeastern point of the line, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 49.000584
          },
          "lineSWLon": {
            "format": "double",
            "description": "WGS-84 longitude of the southwestern point of the line, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": -122.722946
          },
          "lineSWLat": {
            "format": "double",
            "description": "WGS-84 latitude of the southwestern point of the line, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 48.507027
          },
          "segStartPoint": {
            "format": "int32",
            "description": "ID of the starting point of a line segment.",
            "type": "integer",
            "example": 359655
          },
          "segEndPoint": {
            "format": "int32",
            "description": "ID of the end point of a line segment.",
            "type": "integer",
            "example": 359655
          },
          "segNum": {
            "format": "int32",
            "description": "Identifies the sequence number of a line segment.",
            "type": "integer",
            "example": 1
          },
          "facc": {
            "description": "FACC (Feature and Attribute Coding Catalog) is a five-character code for encoding real-world entities and objects. The first letter of the code is an alphabetic value from \"A\" to \"Z\" which will map to a feature category. The second character will map to a subcategory. Characters three to five are numeric and range from 000 to 999. This value will provide a unit feature type identification within the categories.",
            "maxLength": 5,
            "type": "string",
            "example": "AT040"
          },
          "featureCode": {
            "description": "Identifying code for the type of this point obstacle.",
            "maxLength": 4,
            "type": "string",
            "example": "540"
          },
          "featureType": {
            "description": "Identifying code for the type of this point obstacle.",
            "maxLength": 4,
            "type": "string",
            "example": "540"
          },
          "featureName": {
            "description": "Type name of point obstacle.",
            "maxLength": 64,
            "type": "string",
            "example": "PYLON"
          },
          "featureDescription": {
            "description": "Description of this obstacle, corresponding to the FACC (Feature and Attribute Coding Catalog) value.",
            "maxLength": 64,
            "type": "string",
            "example": "Powerline Pylon, General"
          },
          "wac": {
            "description": "The World Aeronautical Chart (WAC) identifier for the area in which this obstacle is located.",
            "maxLength": 4,
            "type": "string",
            "example": "262"
          },
          "wacINNR": {
            "description": "This obstacle's World Area Code installation number (WAC-INNR).",
            "maxLength": 32,
            "type": "string",
            "example": "0409-00039"
          },
          "multObs": {
            "description": "Indicates if the feature has multiple obstructions (e.g. S = Single, M = Multiple, U = Undetermined).",
            "maxLength": 1,
            "type": "string",
            "example": "S"
          },
          "numObs": {
            "format": "int32",
            "description": "Indicates the number of obstructions associated with a feature.",
            "type": "integer",
            "example": 1
          },
          "horizDatumCode": {
            "description": "Code representing the mathematical model of Earth used to calculate coordinates for this obstacle (e.g. WGS-84, U for undetermined, etc.).  US Forces use the World Geodetic System 1984 (WGS-84), but also use maps by allied countries with local datums.",
            "maxLength": 8,
            "type": "string",
            "example": "WGS-84"
          },
          "heightAGL": {
            "format": "double",
            "description": "The height Above Ground Level (AGL) of the point obstacle in feet.",
            "type": "number",
            "example": 314.1
          },
          "heightAGLAcc": {
            "format": "double",
            "description": "The accuracy of the height Above Ground Level (AGL) AGL value for this point obstacle in feet.",
            "type": "number",
            "example": 30.1
          },
          "heightMSL": {
            "format": "double",
            "description": "The height Above Mean Sea Level (AMSL) of the point obstacle in feet.",
            "type": "number",
            "example": 1154.1
          },
          "heightMSLAcc": {
            "format": "double",
            "description": "The accuracy of the height Above Mean Sea Level (AMSL) value for this point obstacle in feet.",
            "type": "number",
            "example": 34.1
          },
          "elevation": {
            "format": "double",
            "description": "The elevation at the point obstacle's location in feet.",
            "type": "number",
            "example": 840.1
          },
          "elevationAcc": {
            "format": "double",
            "description": "The difference between the assigned elevation of this point and its true elevation, in feet.",
            "type": "number",
            "example": 17.1
          },
          "horizAcc": {
            "format": "double",
            "description": "The difference between the recorded horizontal coordinates of this point obstacle and its true position, in feet.",
            "type": "number",
            "example": 8.1
          },
          "quality": {
            "description": "When horizontal and/or vertical accuracy requirements cannot be met because of inadequate source material, this code indicates the quality of the data.",
            "maxLength": 1,
            "type": "string",
            "example": "0"
          },
          "lightingCode": {
            "description": "Code specifying if this obstacle is lit (e.g. Y = Yes, N = No, U = Unknown).",
            "maxLength": 1,
            "type": "string",
            "example": "U"
          },
          "surfaceMatCode": {
            "description": "The surface material composition code of this point obstacle.",
            "maxLength": 1,
            "type": "string",
            "example": "U"
          },
          "directivityCode": {
            "format": "int32",
            "description": "The side or sides of this obstruction feature which produces the greatest reflectivity potential.",
            "type": "integer",
            "example": 2
          },
          "validationCode": {
            "format": "int32",
            "description": "Method used to confirm the existence of this obstacle.",
            "type": "integer",
            "example": 3
          },
          "transactionCode": {
            "description": "The transaction type/code for this obstacle (e.g. \"D\", \"N\", \"R\", \"S\", \"V\", \"X\").",
            "maxLength": 1,
            "type": "string",
            "example": "V"
          },
          "processCode": {
            "description": "Code denoting the action, review, or process that updated this obstacle.",
            "maxLength": 4,
            "type": "string",
            "example": "OT"
          },
          "actDelCode": {
            "description": "Indicates if this obstacle record is Active (A) or Deleted (D).",
            "maxLength": 1,
            "type": "string",
            "example": "A"
          },
          "producer": {
            "description": "Name of the agency that produced this obstruction data set.",
            "maxLength": 128,
            "type": "string",
            "example": "ACME"
          },
          "derivingOrg": {
            "description": "The organization that entered obstacle data other than the producer.",
            "maxLength": 64,
            "type": "string",
            "example": "ACME"
          },
          "deletingOrg": {
            "description": "The organization that deleted this obstacle record.",
            "maxLength": 64,
            "type": "string",
            "example": "ACME"
          },
          "sourceDate": {
            "format": "date",
            "description": "Source date of this obstacle data, in ISO 8601 date-only format (ex. YYYY-MM-DD).",
            "type": "string",
            "example": "2016-04-01"
          },
          "revDate": {
            "format": "date",
            "description": "Date this obstacle data was revised, in ISO 8601 date-only format (ex. YYYY-MM-DD).",
            "type": "string",
            "example": "2020-02-26"
          },
          "initRecordDate": {
            "format": "date",
            "description": "Date this obstacle was initially added to the data set, in ISO 8601 date-only format (ex. YYYY-MM-DD).",
            "type": "string",
            "example": "1991-03-28"
          },
          "keys": {
            "description": "This field provides an array of keys that can be added to any obstruction feature to provide information that is not already supported. The entries in this array must correspond to the position index in the values array. This array must be the same length as values.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "key1",
              "key2"
            ]
          },
          "values": {
            "description": "This field provides an array of values that can be added to any obstruction feature to provide information that is not already supported. The entries in this array must correspond to the position index in the keys array. This array must be the same length as keys.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "value1",
              "value2"
            ]
          },
          "obstacleRemarks": {
            "description": "Remarks regarding this obstacle.",
            "maxLength": 512,
            "type": "string",
            "example": "Obstacle remarks"
          },
          "nextCycleDate": {
            "format": "date",
            "description": "The date after which this obstruction data set’s currency is stale and should be refreshed, in ISO 8601 date-only format (e.g. YYYY-MM-DD).",
            "type": "string",
            "example": "2024-07-11"
          },
          "baselineCutoffDate": {
            "format": "date",
            "description": "Earliest record date possible in this obstruction data set (not the earliest data item), in ISO 8601 date-only format (e.g. YYYY-MM-DD). If null, this data set is assumed to be a full data pull of holdings until the cutoffDate.  If this field is populated, this data set only contains updates since the last baseline data set.",
            "type": "string",
            "example": "2024-04-23"
          },
          "cutoffDate": {
            "format": "date",
            "description": "Latest record date possible in this obstruction data set (not the most recent data item), in ISO 8601 date-only format (e.g. YYYY-MM-DD).",
            "type": "string",
            "example": "2024-05-21"
          },
          "airacCycle": {
            "format": "int32",
            "description": "The Aeronautical Information Regulation and Control (AIRAC) cycle of this obstruction data set. The format is YYNN where YY is the last two digits of the year and NN is the cycle number.",
            "type": "integer",
            "example": 2406
          },
          "baseAiracCycle": {
            "format": "int32",
            "description": "The baseline Aeronautical Information Regulation and Control (AIRAC) cycle for change sets only. The format is YYNN where YY is the last two digits of the year and NN is the cycle number.",
            "type": "integer",
            "example": 2405
          },
          "ownerCountryCode": {
            "description": "The DoD Standard Country Code designator for the country or political entity that owns the data set associated with this obstruction. This field will be set to \"OTHR\" if the source value does not match a UDL Country code value (ISO-3166-ALPHA-2).",
            "maxLength": 4,
            "type": "string",
            "example": "US"
          },
          "boundNELon": {
            "format": "double",
            "description": "WGS-84 longitude of the northeastern boundary for obstructions contained in this data set, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 99.1
          },
          "boundNELat": {
            "format": "double",
            "description": "WGS-84 latitude of the northeastern boundary for obstructions contained in this data set, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 29.1
          },
          "boundSWLon": {
            "format": "double",
            "description": "WGS-84 longitude of the southwestern boundary for obstructions contained in this data set, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": -144.1
          },
          "boundSWLat": {
            "format": "double",
            "description": "WGS-84 latitude of the southwestern boundary for obstructions contained in this data set, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": -44.1
          },
          "minHeightAGL": {
            "format": "double",
            "description": "The minimum height Above Ground Level (AGL) of the shortest obstruction contained in this data set, in feet.",
            "type": "number",
            "example": 20.1
          },
          "numPoints": {
            "format": "int32",
            "description": "The number of point features associated with this obstruction data set.",
            "type": "integer",
            "example": 21830590
          },
          "numLines": {
            "format": "int32",
            "description": "The number of line features associated with this obstruction data set.",
            "type": "integer",
            "example": 45993
          },
          "dataSetRemarks": {
            "description": "Remarks concerning this obstruction's data set.",
            "maxLength": 512,
            "type": "string",
            "example": "Data set remarks"
          },
          "pointsFilename": {
            "description": "The name of the point file associated with this obstruction data set.",
            "maxLength": 256,
            "type": "string",
            "example": "points.txt"
          },
          "linesFilename": {
            "description": "The name of the line file associated with this obstruction data set.",
            "maxLength": 256,
            "type": "string",
            "example": "lines.txt"
          },
          "vectorsFilename": {
            "description": "The name of the vector file associated with this obstruction data set.",
            "maxLength": 256,
            "type": "string",
            "example": "vectors.txt"
          },
          "rawFileURI": {
            "description": "Optional URI location in the document repository of the raw file parsed by the system to produce this record. To download the raw file, prepend https://udl-hostname/scs/download?id= to this value.",
            "maxLength": 256,
            "type": "string",
            "readOnly": true,
            "example": "Example URI"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "NavigationalObstruction_Ingest": {
        "description": "Beta Version Navigational Obstruction: Information describing navigational obstructions, such as applicable boundaries, locations, heights, data ownership, and currency.",
        "required": [
          "classificationMarking",
          "cycleDate",
          "obstacleType",
          "obstacleId",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "026dd511-8ba5-47d3-9909-836149f87686"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "cycleDate": {
            "format": "date",
            "description": "Start date of this obstruction data set's currency, in ISO 8601 date-only format.",
            "type": "string",
            "example": "2024-06-13"
          },
          "obstacleType": {
            "description": "Type of obstacle (e.g. P for point, V for vector, L for line).",
            "maxLength": 1,
            "minLength": 1,
            "type": "string",
            "example": "V"
          },
          "obstacleId": {
            "description": "The ID of this obstacle.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "example": "359655"
          },
          "externalId": {
            "description": "Optional obstacle ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 32,
            "type": "string",
            "example": "OU812"
          },
          "origId": {
            "description": "The original ID for this obstacle.",
            "maxLength": 36,
            "type": "string",
            "example": "L0000002289"
          },
          "countryCode": {
            "description": "The DoD Standard Country Code designator for the country issuing the diplomatic clearance. This field will be set to \"OTHR\" if the source value does not match a UDL Country code value (ISO-3166-ALPHA-2).",
            "maxLength": 4,
            "type": "string",
            "example": "US"
          },
          "provinceCode": {
            "description": "The Federal Information Processing Standards (FIPS) state/province numeric code of this obstacle's location.",
            "maxLength": 4,
            "type": "string",
            "example": "23"
          },
          "pointLat": {
            "format": "double",
            "description": "WGS-84 latitude of this point obstacle, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 46.757211
          },
          "pointLon": {
            "format": "double",
            "description": "WGS-84 longitude of this point obstacle, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": -67.759494
          },
          "lineNELon": {
            "format": "double",
            "description": "WGS-84 longitude of the northeastern point of the line, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": -122.197891
          },
          "lineNELat": {
            "format": "double",
            "description": "WGS-84 latitude of the northeastern point of the line, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 49.000584
          },
          "lineSWLon": {
            "format": "double",
            "description": "WGS-84 longitude of the southwestern point of the line, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": -122.722946
          },
          "lineSWLat": {
            "format": "double",
            "description": "WGS-84 latitude of the southwestern point of the line, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 48.507027
          },
          "segStartPoint": {
            "format": "int32",
            "description": "ID of the starting point of a line segment.",
            "type": "integer",
            "example": 359655
          },
          "segEndPoint": {
            "format": "int32",
            "description": "ID of the end point of a line segment.",
            "type": "integer",
            "example": 359655
          },
          "segNum": {
            "format": "int32",
            "description": "Identifies the sequence number of a line segment.",
            "type": "integer",
            "example": 1
          },
          "facc": {
            "description": "FACC (Feature and Attribute Coding Catalog) is a five-character code for encoding real-world entities and objects. The first letter of the code is an alphabetic value from \"A\" to \"Z\" which will map to a feature category. The second character will map to a subcategory. Characters three to five are numeric and range from 000 to 999. This value will provide a unit feature type identification within the categories.",
            "maxLength": 5,
            "type": "string",
            "example": "AT040"
          },
          "featureCode": {
            "description": "Identifying code for the type of this point obstacle.",
            "maxLength": 4,
            "type": "string",
            "example": "540"
          },
          "featureType": {
            "description": "Identifying code for the type of this point obstacle.",
            "maxLength": 4,
            "type": "string",
            "example": "540"
          },
          "featureName": {
            "description": "Type name of point obstacle.",
            "maxLength": 64,
            "type": "string",
            "example": "PYLON"
          },
          "featureDescription": {
            "description": "Description of this obstacle, corresponding to the FACC (Feature and Attribute Coding Catalog) value.",
            "maxLength": 64,
            "type": "string",
            "example": "Powerline Pylon, General"
          },
          "wac": {
            "description": "The World Aeronautical Chart (WAC) identifier for the area in which this obstacle is located.",
            "maxLength": 4,
            "type": "string",
            "example": "262"
          },
          "wacINNR": {
            "description": "This obstacle's World Area Code installation number (WAC-INNR).",
            "maxLength": 32,
            "type": "string",
            "example": "0409-00039"
          },
          "multObs": {
            "description": "Indicates if the feature has multiple obstructions (e.g. S = Single, M = Multiple, U = Undetermined).",
            "maxLength": 1,
            "type": "string",
            "example": "S"
          },
          "numObs": {
            "format": "int32",
            "description": "Indicates the number of obstructions associated with a feature.",
            "type": "integer",
            "example": 1
          },
          "horizDatumCode": {
            "description": "Code representing the mathematical model of Earth used to calculate coordinates for this obstacle (e.g. WGS-84, U for undetermined, etc.).  US Forces use the World Geodetic System 1984 (WGS-84), but also use maps by allied countries with local datums.",
            "maxLength": 8,
            "type": "string",
            "example": "WGS-84"
          },
          "heightAGL": {
            "format": "double",
            "description": "The height Above Ground Level (AGL) of the point obstacle in feet.",
            "type": "number",
            "example": 314.1
          },
          "heightAGLAcc": {
            "format": "double",
            "description": "The accuracy of the height Above Ground Level (AGL) AGL value for this point obstacle in feet.",
            "type": "number",
            "example": 30.1
          },
          "heightMSL": {
            "format": "double",
            "description": "The height Above Mean Sea Level (AMSL) of the point obstacle in feet.",
            "type": "number",
            "example": 1154.1
          },
          "heightMSLAcc": {
            "format": "double",
            "description": "The accuracy of the height Above Mean Sea Level (AMSL) value for this point obstacle in feet.",
            "type": "number",
            "example": 34.1
          },
          "elevation": {
            "format": "double",
            "description": "The elevation at the point obstacle's location in feet.",
            "type": "number",
            "example": 840.1
          },
          "elevationAcc": {
            "format": "double",
            "description": "The difference between the assigned elevation of this point and its true elevation, in feet.",
            "type": "number",
            "example": 17.1
          },
          "horizAcc": {
            "format": "double",
            "description": "The difference between the recorded horizontal coordinates of this point obstacle and its true position, in feet.",
            "type": "number",
            "example": 8.1
          },
          "quality": {
            "description": "When horizontal and/or vertical accuracy requirements cannot be met because of inadequate source material, this code indicates the quality of the data.",
            "maxLength": 1,
            "type": "string",
            "example": "0"
          },
          "lightingCode": {
            "description": "Code specifying if this obstacle is lit (e.g. Y = Yes, N = No, U = Unknown).",
            "maxLength": 1,
            "type": "string",
            "example": "U"
          },
          "surfaceMatCode": {
            "description": "The surface material composition code of this point obstacle.",
            "maxLength": 1,
            "type": "string",
            "example": "U"
          },
          "directivityCode": {
            "format": "int32",
            "description": "The side or sides of this obstruction feature which produces the greatest reflectivity potential.",
            "type": "integer",
            "example": 2
          },
          "validationCode": {
            "format": "int32",
            "description": "Method used to confirm the existence of this obstacle.",
            "type": "integer",
            "example": 3
          },
          "transactionCode": {
            "description": "The transaction type/code for this obstacle (e.g. \"D\", \"N\", \"R\", \"S\", \"V\", \"X\").",
            "maxLength": 1,
            "type": "string",
            "example": "V"
          },
          "processCode": {
            "description": "Code denoting the action, review, or process that updated this obstacle.",
            "maxLength": 4,
            "type": "string",
            "example": "OT"
          },
          "actDelCode": {
            "description": "Indicates if this obstacle record is Active (A) or Deleted (D).",
            "maxLength": 1,
            "type": "string",
            "example": "A"
          },
          "producer": {
            "description": "Name of the agency that produced this obstruction data set.",
            "maxLength": 128,
            "type": "string",
            "example": "ACME"
          },
          "derivingOrg": {
            "description": "The organization that entered obstacle data other than the producer.",
            "maxLength": 64,
            "type": "string",
            "example": "ACME"
          },
          "deletingOrg": {
            "description": "The organization that deleted this obstacle record.",
            "maxLength": 64,
            "type": "string",
            "example": "ACME"
          },
          "sourceDate": {
            "format": "date",
            "description": "Source date of this obstacle data, in ISO 8601 date-only format (ex. YYYY-MM-DD).",
            "type": "string",
            "example": "2016-04-01"
          },
          "revDate": {
            "format": "date",
            "description": "Date this obstacle data was revised, in ISO 8601 date-only format (ex. YYYY-MM-DD).",
            "type": "string",
            "example": "2020-02-26"
          },
          "initRecordDate": {
            "format": "date",
            "description": "Date this obstacle was initially added to the data set, in ISO 8601 date-only format (ex. YYYY-MM-DD).",
            "type": "string",
            "example": "1991-03-28"
          },
          "keys": {
            "description": "This field provides an array of keys that can be added to any obstruction feature to provide information that is not already supported. The entries in this array must correspond to the position index in the values array. This array must be the same length as values.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "key1",
              "key2"
            ]
          },
          "values": {
            "description": "This field provides an array of values that can be added to any obstruction feature to provide information that is not already supported. The entries in this array must correspond to the position index in the keys array. This array must be the same length as keys.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "value1",
              "value2"
            ]
          },
          "obstacleRemarks": {
            "description": "Remarks regarding this obstacle.",
            "maxLength": 512,
            "type": "string",
            "example": "Obstacle remarks"
          },
          "nextCycleDate": {
            "format": "date",
            "description": "The date after which this obstruction data set’s currency is stale and should be refreshed, in ISO 8601 date-only format (e.g. YYYY-MM-DD).",
            "type": "string",
            "example": "2024-07-11"
          },
          "baselineCutoffDate": {
            "format": "date",
            "description": "Earliest record date possible in this obstruction data set (not the earliest data item), in ISO 8601 date-only format (e.g. YYYY-MM-DD). If null, this data set is assumed to be a full data pull of holdings until the cutoffDate.  If this field is populated, this data set only contains updates since the last baseline data set.",
            "type": "string",
            "example": "2024-04-23"
          },
          "cutoffDate": {
            "format": "date",
            "description": "Latest record date possible in this obstruction data set (not the most recent data item), in ISO 8601 date-only format (e.g. YYYY-MM-DD).",
            "type": "string",
            "example": "2024-05-21"
          },
          "airacCycle": {
            "format": "int32",
            "description": "The Aeronautical Information Regulation and Control (AIRAC) cycle of this obstruction data set. The format is YYNN where YY is the last two digits of the year and NN is the cycle number.",
            "type": "integer",
            "example": 2406
          },
          "baseAiracCycle": {
            "format": "int32",
            "description": "The baseline Aeronautical Information Regulation and Control (AIRAC) cycle for change sets only. The format is YYNN where YY is the last two digits of the year and NN is the cycle number.",
            "type": "integer",
            "example": 2405
          },
          "ownerCountryCode": {
            "description": "The DoD Standard Country Code designator for the country or political entity that owns the data set associated with this obstruction. This field will be set to \"OTHR\" if the source value does not match a UDL Country code value (ISO-3166-ALPHA-2).",
            "maxLength": 4,
            "type": "string",
            "example": "US"
          },
          "boundNELon": {
            "format": "double",
            "description": "WGS-84 longitude of the northeastern boundary for obstructions contained in this data set, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 99.1
          },
          "boundNELat": {
            "format": "double",
            "description": "WGS-84 latitude of the northeastern boundary for obstructions contained in this data set, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 29.1
          },
          "boundSWLon": {
            "format": "double",
            "description": "WGS-84 longitude of the southwestern boundary for obstructions contained in this data set, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": -144.1
          },
          "boundSWLat": {
            "format": "double",
            "description": "WGS-84 latitude of the southwestern boundary for obstructions contained in this data set, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": -44.1
          },
          "minHeightAGL": {
            "format": "double",
            "description": "The minimum height Above Ground Level (AGL) of the shortest obstruction contained in this data set, in feet.",
            "type": "number",
            "example": 20.1
          },
          "numPoints": {
            "format": "int32",
            "description": "The number of point features associated with this obstruction data set.",
            "type": "integer",
            "example": 21830590
          },
          "numLines": {
            "format": "int32",
            "description": "The number of line features associated with this obstruction data set.",
            "type": "integer",
            "example": 45993
          },
          "dataSetRemarks": {
            "description": "Remarks concerning this obstruction's data set.",
            "maxLength": 512,
            "type": "string",
            "example": "Data set remarks"
          },
          "pointsFilename": {
            "description": "The name of the point file associated with this obstruction data set.",
            "maxLength": 256,
            "type": "string",
            "example": "points.txt"
          },
          "linesFilename": {
            "description": "The name of the line file associated with this obstruction data set.",
            "maxLength": 256,
            "type": "string",
            "example": "lines.txt"
          },
          "vectorsFilename": {
            "description": "The name of the vector file associated with this obstruction data set.",
            "maxLength": 256,
            "type": "string",
            "example": "vectors.txt"
          },
          "rawFileURI": {
            "description": "Optional URI location in the document repository of the raw file parsed by the system to produce this record. To download the raw file, prepend https://udl-hostname/scs/download?id= to this value.",
            "maxLength": 256,
            "type": "string",
            "readOnly": true,
            "example": "Example URI"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "PointOfContact_Abridged": {
        "description": "Point of contacts for scheduling or modifying the route.",
        "type": "object",
        "properties": {
          "pocSequenceId": {
            "format": "int32",
            "description": "Sequencing field for point of contact.",
            "type": "integer",
            "example": 1
          },
          "pocTypeName": {
            "description": "A code or name that represents the contact's role in association to the track route (ex. Originator, Scheduler, Maintainer, etc.).",
            "maxLength": 36,
            "type": "string",
            "example": "Originator"
          },
          "pocName": {
            "description": "The name of the contact.",
            "maxLength": 36,
            "type": "string",
            "example": "Fred Smith"
          },
          "office": {
            "description": "Office name for which the contact belongs.",
            "maxLength": 36,
            "type": "string",
            "example": "A34"
          },
          "username": {
            "description": "The username of the contact.",
            "maxLength": 64,
            "type": "string",
            "example": "fgsmith"
          },
          "rank": {
            "description": "The rank of contact.",
            "maxLength": 32,
            "type": "string",
            "example": "Capt"
          },
          "pocOrg": {
            "description": "Organization name for which the contact belongs.",
            "maxLength": 36,
            "type": "string",
            "example": "HQAF"
          },
          "phone": {
            "description": "Phone number of the contact.",
            "maxLength": 45,
            "type": "string",
            "example": "8675309"
          },
          "remark": {
            "description": "Text of the remark.",
            "maxLength": 1024,
            "type": "string",
            "example": "POC remark."
          }
        }
      },
      "PointOfContact_Full": {
        "description": "Point of contacts for scheduling or modifying the route.",
        "type": "object",
        "properties": {
          "pocSequenceId": {
            "format": "int32",
            "description": "Sequencing field for point of contact.",
            "type": "integer",
            "example": 1
          },
          "pocTypeName": {
            "description": "A code or name that represents the contact's role in association to the track route (ex. Originator, Scheduler, Maintainer, etc.).",
            "maxLength": 36,
            "type": "string",
            "example": "Originator"
          },
          "pocName": {
            "description": "The name of the contact.",
            "maxLength": 36,
            "type": "string",
            "example": "Fred Smith"
          },
          "office": {
            "description": "Office name for which the contact belongs.",
            "maxLength": 36,
            "type": "string",
            "example": "A34"
          },
          "username": {
            "description": "The username of the contact.",
            "maxLength": 64,
            "type": "string",
            "example": "fgsmith"
          },
          "rank": {
            "description": "The rank of contact.",
            "maxLength": 32,
            "type": "string",
            "example": "Capt"
          },
          "pocOrg": {
            "description": "Organization name for which the contact belongs.",
            "maxLength": 36,
            "type": "string",
            "example": "HQAF"
          },
          "phone": {
            "description": "Phone number of the contact.",
            "maxLength": 45,
            "type": "string",
            "example": "8675309"
          },
          "remark": {
            "description": "Text of the remark.",
            "maxLength": 1024,
            "type": "string",
            "example": "POC remark."
          }
        }
      },
      "PointOfContact_Ingest": {
        "description": "Point of contacts for scheduling or modifying the route.",
        "type": "object",
        "properties": {
          "pocSequenceId": {
            "format": "int32",
            "description": "Sequencing field for point of contact.",
            "type": "integer",
            "example": 1
          },
          "pocTypeName": {
            "description": "A code or name that represents the contact's role in association to the track route (ex. Originator, Scheduler, Maintainer, etc.).",
            "maxLength": 36,
            "type": "string",
            "example": "Originator"
          },
          "pocName": {
            "description": "The name of the contact.",
            "maxLength": 36,
            "type": "string",
            "example": "Fred Smith"
          },
          "office": {
            "description": "Office name for which the contact belongs.",
            "maxLength": 36,
            "type": "string",
            "example": "A34"
          },
          "username": {
            "description": "The username of the contact.",
            "maxLength": 64,
            "type": "string",
            "example": "fgsmith"
          },
          "rank": {
            "description": "The rank of contact.",
            "maxLength": 32,
            "type": "string",
            "example": "Capt"
          },
          "pocOrg": {
            "description": "Organization name for which the contact belongs.",
            "maxLength": 36,
            "type": "string",
            "example": "HQAF"
          },
          "phone": {
            "description": "Phone number of the contact.",
            "maxLength": 45,
            "type": "string",
            "example": "8675309"
          },
          "remark": {
            "description": "Text of the remark.",
            "maxLength": 1024,
            "type": "string",
            "example": "POC remark."
          }
        }
      },
      "RoutePoints_Abridged": {
        "description": "Points identified within the route.",
        "type": "object",
        "properties": {
          "ptSequenceId": {
            "format": "int32",
            "description": "Sequencing field for the track route. This is the identifier representing the sequence of waypoints associated to the track route.",
            "type": "integer",
            "example": 1
          },
          "ptTypeCode": {
            "description": "Code representation of the point within the track route (ex. EP, EX, CP, IP, etc.).",
            "maxLength": 16,
            "type": "string",
            "example": "EP"
          },
          "ptTypeName": {
            "description": "The name that represents the point within the track route (ex. ENTRY POINT, EXIT POINT, CONTROL POINT, INITIAL POINT, etc.).",
            "maxLength": 36,
            "type": "string",
            "example": "ENTRY POINT"
          },
          "waypointName": {
            "description": "Name of a waypoint which identifies the location of the point.",
            "maxLength": 32,
            "type": "string",
            "example": "KCHS"
          },
          "dafifPt": {
            "description": "Flag indicating this is a Digital Aeronautical Flight Information File (DAFIF) point.",
            "type": "boolean",
            "example": true
          },
          "ptLat": {
            "format": "double",
            "description": "WGS84 latitude of the point location, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 45.23
          },
          "ptLon": {
            "format": "double",
            "description": "WGS84 longitude of the point location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": 179.1
          },
          "magDec": {
            "format": "double",
            "description": "The magnetic declination/variation of the route point location from true north, in degrees. Positive values east of true north and negative values west of true north.",
            "type": "number",
            "example": 7.35
          },
          "navaidLength": {
            "format": "double",
            "description": "The length of the course from the Navigational Aid (NAVAID) in nautical miles.",
            "type": "number",
            "example": 100.2
          },
          "navaid": {
            "description": "Navigational Aid (NAVAID) identification code.",
            "maxLength": 16,
            "type": "string",
            "example": "HTO"
          },
          "countryCode": {
            "description": "The DoD Standard Country Code designator for the country where the route point resides. This field should be set to \"OTHR\" if the source value does not match a UDL country code value (ISO-3166-ALPHA-2).",
            "maxLength": 4,
            "type": "string",
            "example": "NL"
          },
          "altCountryCode": {
            "description": "Specifies an alternate country code if the data provider code is not part of an official NAVAID Country Code standard such as ISO-3166 or FIPS. This field will be set to the value provided by the source and should be used for all Queries specifying a Country Code.",
            "maxLength": 16,
            "type": "string",
            "example": "IZ"
          },
          "navaidType": {
            "description": "The NAVAID type of this route point (ex. VOR, VORTAC, TACAN, etc.).",
            "maxLength": 12,
            "type": "string",
            "example": "VORTAC"
          }
        }
      },
      "RoutePoints_Full": {
        "description": "Points identified within the route.",
        "type": "object",
        "properties": {
          "ptSequenceId": {
            "format": "int32",
            "description": "Sequencing field for the track route. This is the identifier representing the sequence of waypoints associated to the track route.",
            "type": "integer",
            "example": 1
          },
          "ptTypeCode": {
            "description": "Code representation of the point within the track route (ex. EP, EX, CP, IP, etc.).",
            "maxLength": 16,
            "type": "string",
            "example": "EP"
          },
          "ptTypeName": {
            "description": "The name that represents the point within the track route (ex. ENTRY POINT, EXIT POINT, CONTROL POINT, INITIAL POINT, etc.).",
            "maxLength": 36,
            "type": "string",
            "example": "ENTRY POINT"
          },
          "waypointName": {
            "description": "Name of a waypoint which identifies the location of the point.",
            "maxLength": 32,
            "type": "string",
            "example": "KCHS"
          },
          "dafifPt": {
            "description": "Flag indicating this is a Digital Aeronautical Flight Information File (DAFIF) point.",
            "type": "boolean",
            "example": true
          },
          "ptLat": {
            "format": "double",
            "description": "WGS84 latitude of the point location, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 45.23
          },
          "ptLon": {
            "format": "double",
            "description": "WGS84 longitude of the point location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": 179.1
          },
          "magDec": {
            "format": "double",
            "description": "The magnetic declination/variation of the route point location from true north, in degrees. Positive values east of true north and negative values west of true north.",
            "type": "number",
            "example": 7.35
          },
          "navaidLength": {
            "format": "double",
            "description": "The length of the course from the Navigational Aid (NAVAID) in nautical miles.",
            "type": "number",
            "example": 100.2
          },
          "navaid": {
            "description": "Navigational Aid (NAVAID) identification code.",
            "maxLength": 16,
            "type": "string",
            "example": "HTO"
          },
          "countryCode": {
            "description": "The DoD Standard Country Code designator for the country where the route point resides. This field should be set to \"OTHR\" if the source value does not match a UDL country code value (ISO-3166-ALPHA-2).",
            "maxLength": 4,
            "type": "string",
            "example": "NL"
          },
          "altCountryCode": {
            "description": "Specifies an alternate country code if the data provider code is not part of an official NAVAID Country Code standard such as ISO-3166 or FIPS. This field will be set to the value provided by the source and should be used for all Queries specifying a Country Code.",
            "maxLength": 16,
            "type": "string",
            "example": "IZ"
          },
          "navaidType": {
            "description": "The NAVAID type of this route point (ex. VOR, VORTAC, TACAN, etc.).",
            "maxLength": 12,
            "type": "string",
            "example": "VORTAC"
          }
        }
      },
      "RoutePoints_Ingest": {
        "description": "Points identified within the route.",
        "type": "object",
        "properties": {
          "ptSequenceId": {
            "format": "int32",
            "description": "Sequencing field for the track route. This is the identifier representing the sequence of waypoints associated to the track route.",
            "type": "integer",
            "example": 1
          },
          "ptTypeCode": {
            "description": "Code representation of the point within the track route (ex. EP, EX, CP, IP, etc.).",
            "maxLength": 16,
            "type": "string",
            "example": "EP"
          },
          "ptTypeName": {
            "description": "The name that represents the point within the track route (ex. ENTRY POINT, EXIT POINT, CONTROL POINT, INITIAL POINT, etc.).",
            "maxLength": 36,
            "type": "string",
            "example": "ENTRY POINT"
          },
          "waypointName": {
            "description": "Name of a waypoint which identifies the location of the point.",
            "maxLength": 32,
            "type": "string",
            "example": "KCHS"
          },
          "dafifPt": {
            "description": "Flag indicating this is a Digital Aeronautical Flight Information File (DAFIF) point.",
            "type": "boolean",
            "example": true
          },
          "ptLat": {
            "format": "double",
            "description": "WGS84 latitude of the point location, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 45.23
          },
          "ptLon": {
            "format": "double",
            "description": "WGS84 longitude of the point location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": 179.1
          },
          "magDec": {
            "format": "double",
            "description": "The magnetic declination/variation of the route point location from true north, in degrees. Positive values east of true north and negative values west of true north.",
            "type": "number",
            "example": 7.35
          },
          "navaidLength": {
            "format": "double",
            "description": "The length of the course from the Navigational Aid (NAVAID) in nautical miles.",
            "type": "number",
            "example": 100.2
          },
          "navaid": {
            "description": "Navigational Aid (NAVAID) identification code.",
            "maxLength": 16,
            "type": "string",
            "example": "HTO"
          },
          "countryCode": {
            "description": "The DoD Standard Country Code designator for the country where the route point resides. This field should be set to \"OTHR\" if the source value does not match a UDL country code value (ISO-3166-ALPHA-2).",
            "maxLength": 4,
            "type": "string",
            "example": "NL"
          },
          "altCountryCode": {
            "description": "Specifies an alternate country code if the data provider code is not part of an official NAVAID Country Code standard such as ISO-3166 or FIPS. This field will be set to the value provided by the source and should be used for all Queries specifying a Country Code.",
            "maxLength": 16,
            "type": "string",
            "example": "IZ"
          },
          "navaidType": {
            "description": "The NAVAID type of this route point (ex. VOR, VORTAC, TACAN, etc.).",
            "maxLength": 12,
            "type": "string",
            "example": "VORTAC"
          }
        }
      },
      "SortiePPR_Abridged": {
        "description": "SortiePPR is a regulatory requirement where operators must obtain permissions to full operational access to a runway, taxiway, or airport service.",
        "required": [
          "classificationMarking",
          "idSortie",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "SORTIEPPR-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idSortie": {
            "description": "Unique identifier of the Aircraft Sortie associated with this prior permission required (PPR) record.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "4ef3d1e8-ab08-ab70-498f-edc479734e5c"
          },
          "externalId": {
            "description": "Optional ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "aa714f4d52a37ab1a00b21af9566e379"
          },
          "number": {
            "description": "The prior permission required (PPR) number issued by the airfield for a sortie.",
            "maxLength": 16,
            "type": "string",
            "example": "07-21-07W"
          },
          "startTime": {
            "format": "date-time",
            "description": "Time the prior permission required (PPR) valid window begins, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "endTime": {
            "format": "date-time",
            "description": "Time the prior permission required (PPR) valid window ends, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "requestor": {
            "description": "The username of the prior permission required (PPR) requestor.",
            "maxLength": 32,
            "type": "string",
            "example": "jsmith1"
          },
          "grantor": {
            "description": "Identifier of the prior permission required (PPR) grantor.",
            "maxLength": 32,
            "type": "string",
            "example": "SMITH"
          },
          "type": {
            "description": "Type of prior permission required (PPR) for a sortie (M - Military or C - Civilian). Enum: [M, C].",
            "maxLength": 1,
            "enum": [
              "M",
              "C"
            ],
            "type": "string",
            "example": "M"
          },
          "remarks": {
            "description": "Remarks concerning the prior permission required (PPR) for a sortie.",
            "maxLength": 512,
            "type": "string",
            "example": "PPR remark"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "SortiePPR_Full": {
        "description": "SortiePPR is a regulatory requirement where operators must obtain permissions to full operational access to a runway, taxiway, or airport service.",
        "required": [
          "classificationMarking",
          "idSortie",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "SORTIEPPR-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idSortie": {
            "description": "Unique identifier of the Aircraft Sortie associated with this prior permission required (PPR) record.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "4ef3d1e8-ab08-ab70-498f-edc479734e5c"
          },
          "externalId": {
            "description": "Optional ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "aa714f4d52a37ab1a00b21af9566e379"
          },
          "number": {
            "description": "The prior permission required (PPR) number issued by the airfield for a sortie.",
            "maxLength": 16,
            "type": "string",
            "example": "07-21-07W"
          },
          "startTime": {
            "format": "date-time",
            "description": "Time the prior permission required (PPR) valid window begins, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "endTime": {
            "format": "date-time",
            "description": "Time the prior permission required (PPR) valid window ends, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "requestor": {
            "description": "The username of the prior permission required (PPR) requestor.",
            "maxLength": 32,
            "type": "string",
            "example": "jsmith1"
          },
          "grantor": {
            "description": "Identifier of the prior permission required (PPR) grantor.",
            "maxLength": 32,
            "type": "string",
            "example": "SMITH"
          },
          "type": {
            "description": "Type of prior permission required (PPR) for a sortie (M - Military or C - Civilian). Enum: [M, C].",
            "maxLength": 1,
            "enum": [
              "M",
              "C"
            ],
            "type": "string",
            "example": "M"
          },
          "remarks": {
            "description": "Remarks concerning the prior permission required (PPR) for a sortie.",
            "maxLength": 512,
            "type": "string",
            "example": "PPR remark"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "SortiePPR_Ingest": {
        "description": "SortiePPR is a regulatory requirement where operators must obtain permissions to full operational access to a runway, taxiway, or airport service.",
        "required": [
          "classificationMarking",
          "idSortie",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "SORTIEPPR-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idSortie": {
            "description": "Unique identifier of the Aircraft Sortie associated with this prior permission required (PPR) record.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "4ef3d1e8-ab08-ab70-498f-edc479734e5c"
          },
          "externalId": {
            "description": "Optional ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "aa714f4d52a37ab1a00b21af9566e379"
          },
          "number": {
            "description": "The prior permission required (PPR) number issued by the airfield for a sortie.",
            "maxLength": 16,
            "type": "string",
            "example": "07-21-07W"
          },
          "startTime": {
            "format": "date-time",
            "description": "Time the prior permission required (PPR) valid window begins, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "endTime": {
            "format": "date-time",
            "description": "Time the prior permission required (PPR) valid window ends, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T01:01:01.123Z"
          },
          "requestor": {
            "description": "The username of the prior permission required (PPR) requestor.",
            "maxLength": 32,
            "type": "string",
            "example": "jsmith1"
          },
          "grantor": {
            "description": "Identifier of the prior permission required (PPR) grantor.",
            "maxLength": 32,
            "type": "string",
            "example": "SMITH"
          },
          "type": {
            "description": "Type of prior permission required (PPR) for a sortie (M - Military or C - Civilian). Enum: [M, C].",
            "maxLength": 1,
            "enum": [
              "M",
              "C"
            ],
            "type": "string",
            "example": "M"
          },
          "remarks": {
            "description": "Remarks concerning the prior permission required (PPR) for a sortie.",
            "maxLength": 512,
            "type": "string",
            "example": "PPR remark"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "TrackRoute_Abridged": {
        "description": "A track route is a prescribed route for performing training events or operations such as air refueling.",
        "required": [
          "classificationMarking",
          "type",
          "lastUpdateDate",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "026dd511-8ba5-47d3-9909-836149f87686"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "type": {
            "description": "The track route type represented by this record (ex. AIR REFUELING).",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "AIR REFUELING"
          },
          "externalId": {
            "description": "Optional air refueling track ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "GDSSMH121004232315303094"
          },
          "direction": {
            "description": "The principal compass direction (cardinal or ordinal) of the track route.",
            "maxLength": 2,
            "type": "string",
            "example": "NE"
          },
          "creatingOrg": {
            "description": "The name of the creating organization of the track route.",
            "maxLength": 250,
            "type": "string",
            "example": "HQPAC"
          },
          "locationTrackId": {
            "description": "Track location ID.",
            "maxLength": 36,
            "type": "string",
            "example": "POACHR"
          },
          "trackId": {
            "description": "Identifier of the track.",
            "maxLength": 36,
            "type": "string",
            "example": "CH61A"
          },
          "trackName": {
            "description": "Name of the track.",
            "maxLength": 50,
            "type": "string",
            "example": "CH61 POST"
          },
          "shortName": {
            "description": "Abbreviated name of the track.",
            "maxLength": 16,
            "type": "string",
            "example": "CH61"
          },
          "typeCode": {
            "description": "Type of process used by AMC to schedule an air refueling event. Possible values are A (Matched Long Range), F (Matched AMC Short Notice), N (Unmatched Theater Operation Short Notice (Theater Assets)), R, Unmatched Long Range, S (Soft Air Refueling), T (Matched Theater Operation Short Notice (Theater Assets)), V (Unmatched AMC Short Notice), X (Unmatched Theater Operation Short Notice (AMC Assets)), Y (Matched Theater Operation Short Notice (AMC Assets)), Z (Other Air Refueling).",
            "maxLength": 2,
            "type": "string",
            "example": "V"
          },
          "regionCode": {
            "description": "Region code indicating where the track resides as determined by the data source.",
            "maxLength": 36,
            "type": "string",
            "example": "5"
          },
          "regionName": {
            "description": "Region where the track resides.",
            "maxLength": 32,
            "type": "string",
            "example": "North America"
          },
          "apxBeaconCode": {
            "description": "The APX radar code sent and received by the aircraft for identification.",
            "maxLength": 36,
            "type": "string",
            "example": "5/1"
          },
          "receiverTankerCHCode": {
            "description": "The receiver tanker channel identifer for air refueling tracks.",
            "maxLength": 36,
            "type": "string",
            "example": "31/094"
          },
          "apnSetting": {
            "description": "The APN radar code sent and received by the aircraft for identification.",
            "maxLength": 36,
            "type": "string",
            "example": "1-3-1"
          },
          "sic": {
            "description": "Standard Indicator Code of the air refueling track.",
            "maxLength": 36,
            "type": "string",
            "example": "N"
          },
          "reviewDate": {
            "format": "date-time",
            "description": "Date the track needs to be reviewed for accuracy or deletion in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-09-16T16:00:00.123Z"
          },
          "lastUsedDate": {
            "format": "date-time",
            "description": "Used to show last time the track route was added to an itinerary in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-09-17T16:00:00.123Z"
          },
          "lastUpdateDate": {
            "format": "date-time",
            "description": "The last updated date of the track route in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-09-17T16:00:00.123Z"
          },
          "priFreq": {
            "format": "double",
            "description": "The primary UHF radio frequency used for the track route in megahertz.",
            "type": "number",
            "example": 357.5
          },
          "secFreq": {
            "format": "double",
            "description": "The secondary UHF radio frequency used for the track route in megahertz.",
            "type": "number",
            "example": 319.7
          },
          "artccMessage": {
            "description": "Air Refueling Track Control Center message.",
            "maxLength": 256,
            "type": "string",
            "example": "OAKLAND CTR/GUAM CERAP"
          },
          "schedulerOrgName": {
            "description": "Point of contact for the air refueling track route scheduler.",
            "maxLength": 256,
            "type": "string",
            "example": "97 OSS/OSOS DSN 866-5555"
          },
          "schedulerOrgUnit": {
            "description": "The unit responsible for scheduling the track route.",
            "maxLength": 32,
            "type": "string",
            "example": "612 AOC"
          },
          "effectiveDate": {
            "format": "date-time",
            "description": "The date which the DAFIF track was last updated/validated in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-09-17T16:00:00.123Z"
          },
          "routePoints": {
            "description": "Points identified within the route.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoutePoints_Abridged"
            }
          },
          "altitudeBlocks": {
            "description": "Minimum and maximum altitude bounds for the track.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AltitudeBlocks_Abridged"
            }
          },
          "poc": {
            "description": "Point of contacts for scheduling or modifying the route.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PointOfContact_Abridged"
            }
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "TrackRoute_Full": {
        "description": "A track route is a prescribed route for performing training events or operations such as air refueling.",
        "required": [
          "classificationMarking",
          "type",
          "lastUpdateDate",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "026dd511-8ba5-47d3-9909-836149f87686"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "type": {
            "description": "The track route type represented by this record (ex. AIR REFUELING).",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "AIR REFUELING"
          },
          "externalId": {
            "description": "Optional air refueling track ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "GDSSMH121004232315303094"
          },
          "direction": {
            "description": "The principal compass direction (cardinal or ordinal) of the track route.",
            "maxLength": 2,
            "type": "string",
            "example": "NE"
          },
          "creatingOrg": {
            "description": "The name of the creating organization of the track route.",
            "maxLength": 250,
            "type": "string",
            "example": "HQPAC"
          },
          "locationTrackId": {
            "description": "Track location ID.",
            "maxLength": 36,
            "type": "string",
            "example": "POACHR"
          },
          "trackId": {
            "description": "Identifier of the track.",
            "maxLength": 36,
            "type": "string",
            "example": "CH61A"
          },
          "trackName": {
            "description": "Name of the track.",
            "maxLength": 50,
            "type": "string",
            "example": "CH61 POST"
          },
          "shortName": {
            "description": "Abbreviated name of the track.",
            "maxLength": 16,
            "type": "string",
            "example": "CH61"
          },
          "typeCode": {
            "description": "Type of process used by AMC to schedule an air refueling event. Possible values are A (Matched Long Range), F (Matched AMC Short Notice), N (Unmatched Theater Operation Short Notice (Theater Assets)), R, Unmatched Long Range, S (Soft Air Refueling), T (Matched Theater Operation Short Notice (Theater Assets)), V (Unmatched AMC Short Notice), X (Unmatched Theater Operation Short Notice (AMC Assets)), Y (Matched Theater Operation Short Notice (AMC Assets)), Z (Other Air Refueling).",
            "maxLength": 2,
            "type": "string",
            "example": "V"
          },
          "regionCode": {
            "description": "Region code indicating where the track resides as determined by the data source.",
            "maxLength": 36,
            "type": "string",
            "example": "5"
          },
          "regionName": {
            "description": "Region where the track resides.",
            "maxLength": 32,
            "type": "string",
            "example": "North America"
          },
          "apxBeaconCode": {
            "description": "The APX radar code sent and received by the aircraft for identification.",
            "maxLength": 36,
            "type": "string",
            "example": "5/1"
          },
          "receiverTankerCHCode": {
            "description": "The receiver tanker channel identifer for air refueling tracks.",
            "maxLength": 36,
            "type": "string",
            "example": "31/094"
          },
          "apnSetting": {
            "description": "The APN radar code sent and received by the aircraft for identification.",
            "maxLength": 36,
            "type": "string",
            "example": "1-3-1"
          },
          "sic": {
            "description": "Standard Indicator Code of the air refueling track.",
            "maxLength": 36,
            "type": "string",
            "example": "N"
          },
          "reviewDate": {
            "format": "date-time",
            "description": "Date the track needs to be reviewed for accuracy or deletion in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-09-16T16:00:00.123Z"
          },
          "lastUsedDate": {
            "format": "date-time",
            "description": "Used to show last time the track route was added to an itinerary in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-09-17T16:00:00.123Z"
          },
          "lastUpdateDate": {
            "format": "date-time",
            "description": "The last updated date of the track route in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-09-17T16:00:00.123Z"
          },
          "priFreq": {
            "format": "double",
            "description": "The primary UHF radio frequency used for the track route in megahertz.",
            "type": "number",
            "example": 357.5
          },
          "secFreq": {
            "format": "double",
            "description": "The secondary UHF radio frequency used for the track route in megahertz.",
            "type": "number",
            "example": 319.7
          },
          "artccMessage": {
            "description": "Air Refueling Track Control Center message.",
            "maxLength": 256,
            "type": "string",
            "example": "OAKLAND CTR/GUAM CERAP"
          },
          "schedulerOrgName": {
            "description": "Point of contact for the air refueling track route scheduler.",
            "maxLength": 256,
            "type": "string",
            "example": "97 OSS/OSOS DSN 866-5555"
          },
          "schedulerOrgUnit": {
            "description": "The unit responsible for scheduling the track route.",
            "maxLength": 32,
            "type": "string",
            "example": "612 AOC"
          },
          "effectiveDate": {
            "format": "date-time",
            "description": "The date which the DAFIF track was last updated/validated in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-09-17T16:00:00.123Z"
          },
          "routePoints": {
            "description": "Points identified within the route.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoutePoints_Full"
            }
          },
          "altitudeBlocks": {
            "description": "Minimum and maximum altitude bounds for the track.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AltitudeBlocks_Full"
            }
          },
          "poc": {
            "description": "Point of contacts for scheduling or modifying the route.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PointOfContact_Full"
            }
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "TrackRoute_Ingest": {
        "description": "A track route is a prescribed route for performing training events or operations such as air refueling.",
        "required": [
          "classificationMarking",
          "type",
          "lastUpdateDate",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "026dd511-8ba5-47d3-9909-836149f87686"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "type": {
            "description": "The track route type represented by this record (ex. AIR REFUELING).",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "AIR REFUELING"
          },
          "externalId": {
            "description": "Optional air refueling track ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "GDSSMH121004232315303094"
          },
          "direction": {
            "description": "The principal compass direction (cardinal or ordinal) of the track route.",
            "maxLength": 2,
            "type": "string",
            "example": "NE"
          },
          "creatingOrg": {
            "description": "The name of the creating organization of the track route.",
            "maxLength": 250,
            "type": "string",
            "example": "HQPAC"
          },
          "locationTrackId": {
            "description": "Track location ID.",
            "maxLength": 36,
            "type": "string",
            "example": "POACHR"
          },
          "trackId": {
            "description": "Identifier of the track.",
            "maxLength": 36,
            "type": "string",
            "example": "CH61A"
          },
          "trackName": {
            "description": "Name of the track.",
            "maxLength": 50,
            "type": "string",
            "example": "CH61 POST"
          },
          "shortName": {
            "description": "Abbreviated name of the track.",
            "maxLength": 16,
            "type": "string",
            "example": "CH61"
          },
          "typeCode": {
            "description": "Type of process used by AMC to schedule an air refueling event. Possible values are A (Matched Long Range), F (Matched AMC Short Notice), N (Unmatched Theater Operation Short Notice (Theater Assets)), R, Unmatched Long Range, S (Soft Air Refueling), T (Matched Theater Operation Short Notice (Theater Assets)), V (Unmatched AMC Short Notice), X (Unmatched Theater Operation Short Notice (AMC Assets)), Y (Matched Theater Operation Short Notice (AMC Assets)), Z (Other Air Refueling).",
            "maxLength": 2,
            "type": "string",
            "example": "V"
          },
          "regionCode": {
            "description": "Region code indicating where the track resides as determined by the data source.",
            "maxLength": 36,
            "type": "string",
            "example": "5"
          },
          "regionName": {
            "description": "Region where the track resides.",
            "maxLength": 32,
            "type": "string",
            "example": "North America"
          },
          "apxBeaconCode": {
            "description": "The APX radar code sent and received by the aircraft for identification.",
            "maxLength": 36,
            "type": "string",
            "example": "5/1"
          },
          "receiverTankerCHCode": {
            "description": "The receiver tanker channel identifer for air refueling tracks.",
            "maxLength": 36,
            "type": "string",
            "example": "31/094"
          },
          "apnSetting": {
            "description": "The APN radar code sent and received by the aircraft for identification.",
            "maxLength": 36,
            "type": "string",
            "example": "1-3-1"
          },
          "sic": {
            "description": "Standard Indicator Code of the air refueling track.",
            "maxLength": 36,
            "type": "string",
            "example": "N"
          },
          "reviewDate": {
            "format": "date-time",
            "description": "Date the track needs to be reviewed for accuracy or deletion in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-09-16T16:00:00.123Z"
          },
          "lastUsedDate": {
            "format": "date-time",
            "description": "Used to show last time the track route was added to an itinerary in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-09-17T16:00:00.123Z"
          },
          "lastUpdateDate": {
            "format": "date-time",
            "description": "The last updated date of the track route in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-09-17T16:00:00.123Z"
          },
          "priFreq": {
            "format": "double",
            "description": "The primary UHF radio frequency used for the track route in megahertz.",
            "type": "number",
            "example": 357.5
          },
          "secFreq": {
            "format": "double",
            "description": "The secondary UHF radio frequency used for the track route in megahertz.",
            "type": "number",
            "example": 319.7
          },
          "artccMessage": {
            "description": "Air Refueling Track Control Center message.",
            "maxLength": 256,
            "type": "string",
            "example": "OAKLAND CTR/GUAM CERAP"
          },
          "schedulerOrgName": {
            "description": "Point of contact for the air refueling track route scheduler.",
            "maxLength": 256,
            "type": "string",
            "example": "97 OSS/OSOS DSN 866-5555"
          },
          "schedulerOrgUnit": {
            "description": "The unit responsible for scheduling the track route.",
            "maxLength": 32,
            "type": "string",
            "example": "612 AOC"
          },
          "effectiveDate": {
            "format": "date-time",
            "description": "The date which the DAFIF track was last updated/validated in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-09-17T16:00:00.123Z"
          },
          "routePoints": {
            "description": "Points identified within the route.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoutePoints_Ingest"
            }
          },
          "altitudeBlocks": {
            "description": "Minimum and maximum altitude bounds for the track.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AltitudeBlocks_Ingest"
            }
          },
          "poc": {
            "description": "Point of contacts for scheduling or modifying the route.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PointOfContact_Ingest"
            }
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      }
    }
  }
}