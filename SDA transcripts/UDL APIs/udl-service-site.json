{
  "openapi": "3.0.3",
  "info": {
    "title": "Unified Data Library Services API",
    "version": "1.30.0 Daiquiri",
    "description": "Unified Data Library Services OpenAPI v3 documentation.",
    "termsOfService": "storefront/storefront/appConfig/useragreement.html",
    "contact": {
      "name": "Sage Andorka, Deputy, Cross-Mission Ground",
      "email": "unifieddatalibrary@bluestaq.com"
    }
  },
  "tags": [
    {
      "name": "Site",
      "description": "This collection of services provide operations for manipulating and querying of various site related data, including site status, site operations, and site type-specific records."
    }
  ],
  "externalDocs": {
    "url": "udl/openapi.json"
  },
  "servers": [
    {
      "url": "https://unifieddatalibrary.com"
    }
  ],
  "paths": {
    "/filedrop/udl-dropzone": {
      "post": {
        "tags": [
          "Site"
        ],
        "description": "Service operation to take multiple dropzone records as a POST body and ingest into the database. This operation is intended to be used for automated feeds into UDL. A specific role is required to perform this service operation. Please contact the UDL team for assistance.\n",
        "operationId": "filedrop_udl_dropzone_post_id",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DropZone_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/filedrop/udl-siteoperations": {
      "post": {
        "tags": [
          "Site"
        ],
        "description": "Service operation to take multiple siteoperations records as a POST body and ingest into the database. This operation is intended to be used for automated feeds into UDL. A specific role is required to perform this service operation. Please contact the UDL team for assistance.\n",
        "operationId": "filedrop_udl_siteoperations_post_id",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SiteOperations_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/filedrop/udl-surfaceobstruction": {
      "post": {
        "tags": [
          "Site"
        ],
        "description": "Service operation to take multiple surfaceobstruction records as a POST body and ingest into the database. This operation is intended to be used for automated feeds into UDL. A specific role is required to perform this service operation. Please contact the UDL team for assistance.\n",
        "operationId": "filedrop_udl_surfaceobstruction_post_id",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SurfaceObstruction_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airfield": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Airfield_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      },
      "post": {
        "description": "Service operation to take a single Airfield as a POST body and ingest into the database. This operation is not intended to be used for automated feeds into UDL. Data providers should contact the UDL team for specific role assignments and for instructions on setting up a permanent feed through an alternate mechanism.",
        "tags": [
          "Site"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Airfield_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airfield/{id}": {
      "get": {
        "description": "Service operation to get a single Airfield by its unique ID passed as a path parameter.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the Airfield to retrieve.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Airfield_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Service operation to update a single Airfield. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the Airfield to update.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON representation of one Airfield.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Airfield_Ingest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airfield/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      }
    },
    "/udl/airfield/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airfield/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Airfield_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airfieldslot": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AirfieldSlot_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      },
      "post": {
        "description": "Service operation to take a single airfieldslot record as a POST body and ingest into the database.  A specific role is required to perform this service operation.  Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "requestBody": {
          "description": "JSON representation of one AirfieldSlot.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AirfieldSlot_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airfieldslot/{id}": {
      "delete": {
        "description": "Service operation to delete an airfieldslot record specified by the passed ID path parameter. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the AirfieldSlot entry to delete.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "Service operation to get a single airfieldslot record by its unique ID passed as a path parameter.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the AirfieldSlot to find.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirfieldSlot_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Service operation to update a single airfieldslot record. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the AirfieldSlot to update.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON representation of one AirfieldSlot.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AirfieldSlot_Ingest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airfieldslot/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      }
    },
    "/udl/airfieldslot/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airfieldslot/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AirfieldSlot_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airfieldslotconsumption": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AirfieldSlotConsumption_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "startTime",
            "description": "The start of the slot window, in ISO 8601 UTC format. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      },
      "post": {
        "description": "Service operation to take a single airfieldslotconsumption record as a POST body and ingest into the database.  A specific role is required to perform this service operation.  Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "requestBody": {
          "description": "JSON representation of one AirfieldSlotConsumption.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AirfieldSlotConsumption_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airfieldslotconsumption/{id}": {
      "delete": {
        "description": "Service operation to delete an airfieldslotconsumption record specified by the passed ID path parameter. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the AirfieldSlotConsumption entry to delete.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "Service operation to get a single airfieldslotconsumption record by its unique ID passed as a path parameter.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the AirfieldSlotConsumption to find.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirfieldSlotConsumption_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Service operation to update a single AirfieldSlotConsumption. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the AirfieldSlotConsumption entry to update.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON representation of one AirfieldSlotConsumption.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AirfieldSlotConsumption_Ingest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airfieldslotconsumption/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "startTime",
            "description": "The start of the slot window, in ISO 8601 UTC format. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/airfieldslotconsumption/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airfieldslotconsumption/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTime",
            "description": "The start of the slot window, in ISO 8601 UTC format. (YYYY-MM-DDTHH:MM:SS.sssZ)",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AirfieldSlotConsumption_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airfieldstatus": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AirfieldStatus_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      },
      "post": {
        "description": "Service operation to take a single airfield status record as a POST body and ingest into the database. This operation is not intended to be used for automated feeds into UDL. Data providers should contact the UDL team for specific role assignments and for instructions on setting up a permanent feed through an alternate mechanism.",
        "tags": [
          "Site"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AirfieldStatus_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "204": {
            "description": "Success: An existing record was updated"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airfieldstatus/{id}": {
      "delete": {
        "description": "Service operation to delete a Status object specified by the passed ID path parameter. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the AirfieldStatus to delete.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "Service operation to get a single airfield status record by its unique ID passed as a path parameter.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the AirfieldStatus to retrieve.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirfieldStatus_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Service operation to update a single airfield status record. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the Airfield Status to update.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON representation of one Airfield Status.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AirfieldStatus_Ingest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airfieldstatus/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      }
    },
    "/udl/airfieldstatus/history": {
      "get": {
        "description": "Service operation to dynamically query historical data by a variety of query parameters not specified in this API documentation.  See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "optional, fields for retrieval. When omitted, ALL fields are assumed. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid query fields that can be selected.",
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AirfieldStatus_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airfieldstatus/history/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      }
    },
    "/udl/airfieldstatus/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/airfieldstatus/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AirfieldStatus_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/dropzone": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DropZone_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      },
      "post": {
        "description": "Service operation to take a single dropzone record as a POST body and ingest into the database.  A specific role is required to perform this service operation.  Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "requestBody": {
          "description": "JSON representation of one DropZone.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DropZone_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/dropzone/{id}": {
      "delete": {
        "description": "Service operation to delete a dropzone record specified by the passed ID path parameter. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the DropZone entry to delete.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "Service operation to get a single dropzone record by its unique ID passed as a path parameter.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the DropZone to find.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DropZone_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Service operation to update a single dropzone record. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the DropZone to update.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON representation of one DropZone.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DropZone_Ingest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/dropzone/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      }
    },
    "/udl/dropzone/createBulk": {
      "post": {
        "description": "Service operation intended for initial integration only, to take a list of dropzone records as a POST body and ingest into the database. This operation is not intended to be used for automated feeds into UDL. Data providers should contact the UDL team for specific role assignments and for instructions on setting up a permanent feed through an alternate mechanism.",
        "tags": [
          "Site"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DropZone_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/dropzone/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/dropzone/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DropZone_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/port": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Port_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      },
      "post": {
        "description": "Service operation to take a single port record as a POST body and ingest into the database. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "requestBody": {
          "description": "JSON representation of one Port.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Port_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/port/{id}": {
      "get": {
        "description": "Service operation to get a single port record by its unique ID passed as a path parameter.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "ID of the port to find.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Port_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Service operation to update a single port record. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the Port to update.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON representation of one Port.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Port_Ingest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/port/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      }
    },
    "/udl/port/createBulk": {
      "post": {
        "description": "Service operation intended for initial integration only, to take a list of port records as a POST body and ingest into the database. This operation is not intended to be used for automated feeds into UDL. Data providers should contact the UDL team for specific role assignments and for instructions on setting up a permanent feed through an alternate mechanism.",
        "tags": [
          "Site"
        ],
        "requestBody": {
          "description": "JSON representation of list of a Port records.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Port_Ingest"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/port/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/port/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Port_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/site": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Site_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      },
      "post": {
        "description": "Service operation to take a single Site as a POST body and ingest into the database. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "requestBody": {
          "description": "JSON representation of one Site.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Site_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/site/{id}": {
      "get": {
        "description": "Service operation to get a single Site record by its unique ID passed as a path parameter.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the Site to find.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Site_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Service operation to update a single Site. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the Site to update.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON representation of one Site.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Site_Ingest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/site/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      }
    },
    "/udl/site/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/site/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Site_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/siteoperations": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SiteOperations_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "idSite",
            "description": "The ID of the parent site.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "in": "query"
          }
        ]
      },
      "post": {
        "description": "Service operation to take a single siteoperations object as a POST body and ingest into the database. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "requestBody": {
          "description": "JSON representation of one siteoperations.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteOperations_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/siteoperations/{id}": {
      "delete": {
        "description": "Service operation to delete a siteoperations record specified by the passed ID path parameter. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the siteoperations to delete.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "Service operation to get a single siteoperations record by its unique ID passed as a path parameter.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the siteoperations record to retrieve.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteOperations_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Service operation to update a single siteoperations record. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the siteoperations to update.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON representation of one siteoperations.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteOperations_Ingest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/siteoperations/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": [
          {
            "name": "idSite",
            "description": "The ID of the parent site.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "in": "query"
          }
        ]
      }
    },
    "/udl/siteoperations/createBulk": {
      "post": {
        "description": "Service operation intended for initial integration only, to take a list of siteoperations records as a POST body and ingest into the database. This operation is not intended to be used for automated feeds into UDL. Data providers should contact the UDL team for specific role assignments and for instructions on setting up a permanent feed through an alternate mechanism.",
        "tags": [
          "Site"
        ],
        "requestBody": {
          "description": "JSON representation of multiple UDL siteoperations.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SiteOperations_Ingest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/siteoperations/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/siteoperations/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idSite",
            "description": "The ID of the parent site.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SiteOperations_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/siteremark": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SiteRemark_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      },
      "post": {
        "description": "Service operation to take a single remark record as a POST body and ingest into the database.  A specific role is required to perform this service operation.  Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteRemark_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/siteremark/{id}": {
      "get": {
        "description": "Service operation to get a single remark record by its unique ID passed as a path parameter.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the SiteRemark to retrieve.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteRemark_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/siteremark/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      }
    },
    "/udl/siteremark/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/siteremark/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SiteRemark_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/sitestatus": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SiteStatus_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      },
      "post": {
        "description": "Service operation to take a single SiteStatus object as a POST body and ingest into the database. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "requestBody": {
          "description": "JSON representation of one SiteStatus.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteStatus_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "204": {
            "description": "Success: An existing record was updated"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/sitestatus/{id}": {
      "delete": {
        "description": "Service operation to delete an SiteStatus object specified by the passed ID path parameter. Note, delete operations do not remove data from historical or publish/subscribe stores. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the SiteStatus to delete.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "Service operation to get a single SiteStatus record by its unique ID passed as a path parameter.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the SiteStatus to retrieve.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteStatus_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Service operation to update a single SiteStatus object. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the SiteStatus to update.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON representation of one SiteStatus.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteStatus_Ingest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/sitestatus/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      }
    },
    "/udl/sitestatus/history": {
      "get": {
        "description": "Service operation to dynamically query historical data by a variety of query parameters not specified in this API documentation.  See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "optional, fields for retrieval. When omitted, ALL fields are assumed. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid query fields that can be selected.",
            "required": false,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SiteStatus_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/sitestatus/history/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      }
    },
    "/udl/sitestatus/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/sitestatus/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SiteStatus_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/surface": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Surface_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      },
      "post": {
        "description": "Service operation to take a single Surface as a POST body and ingest into the database. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "requestBody": {
          "description": "JSON representation of one Surface.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Surface_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/surface/{id}": {
      "delete": {
        "description": "Service operation to delete a Surface object specified by the passed ID path parameter. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the Surface to delete.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "Service operation to get a single Surface record by its unique ID passed as a path parameter.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the Surface to find.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Surface_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Service operation to update a single Surface. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the Surface to update.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON representation of one Surface.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Surface_Ingest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/surface/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      }
    },
    "/udl/surface/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/surface/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Surface_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/surfaceobstruction": {
      "get": {
        "description": "Service operation to dynamically query data by a variety of query parameters not specified in this API documentation. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SurfaceObstruction_Abridged"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      },
      "post": {
        "description": "Service operation to take a single surfaceobstruction record as a POST body and ingest into the database. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "requestBody": {
          "description": "JSON representation of one surfaceobstruction.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SurfaceObstruction_Ingest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/surfaceobstruction/{id}": {
      "delete": {
        "description": "Service operation to delete a surfaceobstruction record specified by the passed ID path parameter. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the surfaceobstruction to DELETE.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "Service operation to get a single surfaceobstruction record by its unique ID passed as a path parameter.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the surfaceobstruction to GET.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurfaceObstruction_Full"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Service operation to update a single surfaceobstruction record. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "The ID of the surfaceobstruction to UPDATE.",
            "required": true,
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON representation of one surfaceobstruction.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SurfaceObstruction_Ingest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "404": {
            "description": "Item Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "415": {
            "description": "MediaType Unsupported"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/surfaceobstruction/count": {
      "get": {
        "description": "Service operation to return the count of records satisfying the specified query parameters. This operation is useful to determine how many records pass a particular query criteria without retrieving large amounts of data. See the queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query parameter information.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "parameters": []
      }
    },
    "/udl/surfaceobstruction/queryhelp": {
      "get": {
        "description": "Service operation to provide detailed information on available dynamic query parameters for a particular data type.",
        "tags": [
          "Site"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "User Unauthorized"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/udl/surfaceobstruction/tuple": {
      "get": {
        "description": "Service operation to dynamically query data and only return specified columns/fields. Requested columns are specified by the 'columns' query parameter and should be a comma separated list of valid fields for the specified data type. classificationMarking is always returned. See the queryhelp operation (/udl/<datatype>/queryhelp) for more details on valid/required query parameter information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5 hours would return the satNo and period of elsets with an epoch greater than 5 hours ago.",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "description": "Comma-separated list of valid field names for this data type to be returned in the response. Only the fields specified will be returned as well as the classification marking of the data, if applicable. See the ‘queryhelp’ operation for a complete list of possible fields.",
            "required": true,
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SurfaceObstruction_Full"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Invalid/Missing User Credentials"
          },
          "403": {
            "description": "User Is Not Authorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "MediaType Not Accepted by Request Headers"
          },
          "429": {
            "description": "Rate of Requests Exceeds Allowed Limit"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Airfield_Abridged": {
        "description": "Properties and characteristics of an airfield, which includes location, airfield codes, suitability codes, and remarks.",
        "required": [
          "classificationMarking",
          "name",
          "type",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "3f28f60b-3a50-2aef-ac88-8e9d0e39912b"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idSite": {
            "description": "The ID of the parent site.",
            "maxLength": 36,
            "type": "string",
            "example": "a150b3ee-884b-b9ac-60a0-6408b4b16088"
          },
          "altAirfieldId": {
            "description": "Alternate Airfield identifier provided by source.",
            "maxLength": 36,
            "type": "string",
            "example": "45301"
          },
          "wacINNR": {
            "description": "The airfield's World Area Code installation number (WAC-INNR).",
            "maxLength": 32,
            "type": "string",
            "example": "0409-00039"
          },
          "zarId": {
            "description": "Air Mobility Command (AMC) Zone availability Report identifier.",
            "maxLength": 32,
            "type": "string",
            "example": "231"
          },
          "icao": {
            "description": "The International Civil Aviation Organization (ICAO) code of the airfield.",
            "maxLength": 4,
            "type": "string",
            "example": "KCOS"
          },
          "iata": {
            "description": "The International Aviation Transport Association (IATA) code of the airfield.",
            "maxLength": 3,
            "type": "string",
            "example": "AAA"
          },
          "faa": {
            "description": "The Federal Aviation Administration (FAA) location identifier of this airfield.",
            "maxLength": 5,
            "type": "string",
            "example": "FAA1"
          },
          "hostNatCode": {
            "description": "The host nation code of this airfield, used for non-DoD/FAA locations.",
            "maxLength": 16,
            "type": "string",
            "example": "ZPU"
          },
          "name": {
            "description": "The name of the airfield.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Hickam Air Force Base"
          },
          "type": {
            "description": "The airfield activity use type (e.g. Commercial, Airport, Heliport, Gliderport, etc.).",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "example": "Commercial"
          },
          "secondaryICAO": {
            "description": "The secondary ICAO code for this airfield. Some airfields have two associated ICAO codes, this can occur in cases when a single airfield supports both military and civilian operations.",
            "maxLength": 55,
            "type": "string",
            "example": "PHNL"
          },
          "alternativeNames": {
            "description": "Alternative names for this airfield.",
            "type": "array",
            "items": {
              "maxLength": 55,
              "type": "string"
            },
            "example": [
              "BELLEVILLE",
              "JONESTOWN"
            ]
          },
          "lat": {
            "format": "double",
            "description": "WGS84 latitude of the location, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 45.23
          },
          "lon": {
            "format": "double",
            "description": "WGS84 longitude of the location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 179.1
          },
          "elevFt": {
            "format": "double",
            "description": "Elevation of the airfield above mean sea level, in feet.\nNote: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 33.562
          },
          "elevM": {
            "format": "double",
            "description": "Elevation of the airfield above mean sea level, in meters.\nNote: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 10.29
          },
          "magDec": {
            "format": "double",
            "description": "The magnetic declination/variation of the airfield's location from true north, in degrees.  Positive values east of true north and negative values west of true north.",
            "type": "number",
            "example": 7.35
          },
          "regionalAuthority": {
            "description": "The regional authority of the airfield.",
            "maxLength": 512,
            "type": "string",
            "example": "18TH AF"
          },
          "regionName": {
            "description": "Region where the airfield resides.",
            "maxLength": 32,
            "type": "string",
            "example": "Hawaii"
          },
          "countryCode": {
            "description": "The country code. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDL’s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.",
            "maxLength": 4,
            "type": "string",
            "example": "US"
          },
          "countryName": {
            "description": "The country name where this airfield is located.",
            "maxLength": 64,
            "type": "string",
            "example": "United States"
          },
          "city": {
            "description": "The closest city to the location of this airfield.",
            "maxLength": 64,
            "type": "string",
            "example": "Honolulu"
          },
          "stateProvinceCode": {
            "description": "The code for the state or province in which this airfield is located. Intended as, but not constrained to, FIPS 10-4 region code designations.",
            "maxLength": 4,
            "type": "string",
            "example": "US15"
          },
          "state": {
            "description": "State or province of the airfield's location.",
            "maxLength": 32,
            "type": "string",
            "example": "Hawaii"
          },
          "geoloc": {
            "description": "Air Force geographic location code of the airfield.",
            "maxLength": 16,
            "type": "string",
            "example": "XLSX"
          },
          "gmtOffset": {
            "description": "Time difference between the location of the airfield and the Greenwich Mean Time (GMT), expressed as +/-HH:MM. Time zones east of Greenwich have positive offsets and time zones west of Greenwich are negative.",
            "maxLength": 6,
            "type": "string",
            "example": "-4:30"
          },
          "dstInfo": {
            "description": "Information regarding daylight saving time as is relevant to the location and operation of this airfield.",
            "maxLength": 100,
            "type": "string",
            "example": "SEE THE ENROUTE SUPP FOR INFORMATION"
          },
          "suitabilityCodes": {
            "description": "Associated suitability codes according to the Airfield Suitability and Restrictions Report (ASRR) for this airfield.",
            "maxLength": 36,
            "type": "string",
            "example": "ABC"
          },
          "suitabilityCodeDescs": {
            "description": "Array of descriptions for given suitability codes. The index of the description corresponds to the position of the letter code in the string provided in the suitabilityCodes field.",
            "type": "array",
            "items": {
              "maxLength": 200,
              "type": "string"
            },
            "example": [
              "Suitable C-32",
              "Suitable C-5",
              "Suitable C-130"
            ]
          },
          "miscCodes": {
            "description": "Applicable miscellaneous codes according to the Airfield Suitability and Restrictions Report (ASRR) for this airfield.",
            "maxLength": 36,
            "type": "string",
            "example": "AMZ"
          },
          "runways": {
            "format": "int32",
            "description": "The number of runways at the site.",
            "type": "integer",
            "example": 5
          },
          "maxRunwayLength": {
            "format": "int32",
            "description": "The length of the longest runway at this airfield in feet.",
            "type": "integer",
            "example": 1000
          },
          "infoURL": {
            "description": "The URL link to information about airfield.",
            "maxLength": 256,
            "type": "string",
            "example": "URL Link to the Airfield"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "Airfield_Full": {
        "description": "Properties and characteristics of an airfield, which includes location, airfield codes, suitability codes, and remarks.",
        "required": [
          "classificationMarking",
          "name",
          "type",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "3f28f60b-3a50-2aef-ac88-8e9d0e39912b"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idSite": {
            "description": "The ID of the parent site.",
            "maxLength": 36,
            "type": "string",
            "example": "a150b3ee-884b-b9ac-60a0-6408b4b16088"
          },
          "altAirfieldId": {
            "description": "Alternate Airfield identifier provided by source.",
            "maxLength": 36,
            "type": "string",
            "example": "45301"
          },
          "wacINNR": {
            "description": "The airfield's World Area Code installation number (WAC-INNR).",
            "maxLength": 32,
            "type": "string",
            "example": "0409-00039"
          },
          "zarId": {
            "description": "Air Mobility Command (AMC) Zone availability Report identifier.",
            "maxLength": 32,
            "type": "string",
            "example": "231"
          },
          "icao": {
            "description": "The International Civil Aviation Organization (ICAO) code of the airfield.",
            "maxLength": 4,
            "type": "string",
            "example": "KCOS"
          },
          "iata": {
            "description": "The International Aviation Transport Association (IATA) code of the airfield.",
            "maxLength": 3,
            "type": "string",
            "example": "AAA"
          },
          "faa": {
            "description": "The Federal Aviation Administration (FAA) location identifier of this airfield.",
            "maxLength": 5,
            "type": "string",
            "example": "FAA1"
          },
          "hostNatCode": {
            "description": "The host nation code of this airfield, used for non-DoD/FAA locations.",
            "maxLength": 16,
            "type": "string",
            "example": "ZPU"
          },
          "name": {
            "description": "The name of the airfield.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Hickam Air Force Base"
          },
          "type": {
            "description": "The airfield activity use type (e.g. Commercial, Airport, Heliport, Gliderport, etc.).",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "example": "Commercial"
          },
          "secondaryICAO": {
            "description": "The secondary ICAO code for this airfield. Some airfields have two associated ICAO codes, this can occur in cases when a single airfield supports both military and civilian operations.",
            "maxLength": 55,
            "type": "string",
            "example": "PHNL"
          },
          "alternativeNames": {
            "description": "Alternative names for this airfield.",
            "type": "array",
            "items": {
              "maxLength": 55,
              "type": "string"
            },
            "example": [
              "BELLEVILLE",
              "JONESTOWN"
            ]
          },
          "lat": {
            "format": "double",
            "description": "WGS84 latitude of the location, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 45.23
          },
          "lon": {
            "format": "double",
            "description": "WGS84 longitude of the location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 179.1
          },
          "elevFt": {
            "format": "double",
            "description": "Elevation of the airfield above mean sea level, in feet.\nNote: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 33.562
          },
          "elevM": {
            "format": "double",
            "description": "Elevation of the airfield above mean sea level, in meters.\nNote: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 10.29
          },
          "magDec": {
            "format": "double",
            "description": "The magnetic declination/variation of the airfield's location from true north, in degrees.  Positive values east of true north and negative values west of true north.",
            "type": "number",
            "example": 7.35
          },
          "regionalAuthority": {
            "description": "The regional authority of the airfield.",
            "maxLength": 512,
            "type": "string",
            "example": "18TH AF"
          },
          "regionName": {
            "description": "Region where the airfield resides.",
            "maxLength": 32,
            "type": "string",
            "example": "Hawaii"
          },
          "countryCode": {
            "description": "The country code. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDL’s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.",
            "maxLength": 4,
            "type": "string",
            "example": "US"
          },
          "countryName": {
            "description": "The country name where this airfield is located.",
            "maxLength": 64,
            "type": "string",
            "example": "United States"
          },
          "city": {
            "description": "The closest city to the location of this airfield.",
            "maxLength": 64,
            "type": "string",
            "example": "Honolulu"
          },
          "stateProvinceCode": {
            "description": "The code for the state or province in which this airfield is located. Intended as, but not constrained to, FIPS 10-4 region code designations.",
            "maxLength": 4,
            "type": "string",
            "example": "US15"
          },
          "state": {
            "description": "State or province of the airfield's location.",
            "maxLength": 32,
            "type": "string",
            "example": "Hawaii"
          },
          "geoloc": {
            "description": "Air Force geographic location code of the airfield.",
            "maxLength": 16,
            "type": "string",
            "example": "XLSX"
          },
          "gmtOffset": {
            "description": "Time difference between the location of the airfield and the Greenwich Mean Time (GMT), expressed as +/-HH:MM. Time zones east of Greenwich have positive offsets and time zones west of Greenwich are negative.",
            "maxLength": 6,
            "type": "string",
            "example": "-4:30"
          },
          "dstInfo": {
            "description": "Information regarding daylight saving time as is relevant to the location and operation of this airfield.",
            "maxLength": 100,
            "type": "string",
            "example": "SEE THE ENROUTE SUPP FOR INFORMATION"
          },
          "suitabilityCodes": {
            "description": "Associated suitability codes according to the Airfield Suitability and Restrictions Report (ASRR) for this airfield.",
            "maxLength": 36,
            "type": "string",
            "example": "ABC"
          },
          "suitabilityCodeDescs": {
            "description": "Array of descriptions for given suitability codes. The index of the description corresponds to the position of the letter code in the string provided in the suitabilityCodes field.",
            "type": "array",
            "items": {
              "maxLength": 200,
              "type": "string"
            },
            "example": [
              "Suitable C-32",
              "Suitable C-5",
              "Suitable C-130"
            ]
          },
          "miscCodes": {
            "description": "Applicable miscellaneous codes according to the Airfield Suitability and Restrictions Report (ASRR) for this airfield.",
            "maxLength": 36,
            "type": "string",
            "example": "AMZ"
          },
          "runways": {
            "format": "int32",
            "description": "The number of runways at the site.",
            "type": "integer",
            "example": 5
          },
          "maxRunwayLength": {
            "format": "int32",
            "description": "The length of the longest runway at this airfield in feet.",
            "type": "integer",
            "example": 1000
          },
          "infoURL": {
            "description": "The URL link to information about airfield.",
            "maxLength": 256,
            "type": "string",
            "example": "URL Link to the Airfield"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "Airfield_Ingest": {
        "description": "Properties and characteristics of an airfield, which includes location, airfield codes, suitability codes, and remarks.",
        "required": [
          "classificationMarking",
          "name",
          "type",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "3f28f60b-3a50-2aef-ac88-8e9d0e39912b"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idSite": {
            "description": "The ID of the parent site.",
            "maxLength": 36,
            "type": "string",
            "example": "a150b3ee-884b-b9ac-60a0-6408b4b16088"
          },
          "altAirfieldId": {
            "description": "Alternate Airfield identifier provided by source.",
            "maxLength": 36,
            "type": "string",
            "example": "45301"
          },
          "wacINNR": {
            "description": "The airfield's World Area Code installation number (WAC-INNR).",
            "maxLength": 32,
            "type": "string",
            "example": "0409-00039"
          },
          "zarId": {
            "description": "Air Mobility Command (AMC) Zone availability Report identifier.",
            "maxLength": 32,
            "type": "string",
            "example": "231"
          },
          "icao": {
            "description": "The International Civil Aviation Organization (ICAO) code of the airfield.",
            "maxLength": 4,
            "type": "string",
            "example": "KCOS"
          },
          "iata": {
            "description": "The International Aviation Transport Association (IATA) code of the airfield.",
            "maxLength": 3,
            "type": "string",
            "example": "AAA"
          },
          "faa": {
            "description": "The Federal Aviation Administration (FAA) location identifier of this airfield.",
            "maxLength": 5,
            "type": "string",
            "example": "FAA1"
          },
          "hostNatCode": {
            "description": "The host nation code of this airfield, used for non-DoD/FAA locations.",
            "maxLength": 16,
            "type": "string",
            "example": "ZPU"
          },
          "name": {
            "description": "The name of the airfield.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Hickam Air Force Base"
          },
          "type": {
            "description": "The airfield activity use type (e.g. Commercial, Airport, Heliport, Gliderport, etc.).",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "example": "Commercial"
          },
          "secondaryICAO": {
            "description": "The secondary ICAO code for this airfield. Some airfields have two associated ICAO codes, this can occur in cases when a single airfield supports both military and civilian operations.",
            "maxLength": 55,
            "type": "string",
            "example": "PHNL"
          },
          "alternativeNames": {
            "description": "Alternative names for this airfield.",
            "type": "array",
            "items": {
              "maxLength": 55,
              "type": "string"
            },
            "example": [
              "BELLEVILLE",
              "JONESTOWN"
            ]
          },
          "lat": {
            "format": "double",
            "description": "WGS84 latitude of the location, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 45.23
          },
          "lon": {
            "format": "double",
            "description": "WGS84 longitude of the location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 179.1
          },
          "elevFt": {
            "format": "double",
            "description": "Elevation of the airfield above mean sea level, in feet.\nNote: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 33.562
          },
          "elevM": {
            "format": "double",
            "description": "Elevation of the airfield above mean sea level, in meters.\nNote: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 10.29
          },
          "magDec": {
            "format": "double",
            "description": "The magnetic declination/variation of the airfield's location from true north, in degrees.  Positive values east of true north and negative values west of true north.",
            "type": "number",
            "example": 7.35
          },
          "regionalAuthority": {
            "description": "The regional authority of the airfield.",
            "maxLength": 512,
            "type": "string",
            "example": "18TH AF"
          },
          "regionName": {
            "description": "Region where the airfield resides.",
            "maxLength": 32,
            "type": "string",
            "example": "Hawaii"
          },
          "countryCode": {
            "description": "The country code. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDL’s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.",
            "maxLength": 4,
            "type": "string",
            "example": "US"
          },
          "countryName": {
            "description": "The country name where this airfield is located.",
            "maxLength": 64,
            "type": "string",
            "example": "United States"
          },
          "city": {
            "description": "The closest city to the location of this airfield.",
            "maxLength": 64,
            "type": "string",
            "example": "Honolulu"
          },
          "stateProvinceCode": {
            "description": "The code for the state or province in which this airfield is located. Intended as, but not constrained to, FIPS 10-4 region code designations.",
            "maxLength": 4,
            "type": "string",
            "example": "US15"
          },
          "state": {
            "description": "State or province of the airfield's location.",
            "maxLength": 32,
            "type": "string",
            "example": "Hawaii"
          },
          "geoloc": {
            "description": "Air Force geographic location code of the airfield.",
            "maxLength": 16,
            "type": "string",
            "example": "XLSX"
          },
          "gmtOffset": {
            "description": "Time difference between the location of the airfield and the Greenwich Mean Time (GMT), expressed as +/-HH:MM. Time zones east of Greenwich have positive offsets and time zones west of Greenwich are negative.",
            "maxLength": 6,
            "type": "string",
            "example": "-4:30"
          },
          "dstInfo": {
            "description": "Information regarding daylight saving time as is relevant to the location and operation of this airfield.",
            "maxLength": 100,
            "type": "string",
            "example": "SEE THE ENROUTE SUPP FOR INFORMATION"
          },
          "suitabilityCodes": {
            "description": "Associated suitability codes according to the Airfield Suitability and Restrictions Report (ASRR) for this airfield.",
            "maxLength": 36,
            "type": "string",
            "example": "ABC"
          },
          "suitabilityCodeDescs": {
            "description": "Array of descriptions for given suitability codes. The index of the description corresponds to the position of the letter code in the string provided in the suitabilityCodes field.",
            "type": "array",
            "items": {
              "maxLength": 200,
              "type": "string"
            },
            "example": [
              "Suitable C-32",
              "Suitable C-5",
              "Suitable C-130"
            ]
          },
          "miscCodes": {
            "description": "Applicable miscellaneous codes according to the Airfield Suitability and Restrictions Report (ASRR) for this airfield.",
            "maxLength": 36,
            "type": "string",
            "example": "AMZ"
          },
          "runways": {
            "format": "int32",
            "description": "The number of runways at the site.",
            "type": "integer",
            "example": 5
          },
          "maxRunwayLength": {
            "format": "int32",
            "description": "The length of the longest runway at this airfield in feet.",
            "type": "integer",
            "example": 1000
          },
          "infoURL": {
            "description": "The URL link to information about airfield.",
            "maxLength": 256,
            "type": "string",
            "example": "URL Link to the Airfield"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "AirfieldSlot_Abridged": {
        "description": "Airfield capacity data. Contains data associated with the airfieldslots available for parking, working, takeoff, and landing at the airfield, as well as the types of aircraft that can be accommodated.",
        "required": [
          "classificationMarking",
          "airfieldName",
          "name",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "be831d39-1822-da9f-7ace-6cc5643397dc"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "airfieldName": {
            "description": "The name of the airfield where this slot is located.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "USAF Academy AFLD"
          },
          "icao": {
            "description": "The International Civil Aviation Organization (ICAO) code of the airfield.",
            "maxLength": 4,
            "type": "string",
            "example": "KCOS"
          },
          "idAirfield": {
            "description": "Unique identifier of the Airfield for which this slot information applies.",
            "maxLength": 36,
            "type": "string",
            "example": "3136498f-2969-3535-1432-e984b2e2e686"
          },
          "altAirfieldId": {
            "description": "Alternate airfield identifier provided by the source.",
            "maxLength": 64,
            "type": "string",
            "example": "ALT-AIRFIELD-ID"
          },
          "name": {
            "description": "Name of this slot.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "example": "Apron 5"
          },
          "type": {
            "description": "Designates how this slot can be used (WORKING, PARKING, TAKEOFF, LANDING, OTHER).",
            "maxLength": 7,
            "enum": [
              "WORKING",
              "PARKING",
              "TAKEOFF",
              "LANDING",
              "OTHER"
            ],
            "type": "string",
            "example": "WORKING"
          },
          "acSlotCat": {
            "description": "Largest category of aircraft supported in this slot (WIDE, NARROW, HELO, ALL, OTHER).",
            "maxLength": 6,
            "enum": [
              "WIDE",
              "NARROW",
              "HELO",
              "ALL",
              "OTHER"
            ],
            "type": "string",
            "example": "WIDE"
          },
          "capacity": {
            "format": "int32",
            "description": "Number of aircraft that can fit in this slot at the same time.",
            "type": "integer",
            "example": 5
          },
          "startTime": {
            "description": "Zulu time this slot is first available based on daily standard hours. Not applicable to slots with type PARKING. Abnormal hours, such as holidays, should be marked via the AirfieldSlotConsumption schema.",
            "maxLength": 5,
            "type": "string",
            "example": "0000Z"
          },
          "endTime": {
            "description": "Latest zulu time this slot is available based on daily standard hours. Not applicable to slots with type PARKING. Abnormal hours, such as holidays, should be marked via the AirfieldSlotConsumption schema.",
            "maxLength": 5,
            "type": "string",
            "example": "2359Z"
          },
          "minSeparation": {
            "format": "int32",
            "description": "Minimum time that must elapse between different aircraft leaving and entering this slot, in minutes.",
            "type": "integer",
            "example": 7
          },
          "notes": {
            "description": "Optional notes/comments for this airfield slot.",
            "maxLength": 128,
            "type": "string",
            "example": "Notes for an airfield slot."
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "AirfieldSlot_Full": {
        "description": "Airfield capacity data. Contains data associated with the airfieldslots available for parking, working, takeoff, and landing at the airfield, as well as the types of aircraft that can be accommodated.",
        "required": [
          "classificationMarking",
          "airfieldName",
          "name",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "be831d39-1822-da9f-7ace-6cc5643397dc"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "airfieldName": {
            "description": "The name of the airfield where this slot is located.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "USAF Academy AFLD"
          },
          "icao": {
            "description": "The International Civil Aviation Organization (ICAO) code of the airfield.",
            "maxLength": 4,
            "type": "string",
            "example": "KCOS"
          },
          "idAirfield": {
            "description": "Unique identifier of the Airfield for which this slot information applies.",
            "maxLength": 36,
            "type": "string",
            "example": "3136498f-2969-3535-1432-e984b2e2e686"
          },
          "altAirfieldId": {
            "description": "Alternate airfield identifier provided by the source.",
            "maxLength": 64,
            "type": "string",
            "example": "ALT-AIRFIELD-ID"
          },
          "name": {
            "description": "Name of this slot.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "example": "Apron 5"
          },
          "type": {
            "description": "Designates how this slot can be used (WORKING, PARKING, TAKEOFF, LANDING, OTHER).",
            "maxLength": 7,
            "enum": [
              "WORKING",
              "PARKING",
              "TAKEOFF",
              "LANDING",
              "OTHER"
            ],
            "type": "string",
            "example": "WORKING"
          },
          "acSlotCat": {
            "description": "Largest category of aircraft supported in this slot (WIDE, NARROW, HELO, ALL, OTHER).",
            "maxLength": 6,
            "enum": [
              "WIDE",
              "NARROW",
              "HELO",
              "ALL",
              "OTHER"
            ],
            "type": "string",
            "example": "WIDE"
          },
          "capacity": {
            "format": "int32",
            "description": "Number of aircraft that can fit in this slot at the same time.",
            "type": "integer",
            "example": 5
          },
          "startTime": {
            "description": "Zulu time this slot is first available based on daily standard hours. Not applicable to slots with type PARKING. Abnormal hours, such as holidays, should be marked via the AirfieldSlotConsumption schema.",
            "maxLength": 5,
            "type": "string",
            "example": "0000Z"
          },
          "endTime": {
            "description": "Latest zulu time this slot is available based on daily standard hours. Not applicable to slots with type PARKING. Abnormal hours, such as holidays, should be marked via the AirfieldSlotConsumption schema.",
            "maxLength": 5,
            "type": "string",
            "example": "2359Z"
          },
          "minSeparation": {
            "format": "int32",
            "description": "Minimum time that must elapse between different aircraft leaving and entering this slot, in minutes.",
            "type": "integer",
            "example": 7
          },
          "notes": {
            "description": "Optional notes/comments for this airfield slot.",
            "maxLength": 128,
            "type": "string",
            "example": "Notes for an airfield slot."
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "AirfieldSlot_Ingest": {
        "description": "Airfield capacity data. Contains data associated with the airfieldslots available for parking, working, takeoff, and landing at the airfield, as well as the types of aircraft that can be accommodated.",
        "required": [
          "classificationMarking",
          "airfieldName",
          "name",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "be831d39-1822-da9f-7ace-6cc5643397dc"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "airfieldName": {
            "description": "The name of the airfield where this slot is located.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "USAF Academy AFLD"
          },
          "icao": {
            "description": "The International Civil Aviation Organization (ICAO) code of the airfield.",
            "maxLength": 4,
            "type": "string",
            "example": "KCOS"
          },
          "idAirfield": {
            "description": "Unique identifier of the Airfield for which this slot information applies.",
            "maxLength": 36,
            "type": "string",
            "example": "3136498f-2969-3535-1432-e984b2e2e686"
          },
          "altAirfieldId": {
            "description": "Alternate airfield identifier provided by the source.",
            "maxLength": 64,
            "type": "string",
            "example": "ALT-AIRFIELD-ID"
          },
          "name": {
            "description": "Name of this slot.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "example": "Apron 5"
          },
          "type": {
            "description": "Designates how this slot can be used (WORKING, PARKING, TAKEOFF, LANDING, OTHER).",
            "maxLength": 7,
            "enum": [
              "WORKING",
              "PARKING",
              "TAKEOFF",
              "LANDING",
              "OTHER"
            ],
            "type": "string",
            "example": "WORKING"
          },
          "acSlotCat": {
            "description": "Largest category of aircraft supported in this slot (WIDE, NARROW, HELO, ALL, OTHER).",
            "maxLength": 6,
            "enum": [
              "WIDE",
              "NARROW",
              "HELO",
              "ALL",
              "OTHER"
            ],
            "type": "string",
            "example": "WIDE"
          },
          "capacity": {
            "format": "int32",
            "description": "Number of aircraft that can fit in this slot at the same time.",
            "type": "integer",
            "example": 5
          },
          "startTime": {
            "description": "Zulu time this slot is first available based on daily standard hours. Not applicable to slots with type PARKING. Abnormal hours, such as holidays, should be marked via the AirfieldSlotConsumption schema.",
            "maxLength": 5,
            "type": "string",
            "example": "0000Z"
          },
          "endTime": {
            "description": "Latest zulu time this slot is available based on daily standard hours. Not applicable to slots with type PARKING. Abnormal hours, such as holidays, should be marked via the AirfieldSlotConsumption schema.",
            "maxLength": 5,
            "type": "string",
            "example": "2359Z"
          },
          "minSeparation": {
            "format": "int32",
            "description": "Minimum time that must elapse between different aircraft leaving and entering this slot, in minutes.",
            "type": "integer",
            "example": 7
          },
          "notes": {
            "description": "Optional notes/comments for this airfield slot.",
            "maxLength": 128,
            "type": "string",
            "example": "Notes for an airfield slot."
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "AirfieldSlotConsumption_Abridged": {
        "description": "Airfield slot use data. Contains the dynamic data associated with the status and use of specific airfield slots.",
        "required": [
          "classificationMarking",
          "idAirfieldSlot",
          "numAircraft",
          "startTime",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "be831d39-1822-da9f-7ace-6cc5643397dc"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idAirfieldSlot": {
            "description": "Unique identifier of the airfield slot for which this slot consumption record is referencing.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "3136498f-2969-3535-1432-e984b2e2e686"
          },
          "status": {
            "description": "Current status of this slot (REQUESTED / APPROVED / DENIED / BLOCKED / OTHER).",
            "maxLength": 9,
            "enum": [
              "REQUESTED",
              "APPROVED",
              "DENIED",
              "BLOCKED",
              "OTHER"
            ],
            "type": "string",
            "example": "APPROVED"
          },
          "occupied": {
            "description": "Flag indicating if the slot is occupied.",
            "type": "boolean",
            "example": true
          },
          "consumer": {
            "description": "Identifying name of the aircraft using this slot. Names are often Prior Permission Required (PPR) numbers or other similar human-readable identifiers.",
            "maxLength": 64,
            "type": "string",
            "example": "APRON1-230401001"
          },
          "occAircraftMDS": {
            "description": "The aircraft Model Design Series designation of the aircraft occupying this slot.",
            "maxLength": 36,
            "type": "string",
            "example": "C017A"
          },
          "occTailNumber": {
            "description": "The tail number of the aircraft occupying this slot.",
            "maxLength": 16,
            "type": "string",
            "example": "N702JG"
          },
          "callSigns": {
            "description": "Array of call signs of the aircraft using this slot.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "RCH123",
              "ABC123",
              "LLS442"
            ]
          },
          "missionId": {
            "description": "Mission identifier using this slot according to Mobility Air Forces (MAF) Encode/Decode procedures.",
            "maxLength": 36,
            "type": "string",
            "example": "AJM123456123"
          },
          "numAircraft": {
            "format": "int32",
            "description": "Number of aircraft using this slot for this time.",
            "type": "integer",
            "example": 1
          },
          "occStartTime": {
            "format": "date-time",
            "description": "Time the aircraft began occupying this slot, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-01-01T01:01:03.123Z"
          },
          "resAircraftMDS": {
            "description": "The aircraft Model Design Series designation of the aircraft this slot is reserved for.",
            "maxLength": 36,
            "type": "string",
            "example": "C017A"
          },
          "resTailNumber": {
            "description": "The tail number of the aircraft this slot is reserved for.",
            "maxLength": 16,
            "type": "string",
            "example": "N702JG"
          },
          "resType": {
            "description": "Indicates the type of reservation (e.g. M for Mission, A for Aircraft, O for Other).",
            "maxLength": 2,
            "type": "string",
            "example": "M"
          },
          "resReason": {
            "description": "The reason the slot reservation was made.",
            "maxLength": 256,
            "type": "string",
            "example": "Maintenance needed"
          },
          "resMissionId": {
            "description": "Mission identifier reserving this slot according to Mobility Air Forces (MAF) Encode/Decode procedures.",
            "maxLength": 36,
            "type": "string",
            "example": "AJM123456123"
          },
          "startTime": {
            "format": "date-time",
            "description": "The start of the slot window, in ISO 8601 UTC format.",
            "type": "string",
            "example": "2023-01-01T01:01:01.123Z"
          },
          "endTime": {
            "format": "date-time",
            "description": "The end of the slot window, in ISO 8601 UTC format.",
            "type": "string",
            "example": "2023-01-01T01:01:01.123Z"
          },
          "targetTime": {
            "format": "date-time",
            "description": "The desired time for aircraft action such as landing, take off, parking, etc., in ISO 8601 UTC format.",
            "type": "string",
            "example": "2023-01-01T01:01:01.123Z"
          },
          "idArrSortie": {
            "description": "Unique identifier of the sortie arriving at the slot start time.",
            "maxLength": 36,
            "type": "string",
            "example": "be831d39-1822-da9f-7ace-6cc5643397dc"
          },
          "idDepSortie": {
            "description": "Unique identifier of the sortie departing at the slot end time.",
            "maxLength": 36,
            "type": "string",
            "example": "1e6edeec-72e9-aaec-d33c-51147cb5ffdd"
          },
          "altArrSortieId": {
            "description": "Alternate identifier of the sortie arriving at the slot start time provided by the source.",
            "maxLength": 36,
            "type": "string",
            "example": "ALT-SORTIE-ID"
          },
          "altDepSortieId": {
            "description": "Alternate identifier of the sortie departing at the slot end time provided by the source.",
            "maxLength": 36,
            "type": "string",
            "example": "ALT-SORTIE-ID"
          },
          "reqComment": {
            "description": "Comments from the requester.",
            "maxLength": 128,
            "type": "string",
            "example": "Sorry for the late notice."
          },
          "appComment": {
            "description": "Comments from the approver.",
            "maxLength": 128,
            "type": "string",
            "example": "The request was denied due to inoperable fuel pumps."
          },
          "reqOrg": {
            "description": "Short name of the organization requesting use of this slot.",
            "maxLength": 32,
            "type": "string",
            "example": "TACC"
          },
          "reqInitials": {
            "description": "Initials of the person requesting the use of this slot. Use SYSTEM if this request is auto-generated by an auto-planning system.",
            "maxLength": 8,
            "type": "string",
            "example": "CB"
          },
          "appOrg": {
            "description": "Short name of the organization approving the use of this slot.",
            "maxLength": 32,
            "type": "string",
            "example": "KCHS/BOPS"
          },
          "appInitials": {
            "description": "Initials of the person approving the use of this slot. Use SYSTEM if auto-approved without human involvement.",
            "maxLength": 8,
            "type": "string",
            "example": "CB"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "AirfieldSlotConsumption_Full": {
        "description": "Airfield slot use data. Contains the dynamic data associated with the status and use of specific airfield slots.",
        "required": [
          "classificationMarking",
          "idAirfieldSlot",
          "numAircraft",
          "startTime",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "be831d39-1822-da9f-7ace-6cc5643397dc"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idAirfieldSlot": {
            "description": "Unique identifier of the airfield slot for which this slot consumption record is referencing.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "3136498f-2969-3535-1432-e984b2e2e686"
          },
          "status": {
            "description": "Current status of this slot (REQUESTED / APPROVED / DENIED / BLOCKED / OTHER).",
            "maxLength": 9,
            "enum": [
              "REQUESTED",
              "APPROVED",
              "DENIED",
              "BLOCKED",
              "OTHER"
            ],
            "type": "string",
            "example": "APPROVED"
          },
          "occupied": {
            "description": "Flag indicating if the slot is occupied.",
            "type": "boolean",
            "example": true
          },
          "consumer": {
            "description": "Identifying name of the aircraft using this slot. Names are often Prior Permission Required (PPR) numbers or other similar human-readable identifiers.",
            "maxLength": 64,
            "type": "string",
            "example": "APRON1-230401001"
          },
          "occAircraftMDS": {
            "description": "The aircraft Model Design Series designation of the aircraft occupying this slot.",
            "maxLength": 36,
            "type": "string",
            "example": "C017A"
          },
          "occTailNumber": {
            "description": "The tail number of the aircraft occupying this slot.",
            "maxLength": 16,
            "type": "string",
            "example": "N702JG"
          },
          "callSigns": {
            "description": "Array of call signs of the aircraft using this slot.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "RCH123",
              "ABC123",
              "LLS442"
            ]
          },
          "missionId": {
            "description": "Mission identifier using this slot according to Mobility Air Forces (MAF) Encode/Decode procedures.",
            "maxLength": 36,
            "type": "string",
            "example": "AJM123456123"
          },
          "numAircraft": {
            "format": "int32",
            "description": "Number of aircraft using this slot for this time.",
            "type": "integer",
            "example": 1
          },
          "occStartTime": {
            "format": "date-time",
            "description": "Time the aircraft began occupying this slot, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-01-01T01:01:03.123Z"
          },
          "resAircraftMDS": {
            "description": "The aircraft Model Design Series designation of the aircraft this slot is reserved for.",
            "maxLength": 36,
            "type": "string",
            "example": "C017A"
          },
          "resTailNumber": {
            "description": "The tail number of the aircraft this slot is reserved for.",
            "maxLength": 16,
            "type": "string",
            "example": "N702JG"
          },
          "resType": {
            "description": "Indicates the type of reservation (e.g. M for Mission, A for Aircraft, O for Other).",
            "maxLength": 2,
            "type": "string",
            "example": "M"
          },
          "resReason": {
            "description": "The reason the slot reservation was made.",
            "maxLength": 256,
            "type": "string",
            "example": "Maintenance needed"
          },
          "resMissionId": {
            "description": "Mission identifier reserving this slot according to Mobility Air Forces (MAF) Encode/Decode procedures.",
            "maxLength": 36,
            "type": "string",
            "example": "AJM123456123"
          },
          "startTime": {
            "format": "date-time",
            "description": "The start of the slot window, in ISO 8601 UTC format.",
            "type": "string",
            "example": "2023-01-01T01:01:01.123Z"
          },
          "endTime": {
            "format": "date-time",
            "description": "The end of the slot window, in ISO 8601 UTC format.",
            "type": "string",
            "example": "2023-01-01T01:01:01.123Z"
          },
          "targetTime": {
            "format": "date-time",
            "description": "The desired time for aircraft action such as landing, take off, parking, etc., in ISO 8601 UTC format.",
            "type": "string",
            "example": "2023-01-01T01:01:01.123Z"
          },
          "idArrSortie": {
            "description": "Unique identifier of the sortie arriving at the slot start time.",
            "maxLength": 36,
            "type": "string",
            "example": "be831d39-1822-da9f-7ace-6cc5643397dc"
          },
          "idDepSortie": {
            "description": "Unique identifier of the sortie departing at the slot end time.",
            "maxLength": 36,
            "type": "string",
            "example": "1e6edeec-72e9-aaec-d33c-51147cb5ffdd"
          },
          "altArrSortieId": {
            "description": "Alternate identifier of the sortie arriving at the slot start time provided by the source.",
            "maxLength": 36,
            "type": "string",
            "example": "ALT-SORTIE-ID"
          },
          "altDepSortieId": {
            "description": "Alternate identifier of the sortie departing at the slot end time provided by the source.",
            "maxLength": 36,
            "type": "string",
            "example": "ALT-SORTIE-ID"
          },
          "reqComment": {
            "description": "Comments from the requester.",
            "maxLength": 128,
            "type": "string",
            "example": "Sorry for the late notice."
          },
          "appComment": {
            "description": "Comments from the approver.",
            "maxLength": 128,
            "type": "string",
            "example": "The request was denied due to inoperable fuel pumps."
          },
          "reqOrg": {
            "description": "Short name of the organization requesting use of this slot.",
            "maxLength": 32,
            "type": "string",
            "example": "TACC"
          },
          "reqInitials": {
            "description": "Initials of the person requesting the use of this slot. Use SYSTEM if this request is auto-generated by an auto-planning system.",
            "maxLength": 8,
            "type": "string",
            "example": "CB"
          },
          "appOrg": {
            "description": "Short name of the organization approving the use of this slot.",
            "maxLength": 32,
            "type": "string",
            "example": "KCHS/BOPS"
          },
          "appInitials": {
            "description": "Initials of the person approving the use of this slot. Use SYSTEM if auto-approved without human involvement.",
            "maxLength": 8,
            "type": "string",
            "example": "CB"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "AirfieldSlotConsumption_Ingest": {
        "description": "Airfield slot use data. Contains the dynamic data associated with the status and use of specific airfield slots.",
        "required": [
          "classificationMarking",
          "idAirfieldSlot",
          "numAircraft",
          "startTime",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "be831d39-1822-da9f-7ace-6cc5643397dc"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idAirfieldSlot": {
            "description": "Unique identifier of the airfield slot for which this slot consumption record is referencing.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "3136498f-2969-3535-1432-e984b2e2e686"
          },
          "status": {
            "description": "Current status of this slot (REQUESTED / APPROVED / DENIED / BLOCKED / OTHER).",
            "maxLength": 9,
            "enum": [
              "REQUESTED",
              "APPROVED",
              "DENIED",
              "BLOCKED",
              "OTHER"
            ],
            "type": "string",
            "example": "APPROVED"
          },
          "occupied": {
            "description": "Flag indicating if the slot is occupied.",
            "type": "boolean",
            "example": true
          },
          "consumer": {
            "description": "Identifying name of the aircraft using this slot. Names are often Prior Permission Required (PPR) numbers or other similar human-readable identifiers.",
            "maxLength": 64,
            "type": "string",
            "example": "APRON1-230401001"
          },
          "occAircraftMDS": {
            "description": "The aircraft Model Design Series designation of the aircraft occupying this slot.",
            "maxLength": 36,
            "type": "string",
            "example": "C017A"
          },
          "occTailNumber": {
            "description": "The tail number of the aircraft occupying this slot.",
            "maxLength": 16,
            "type": "string",
            "example": "N702JG"
          },
          "callSigns": {
            "description": "Array of call signs of the aircraft using this slot.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "RCH123",
              "ABC123",
              "LLS442"
            ]
          },
          "missionId": {
            "description": "Mission identifier using this slot according to Mobility Air Forces (MAF) Encode/Decode procedures.",
            "maxLength": 36,
            "type": "string",
            "example": "AJM123456123"
          },
          "numAircraft": {
            "format": "int32",
            "description": "Number of aircraft using this slot for this time.",
            "type": "integer",
            "example": 1
          },
          "occStartTime": {
            "format": "date-time",
            "description": "Time the aircraft began occupying this slot, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-01-01T01:01:03.123Z"
          },
          "resAircraftMDS": {
            "description": "The aircraft Model Design Series designation of the aircraft this slot is reserved for.",
            "maxLength": 36,
            "type": "string",
            "example": "C017A"
          },
          "resTailNumber": {
            "description": "The tail number of the aircraft this slot is reserved for.",
            "maxLength": 16,
            "type": "string",
            "example": "N702JG"
          },
          "resType": {
            "description": "Indicates the type of reservation (e.g. M for Mission, A for Aircraft, O for Other).",
            "maxLength": 2,
            "type": "string",
            "example": "M"
          },
          "resReason": {
            "description": "The reason the slot reservation was made.",
            "maxLength": 256,
            "type": "string",
            "example": "Maintenance needed"
          },
          "resMissionId": {
            "description": "Mission identifier reserving this slot according to Mobility Air Forces (MAF) Encode/Decode procedures.",
            "maxLength": 36,
            "type": "string",
            "example": "AJM123456123"
          },
          "startTime": {
            "format": "date-time",
            "description": "The start of the slot window, in ISO 8601 UTC format.",
            "type": "string",
            "example": "2023-01-01T01:01:01.123Z"
          },
          "endTime": {
            "format": "date-time",
            "description": "The end of the slot window, in ISO 8601 UTC format.",
            "type": "string",
            "example": "2023-01-01T01:01:01.123Z"
          },
          "targetTime": {
            "format": "date-time",
            "description": "The desired time for aircraft action such as landing, take off, parking, etc., in ISO 8601 UTC format.",
            "type": "string",
            "example": "2023-01-01T01:01:01.123Z"
          },
          "idArrSortie": {
            "description": "Unique identifier of the sortie arriving at the slot start time.",
            "maxLength": 36,
            "type": "string",
            "example": "be831d39-1822-da9f-7ace-6cc5643397dc"
          },
          "idDepSortie": {
            "description": "Unique identifier of the sortie departing at the slot end time.",
            "maxLength": 36,
            "type": "string",
            "example": "1e6edeec-72e9-aaec-d33c-51147cb5ffdd"
          },
          "altArrSortieId": {
            "description": "Alternate identifier of the sortie arriving at the slot start time provided by the source.",
            "maxLength": 36,
            "type": "string",
            "example": "ALT-SORTIE-ID"
          },
          "altDepSortieId": {
            "description": "Alternate identifier of the sortie departing at the slot end time provided by the source.",
            "maxLength": 36,
            "type": "string",
            "example": "ALT-SORTIE-ID"
          },
          "reqComment": {
            "description": "Comments from the requester.",
            "maxLength": 128,
            "type": "string",
            "example": "Sorry for the late notice."
          },
          "appComment": {
            "description": "Comments from the approver.",
            "maxLength": 128,
            "type": "string",
            "example": "The request was denied due to inoperable fuel pumps."
          },
          "reqOrg": {
            "description": "Short name of the organization requesting use of this slot.",
            "maxLength": 32,
            "type": "string",
            "example": "TACC"
          },
          "reqInitials": {
            "description": "Initials of the person requesting the use of this slot. Use SYSTEM if this request is auto-generated by an auto-planning system.",
            "maxLength": 8,
            "type": "string",
            "example": "CB"
          },
          "appOrg": {
            "description": "Short name of the organization approving the use of this slot.",
            "maxLength": 32,
            "type": "string",
            "example": "KCHS/BOPS"
          },
          "appInitials": {
            "description": "Initials of the person approving the use of this slot. Use SYSTEM if auto-approved without human involvement.",
            "maxLength": 8,
            "type": "string",
            "example": "CB"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "AirfieldStatus_Abridged": {
        "description": "The airfield status contains dynamic data of an airfield's capabilities.",
        "required": [
          "classificationMarking",
          "idAirfield",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "be831d39-1822-da9f-7ace-6cc5643397dc"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idAirfield": {
            "description": "Unique identifier of the Airfield for which this status is referencing.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "3136498f-2969-3535-1432-e984b2e2e686"
          },
          "altAirfieldId": {
            "description": "Alternate airfield identifier provided by the source.",
            "maxLength": 64,
            "type": "string",
            "example": "AIRFIELD-ID"
          },
          "surveyDate": {
            "format": "date-time",
            "description": "The date the airfield survey was performed, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-01-01T12:00:00.123Z"
          },
          "reviewedBy": {
            "description": "The name of the person who reviewed the airfield survey.",
            "maxLength": 50,
            "type": "string",
            "example": "Jane Doe"
          },
          "reviewedDate": {
            "format": "date-time",
            "description": "The date the airfield survey was reviewed, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T00:00:00.123Z"
          },
          "approvedBy": {
            "description": "The name of the person who approved the airfield survey review.",
            "maxLength": 50,
            "type": "string",
            "example": "John Smith"
          },
          "approvedDate": {
            "format": "date-time",
            "description": "The date that survey review changes were approved for this airfield, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "passengerServiceMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of high-reach/wide-body passenger aircraft that can be serviced simultaneously based on spacing and manpower at the time of status.",
            "type": "integer",
            "example": 5
          },
          "fleetServiceMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of fleet aircraft that can be serviced simultaneously based on spacing and manpower at the time of status.",
            "type": "integer",
            "example": 4
          },
          "cargoMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of high-reach/wide-body cargo aircraft that can be serviced simultaneously based on spacing and manpower at the time of status.",
            "type": "integer",
            "example": 8
          },
          "fuelMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of aircraft that can be simultaneously refueled based on spacing and manpower at the time of status.",
            "type": "integer",
            "example": 9
          },
          "fuelTypes": {
            "description": "Array of fuel types available at the airfield. This array must be the same length as fuelQtys.",
            "type": "array",
            "items": {
              "maxLength": 32,
              "type": "string"
            },
            "example": [
              "JP-8",
              "Jet A",
              "AVGAS"
            ]
          },
          "fuelQtys": {
            "description": "Array of quantities for each fuel type at the airfield, in kilograms. The values in this array must correspond to the position index in fuelTypes. This array must be the same length as fuelTypes.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              263083.6,
              286674.9,
              18143.69
            ]
          },
          "mxMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of aircraft that can be simultaneously ground handled for standard maintenance based on spacing and manpower at the time of status.",
            "type": "integer",
            "example": 3
          },
          "operatingMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of aircraft due to items not directly related to the airfield infrastructure or aircraft servicing capability based on spacing and manpower at the time of status.",
            "type": "integer",
            "example": 4
          },
          "numCOG": {
            "format": "int32",
            "description": "The number of aircraft that are currently on ground (COG) at the airfield.",
            "type": "integer",
            "example": 2
          },
          "wideWorkingMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of working wide-body aircraft based on spacing and manpower at the time of status. Additional information about this field as it pertains to specific aircraft type may be available in an associated SiteOperations record.",
            "type": "integer",
            "example": 3
          },
          "wideParkingMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of parking wide-body aircraft based on spacing and manpower at the time of status. Additional information about this field as it pertains to specific aircraft type may be available in an associated SiteOperations record.",
            "type": "integer",
            "example": 7
          },
          "narrowWorkingMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of working narrow-body aircraft based on spacing and manpower at the time of status.",
            "type": "integer",
            "example": 4
          },
          "narrowParkingMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of parking narrow-body aircraft based on spacing and manpower at the time of status.",
            "type": "integer",
            "example": 5
          },
          "mheTypes": {
            "description": "Array of material handling equipment types at the airfield. This array must be the same length as mheQtys.",
            "type": "array",
            "items": {
              "maxLength": 32,
              "type": "string"
            },
            "example": [
              "30k",
              "AT",
              "60k"
            ]
          },
          "mheQtys": {
            "description": "Array of quantities for each material handling equipment types at the airfield. The values in this array must correspond to the position index in mheTypes. This array must be the same length as mheTypes.",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "example": [
              1,
              3,
              1
            ]
          },
          "medCap": {
            "description": "The level of medical support and capabilities available at the airfield.",
            "maxLength": 64,
            "type": "string",
            "example": "Large Field Hospital"
          },
          "arffCat": {
            "description": "The category of aircraft rescue and fire fighting (ARFF) services that are currently available at the airfield. Entries should include  the code (FAA or ICAO) and the category.",
            "maxLength": 64,
            "type": "string",
            "example": "FAA-A"
          },
          "gseTime": {
            "format": "int32",
            "description": "The expected time to receive ground support equipment (e.g. power units, air units, cables, hoses, etc.), in minutes.",
            "type": "integer",
            "example": 10
          },
          "priRwyNum": {
            "description": "The number or ID of primary runway at the airfield.",
            "maxLength": 16,
            "type": "string",
            "example": "35R"
          },
          "rwyCondReading": {
            "format": "int32",
            "description": "The primary runway condition reading value used for determining runway braking action, from 0 to 26. A value of 0 indicates braking action is poor or non-existent, where a value of 26 indicates braking action is good.",
            "maximum": 26,
            "minimum": 0,
            "type": "integer",
            "example": 23
          },
          "rwyFrictionFactor": {
            "format": "int32",
            "description": "The primary runway friction factor which is dependent on the surface friction between the tires of the aircraft and the runway surface, from 0 to 100. A lower number indicates less friction and less braking response.",
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "example": 10
          },
          "rwyMarkings": {
            "description": "Array of markings currently on the primary runway.",
            "type": "array",
            "items": {
              "maxLength": 64,
              "type": "string"
            },
            "example": [
              "Aiming Point",
              "Threshold"
            ]
          },
          "message": {
            "description": "Description of the current status of the airfield.",
            "maxLength": 1024,
            "type": "string",
            "example": "Status message about the airfield."
          },
          "priFreq": {
            "format": "double",
            "description": "The primary frequency which the airfield is currently operating, in megahertz.",
            "type": "number",
            "example": 123.45
          },
          "slotTypesReq": {
            "description": "Array of slot types that an airfield requires a particular aircraft provide in order to consume a slot at this location.",
            "type": "array",
            "items": {
              "maxLength": 64,
              "type": "string"
            },
            "example": [
              "PARKING",
              "WORKING",
              "LANDING"
            ]
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "AirfieldStatus_Full": {
        "description": "The airfield status contains dynamic data of an airfield's capabilities.",
        "required": [
          "classificationMarking",
          "idAirfield",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "be831d39-1822-da9f-7ace-6cc5643397dc"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idAirfield": {
            "description": "Unique identifier of the Airfield for which this status is referencing.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "3136498f-2969-3535-1432-e984b2e2e686"
          },
          "altAirfieldId": {
            "description": "Alternate airfield identifier provided by the source.",
            "maxLength": 64,
            "type": "string",
            "example": "AIRFIELD-ID"
          },
          "surveyDate": {
            "format": "date-time",
            "description": "The date the airfield survey was performed, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-01-01T12:00:00.123Z"
          },
          "reviewedBy": {
            "description": "The name of the person who reviewed the airfield survey.",
            "maxLength": 50,
            "type": "string",
            "example": "Jane Doe"
          },
          "reviewedDate": {
            "format": "date-time",
            "description": "The date the airfield survey was reviewed, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T00:00:00.123Z"
          },
          "approvedBy": {
            "description": "The name of the person who approved the airfield survey review.",
            "maxLength": 50,
            "type": "string",
            "example": "John Smith"
          },
          "approvedDate": {
            "format": "date-time",
            "description": "The date that survey review changes were approved for this airfield, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "passengerServiceMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of high-reach/wide-body passenger aircraft that can be serviced simultaneously based on spacing and manpower at the time of status.",
            "type": "integer",
            "example": 5
          },
          "fleetServiceMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of fleet aircraft that can be serviced simultaneously based on spacing and manpower at the time of status.",
            "type": "integer",
            "example": 4
          },
          "cargoMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of high-reach/wide-body cargo aircraft that can be serviced simultaneously based on spacing and manpower at the time of status.",
            "type": "integer",
            "example": 8
          },
          "fuelMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of aircraft that can be simultaneously refueled based on spacing and manpower at the time of status.",
            "type": "integer",
            "example": 9
          },
          "fuelTypes": {
            "description": "Array of fuel types available at the airfield. This array must be the same length as fuelQtys.",
            "type": "array",
            "items": {
              "maxLength": 32,
              "type": "string"
            },
            "example": [
              "JP-8",
              "Jet A",
              "AVGAS"
            ]
          },
          "fuelQtys": {
            "description": "Array of quantities for each fuel type at the airfield, in kilograms. The values in this array must correspond to the position index in fuelTypes. This array must be the same length as fuelTypes.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              263083.6,
              286674.9,
              18143.69
            ]
          },
          "mxMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of aircraft that can be simultaneously ground handled for standard maintenance based on spacing and manpower at the time of status.",
            "type": "integer",
            "example": 3
          },
          "operatingMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of aircraft due to items not directly related to the airfield infrastructure or aircraft servicing capability based on spacing and manpower at the time of status.",
            "type": "integer",
            "example": 4
          },
          "numCOG": {
            "format": "int32",
            "description": "The number of aircraft that are currently on ground (COG) at the airfield.",
            "type": "integer",
            "example": 2
          },
          "wideWorkingMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of working wide-body aircraft based on spacing and manpower at the time of status. Additional information about this field as it pertains to specific aircraft type may be available in an associated SiteOperations record.",
            "type": "integer",
            "example": 3
          },
          "wideParkingMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of parking wide-body aircraft based on spacing and manpower at the time of status. Additional information about this field as it pertains to specific aircraft type may be available in an associated SiteOperations record.",
            "type": "integer",
            "example": 7
          },
          "narrowWorkingMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of working narrow-body aircraft based on spacing and manpower at the time of status.",
            "type": "integer",
            "example": 4
          },
          "narrowParkingMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of parking narrow-body aircraft based on spacing and manpower at the time of status.",
            "type": "integer",
            "example": 5
          },
          "mheTypes": {
            "description": "Array of material handling equipment types at the airfield. This array must be the same length as mheQtys.",
            "type": "array",
            "items": {
              "maxLength": 32,
              "type": "string"
            },
            "example": [
              "30k",
              "AT",
              "60k"
            ]
          },
          "mheQtys": {
            "description": "Array of quantities for each material handling equipment types at the airfield. The values in this array must correspond to the position index in mheTypes. This array must be the same length as mheTypes.",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "example": [
              1,
              3,
              1
            ]
          },
          "medCap": {
            "description": "The level of medical support and capabilities available at the airfield.",
            "maxLength": 64,
            "type": "string",
            "example": "Large Field Hospital"
          },
          "arffCat": {
            "description": "The category of aircraft rescue and fire fighting (ARFF) services that are currently available at the airfield. Entries should include  the code (FAA or ICAO) and the category.",
            "maxLength": 64,
            "type": "string",
            "example": "FAA-A"
          },
          "gseTime": {
            "format": "int32",
            "description": "The expected time to receive ground support equipment (e.g. power units, air units, cables, hoses, etc.), in minutes.",
            "type": "integer",
            "example": 10
          },
          "priRwyNum": {
            "description": "The number or ID of primary runway at the airfield.",
            "maxLength": 16,
            "type": "string",
            "example": "35R"
          },
          "rwyCondReading": {
            "format": "int32",
            "description": "The primary runway condition reading value used for determining runway braking action, from 0 to 26. A value of 0 indicates braking action is poor or non-existent, where a value of 26 indicates braking action is good.",
            "maximum": 26,
            "minimum": 0,
            "type": "integer",
            "example": 23
          },
          "rwyFrictionFactor": {
            "format": "int32",
            "description": "The primary runway friction factor which is dependent on the surface friction between the tires of the aircraft and the runway surface, from 0 to 100. A lower number indicates less friction and less braking response.",
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "example": 10
          },
          "rwyMarkings": {
            "description": "Array of markings currently on the primary runway.",
            "type": "array",
            "items": {
              "maxLength": 64,
              "type": "string"
            },
            "example": [
              "Aiming Point",
              "Threshold"
            ]
          },
          "message": {
            "description": "Description of the current status of the airfield.",
            "maxLength": 1024,
            "type": "string",
            "example": "Status message about the airfield."
          },
          "priFreq": {
            "format": "double",
            "description": "The primary frequency which the airfield is currently operating, in megahertz.",
            "type": "number",
            "example": 123.45
          },
          "slotTypesReq": {
            "description": "Array of slot types that an airfield requires a particular aircraft provide in order to consume a slot at this location.",
            "type": "array",
            "items": {
              "maxLength": 64,
              "type": "string"
            },
            "example": [
              "PARKING",
              "WORKING",
              "LANDING"
            ]
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "AirfieldStatus_Ingest": {
        "description": "The airfield status contains dynamic data of an airfield's capabilities.",
        "required": [
          "classificationMarking",
          "idAirfield",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "be831d39-1822-da9f-7ace-6cc5643397dc"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idAirfield": {
            "description": "Unique identifier of the Airfield for which this status is referencing.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "3136498f-2969-3535-1432-e984b2e2e686"
          },
          "altAirfieldId": {
            "description": "Alternate airfield identifier provided by the source.",
            "maxLength": 64,
            "type": "string",
            "example": "AIRFIELD-ID"
          },
          "surveyDate": {
            "format": "date-time",
            "description": "The date the airfield survey was performed, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2023-01-01T12:00:00.123Z"
          },
          "reviewedBy": {
            "description": "The name of the person who reviewed the airfield survey.",
            "maxLength": 50,
            "type": "string",
            "example": "Jane Doe"
          },
          "reviewedDate": {
            "format": "date-time",
            "description": "The date the airfield survey was reviewed, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T00:00:00.123Z"
          },
          "approvedBy": {
            "description": "The name of the person who approved the airfield survey review.",
            "maxLength": 50,
            "type": "string",
            "example": "John Smith"
          },
          "approvedDate": {
            "format": "date-time",
            "description": "The date that survey review changes were approved for this airfield, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "passengerServiceMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of high-reach/wide-body passenger aircraft that can be serviced simultaneously based on spacing and manpower at the time of status.",
            "type": "integer",
            "example": 5
          },
          "fleetServiceMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of fleet aircraft that can be serviced simultaneously based on spacing and manpower at the time of status.",
            "type": "integer",
            "example": 4
          },
          "cargoMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of high-reach/wide-body cargo aircraft that can be serviced simultaneously based on spacing and manpower at the time of status.",
            "type": "integer",
            "example": 8
          },
          "fuelMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of aircraft that can be simultaneously refueled based on spacing and manpower at the time of status.",
            "type": "integer",
            "example": 9
          },
          "fuelTypes": {
            "description": "Array of fuel types available at the airfield. This array must be the same length as fuelQtys.",
            "type": "array",
            "items": {
              "maxLength": 32,
              "type": "string"
            },
            "example": [
              "JP-8",
              "Jet A",
              "AVGAS"
            ]
          },
          "fuelQtys": {
            "description": "Array of quantities for each fuel type at the airfield, in kilograms. The values in this array must correspond to the position index in fuelTypes. This array must be the same length as fuelTypes.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              263083.6,
              286674.9,
              18143.69
            ]
          },
          "mxMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of aircraft that can be simultaneously ground handled for standard maintenance based on spacing and manpower at the time of status.",
            "type": "integer",
            "example": 3
          },
          "operatingMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of aircraft due to items not directly related to the airfield infrastructure or aircraft servicing capability based on spacing and manpower at the time of status.",
            "type": "integer",
            "example": 4
          },
          "numCOG": {
            "format": "int32",
            "description": "The number of aircraft that are currently on ground (COG) at the airfield.",
            "type": "integer",
            "example": 2
          },
          "wideWorkingMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of working wide-body aircraft based on spacing and manpower at the time of status. Additional information about this field as it pertains to specific aircraft type may be available in an associated SiteOperations record.",
            "type": "integer",
            "example": 3
          },
          "wideParkingMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of parking wide-body aircraft based on spacing and manpower at the time of status. Additional information about this field as it pertains to specific aircraft type may be available in an associated SiteOperations record.",
            "type": "integer",
            "example": 7
          },
          "narrowWorkingMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of working narrow-body aircraft based on spacing and manpower at the time of status.",
            "type": "integer",
            "example": 4
          },
          "narrowParkingMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of parking narrow-body aircraft based on spacing and manpower at the time of status.",
            "type": "integer",
            "example": 5
          },
          "mheTypes": {
            "description": "Array of material handling equipment types at the airfield. This array must be the same length as mheQtys.",
            "type": "array",
            "items": {
              "maxLength": 32,
              "type": "string"
            },
            "example": [
              "30k",
              "AT",
              "60k"
            ]
          },
          "mheQtys": {
            "description": "Array of quantities for each material handling equipment types at the airfield. The values in this array must correspond to the position index in mheTypes. This array must be the same length as mheTypes.",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "example": [
              1,
              3,
              1
            ]
          },
          "medCap": {
            "description": "The level of medical support and capabilities available at the airfield.",
            "maxLength": 64,
            "type": "string",
            "example": "Large Field Hospital"
          },
          "arffCat": {
            "description": "The category of aircraft rescue and fire fighting (ARFF) services that are currently available at the airfield. Entries should include  the code (FAA or ICAO) and the category.",
            "maxLength": 64,
            "type": "string",
            "example": "FAA-A"
          },
          "gseTime": {
            "format": "int32",
            "description": "The expected time to receive ground support equipment (e.g. power units, air units, cables, hoses, etc.), in minutes.",
            "type": "integer",
            "example": 10
          },
          "priRwyNum": {
            "description": "The number or ID of primary runway at the airfield.",
            "maxLength": 16,
            "type": "string",
            "example": "35R"
          },
          "rwyCondReading": {
            "format": "int32",
            "description": "The primary runway condition reading value used for determining runway braking action, from 0 to 26. A value of 0 indicates braking action is poor or non-existent, where a value of 26 indicates braking action is good.",
            "maximum": 26,
            "minimum": 0,
            "type": "integer",
            "example": 23
          },
          "rwyFrictionFactor": {
            "format": "int32",
            "description": "The primary runway friction factor which is dependent on the surface friction between the tires of the aircraft and the runway surface, from 0 to 100. A lower number indicates less friction and less braking response.",
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "example": 10
          },
          "rwyMarkings": {
            "description": "Array of markings currently on the primary runway.",
            "type": "array",
            "items": {
              "maxLength": 64,
              "type": "string"
            },
            "example": [
              "Aiming Point",
              "Threshold"
            ]
          },
          "message": {
            "description": "Description of the current status of the airfield.",
            "maxLength": 1024,
            "type": "string",
            "example": "Status message about the airfield."
          },
          "priFreq": {
            "format": "double",
            "description": "The primary frequency which the airfield is currently operating, in megahertz.",
            "type": "number",
            "example": 123.45
          },
          "slotTypesReq": {
            "description": "Array of slot types that an airfield requires a particular aircraft provide in order to consume a slot at this location.",
            "type": "array",
            "items": {
              "maxLength": 64,
              "type": "string"
            },
            "example": [
              "PARKING",
              "WORKING",
              "LANDING"
            ]
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "Antenna_Full": {
        "description": "Model representation of information on on-orbit/spacecraft communication antennas. A spacecraft may have multiple antennas and each antenna can have multiple 'details' records compiled by different sources.",
        "required": [
          "name",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ANTENNA-ID"
          },
          "name": {
            "description": "Antenna name.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "IRIDIUM NEXT 121-ANTENNA-10075"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "antennaDetails": {
            "description": "Read-only collection of additional AntennaDetails by various sources for this organization, ignored on create/update. These details must be created separately via the /udl/antennadetails operations.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AntennaDetails_Full"
            },
            "readOnly": true
          }
        }
      },
      "AntennaDetails_Full": {
        "description": "Detailed information for a spacecraft communication antenna. One antenna may have multiple AntennaDetails records, compiled by various sources.",
        "required": [
          "idAntenna",
          "classificationMarking",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ANTENNADETAILS-ID"
          },
          "idAntenna": {
            "description": "Unique identifier of the parent Antenna.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ANTENNA-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "type": {
            "description": "Type of antenna (e.g. Reflector, Double Reflector, Shaped Reflector, Horn, Parabolic, etc.).",
            "maxLength": 64,
            "type": "string",
            "example": "Reflector"
          },
          "position": {
            "description": "Antenna position (e.g. Top, Nadir, Side).",
            "maxLength": 128,
            "type": "string",
            "example": "Top"
          },
          "mode": {
            "description": "Antenna mode (e.g. TX,RX).",
            "maxLength": 4,
            "enum": [
              "TX",
              "RX"
            ],
            "type": "string",
            "example": "TX"
          },
          "steerable": {
            "description": "Boolean indicating if this antenna is steerable.",
            "type": "boolean",
            "example": false
          },
          "beamForming": {
            "description": "Boolean indicating if this is a beam forming antenna.",
            "type": "boolean",
            "example": false
          },
          "manufacturerOrgId": {
            "description": "ID of the organization that manufactures the antenna.",
            "maxLength": 36,
            "type": "string",
            "example": "MANUFACTUREORG-ID"
          },
          "diameter": {
            "format": "double",
            "description": "Antenna diameter in meters.",
            "type": "number",
            "example": 0.01
          },
          "size": {
            "description": "Array with 1-2 values specifying the length and width (for rectangular) and just length for dipole antennas in meters.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              0.03,
              0.05
            ]
          },
          "startFrequency": {
            "format": "double",
            "description": "Antenna start of frequency range in Mhz.",
            "type": "number",
            "example": 2.1
          },
          "endFrequency": {
            "format": "double",
            "description": "Antenna end of frequency range in Mhz.",
            "type": "number",
            "example": 3.3
          },
          "beamwidth": {
            "format": "double",
            "description": "Array of angles between the half-power (-3 dB) points of the main lobe of the antenna, in degrees.",
            "type": "number",
            "example": 14.1
          },
          "gain": {
            "format": "double",
            "description": "Antenna maximum gain in dBi.",
            "type": "number",
            "example": 20.1
          },
          "gainTolerance": {
            "format": "double",
            "description": "Antenna gain tolerance in dB.",
            "type": "number",
            "example": 5.1
          },
          "polarization": {
            "format": "double",
            "description": "Antenna polarization in degrees.",
            "type": "number",
            "example": 45.1
          },
          "description": {
            "description": "Antenna description.",
            "maxLength": 512,
            "type": "string",
            "example": "Description of antenna A"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "tags": {
            "description": "Optional array of provider/source specific tags for this data, where each element is no longer than 32 characters, used for implementing data owner conditional access controls to restrict access to the data. Should be left null by data providers unless conditional access controls are coordinated with the UDL team.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "PROVIDER_TAG1",
              "PROVIDER_TAG2"
            ]
          },
          "manufacturerOrg": {
            "$ref": "#/components/schemas/Organization_Full"
          }
        }
      },
      "Battery_Full": {
        "description": "Model representation of specific spacecraft battery types.",
        "required": [
          "name",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "BATTERY-ID"
          },
          "name": {
            "description": "Battery name.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "JAK-BATTERY-1479"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "batteryDetails": {
            "description": "Read-only collection of additional BatteryDetails by various sources for this organization, ignored on create/update. These details must be created separately via the /udl/batterydetails operations.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatteryDetails_Full"
            },
            "readOnly": true
          }
        }
      },
      "BatteryDetails_Full": {
        "description": "Detailed information on a spacecraft battery type compiled by a particular source. A Battery record may have multiple details records from several sources.",
        "required": [
          "idBattery",
          "classificationMarking",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "BATTERYDETAILS-ID"
          },
          "idBattery": {
            "description": "Identifier of the parent battery type record.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "BATTERY-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "technology": {
            "description": "Type of battery technology (e.g. Ni-Cd, Ni-H2, Li-ion, etc.).",
            "maxLength": 32,
            "type": "string",
            "example": "Ni-Cd"
          },
          "capacity": {
            "format": "double",
            "description": "Battery capacity in Ah.",
            "type": "number",
            "example": 10.1
          },
          "dischargeDepth": {
            "format": "double",
            "description": "Depth of discharge as a percentage/fraction.",
            "type": "number",
            "example": 0.2
          },
          "model": {
            "description": "Battery model number or name.",
            "maxLength": 128,
            "type": "string",
            "example": "11212"
          },
          "description": {
            "description": "Battery description/notes.",
            "maxLength": 1024,
            "type": "string",
            "example": "example notes"
          },
          "manufacturerOrgId": {
            "description": "ID of the organization that manufactures the battery.",
            "maxLength": 36,
            "type": "string",
            "example": "MANUFACTURERORG-ID"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "tags": {
            "description": "Optional array of provider/source specific tags for this data, where each element is no longer than 32 characters, used for implementing data owner conditional access controls to restrict access to the data. Should be left null by data providers unless conditional access controls are coordinated with the UDL team.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "PROVIDER_TAG1",
              "PROVIDER_TAG2"
            ]
          },
          "manufacturerOrg": {
            "$ref": "#/components/schemas/Organization_Full"
          }
        }
      },
      "DailyOperation_Abridged": {
        "description": "Collection providing hours of operation and other information specific to a day of the week.",
        "type": "object",
        "properties": {
          "dayOfWeek": {
            "description": "The day of the week to which this operational information pertains.",
            "enum": [
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ],
            "type": "string",
            "example": "MONDAY"
          },
          "operationName": {
            "description": "The name or type of operation to which this information pertains.",
            "maxLength": 32,
            "type": "string",
            "example": "Arrivals"
          },
          "operatingHours": {
            "description": "A collection containing the operational start and stop times scheduled for the day of the week specified.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OperatingHours_Abridged"
            }
          },
          "ophrsLastChangedDate": {
            "format": "date-time",
            "description": "The datetime of the most recent change made to this DailyOperation data, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "ophrsLastChangedBy": {
            "description": "The name of the person who made the most recent change to this DailyOperation data.",
            "maxLength": 32,
            "type": "string",
            "example": "John Smith"
          }
        }
      },
      "DailyOperation_Full": {
        "description": "Collection providing hours of operation and other information specific to a day of the week.",
        "type": "object",
        "properties": {
          "dayOfWeek": {
            "description": "The day of the week to which this operational information pertains.",
            "enum": [
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ],
            "type": "string",
            "example": "MONDAY"
          },
          "operationName": {
            "description": "The name or type of operation to which this information pertains.",
            "maxLength": 32,
            "type": "string",
            "example": "Arrivals"
          },
          "operatingHours": {
            "description": "A collection containing the operational start and stop times scheduled for the day of the week specified.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OperatingHours_Full"
            }
          },
          "ophrsLastChangedDate": {
            "format": "date-time",
            "description": "The datetime of the most recent change made to this DailyOperation data, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "ophrsLastChangedBy": {
            "description": "The name of the person who made the most recent change to this DailyOperation data.",
            "maxLength": 32,
            "type": "string",
            "example": "John Smith"
          }
        }
      },
      "DailyOperation_Ingest": {
        "description": "Collection providing hours of operation and other information specific to a day of the week.",
        "type": "object",
        "properties": {
          "dayOfWeek": {
            "description": "The day of the week to which this operational information pertains.",
            "enum": [
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ],
            "type": "string",
            "example": "MONDAY"
          },
          "operationName": {
            "description": "The name or type of operation to which this information pertains.",
            "maxLength": 32,
            "type": "string",
            "example": "Arrivals"
          },
          "operatingHours": {
            "description": "A collection containing the operational start and stop times scheduled for the day of the week specified.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OperatingHours_Ingest"
            }
          },
          "ophrsLastChangedDate": {
            "format": "date-time",
            "description": "The datetime of the most recent change made to this DailyOperation data, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.123Z"
          },
          "ophrsLastChangedBy": {
            "description": "The name of the person who made the most recent change to this DailyOperation data.",
            "maxLength": 32,
            "type": "string",
            "example": "John Smith"
          }
        }
      },
      "DropZone_Abridged": {
        "description": "Properties and characteristics of a Drop Zone, including name, location, shape, type code, survey date, and remarks.",
        "required": [
          "classificationMarking",
          "name",
          "lat",
          "lon",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "3f28f60b-3a50-2aef-ac88-8e9d0e39912b"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idSite": {
            "description": "The ID of the site associated with the drop zone.",
            "maxLength": 36,
            "type": "string",
            "example": "a150b3ee-884b-b9ac-60a0-6408b4b16088"
          },
          "extIdentifier": {
            "description": "The external identifier assigned to the drop zone.",
            "maxLength": 64,
            "type": "string",
            "example": "1001"
          },
          "name": {
            "description": "The name of the drop zone.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Viper DZ"
          },
          "code": {
            "description": "The type code for the drop zone.",
            "maxLength": 16,
            "type": "string",
            "example": "DZ"
          },
          "pointName": {
            "description": "The name assigned to the drop zone point.",
            "maxLength": 16,
            "type": "string",
            "example": "CENTER POINT"
          },
          "zarId": {
            "description": "The identifier of the Zone Availability Report (ZAR) for the drop zone.",
            "maxLength": 32,
            "type": "string",
            "example": "1001"
          },
          "lat": {
            "format": "double",
            "description": "WGS84 latitude of the drop zone, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 33.54
          },
          "lon": {
            "format": "double",
            "description": "WGS84 longitude of the drop zone, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": -117.162
          },
          "length": {
            "format": "double",
            "description": "The length dimension of the drop zone in meters for non-circular drop zones.",
            "type": "number",
            "example": 549.1
          },
          "width": {
            "format": "double",
            "description": "The width dimension of the drop zone in meters for non-circular drop zones.",
            "type": "number",
            "example": 549.1
          },
          "radius": {
            "format": "double",
            "description": "The radius dimension of the drop zone in meters for circular drop zones.",
            "type": "number",
            "example": 495.1
          },
          "majcom": {
            "description": "The Major Command (MAJCOM) responsible for management of the drop zone.",
            "maxLength": 128,
            "type": "string",
            "example": "United States Northern Command"
          },
          "countryCode": {
            "description": "The Country Code where the drop zone is located. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDL’s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.",
            "maxLength": 4,
            "type": "string",
            "example": "US"
          },
          "countryName": {
            "description": "The country name of the location for the drop zone.",
            "maxLength": 128,
            "type": "string",
            "example": "United States"
          },
          "altCountryCode": {
            "description": "Specifies an alternate country code for the drop zone if the data provider code is not part of an official Country Code standard such as ISO-3166 or FIPS. This field will be set to the value provided by the source and should be used for all Queries specifying a Country Code.",
            "maxLength": 16,
            "type": "string",
            "example": "USA"
          },
          "altCountryName": {
            "description": "Specifies the country name associated with the source provided alternate country code.",
            "maxLength": 128,
            "type": "string",
            "example": "United States of America"
          },
          "stateAbbr": {
            "description": "The US alphabetical code for the state where the drop zone is located.",
            "maxLength": 4,
            "type": "string",
            "example": "CA"
          },
          "stateName": {
            "description": "The name of the state where the drop zone is located.",
            "maxLength": 64,
            "type": "string",
            "example": "CALIFORNIA"
          },
          "surveyDate": {
            "format": "date-time",
            "description": "The date the drop zone survey was performed, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2017-12-09T16:00:00.123Z"
          },
          "approvalDate": {
            "format": "date-time",
            "description": "The date the drop zone survey was approved, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2018-01-05T16:00:00.123Z"
          },
          "operationalApprovalDate": {
            "format": "date-time",
            "description": "The approval date for the drop zone by an air drop authority certifying operational usage, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2018-01-05T16:00:00.123Z"
          },
          "recertDate": {
            "format": "date-time",
            "description": "The date the drop zone was recertified, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2022-07-05T16:00:00.123Z"
          },
          "expirationDate": {
            "format": "date-time",
            "description": "The survey expiration date of the drop zone, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2022-12-09T16:00:00.123Z"
          },
          "nearestLoc": {
            "description": "The nearest reference location to the drop zone.",
            "maxLength": 128,
            "type": "string",
            "example": "March AFB"
          },
          "remark": {
            "description": "Remarks concerning the drop zone.",
            "maxLength": 1024,
            "type": "string",
            "example": "The text of the remark."
          },
          "lastUpdate": {
            "format": "date-time",
            "description": "Last time the drop zone information was updated, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2022-11-07T18:44:41.123Z"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "DropZone_Full": {
        "description": "Properties and characteristics of a Drop Zone, including name, location, shape, type code, survey date, and remarks.",
        "required": [
          "classificationMarking",
          "name",
          "lat",
          "lon",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "3f28f60b-3a50-2aef-ac88-8e9d0e39912b"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idSite": {
            "description": "The ID of the site associated with the drop zone.",
            "maxLength": 36,
            "type": "string",
            "example": "a150b3ee-884b-b9ac-60a0-6408b4b16088"
          },
          "extIdentifier": {
            "description": "The external identifier assigned to the drop zone.",
            "maxLength": 64,
            "type": "string",
            "example": "1001"
          },
          "name": {
            "description": "The name of the drop zone.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Viper DZ"
          },
          "code": {
            "description": "The type code for the drop zone.",
            "maxLength": 16,
            "type": "string",
            "example": "DZ"
          },
          "pointName": {
            "description": "The name assigned to the drop zone point.",
            "maxLength": 16,
            "type": "string",
            "example": "CENTER POINT"
          },
          "zarId": {
            "description": "The identifier of the Zone Availability Report (ZAR) for the drop zone.",
            "maxLength": 32,
            "type": "string",
            "example": "1001"
          },
          "lat": {
            "format": "double",
            "description": "WGS84 latitude of the drop zone, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 33.54
          },
          "lon": {
            "format": "double",
            "description": "WGS84 longitude of the drop zone, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": -117.162
          },
          "length": {
            "format": "double",
            "description": "The length dimension of the drop zone in meters for non-circular drop zones.",
            "type": "number",
            "example": 549.1
          },
          "width": {
            "format": "double",
            "description": "The width dimension of the drop zone in meters for non-circular drop zones.",
            "type": "number",
            "example": 549.1
          },
          "radius": {
            "format": "double",
            "description": "The radius dimension of the drop zone in meters for circular drop zones.",
            "type": "number",
            "example": 495.1
          },
          "majcom": {
            "description": "The Major Command (MAJCOM) responsible for management of the drop zone.",
            "maxLength": 128,
            "type": "string",
            "example": "United States Northern Command"
          },
          "countryCode": {
            "description": "The Country Code where the drop zone is located. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDL’s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.",
            "maxLength": 4,
            "type": "string",
            "example": "US"
          },
          "countryName": {
            "description": "The country name of the location for the drop zone.",
            "maxLength": 128,
            "type": "string",
            "example": "United States"
          },
          "altCountryCode": {
            "description": "Specifies an alternate country code for the drop zone if the data provider code is not part of an official Country Code standard such as ISO-3166 or FIPS. This field will be set to the value provided by the source and should be used for all Queries specifying a Country Code.",
            "maxLength": 16,
            "type": "string",
            "example": "USA"
          },
          "altCountryName": {
            "description": "Specifies the country name associated with the source provided alternate country code.",
            "maxLength": 128,
            "type": "string",
            "example": "United States of America"
          },
          "stateAbbr": {
            "description": "The US alphabetical code for the state where the drop zone is located.",
            "maxLength": 4,
            "type": "string",
            "example": "CA"
          },
          "stateName": {
            "description": "The name of the state where the drop zone is located.",
            "maxLength": 64,
            "type": "string",
            "example": "CALIFORNIA"
          },
          "surveyDate": {
            "format": "date-time",
            "description": "The date the drop zone survey was performed, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2017-12-09T16:00:00.123Z"
          },
          "approvalDate": {
            "format": "date-time",
            "description": "The date the drop zone survey was approved, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2018-01-05T16:00:00.123Z"
          },
          "operationalApprovalDate": {
            "format": "date-time",
            "description": "The approval date for the drop zone by an air drop authority certifying operational usage, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2018-01-05T16:00:00.123Z"
          },
          "recertDate": {
            "format": "date-time",
            "description": "The date the drop zone was recertified, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2022-07-05T16:00:00.123Z"
          },
          "expirationDate": {
            "format": "date-time",
            "description": "The survey expiration date of the drop zone, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2022-12-09T16:00:00.123Z"
          },
          "nearestLoc": {
            "description": "The nearest reference location to the drop zone.",
            "maxLength": 128,
            "type": "string",
            "example": "March AFB"
          },
          "remark": {
            "description": "Remarks concerning the drop zone.",
            "maxLength": 1024,
            "type": "string",
            "example": "The text of the remark."
          },
          "lastUpdate": {
            "format": "date-time",
            "description": "Last time the drop zone information was updated, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2022-11-07T18:44:41.123Z"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "DropZone_Ingest": {
        "description": "Properties and characteristics of a Drop Zone, including name, location, shape, type code, survey date, and remarks.",
        "required": [
          "classificationMarking",
          "name",
          "lat",
          "lon",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "3f28f60b-3a50-2aef-ac88-8e9d0e39912b"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idSite": {
            "description": "The ID of the site associated with the drop zone.",
            "maxLength": 36,
            "type": "string",
            "example": "a150b3ee-884b-b9ac-60a0-6408b4b16088"
          },
          "extIdentifier": {
            "description": "The external identifier assigned to the drop zone.",
            "maxLength": 64,
            "type": "string",
            "example": "1001"
          },
          "name": {
            "description": "The name of the drop zone.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Viper DZ"
          },
          "code": {
            "description": "The type code for the drop zone.",
            "maxLength": 16,
            "type": "string",
            "example": "DZ"
          },
          "pointName": {
            "description": "The name assigned to the drop zone point.",
            "maxLength": 16,
            "type": "string",
            "example": "CENTER POINT"
          },
          "zarId": {
            "description": "The identifier of the Zone Availability Report (ZAR) for the drop zone.",
            "maxLength": 32,
            "type": "string",
            "example": "1001"
          },
          "lat": {
            "format": "double",
            "description": "WGS84 latitude of the drop zone, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 33.54
          },
          "lon": {
            "format": "double",
            "description": "WGS84 longitude of the drop zone, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": -117.162
          },
          "length": {
            "format": "double",
            "description": "The length dimension of the drop zone in meters for non-circular drop zones.",
            "type": "number",
            "example": 549.1
          },
          "width": {
            "format": "double",
            "description": "The width dimension of the drop zone in meters for non-circular drop zones.",
            "type": "number",
            "example": 549.1
          },
          "radius": {
            "format": "double",
            "description": "The radius dimension of the drop zone in meters for circular drop zones.",
            "type": "number",
            "example": 495.1
          },
          "majcom": {
            "description": "The Major Command (MAJCOM) responsible for management of the drop zone.",
            "maxLength": 128,
            "type": "string",
            "example": "United States Northern Command"
          },
          "countryCode": {
            "description": "The Country Code where the drop zone is located. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDL’s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.",
            "maxLength": 4,
            "type": "string",
            "example": "US"
          },
          "countryName": {
            "description": "The country name of the location for the drop zone.",
            "maxLength": 128,
            "type": "string",
            "example": "United States"
          },
          "altCountryCode": {
            "description": "Specifies an alternate country code for the drop zone if the data provider code is not part of an official Country Code standard such as ISO-3166 or FIPS. This field will be set to the value provided by the source and should be used for all Queries specifying a Country Code.",
            "maxLength": 16,
            "type": "string",
            "example": "USA"
          },
          "altCountryName": {
            "description": "Specifies the country name associated with the source provided alternate country code.",
            "maxLength": 128,
            "type": "string",
            "example": "United States of America"
          },
          "stateAbbr": {
            "description": "The US alphabetical code for the state where the drop zone is located.",
            "maxLength": 4,
            "type": "string",
            "example": "CA"
          },
          "stateName": {
            "description": "The name of the state where the drop zone is located.",
            "maxLength": 64,
            "type": "string",
            "example": "CALIFORNIA"
          },
          "surveyDate": {
            "format": "date-time",
            "description": "The date the drop zone survey was performed, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2017-12-09T16:00:00.123Z"
          },
          "approvalDate": {
            "format": "date-time",
            "description": "The date the drop zone survey was approved, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2018-01-05T16:00:00.123Z"
          },
          "operationalApprovalDate": {
            "format": "date-time",
            "description": "The approval date for the drop zone by an air drop authority certifying operational usage, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2018-01-05T16:00:00.123Z"
          },
          "recertDate": {
            "format": "date-time",
            "description": "The date the drop zone was recertified, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2022-07-05T16:00:00.123Z"
          },
          "expirationDate": {
            "format": "date-time",
            "description": "The survey expiration date of the drop zone, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2022-12-09T16:00:00.123Z"
          },
          "nearestLoc": {
            "description": "The nearest reference location to the drop zone.",
            "maxLength": 128,
            "type": "string",
            "example": "March AFB"
          },
          "remark": {
            "description": "Remarks concerning the drop zone.",
            "maxLength": 1024,
            "type": "string",
            "example": "The text of the remark."
          },
          "lastUpdate": {
            "format": "date-time",
            "description": "Last time the drop zone information was updated, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2022-11-07T18:44:41.123Z"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "Engine_Full": {
        "description": "Known launch vehicle engines and their performance characteristics and limits.  A launch vehicle has 1 to many engines per stage.",
        "required": [
          "name",
          "classificationMarking",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ENGINE-ID"
          },
          "name": {
            "description": "Engine name/variant.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "ENGINE_VARIANT1"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "engineDetails": {
            "description": "Read-only collection of additional EngineDetails by various sources for this engine, ignored on create/update. These details must be created separately via the /udl/enginedetails operations.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EngineDetails_Full"
            },
            "readOnly": true
          }
        }
      },
      "EngineDetails_Full": {
        "description": "Known launch vehicle engine details and performance characteristics and limits compiled by a particular source.  A launch vehicle engine may have several details records from multiple sources.",
        "required": [
          "idEngine",
          "classificationMarking",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ENGINEDETAILS-ID"
          },
          "idEngine": {
            "description": "Identifier of the parent engine record.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ENGINE-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "family": {
            "description": "Engine type or family.",
            "maxLength": 64,
            "type": "string",
            "example": "ENGINE_TYPE1"
          },
          "cycleType": {
            "description": "Engine cycle type (e.g. Electrostatic Ion, Pressure Fed, Hall, Catalytic Decomposition, etc.).",
            "maxLength": 64,
            "type": "string",
            "example": "Pressure Fed"
          },
          "characteristicType": {
            "description": "Engine characteristic type (e.g. Electric, Mono-propellant, Bi-propellant, etc.).",
            "maxLength": 64,
            "type": "string",
            "example": "Electric"
          },
          "manufacturerOrgId": {
            "description": "Organization ID of the engine manufacturer.",
            "maxLength": 36,
            "type": "string",
            "example": "MANUFACTURERORG-ID"
          },
          "specificImpulse": {
            "format": "double",
            "description": "Launch engine specific impulse in seconds.",
            "type": "number",
            "example": 1.1
          },
          "burnTime": {
            "format": "double",
            "description": "Launch engine maximum burn time in seconds.",
            "type": "number",
            "example": 1.1
          },
          "seaLevelThrust": {
            "format": "double",
            "description": "Engine maximum thrust at sea level in Kilo-Newtons.",
            "type": "number",
            "example": 1.1
          },
          "vacuumThrust": {
            "format": "double",
            "description": "Engine maximum thrust in a vacuum in Kilo-Newtons.",
            "type": "number",
            "example": 1.1
          },
          "chamberPressure": {
            "format": "double",
            "description": "Engine chamber pressure in bars.",
            "type": "number",
            "example": 1.1
          },
          "nozzleExpansionRatio": {
            "format": "double",
            "description": "Engine nozzle expansion ratio.",
            "type": "number",
            "example": 1.1
          },
          "maxFirings": {
            "format": "int32",
            "description": "Engine maximum number of firings.",
            "type": "integer",
            "example": 5
          },
          "propellant": {
            "description": "Propellant/fuel type of the engine (e.g. Liquid Hydrogen, Kerosene, Aerozine, etc).",
            "maxLength": 64,
            "type": "string",
            "example": "Liquid"
          },
          "oxidizer": {
            "description": "Oxidizer type (e.g. Nitrogen Tetroxide, Liquid Oxygen, etc).",
            "maxLength": 64,
            "type": "string",
            "example": "Liquid Oxygen"
          },
          "notes": {
            "description": "Notes/Description of the engine.",
            "maxLength": 1024,
            "type": "string",
            "example": "Example notes"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "tags": {
            "description": "Optional array of provider/source specific tags for this data, where each element is no longer than 32 characters, used for implementing data owner conditional access controls to restrict access to the data. Should be left null by data providers unless conditional access controls are coordinated with the UDL team.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "PROVIDER_TAG1",
              "PROVIDER_TAG2"
            ]
          }
        }
      },
      "Entity_Full": {
        "description": "An entity is a generic representation of any object within a space/SSA system such as sensors, on-orbit objects, RF Emitters, space craft buses, etc. An entity can have an operating unit, a location (if terrestrial), and statuses.",
        "required": [
          "name",
          "classificationMarking",
          "type",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "idEntity": {
            "description": "Unique identifier of the record.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ENTITY-ID"
          },
          "name": {
            "description": "Unique entity name.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "Example name"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "type": {
            "description": "The type of entity represented by this record (AIRCRAFT, BUS, COMM, IR, NAVIGATION, ONORBIT, RFEMITTER, SCIENTIFIC, SENSOR, SITE, VESSEL).",
            "maxLength": 45,
            "minLength": 1,
            "enum": [
              "AIRCRAFT",
              "BUS",
              "COMM",
              "IR",
              "NAVIGATION",
              "ONORBIT",
              "RFEMITTER",
              "SCIENTIFIC",
              "SENSOR",
              "SITE",
              "VESSEL"
            ],
            "type": "string",
            "example": "ONORBIT"
          },
          "idLocation": {
            "description": "Unique identifier of the entity location, if terrestrial/fixed.",
            "maxLength": 36,
            "type": "string",
            "example": "LOCATION-ID"
          },
          "countryCode": {
            "description": "The country code. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDL’s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.",
            "maxLength": 4,
            "type": "string",
            "example": "US"
          },
          "ownerType": {
            "description": "Type of organization which owns this entity (e.g. Commercial, Government, Academic, Consortium, etc).",
            "maxLength": 32,
            "enum": [
              "Commercial",
              "Government",
              "Academic",
              "Consortium",
              "Other"
            ],
            "type": "string",
            "example": "Commercial"
          },
          "taskable": {
            "description": "Boolean indicating if this entity is taskable.",
            "type": "boolean",
            "example": false
          },
          "urls": {
            "description": "List of URLs to additional details/documents for this entity.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "URL1",
              "URL2"
            ]
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "location": {
            "$ref": "#/components/schemas/Location_Full"
          },
          "onOrbit": {
            "description": "Model object representing on-orbit objects or satellites in the system.",
            "required": [
              "classificationMarking",
              "satNo",
              "source",
              "dataMode"
            ],
            "type": "object",
            "properties": {
              "idOnOrbit": {
                "description": "For the public catalog, the idOnOrbit is typically the satellite number as a string, but may be a UUID for analyst or other unknown or untracked satellites, auto-generated by the system.",
                "maxLength": 36,
                "minLength": 1,
                "type": "string",
                "example": "ONORBIT-ID"
              },
              "classificationMarking": {
                "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
                "maxLength": 128,
                "minLength": 1,
                "type": "string",
                "example": "U"
              },
              "satNo": {
                "format": "int32",
                "description": "Satellite/Catalog number of the target on-orbit object.",
                "minimum": 0,
                "type": "integer",
                "example": 1
              },
              "commonName": {
                "description": "Common name of the on-orbit object.",
                "maxLength": 128,
                "type": "string",
                "example": "Example common name"
              },
              "constellation": {
                "description": "Constellation to which this satellite belongs.",
                "maxLength": 128,
                "type": "string",
                "example": "Big Dipper"
              },
              "intlDes": {
                "description": "International Designator, typically of the format YYYYLLLAAA, where YYYY is the launch year, LLL is the sequential launch number of that year, and AAA is an optional launch piece designator for the launch.",
                "maxLength": 45,
                "type": "string",
                "example": "2021123ABC"
              },
              "launchDate": {
                "format": "date",
                "description": "Date of launch.",
                "type": "string",
                "example": "2018-01-01"
              },
              "decayDate": {
                "format": "date-time",
                "description": "Date of decay.",
                "type": "string",
                "example": "2018-01-01T16:00:00.123Z"
              },
              "objectType": {
                "description": "Type of on-orbit object: ROCKET BODY, DEBRIS, PAYLOAD, PLATFORM, MANNED, UNKNOWN.",
                "maxLength": 32,
                "enum": [
                  "ROCKET BODY",
                  "DEBRIS",
                  "PAYLOAD",
                  "PLATFORM",
                  "MANNED",
                  "UNKNOWN"
                ],
                "type": "string",
                "example": "PAYLOAD"
              },
              "origin": {
                "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
                "maxLength": 64,
                "type": "string",
                "example": "THIRD_PARTY_DATASOURCE"
              },
              "missionNumber": {
                "description": "Mission number of the on-orbit object.",
                "maxLength": 128,
                "type": "string",
                "example": "Expedition 1"
              },
              "category": {
                "description": "Category of the on-orbit object. (Unknown, On-Orbit, Decayed, Cataloged Without State, Launch Nominal, Analyst Satellite, Cislunar, Lunar, Hyperbolic, Heliocentric, Interplanetary, Lagrangian, Docked).",
                "maxLength": 45,
                "enum": [
                  "Unknown",
                  "On-Orbit",
                  "Decayed",
                  "Cataloged Without State",
                  "Launch Nominal",
                  "Analyst Satellite",
                  "Cislunar",
                  "Lunar",
                  "Hyperbolic",
                  "Heliocentric",
                  "Interplanetary",
                  "Lagrangian",
                  "Docked"
                ],
                "type": "string",
                "example": "Lunar"
              },
              "lifetimeYears": {
                "format": "int32",
                "description": "Estimated lifetime of the on-orbit payload, if known.",
                "type": "integer",
                "example": 10
              },
              "altName": {
                "description": "Alternate name of the on-orbit object.",
                "maxLength": 64,
                "type": "string",
                "example": "Alternate Name"
              },
              "createdAt": {
                "format": "date-time",
                "description": "Time the row was created in the database, auto-populated by the system.",
                "type": "string",
                "readOnly": true,
                "example": "2018-01-01T16:00:00.123Z"
              },
              "createdBy": {
                "description": "Application user who created the row in the database, auto-populated by the system.",
                "maxLength": 64,
                "minLength": 1,
                "type": "string",
                "readOnly": true,
                "example": "some.user"
              },
              "updatedAt": {
                "format": "date-time",
                "description": "Time the row was last updated in the database, auto-populated by the system.",
                "type": "string",
                "readOnly": true,
                "example": "2018-01-01T16:00:00.123Z"
              },
              "updatedBy": {
                "description": "Application user who updated the row in the database, auto-populated by the system.",
                "maxLength": 64,
                "type": "string",
                "readOnly": true,
                "example": "some.user"
              },
              "source": {
                "description": "Source of the data.",
                "maxLength": 64,
                "minLength": 1,
                "type": "string",
                "example": "Bluestaq"
              },
              "dataMode": {
                "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
                "maxLength": 32,
                "minLength": 1,
                "enum": [
                  "REAL",
                  "TEST",
                  "SIMULATED",
                  "EXERCISE"
                ],
                "type": "string",
                "example": "TEST"
              },
              "launchSiteId": {
                "description": "Id of the associated launchSite entity.",
                "maxLength": 36,
                "type": "string",
                "example": "LAUNCHSITE-ID"
              },
              "antennas": {
                "description": "Read-only collection of antennas on this on-orbit object.",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OnorbitAntenna_Full"
                },
                "readOnly": true
              },
              "batteries": {
                "description": "Read-only collection of batteries on this on-orbit object.",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OnorbitBattery_Full"
                },
                "readOnly": true
              },
              "solarArrays": {
                "description": "Read-only collection of solar arrays on this on-orbit object.",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OnorbitSolarArray_Full"
                },
                "readOnly": true
              },
              "thrusters": {
                "description": "Read-only collection of thrusters (engines) on this on-orbit object.",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OnorbitThruster_Full"
                },
                "readOnly": true
              },
              "onorbitDetails": {
                "description": "Read-only collection of details for this on-orbit object.",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OnorbitDetails_Full"
                },
                "readOnly": true
              },
              "countryCode": {
                "description": "The country code. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDL’s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.",
                "maxLength": 4,
                "type": "string",
                "example": "US"
              },
              "origNetwork": {
                "description": "The originating source network on which this record was created, auto-populated by the system.",
                "maxLength": 32,
                "minLength": 1,
                "type": "string",
                "readOnly": true,
                "example": "OPS1"
              }
            }
          },
          "idOnOrbit": {
            "description": "Onorbit identifier if this entity is part of an on-orbit object. For the public catalog, the idOnOrbit is typically the satellite number as a string, but may be a UUID for analyst or other unknown or untracked satellites.",
            "maxLength": 36,
            "type": "string",
            "example": "ONORBIT-ID"
          },
          "operatingUnit": {
            "$ref": "#/components/schemas/Operatingunit_Full"
          },
          "idOperatingUnit": {
            "description": "Unique identifier of the associated operating unit object.",
            "maxLength": 36,
            "type": "string",
            "example": "OPERATINGUNIT-ID"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "statusCollection": {
            "description": "Read-only collection of statuses which can be collected by multiple sources.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Status_Full"
            },
            "readOnly": true
          },
          "rfBands": {
            "description": "Read-only collection of RF bands utilized by this entity for communication and/or operation.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RFBand_Full"
            },
            "readOnly": true
          }
        }
      },
      "Entity_Ingest": {
        "description": "An entity is a generic representation of any object within a space/SSA system such as sensors, on-orbit objects, RF Emitters, space craft buses, etc. An entity can have an operating unit, a location (if terrestrial), and statuses.",
        "required": [
          "name",
          "classificationMarking",
          "type",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "idEntity": {
            "description": "Unique identifier of the record.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ENTITY-ID"
          },
          "name": {
            "description": "Unique entity name.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "Example name"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "type": {
            "description": "The type of entity represented by this record (AIRCRAFT, BUS, COMM, IR, NAVIGATION, ONORBIT, RFEMITTER, SCIENTIFIC, SENSOR, SITE, VESSEL).",
            "maxLength": 45,
            "minLength": 1,
            "enum": [
              "AIRCRAFT",
              "BUS",
              "COMM",
              "IR",
              "NAVIGATION",
              "ONORBIT",
              "RFEMITTER",
              "SCIENTIFIC",
              "SENSOR",
              "SITE",
              "VESSEL"
            ],
            "type": "string",
            "example": "ONORBIT"
          },
          "idLocation": {
            "description": "Unique identifier of the entity location, if terrestrial/fixed.",
            "maxLength": 36,
            "type": "string",
            "example": "LOCATION-ID"
          },
          "countryCode": {
            "description": "The country code. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDL’s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.",
            "maxLength": 4,
            "type": "string",
            "example": "US"
          },
          "ownerType": {
            "description": "Type of organization which owns this entity (e.g. Commercial, Government, Academic, Consortium, etc).",
            "maxLength": 32,
            "enum": [
              "Commercial",
              "Government",
              "Academic",
              "Consortium",
              "Other"
            ],
            "type": "string",
            "example": "Commercial"
          },
          "taskable": {
            "description": "Boolean indicating if this entity is taskable.",
            "type": "boolean",
            "example": false
          },
          "urls": {
            "description": "List of URLs to additional details/documents for this entity.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "URL1",
              "URL2"
            ]
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "location": {
            "$ref": "#/components/schemas/Location_Ingest"
          },
          "onOrbit": {
            "description": "Model object representing on-orbit objects or satellites in the system.",
            "required": [
              "classificationMarking",
              "satNo",
              "source",
              "dataMode"
            ],
            "type": "object",
            "properties": {
              "idOnOrbit": {
                "description": "For the public catalog, the idOnOrbit is typically the satellite number as a string, but may be a UUID for analyst or other unknown or untracked satellites, auto-generated by the system.",
                "maxLength": 36,
                "minLength": 1,
                "type": "string",
                "example": "ONORBIT-ID"
              },
              "classificationMarking": {
                "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
                "maxLength": 128,
                "minLength": 1,
                "type": "string",
                "example": "U"
              },
              "satNo": {
                "format": "int32",
                "description": "Satellite/Catalog number of the target on-orbit object.",
                "minimum": 0,
                "type": "integer",
                "example": 1
              },
              "commonName": {
                "description": "Common name of the on-orbit object.",
                "maxLength": 128,
                "type": "string",
                "example": "Example common name"
              },
              "constellation": {
                "description": "Constellation to which this satellite belongs.",
                "maxLength": 128,
                "type": "string",
                "example": "Big Dipper"
              },
              "intlDes": {
                "description": "International Designator, typically of the format YYYYLLLAAA, where YYYY is the launch year, LLL is the sequential launch number of that year, and AAA is an optional launch piece designator for the launch.",
                "maxLength": 45,
                "type": "string",
                "example": "2021123ABC"
              },
              "launchDate": {
                "format": "date",
                "description": "Date of launch.",
                "type": "string",
                "example": "2018-01-01"
              },
              "decayDate": {
                "format": "date-time",
                "description": "Date of decay.",
                "type": "string",
                "example": "2018-01-01T16:00:00.123Z"
              },
              "objectType": {
                "description": "Type of on-orbit object: ROCKET BODY, DEBRIS, PAYLOAD, PLATFORM, MANNED, UNKNOWN.",
                "maxLength": 32,
                "enum": [
                  "ROCKET BODY",
                  "DEBRIS",
                  "PAYLOAD",
                  "PLATFORM",
                  "MANNED",
                  "UNKNOWN"
                ],
                "type": "string",
                "example": "PAYLOAD"
              },
              "origin": {
                "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
                "maxLength": 64,
                "type": "string",
                "example": "THIRD_PARTY_DATASOURCE"
              },
              "missionNumber": {
                "description": "Mission number of the on-orbit object.",
                "maxLength": 128,
                "type": "string",
                "example": "Expedition 1"
              },
              "category": {
                "description": "Category of the on-orbit object. (Unknown, On-Orbit, Decayed, Cataloged Without State, Launch Nominal, Analyst Satellite, Cislunar, Lunar, Hyperbolic, Heliocentric, Interplanetary, Lagrangian, Docked).",
                "maxLength": 45,
                "enum": [
                  "Unknown",
                  "On-Orbit",
                  "Decayed",
                  "Cataloged Without State",
                  "Launch Nominal",
                  "Analyst Satellite",
                  "Cislunar",
                  "Lunar",
                  "Hyperbolic",
                  "Heliocentric",
                  "Interplanetary",
                  "Lagrangian",
                  "Docked"
                ],
                "type": "string",
                "example": "Lunar"
              },
              "lifetimeYears": {
                "format": "int32",
                "description": "Estimated lifetime of the on-orbit payload, if known.",
                "type": "integer",
                "example": 10
              },
              "altName": {
                "description": "Alternate name of the on-orbit object.",
                "maxLength": 64,
                "type": "string",
                "example": "Alternate Name"
              },
              "createdAt": {
                "format": "date-time",
                "description": "Time the row was created in the database, auto-populated by the system.",
                "type": "string",
                "readOnly": true,
                "example": "2018-01-01T16:00:00.123Z"
              },
              "createdBy": {
                "description": "Application user who created the row in the database, auto-populated by the system.",
                "maxLength": 64,
                "minLength": 1,
                "type": "string",
                "readOnly": true,
                "example": "some.user"
              },
              "source": {
                "description": "Source of the data.",
                "maxLength": 64,
                "minLength": 1,
                "type": "string",
                "example": "Bluestaq"
              },
              "dataMode": {
                "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
                "maxLength": 32,
                "minLength": 1,
                "enum": [
                  "REAL",
                  "TEST",
                  "SIMULATED",
                  "EXERCISE"
                ],
                "type": "string",
                "example": "TEST"
              },
              "launchSiteId": {
                "description": "Id of the associated launchSite entity.",
                "maxLength": 36,
                "type": "string",
                "example": "LAUNCHSITE-ID"
              },
              "countryCode": {
                "description": "The country code. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDL’s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.",
                "maxLength": 4,
                "type": "string",
                "example": "US"
              },
              "origNetwork": {
                "description": "The originating source network on which this record was created, auto-populated by the system.",
                "maxLength": 32,
                "minLength": 1,
                "type": "string",
                "readOnly": true,
                "example": "OPS1"
              }
            }
          },
          "idOnOrbit": {
            "description": "Onorbit identifier if this entity is part of an on-orbit object. For the public catalog, the idOnOrbit is typically the satellite number as a string, but may be a UUID for analyst or other unknown or untracked satellites.",
            "maxLength": 36,
            "type": "string",
            "example": "ONORBIT-ID"
          },
          "idOperatingUnit": {
            "description": "Unique identifier of the associated operating unit object.",
            "maxLength": 36,
            "type": "string",
            "example": "OPERATINGUNIT-ID"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          }
        }
      },
      "Location_Full": {
        "description": "Model representation of a location, which is a specific fixed point on the earth and is used to denote the locations of fixed sensors, operating units, etc.",
        "required": [
          "classificationMarking",
          "name",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "idLocation": {
            "description": "Unique identifier of the location, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "LOCATION-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "name": {
            "description": "Location name.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "Example location"
          },
          "countryCode": {
            "description": "The country code. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDL’s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.",
            "maxLength": 16,
            "type": "string",
            "example": "US"
          },
          "lat": {
            "format": "double",
            "description": "WGS84 latitude of the location, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 45.23
          },
          "lon": {
            "format": "double",
            "description": "WGS84 longitude of the location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 179.1
          },
          "altitude": {
            "format": "double",
            "description": "Altitude of the location, in kilometers.",
            "type": "number",
            "example": 10.23
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          }
        }
      },
      "Location_Ingest": {
        "description": "Model representation of a location, which is a specific fixed point on the earth and is used to denote the locations of fixed sensors, operating units, etc.",
        "required": [
          "classificationMarking",
          "name",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "idLocation": {
            "description": "Unique identifier of the location, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "LOCATION-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "name": {
            "description": "Location name.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "Example location"
          },
          "countryCode": {
            "description": "The country code. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDL’s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.",
            "maxLength": 16,
            "type": "string",
            "example": "US"
          },
          "lat": {
            "format": "double",
            "description": "WGS84 latitude of the location, in degrees. -90 to 90 degrees (negative values south of equator).",
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "example": 45.23
          },
          "lon": {
            "format": "double",
            "description": "WGS84 longitude of the location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 179.1
          },
          "altitude": {
            "format": "double",
            "description": "Altitude of the location, in kilometers.",
            "type": "number",
            "example": 10.23
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          }
        }
      },
      "MaximumOnGround_Abridged": {
        "description": "Collection providing maximum on ground (MOG) information for specific aircraft at the site associated with this SiteOperations record.",
        "type": "object",
        "properties": {
          "aircraftMDS": {
            "description": "The Model Design Series (MDS) designation of the aircraft to which this maximum on ground (MOG) data pertains.",
            "maxLength": 36,
            "type": "string",
            "example": "C017A"
          },
          "wideWorkingMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of working wide-body aircraft based on spacing and manpower, for the aircraft type specified.",
            "type": "integer",
            "example": 1
          },
          "wideParkingMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of parking wide-body aircraft based on spacing and manpower, for the aircraft type specified.",
            "type": "integer",
            "example": 1
          },
          "contingencyMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of contingent aircraft based on spacing and manpower, for the aircraft type specified.",
            "type": "integer",
            "example": 3
          },
          "mogLastChangedDate": {
            "format": "date-time",
            "description": "The datetime of the most recent change made to this maximum on ground data, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "mogLastChangedBy": {
            "description": "The name of the person who made the most recent change to this maximum on ground data.",
            "maxLength": 32,
            "type": "string",
            "example": "John Smith"
          }
        }
      },
      "MaximumOnGround_Full": {
        "description": "Collection providing maximum on ground (MOG) information for specific aircraft at the site associated with this SiteOperations record.",
        "type": "object",
        "properties": {
          "aircraftMDS": {
            "description": "The Model Design Series (MDS) designation of the aircraft to which this maximum on ground (MOG) data pertains.",
            "maxLength": 36,
            "type": "string",
            "example": "C017A"
          },
          "wideWorkingMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of working wide-body aircraft based on spacing and manpower, for the aircraft type specified.",
            "type": "integer",
            "example": 1
          },
          "wideParkingMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of parking wide-body aircraft based on spacing and manpower, for the aircraft type specified.",
            "type": "integer",
            "example": 1
          },
          "contingencyMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of contingent aircraft based on spacing and manpower, for the aircraft type specified.",
            "type": "integer",
            "example": 3
          },
          "mogLastChangedDate": {
            "format": "date-time",
            "description": "The datetime of the most recent change made to this maximum on ground data, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "mogLastChangedBy": {
            "description": "The name of the person who made the most recent change to this maximum on ground data.",
            "maxLength": 32,
            "type": "string",
            "example": "John Smith"
          }
        }
      },
      "MaximumOnGround_Ingest": {
        "description": "Collection providing maximum on ground (MOG) information for specific aircraft at the site associated with this SiteOperations record.",
        "type": "object",
        "properties": {
          "aircraftMDS": {
            "description": "The Model Design Series (MDS) designation of the aircraft to which this maximum on ground (MOG) data pertains.",
            "maxLength": 36,
            "type": "string",
            "example": "C017A"
          },
          "wideWorkingMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of working wide-body aircraft based on spacing and manpower, for the aircraft type specified.",
            "type": "integer",
            "example": 1
          },
          "wideParkingMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of parking wide-body aircraft based on spacing and manpower, for the aircraft type specified.",
            "type": "integer",
            "example": 1
          },
          "contingencyMOG": {
            "format": "int32",
            "description": "Maximum on ground (MOG) number of contingent aircraft based on spacing and manpower, for the aircraft type specified.",
            "type": "integer",
            "example": 3
          },
          "mogLastChangedDate": {
            "format": "date-time",
            "description": "The datetime of the most recent change made to this maximum on ground data, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "mogLastChangedBy": {
            "description": "The name of the person who made the most recent change to this maximum on ground data.",
            "maxLength": 32,
            "type": "string",
            "example": "John Smith"
          }
        }
      },
      "OnorbitAntenna_Full": {
        "required": [
          "idOnOrbit",
          "idAntenna",
          "classificationMarking",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ONORBITANTENNA-ID"
          },
          "idOnOrbit": {
            "description": "ID of the on-orbit object.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ONORBIT-ID"
          },
          "idAntenna": {
            "description": "ID of the antenna.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ANTENNA-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "antenna": {
            "$ref": "#/components/schemas/Antenna_Full"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          }
        }
      },
      "OnorbitBattery_Full": {
        "required": [
          "idOnOrbit",
          "idBattery",
          "classificationMarking",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ONORBITBATTERY-ID"
          },
          "idOnOrbit": {
            "description": "ID of the on-orbit object.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ONORBIT-ID"
          },
          "idBattery": {
            "description": "ID of the battery.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "BATTERY-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "quantity": {
            "format": "int32",
            "description": "The number of batteries on the spacecraft of the type identified by idBattery.",
            "type": "integer",
            "example": 5
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "battery": {
            "$ref": "#/components/schemas/Battery_Full"
          }
        }
      },
      "OnorbitDetails_Full": {
        "description": "Contains details of the OnOrbit object.",
        "required": [
          "idOnOrbit",
          "classificationMarking",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ONORBITDETAILS-ID"
          },
          "idOnOrbit": {
            "description": "UUID of the parent Onorbit record.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "REF-ONORBIT-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "lastObTime": {
            "format": "date-time",
            "description": "Time of last reported observation for this object in ISO 8601 UTC with microsecond precision.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123456Z"
          },
          "vismag": {
            "format": "double",
            "description": "Current/latest visual magnitude in M.",
            "type": "number",
            "example": 10.23
          },
          "vismagMin": {
            "format": "double",
            "description": "Minimum visual magnitude in M.",
            "type": "number",
            "example": 5.23
          },
          "vismagMax": {
            "format": "double",
            "description": "Maximum visual magnitude in M.",
            "type": "number",
            "example": 15.23
          },
          "vismagMean": {
            "format": "double",
            "description": "Mean visual magnitude in M.",
            "type": "number",
            "example": 10.23
          },
          "rcs": {
            "format": "double",
            "description": "Current/latest radar cross section in meters squared.",
            "type": "number",
            "example": 10.23
          },
          "rcsMin": {
            "format": "double",
            "description": "Minimum radar cross section in meters squared.",
            "type": "number",
            "example": 5.23
          },
          "rcsMax": {
            "format": "double",
            "description": "Maximum radar cross section in meters squared.",
            "type": "number",
            "example": 15.23
          },
          "rcsMean": {
            "format": "double",
            "description": "Mean radar cross section in meters squared.",
            "type": "number",
            "example": 10.23
          },
          "bolDeltaV": {
            "format": "double",
            "description": "The total beginning of life delta V of the spacecraft, in meters per second.",
            "type": "number",
            "example": 1000.1
          },
          "maxDeltaV": {
            "format": "double",
            "description": "Maximum delta V available for this on-orbit spacecraft, in meters per second.",
            "type": "number",
            "example": 10.23
          },
          "deltaVUnc": {
            "format": "double",
            "description": "The 1-sigma uncertainty of the total spacecraft delta V, in meters per second.",
            "type": "number",
            "example": 50.1
          },
          "estDeltaVDuration": {
            "format": "double",
            "description": "Estimated maximum burn duration for the object, in seconds.",
            "type": "number",
            "example": 10.23
          },
          "numMission": {
            "format": "int32",
            "description": "The number of distinct missions the spacecraft performs.",
            "type": "integer",
            "example": 2
          },
          "missionTypes": {
            "description": "Array of the type of missions the spacecraft performs. Must contain the same number of elements as the value of numMission.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Weather",
              "Space Weather"
            ]
          },
          "busType": {
            "description": "Type of the bus on the spacecraft.",
            "maxLength": 32,
            "type": "string",
            "example": "A2100"
          },
          "geoSlot": {
            "format": "double",
            "description": "GEO slot if applicable, in degrees. -180 (West of Prime Meridian) to 180 degrees (East of Prime Meridian). Prime Meridian is 0.",
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "example": 90.23
          },
          "driftRate": {
            "format": "double",
            "description": "GEO drift rate, if applicable in degrees per day.",
            "type": "number",
            "example": 1.23
          },
          "dryMass": {
            "format": "double",
            "description": "Spacecraft dry mass (without fuel or disposables) in kilograms.",
            "type": "number",
            "example": 10.23
          },
          "additionalMass": {
            "format": "double",
            "description": "Mass of fuel and disposables at launch time in kilograms.",
            "type": "number",
            "example": 10.23
          },
          "launchMassMin": {
            "format": "double",
            "description": "Minimum (estimated) mass of spacecraft and fuel at launch time, in kilograms.",
            "type": "number",
            "example": 5.23
          },
          "launchMass": {
            "format": "double",
            "description": "Nominal mass of spacecraft and fuel at launch time, in kilograms.",
            "type": "number",
            "example": 10.23
          },
          "launchMassMax": {
            "format": "double",
            "description": "Maximum (estimated) mass of spacecraft and fuel at launch time, in kilograms.",
            "type": "number",
            "example": 15.23
          },
          "bolFuelMass": {
            "format": "double",
            "description": "Spacecraft beginning of life fuel mass, in orbit, in kilograms.",
            "type": "number",
            "example": 10.23
          },
          "currentMass": {
            "format": "double",
            "description": "The estimated total current mass of the spacecraft, in kilograms.",
            "type": "number",
            "example": 500
          },
          "totalMassUnc": {
            "format": "double",
            "description": "The 1-sigma uncertainty of the total spacecraft mass, in kilograms.",
            "type": "number",
            "example": 50.1
          },
          "solarArrayArea": {
            "format": "double",
            "description": "Spacecraft deployed area of solar array in meters squared.",
            "type": "number",
            "example": 10.23
          },
          "maneuverable": {
            "description": "Boolean indicating whether a spacecraft is maneuverable. Note that a spacecraft may have propulsion capability but may not be maneuverable due to lack of fuel, anomalous condition, or other operational constraints.",
            "type": "boolean",
            "example": false
          },
          "fuelRemaining": {
            "format": "double",
            "description": "Estimated remaining fuel for the object in kilograms.",
            "type": "number",
            "example": 10.23
          },
          "crossSection": {
            "format": "double",
            "description": "Average cross sectional area in meters squared.",
            "type": "number",
            "example": 10.23
          },
          "busCrossSection": {
            "format": "double",
            "description": "Average cross sectional area of the bus in meters squared.",
            "type": "number",
            "example": 10.23
          },
          "maxRadius": {
            "format": "double",
            "description": "Maximum dimension across the spacecraft (e.g., tip-to-tip across the solar panel arrays) in meters.",
            "type": "number",
            "example": 10.23
          },
          "colaRadius": {
            "format": "double",
            "description": "Maximum dimension of the box circumscribing the spacecraft (d = sqrt(a*a + b*b + c*c) where a is the tip-to-tip dimension, b and c are perpendicular to that.) in meters.",
            "type": "number",
            "example": 10.23
          },
          "adeptRadius": {
            "format": "double",
            "description": "The radius used for long-term debris environment projection analyses that is not as conservative as COLA Radius, in meters.",
            "type": "number",
            "example": 10.23
          },
          "numDeployable": {
            "format": "int32",
            "description": "The number of sub-satellites or deployable objects on the spacecraft.",
            "type": "integer",
            "example": 2
          },
          "depNames": {
            "description": "Array of satellite deployable objects. Must contain the same number of elements as the value of numDeployable.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "GOES-18A",
              "GOES-18B"
            ]
          },
          "depEstMasses": {
            "description": "Array of the estimated mass of each deployable object, in kilograms. Must contain the same number of elements as the value of numDeployable.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              20,
              21
            ]
          },
          "depMassUncs": {
            "description": "Array of the 1-sigma uncertainty of the mass for each deployable object, in kilograms. Must contain the same number of elements as the value of numDeployable.",
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            },
            "example": [
              10,
              5
            ]
          },
          "refSource": {
            "description": "The reference source, sources, or URL from which the data in this record was obtained.",
            "maxLength": 256,
            "type": "string",
            "example": "Wikipedia"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "lastObSource": {
            "description": "The name of the source who last provided an observation for this idOnOrbit.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          }
        }
      },
      "OnorbitSolarArray_Full": {
        "required": [
          "idOnOrbit",
          "idSolarArray",
          "classificationMarking",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ONORBITSOLARARRAY-ID"
          },
          "idOnOrbit": {
            "description": "ID of the on-orbit object.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ONORBIT-ID"
          },
          "idSolarArray": {
            "description": "ID of the SolarArray.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "SOLARARRAY-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "quantity": {
            "format": "int32",
            "description": "The number of solar arrays on the spacecraft of the type identified by idSolarArray.",
            "type": "integer",
            "example": 10
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "solarArray": {
            "$ref": "#/components/schemas/SolarArray_Full"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          }
        }
      },
      "OnorbitThruster_Full": {
        "required": [
          "idOnOrbit",
          "idEngine",
          "classificationMarking",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ONORBITTHRUSTER-ID"
          },
          "idOnOrbit": {
            "description": "ID of the on-orbit object.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ONORBIT-ID"
          },
          "idEngine": {
            "description": "ID of the Engine.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ENGINE-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "type": {
            "description": "The type of thruster associated with this record (e.g. LAE, Hydrazine REA, etc.).",
            "maxLength": 32,
            "type": "string",
            "example": "Hydrazine REA"
          },
          "quantity": {
            "format": "int32",
            "description": "The number of engines/thrusters on the spacecraft of the type identified by idEngine.",
            "type": "integer",
            "example": 10
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "engine": {
            "$ref": "#/components/schemas/Engine_Full"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          }
        }
      },
      "OperatingHours_Abridged": {
        "description": "A collection containing the operational start and stop times scheduled for the day of the week specified.",
        "type": "object",
        "properties": {
          "opStartTime": {
            "description": "The Zulu (UTC) operational start time, expressed in ISO 8601 format as HH:MM.",
            "maxLength": 5,
            "type": "string",
            "example": "12:00"
          },
          "opStopTime": {
            "description": "The Zulu (UTC) operational stop time, expressed in ISO 8601 format as HH:MM.",
            "maxLength": 5,
            "type": "string",
            "example": "22:00"
          }
        }
      },
      "OperatingHours_Full": {
        "description": "A collection containing the operational start and stop times scheduled for the day of the week specified.",
        "type": "object",
        "properties": {
          "opStartTime": {
            "description": "The Zulu (UTC) operational start time, expressed in ISO 8601 format as HH:MM.",
            "maxLength": 5,
            "type": "string",
            "example": "12:00"
          },
          "opStopTime": {
            "description": "The Zulu (UTC) operational stop time, expressed in ISO 8601 format as HH:MM.",
            "maxLength": 5,
            "type": "string",
            "example": "22:00"
          }
        }
      },
      "OperatingHours_Ingest": {
        "description": "A collection containing the operational start and stop times scheduled for the day of the week specified.",
        "type": "object",
        "properties": {
          "opStartTime": {
            "description": "The Zulu (UTC) operational start time, expressed in ISO 8601 format as HH:MM.",
            "maxLength": 5,
            "type": "string",
            "example": "12:00"
          },
          "opStopTime": {
            "description": "The Zulu (UTC) operational stop time, expressed in ISO 8601 format as HH:MM.",
            "maxLength": 5,
            "type": "string",
            "example": "22:00"
          }
        }
      },
      "Operatingunit_Full": {
        "description": "Model representation of a unit or organization which operates or controls an space-related Entity such as an on-orbit payload, a sensor, etc.  A contact may belong to an organization.",
        "required": [
          "classificationMarking",
          "name",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "idOperatingUnit": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "OPERATINGUNIT-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "altOperatingUnitId": {
            "description": "Unique identifier of the operating unit record from the originating system.",
            "maxLength": 36,
            "type": "string",
            "example": "32100000000021"
          },
          "name": {
            "description": "Name of the operating unit.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "SOME_NAME"
          },
          "description": {
            "description": "Description of the operating unit.",
            "maxLength": 256,
            "type": "string",
            "example": "Description of unit"
          },
          "idLocation": {
            "description": "Unique identifier of the location record for this operating unit.",
            "maxLength": 36,
            "type": "string",
            "example": "LOCATION-ID"
          },
          "idContact": {
            "description": "Unique identifier of the contact for this operating unit.",
            "maxLength": 36,
            "type": "string",
            "example": "CONTACT-ID"
          },
          "idOrganization": {
            "description": "Unique identifier of the organization record for this operating unit.",
            "maxLength": 36,
            "type": "string",
            "example": "ORGANIZATION-ID"
          },
          "unitIdentifier": {
            "description": "An optional identifier for this operating unit that may be composed from items such as the originating organization, allegiance, one-up number, etc.",
            "maxLength": 10,
            "type": "string",
            "example": "AZXAZ12345"
          },
          "countryCode": {
            "description": "The DoD Standard country code designator for the country or political entity to which the operating unit geographic coordinates reside . This field will be set to \"OTHR\" if the source value does not match a UDL country code value (ISO-3166-ALPHA-2).",
            "maxLength": 4,
            "type": "string",
            "example": "IQ"
          },
          "altCountryCode": {
            "description": "Specifies an alternate country code if the data provider code is not part of an official Country Code standard such as ISO-3166 or FIPS. This field will be set to the value provided by the source and should be used for all Queries specifying a Country Code.",
            "maxLength": 4,
            "type": "string",
            "example": "IZ"
          },
          "wac": {
            "description": "World Aeronautical Chart identifier for the area in which a designated operating unit is located.",
            "maxLength": 4,
            "type": "string",
            "example": "0427"
          },
          "operStatus": {
            "description": "The Degree to which an operating unit is ready to perform the overall operational mission(s) for which it was organized and equipped.  The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 3,
            "type": "string",
            "example": "OPR"
          },
          "condition": {
            "description": "The physical manner of being or state of existence of the operating unit.  A physical condition that must be considered in the determining of a course of action.  The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "RDY"
          },
          "conditionAvail": {
            "description": "Availability of the operating unit relative to its condition.  Indicates the reason the operating unit is not fully operational.  The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "A"
          },
          "eval": {
            "format": "int32",
            "description": "The Intelligence Confidence Level or the Reliability/degree of confidence that the analyst has assigned to the data within this record. The numerical range is from 1 to 9 with 1 representing the highest confidence level.",
            "type": "integer",
            "example": 7
          },
          "fpa": {
            "description": "Functional Production Area (FPA) under the Shared Production Program (SPP). Producers are defined per country per FPA.  The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 5,
            "type": "string",
            "example": "EOB"
          },
          "ident": {
            "description": "Estimated identity of the Site (ASSUMED FRIEND, FRIEND, HOSTILE, FAKER, JOKER, NEUTRAL, PENDING, SUSPECT, UNKNOWN): \n\nASSUMED FRIEND: Track assumed to be a friend due to the object characteristics, behavior, and/or origin.\n\nFRIEND: Track object supporting friendly forces and belonging to a declared friendly nation or entity.\n\nHOSTILE: Track object belonging to an opposing nation, party, group, or entity deemed to contribute to a threat to friendly forces or their mission due to its behavior, characteristics, nationality, or origin.\n\nFAKER: Friendly track, object, or entity acting as an exercise hostile.\n\nJOKER: Friendly track, object, or entity acting as an exercise suspect.\n\nNEUTRAL: Track object whose characteristics, behavior, nationality, and/or origin indicate that it is neither supporting nor opposing friendly forces or their mission.\n\nPENDING: Track object which has not been evaluated.\n\nSUSPECT: Track object deemed potentially hostile due to the object characteristics, behavior, nationality, and/or origin.\n\nUNKNOWN: Track object which has been evaluated and does not meet criteria for any standard identity.",
            "maxLength": 32,
            "type": "string",
            "example": "FRIEND"
          },
          "allegiance": {
            "description": "The DoD Standard country code designator for the country or political entity to which the operating unit owes its allegiance.  This field will be set to \"OTHR\" if the source value does not match a UDL country code value (ISO-3166-ALPHA-2).",
            "maxLength": 4,
            "type": "string",
            "example": "OTHR"
          },
          "altAllegiance": {
            "description": "Specifies an alternate allegiance code if the data provider code is not part of an official Country Code standard such as ISO-3166 or FIPS. This field will be set to the value provided by the source and should be used for all Queries specifying allegiance.",
            "maxLength": 4,
            "type": "string",
            "example": "HL"
          },
          "locName": {
            "description": "Location name for the coordinates.",
            "maxLength": 54,
            "type": "string",
            "example": "LOCATION_NAME"
          },
          "locReason": {
            "description": "Indicates the reason that the operating unit is at that location.  The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 9,
            "type": "string",
            "example": "GR"
          },
          "force": {
            "description": "An aggregation of military units within a single service (i.e., ARMY, AIR FORCE, etc.) which operates under a single authority to accomplish a common mission. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "NV"
          },
          "forceName": {
            "description": "The specific name for a given force.  For example, Force = ADF (Air Defense Force) and Force Name = Army Air Defense Force.",
            "maxLength": 54,
            "type": "string",
            "example": "FORCE-NAME"
          },
          "functRole": {
            "description": "Principal combat-related role that an operating unit is organized, structured and equipped to perform.  Or, the specialized military or paramilitary branch in which an individual serves, their specialization.  The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 3,
            "type": "string",
            "example": "MIL"
          },
          "msnPrimary": {
            "description": "Indicates the principal type of mission that an operating unit is organized and equipped to perform.  The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "W6"
          },
          "msnPrimarySpecialty": {
            "description": "Indicates the principal specialty type of mission that an operating unit is organized and equipped to perform.  The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "QK"
          },
          "masterUnit": {
            "description": "This field contains a value indicating whether the record is a master unit record (True) or a detail record (False).  Master records contain basic information that does not change over time for each unit that has been selected to be projected.",
            "type": "boolean",
            "example": true
          },
          "stylizedUnit": {
            "description": "This field contains a value indicating whether the record is a stylized operating unit record (True) or a regular operating unit  record (False).  A stylized operating unit is a type of operating unit with one set of equipment that can be assigned to one or more superiors.  A stylized operating unit is generally useful for lower echelon operating units where the number of operating units and types of equipment are equal for multiple organizations.  In lieu of creating unique operating unit records for each operating unit, a template is created for the operating unit and its equipment.  This template enables the user to assign the operating unit to multiple organizations.",
            "type": "boolean",
            "example": true
          },
          "divCat": {
            "description": "Combat status of a divisional or equivalent operating unit.  Currently, this data element applies only to operating units of the Former Soviet Union.  The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 1,
            "type": "string",
            "example": "5"
          },
          "echelon": {
            "description": "Organizational level of the operating unit.  The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "SHIP"
          },
          "echelonTier": {
            "description": "Indicates the major group or level to which an echelon belongs.   The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 2,
            "type": "string",
            "example": "68"
          },
          "fleetId": {
            "description": "Naval fleet to which an operating unit is assigned.   The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 1,
            "type": "string",
            "example": "A"
          },
          "deployStatus": {
            "description": "A code describing the amount of operating unit participation in a deployment.   The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 2,
            "type": "string",
            "example": "ND"
          },
          "flagFlown": {
            "description": "The country code of the observed flag flown.",
            "maxLength": 4,
            "type": "string",
            "example": "IZ"
          },
          "coordDatum": {
            "description": "A mathematical model of the earth used to calculate coordinates on a map.  US Forces use the World Geodetic System 1984 (WGS 84), but also use maps by allied countries with local datums.  The datum must be specified to ensure accuracy of coordinates.  The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 16,
            "type": "string",
            "example": "WGS"
          },
          "coord": {
            "description": "\"Indicates any of the magnitudes that serve to define the position of a point by reference to a fixed figure, system of lines, etc.\nPos. 1-2.  Latitude Degrees     [00-90]\nPos. 3-4.  Latitude Minutes     [00-59]\nPos. 5-6.  Latitude Seconds     [00-59]\nPos. 7-9.  Latitude Thousandths Of Seconds   [000-999]  \nPos. 10. Latitude Hemisphere       [NS] \nPos. 11-13. Longitude Degrees     [00-180] \nPos. 14-15. Longitude Minutes     [00-59] \nPos. 16-17. Longitude Seconds     [00-59] \nPos. 18-20. Longitude Thousandths Of Seconds      [000-999]\nPos. 21. Longitude Hemisphere     [EW]\nPos. 1-21.  Unknown Latitude and Unknown Longitude [000000000U000000000U]]\".\n",
            "maxLength": 21,
            "type": "string",
            "example": "340000000N0430000000E"
          },
          "coordDerivAcc": {
            "format": "double",
            "description": "Indicates the plus or minus error assessed against the method used to derive the coordinate.",
            "type": "number",
            "example": 12.345
          },
          "lat": {
            "format": "double",
            "description": "WGS84 latitude of the location, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 45.23
          },
          "lon": {
            "format": "double",
            "description": "WGS84 longitude of the location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": 179.1
          },
          "elevMsl": {
            "format": "double",
            "description": "Ground elevation of the geographic coordinates referenced to (above or below) Mean Sea Level (MSL) vertical datum.",
            "type": "number",
            "example": 123.45
          },
          "elevMslConfLvl": {
            "format": "int32",
            "description": "Indicates the confidence level expressed as a percent that a specific geometric spatial element, ELEVATION_MSL linear accuracy, has been vertically positioned to within a specified vertical accuracy.",
            "type": "integer",
            "example": 50
          },
          "elevMslDerivAcc": {
            "format": "double",
            "description": "Indicates the plus or minus error assessed against the method used to derive the elevation.",
            "type": "number",
            "example": 12.34
          },
          "geoidalMslSep": {
            "format": "double",
            "description": "The distance between Mean Sea Level and a referenced ellipsoid.",
            "type": "number",
            "example": 12.34
          },
          "milGridSys": {
            "description": "\"Indicates the grid system used in the development of the milGrid coordinates. Values are:\nUPS - Universal Polar System\nUTM - Universal Transverse Mercator\".",
            "maxLength": 3,
            "type": "string",
            "example": "UTM"
          },
          "milGrid": {
            "description": "The Military Grid Reference System is the geocoordinate standard used by NATO militaries for locating points on Earth. The MGRS is derived from the Universal Transverse Mercator (UTM) grid system and the Universal Polar Stereographic (UPS) grid system, but uses a different labeling convention. The MGRS is used as geocode for the entire Earth. Example of an milgrid coordinate, or grid reference, would be 4QFJ12345678, which consists of three parts:\n4Q (grid zone designator, GZD)\nFJ (the 100,000-meter square identifier)\n12345678 (numerical location; easting is 1234 and northing is 5678, in this case specifying a location with 10 m resolution).",
            "maxLength": 15,
            "type": "string",
            "example": "4QFJ12345678"
          },
          "utm": {
            "description": "Universal Transverse Mercator (UTM) grid coordinates.\nPos. 1-2, UTM Zone Column   [01-60\nPos. 3, UTM Zone Row   [C-HJ-NP-X]\nPos. 4, UTM False Easting   [0-9]\nPos. 5-9, UTM Meter Easting    [0-9][0-9][0-9][0-9][0-9]\nPos. 10-11, UTM False Northing    [0-9][0-9]\nPos. 12-16, UTM Meter Northing    [0-9][0-9][0-9][0-9][0-9].",
            "maxLength": 16,
            "type": "string",
            "example": "19P4390691376966"
          },
          "airDefArea": {
            "description": "Air Defense District (ADD) or Air Defense Area (ADA) in which the geographic coordinates reside.",
            "maxLength": 5,
            "type": "string",
            "example": "AL006"
          },
          "polSubdiv": {
            "description": "Political subdivision in which the geographic coordinates reside.  The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 7,
            "type": "string",
            "example": "IZ07"
          },
          "symCode": {
            "description": "A standard scheme for symbol coding enabling the transfer, display and use of symbols and graphics among information systems, as per MIL-STD 2525B, and supported by the element AFFILIATION.",
            "maxLength": 15,
            "type": "string",
            "example": "SOGPU----------"
          },
          "classRating": {
            "description": "Indicates the importance of the operating unit to the OES or MIR system.  This data element is restricted to update by DIA (DB-4). Valid values are:\n0 - Does not meet criteria above\n1 - Primary importance to system\n2 - Secondary importance to system\n3 - Tertiary importance to system\nO - Other. Explain in Remarks.",
            "maxLength": 1,
            "type": "string",
            "example": "1"
          },
          "recStatus": {
            "description": "Validity and currency of the data in the record to be used in conjunction with the other elements in the record as defined by SOPs. Values are:\nA - Active\nI - Inactive\nK - Acknowledged\nL - Local\nQ - A nominated (NOM) or Data Change Request (DCR) record\nR - Production reduced by CMD decision\nW - Working Record.",
            "maxLength": 1,
            "type": "string",
            "example": "A"
          },
          "reviewDate": {
            "format": "date",
            "description": "Date on which the data in the record was last reviewed by the responsible analyst for accuracy and currency.  This date cannot be greater than the current date.",
            "type": "string",
            "example": "2008-06-10"
          },
          "resProd": {
            "description": "Responsible Producer - Organization that is responsible for the maintenance of the record.",
            "maxLength": 4,
            "type": "string",
            "example": "RT"
          },
          "referenceDoc": {
            "description": "The reference documentiation that specifies the usage and enumerations contained in this record. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 128,
            "type": "string",
            "example": "Provider Reference Documentation"
          },
          "operatingUnitRemarks": {
            "description": "Remarks contain amplifying information for a specific service. The information may contain context and interpretations for consumer use.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OperatingUnitRemark_Full"
            },
            "readOnly": true
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "some.user"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization_Full"
          },
          "location": {
            "$ref": "#/components/schemas/Location_Full"
          }
        }
      },
      "OperatingUnitRemark_Full": {
        "description": "Remarks contain amplifying information for a specific service. The information may contain context and interpretations for consumer use.",
        "required": [
          "classificationMarking",
          "idOperatingUnit",
          "text",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "0167f577-e06c-358e-85aa-0a07a730bdd0"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idOperatingUnit": {
            "description": "The ID of the operating unit to which this remark applies.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "OperatingUnit-ID"
          },
          "altRmkId": {
            "description": "Unique identifier of the unit remark record from the originating system.",
            "maxLength": 36,
            "type": "string",
            "example": "123456ABC"
          },
          "name": {
            "description": "The name of the remark.",
            "maxLength": 64,
            "type": "string",
            "example": "Remark name"
          },
          "type": {
            "description": "The remark type (e.g. Caution, Information, Misc, Restriction, etc.).",
            "maxLength": 64,
            "type": "string",
            "example": "Restriction"
          },
          "text": {
            "description": "The text of the remark.",
            "maxLength": 16384,
            "minLength": 1,
            "type": "string",
            "example": "This is a remark"
          },
          "code": {
            "description": "The remark type identifier. For example, the Mobility Air Forces (MAF) remark code, defined in the Airfield Suitability and Restriction Report (ASRR).",
            "maxLength": 16,
            "type": "string",
            "example": "M"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "some.user"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "OperationalDeviation_Abridged": {
        "description": "Collection providing relevant information in the event of deviations/exceptions to normal operations.",
        "type": "object",
        "properties": {
          "affectedAircraftMDS": {
            "description": "The Model Design Series (MDS) designation of the aircraft affected by this operational deviation.",
            "maxLength": 36,
            "type": "string",
            "example": "C017A"
          },
          "affectedMOG": {
            "format": "int32",
            "description": "The maximum on ground (MOG) number for aircraft affected by this operational deviation.",
            "type": "integer",
            "example": 1
          },
          "aircraftOnGroundTime": {
            "description": "On ground time for aircraft affected by this operational deviation.",
            "maxLength": 5,
            "type": "string",
            "example": "14:00"
          },
          "crewRestTime": {
            "description": "Rest time for crew affected by this operational deviation.",
            "maxLength": 5,
            "type": "string",
            "example": "14:00"
          },
          "odRemark": {
            "description": "Text remark regarding this operational deviation.",
            "maxLength": 4000,
            "type": "string",
            "example": "Example remark about this operational deviation."
          },
          "odLastChangedDate": {
            "format": "date-time",
            "description": "The datetime of the most recent change made to this OperationalDeviation data, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "odLastChangedBy": {
            "description": "The name of the person who made the most recent change to this OperationalDeviation data.",
            "maxLength": 32,
            "type": "string",
            "example": "John Smith"
          }
        }
      },
      "OperationalDeviation_Full": {
        "description": "Collection providing relevant information in the event of deviations/exceptions to normal operations.",
        "type": "object",
        "properties": {
          "affectedAircraftMDS": {
            "description": "The Model Design Series (MDS) designation of the aircraft affected by this operational deviation.",
            "maxLength": 36,
            "type": "string",
            "example": "C017A"
          },
          "affectedMOG": {
            "format": "int32",
            "description": "The maximum on ground (MOG) number for aircraft affected by this operational deviation.",
            "type": "integer",
            "example": 1
          },
          "aircraftOnGroundTime": {
            "description": "On ground time for aircraft affected by this operational deviation.",
            "maxLength": 5,
            "type": "string",
            "example": "14:00"
          },
          "crewRestTime": {
            "description": "Rest time for crew affected by this operational deviation.",
            "maxLength": 5,
            "type": "string",
            "example": "14:00"
          },
          "odRemark": {
            "description": "Text remark regarding this operational deviation.",
            "maxLength": 4000,
            "type": "string",
            "example": "Example remark about this operational deviation."
          },
          "odLastChangedDate": {
            "format": "date-time",
            "description": "The datetime of the most recent change made to this OperationalDeviation data, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "odLastChangedBy": {
            "description": "The name of the person who made the most recent change to this OperationalDeviation data.",
            "maxLength": 32,
            "type": "string",
            "example": "John Smith"
          }
        }
      },
      "OperationalDeviation_Ingest": {
        "description": "Collection providing relevant information in the event of deviations/exceptions to normal operations.",
        "type": "object",
        "properties": {
          "affectedAircraftMDS": {
            "description": "The Model Design Series (MDS) designation of the aircraft affected by this operational deviation.",
            "maxLength": 36,
            "type": "string",
            "example": "C017A"
          },
          "affectedMOG": {
            "format": "int32",
            "description": "The maximum on ground (MOG) number for aircraft affected by this operational deviation.",
            "type": "integer",
            "example": 1
          },
          "aircraftOnGroundTime": {
            "description": "On ground time for aircraft affected by this operational deviation.",
            "maxLength": 5,
            "type": "string",
            "example": "14:00"
          },
          "crewRestTime": {
            "description": "Rest time for crew affected by this operational deviation.",
            "maxLength": 5,
            "type": "string",
            "example": "14:00"
          },
          "odRemark": {
            "description": "Text remark regarding this operational deviation.",
            "maxLength": 4000,
            "type": "string",
            "example": "Example remark about this operational deviation."
          },
          "odLastChangedDate": {
            "format": "date-time",
            "description": "The datetime of the most recent change made to this OperationalDeviation data, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "odLastChangedBy": {
            "description": "The name of the person who made the most recent change to this OperationalDeviation data.",
            "maxLength": 32,
            "type": "string",
            "example": "John Smith"
          }
        }
      },
      "OperationalPlanning_Abridged": {
        "description": "Collection of planning information associated with this SiteOperations record.",
        "type": "object",
        "properties": {
          "opSource": {
            "description": "The person, unit, organization, etc. responsible for this operation planning.",
            "maxLength": 32,
            "type": "string",
            "example": "a3"
          },
          "opStartDate": {
            "format": "date-time",
            "description": "The start date of this operational planning, in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "opEndDate": {
            "format": "date-time",
            "description": "The end date of this operational planning, in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "opStatus": {
            "description": "The status of this operational planning.",
            "maxLength": 24,
            "type": "string",
            "example": "Verified"
          },
          "opRemark": {
            "description": "Remark text regarding this operation planning.",
            "maxLength": 4000,
            "type": "string",
            "example": "Example planning remark"
          },
          "opLastChangedDate": {
            "format": "date-time",
            "description": "The datetime of the most recent change made to this OperationalPlanning data, in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "opLastChangedBy": {
            "description": "The name of the person who made the most recent change made to this OperationalPlanning data.",
            "maxLength": 32,
            "type": "string",
            "example": "John Smith"
          }
        }
      },
      "OperationalPlanning_Full": {
        "description": "Collection of planning information associated with this SiteOperations record.",
        "type": "object",
        "properties": {
          "opSource": {
            "description": "The person, unit, organization, etc. responsible for this operation planning.",
            "maxLength": 32,
            "type": "string",
            "example": "a3"
          },
          "opStartDate": {
            "format": "date-time",
            "description": "The start date of this operational planning, in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "opEndDate": {
            "format": "date-time",
            "description": "The end date of this operational planning, in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "opStatus": {
            "description": "The status of this operational planning.",
            "maxLength": 24,
            "type": "string",
            "example": "Verified"
          },
          "opRemark": {
            "description": "Remark text regarding this operation planning.",
            "maxLength": 4000,
            "type": "string",
            "example": "Example planning remark"
          },
          "opLastChangedDate": {
            "format": "date-time",
            "description": "The datetime of the most recent change made to this OperationalPlanning data, in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "opLastChangedBy": {
            "description": "The name of the person who made the most recent change made to this OperationalPlanning data.",
            "maxLength": 32,
            "type": "string",
            "example": "John Smith"
          }
        }
      },
      "OperationalPlanning_Ingest": {
        "description": "Collection of planning information associated with this SiteOperations record.",
        "type": "object",
        "properties": {
          "opSource": {
            "description": "The person, unit, organization, etc. responsible for this operation planning.",
            "maxLength": 32,
            "type": "string",
            "example": "a3"
          },
          "opStartDate": {
            "format": "date-time",
            "description": "The start date of this operational planning, in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "opEndDate": {
            "format": "date-time",
            "description": "The end date of this operational planning, in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "opStatus": {
            "description": "The status of this operational planning.",
            "maxLength": 24,
            "type": "string",
            "example": "Verified"
          },
          "opRemark": {
            "description": "Remark text regarding this operation planning.",
            "maxLength": 4000,
            "type": "string",
            "example": "Example planning remark"
          },
          "opLastChangedDate": {
            "format": "date-time",
            "description": "The datetime of the most recent change made to this OperationalPlanning data, in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "opLastChangedBy": {
            "description": "The name of the person who made the most recent change made to this OperationalPlanning data.",
            "maxLength": 32,
            "type": "string",
            "example": "John Smith"
          }
        }
      },
      "Organization_Full": {
        "description": "An organization such as a corporation, manufacturer, consortium, government, etc. An organization may have parent and child organizations as well as link to a former organization if this org previously existed as another organization.",
        "required": [
          "classificationMarking",
          "name",
          "type",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ORGANIZATION-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "name": {
            "description": "Organization name.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "some.user"
          },
          "type": {
            "description": "Type of organization (e.g. GOVERNMENT, CORPORATION, CONSORTIUM, ACADEMIC).",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "GOVERNMENT"
          },
          "category": {
            "description": "Subtype or category of the organization (e.g. Private company, stock market quoted company, subsidiary, goverment department/agency, etc).",
            "maxLength": 128,
            "type": "string",
            "example": "Private company"
          },
          "externalId": {
            "description": "Optional externally provided identifier for this row.",
            "maxLength": 36,
            "type": "string",
            "example": "EXTERNAL-ID"
          },
          "description": {
            "description": "Organization description.",
            "maxLength": 256,
            "type": "string",
            "example": "Example description"
          },
          "countryCode": {
            "description": "Country of the physical location of the organization. This value is typically the ISO 3166 Alpha-2 two-character country code. However, it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDL’s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.",
            "maxLength": 4,
            "type": "string",
            "example": "US"
          },
          "nationality": {
            "description": "Country of registration or ownership of the organization. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDL’s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.",
            "maxLength": 4,
            "type": "string",
            "example": "US"
          },
          "active": {
            "description": "Boolean indicating if this organization is currently active.",
            "type": "boolean",
            "example": false
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "some.user"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "some.user"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "organizationDetails": {
            "description": "Read-only collection of additional OrganizationDetails by various sources for this organization, ignored on create/update. These details must be created separately via the /udl/organizationdetails operations.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationDetails_Full"
            },
            "readOnly": true
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          }
        }
      },
      "OrganizationDetails_Full": {
        "description": "Model representation of additional detailed organization data as collected by a particular source.",
        "required": [
          "idOrganization",
          "classificationMarking",
          "name",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ORGANIZATIONDETAILS-ID"
          },
          "idOrganization": {
            "description": "Unique identifier of the parent organization.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ORGANIZATION-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "name": {
            "description": "Organization details name.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "some.user"
          },
          "email": {
            "description": "Listed contact email address for the organization.",
            "maxLength": 320,
            "type": "string",
            "example": "some_organization@organization.com"
          },
          "address1": {
            "description": "Street number of the organization.",
            "maxLength": 120,
            "type": "string",
            "example": "123 Main Street"
          },
          "address2": {
            "description": "Field for additional organization address information such as PO Box and unit number.",
            "maxLength": 120,
            "type": "string",
            "example": "Apt 4B"
          },
          "address3": {
            "description": "Contains the third line of address information for an organization.",
            "maxLength": 120,
            "type": "string",
            "example": "Colorado Springs CO, 80903"
          },
          "geoAdminLevel1": {
            "description": "Administrative boundaries of the first sub-national level. Level 1 is simply the largest demarcation under whatever demarcation criteria has been determined by the governing body. For example, this may be a state or province.",
            "maxLength": 120,
            "type": "string",
            "example": "Colorado"
          },
          "geoAdminLevel2": {
            "description": "Administrative boundaries of the second sub-national level. Level 2 is simply the second largest demarcation under whatever demarcation criteria has been determined by the governing body. For example, this may be a county or district.",
            "maxLength": 120,
            "type": "string",
            "example": "El Paso County"
          },
          "geoAdminLevel3": {
            "description": "Administrative boundaries of the third sub-national level. Level 3 is simply the third largest demarcation under whatever demarcation criteria has been determined by the governing body. For example, this may be a city or township.",
            "maxLength": 120,
            "type": "string",
            "example": "Colorado Springs"
          },
          "postalCode": {
            "description": "A postal code, such as PIN or ZIP Code, is a series of letters or digits or both included in the postal address of the organization.",
            "maxLength": 32,
            "type": "string",
            "example": "80903"
          },
          "description": {
            "description": "Organization description.",
            "maxLength": 2147483647,
            "type": "string",
            "example": "Example description"
          },
          "formerOrgId": {
            "description": "Former organization ID (if this organization previously existed as another organization).",
            "maxLength": 36,
            "type": "string",
            "example": "FORMERORG-ID"
          },
          "parentOrgId": {
            "description": "Parent organization ID of this organization if it is a child organization.",
            "maxLength": 36,
            "type": "string",
            "example": "PARENTORG-ID"
          },
          "financialYearEndDate": {
            "format": "date-time",
            "description": "For organizations of type CORPORATION, the effective financial year end date for revenue, EBITDA, and profit values.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123Z"
          },
          "revenue": {
            "format": "double",
            "description": "For organizations of type CORPORATION, total annual revenue as of financialYearEndDate in US Dollars.",
            "type": "number",
            "example": 123.4
          },
          "profit": {
            "format": "double",
            "description": "For organizations of type CORPORATION, total annual profit as of financialYearEndDate in US Dollars.",
            "type": "number",
            "example": 123.4
          },
          "ebitda": {
            "format": "double",
            "description": "For organizations of type CORPORATION, the company EBITDA value as of financialYearEndDate in US Dollars.",
            "type": "number",
            "example": 123.4
          },
          "ftes": {
            "format": "int32",
            "description": "Total number of FTEs in this organization.",
            "type": "integer",
            "example": 123
          },
          "broker": {
            "description": "Designated broker for this organization.",
            "maxLength": 128,
            "type": "string",
            "example": "some.user"
          },
          "ceo": {
            "description": "For organizations of type CORPORATION, the name of the Chief Executive Officer.",
            "maxLength": 128,
            "type": "string",
            "example": "some.user"
          },
          "cfo": {
            "description": "For organizations of type CORPORATION, the name of the Chief Financial Officer.",
            "maxLength": 128,
            "type": "string",
            "example": "some.user"
          },
          "cto": {
            "description": "For organizations of type CORPORATION, the name of the Chief Technology Officer.",
            "maxLength": 128,
            "type": "string",
            "example": "some.user"
          },
          "riskManager": {
            "description": "The name of the risk manager for the organization.",
            "maxLength": 128,
            "type": "string",
            "example": "some.user"
          },
          "massRanking": {
            "format": "int32",
            "description": "Mass ranking for this organization.",
            "type": "integer",
            "example": 123
          },
          "revenueRanking": {
            "format": "int32",
            "description": "Revenue ranking for this organization.",
            "type": "integer",
            "example": 123
          },
          "financialNotes": {
            "description": "For organizations of type CORPORATION, notes on company financials.",
            "maxLength": 2147483647,
            "type": "string",
            "example": "Example notes"
          },
          "servicesNotes": {
            "description": "Notes on the services provided by the organization.",
            "maxLength": 2147483647,
            "type": "string",
            "example": "Example notes"
          },
          "fleetPlanNotes": {
            "description": "Satellite fleet planning notes for this organization.",
            "maxLength": 2147483647,
            "type": "string",
            "example": "Example notes"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "some.user"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "some.user"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "tags": {
            "description": "Optional array of provider/source specific tags for this data, where each element is no longer than 32 characters, used for implementing data owner conditional access controls to restrict access to the data. Should be left null by data providers unless conditional access controls are coordinated with the UDL team.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "PROVIDER_TAG1",
              "PROVIDER_TAG2"
            ]
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          }
        }
      },
      "Pathway_Abridged": {
        "description": "Collection detailing operational pathways at the Site associated with this SiteOperations record.",
        "type": "object",
        "properties": {
          "pwType": {
            "description": "The type of paths that constitute this pathway.",
            "maxLength": 32,
            "type": "string",
            "example": "Taxiway"
          },
          "pwUsage": {
            "description": "The intended use of this pathway.",
            "maxLength": 32,
            "type": "string",
            "example": "Arrival"
          },
          "pwDefinition": {
            "description": "Text defining this pathway from its constituent parts.",
            "maxLength": 400,
            "type": "string",
            "example": "AGP: 14L, K6, K, G (ANG APRN TO TWY K), GUARD (MAIN)"
          },
          "pwLastChangedDate": {
            "format": "date-time",
            "description": "The datetime of the most recent change made to this Pathway data, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "pwLastChangedBy": {
            "description": "The name of the person who made the most recent change to this Pathway data.",
            "maxLength": 32,
            "type": "string",
            "example": "John Smith"
          }
        }
      },
      "Pathway_Full": {
        "description": "Collection detailing operational pathways at the Site associated with this SiteOperations record.",
        "type": "object",
        "properties": {
          "pwType": {
            "description": "The type of paths that constitute this pathway.",
            "maxLength": 32,
            "type": "string",
            "example": "Taxiway"
          },
          "pwUsage": {
            "description": "The intended use of this pathway.",
            "maxLength": 32,
            "type": "string",
            "example": "Arrival"
          },
          "pwDefinition": {
            "description": "Text defining this pathway from its constituent parts.",
            "maxLength": 400,
            "type": "string",
            "example": "AGP: 14L, K6, K, G (ANG APRN TO TWY K), GUARD (MAIN)"
          },
          "pwLastChangedDate": {
            "format": "date-time",
            "description": "The datetime of the most recent change made to this Pathway data, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "pwLastChangedBy": {
            "description": "The name of the person who made the most recent change to this Pathway data.",
            "maxLength": 32,
            "type": "string",
            "example": "John Smith"
          }
        }
      },
      "Pathway_Ingest": {
        "description": "Collection detailing operational pathways at the Site associated with this SiteOperations record.",
        "type": "object",
        "properties": {
          "pwType": {
            "description": "The type of paths that constitute this pathway.",
            "maxLength": 32,
            "type": "string",
            "example": "Taxiway"
          },
          "pwUsage": {
            "description": "The intended use of this pathway.",
            "maxLength": 32,
            "type": "string",
            "example": "Arrival"
          },
          "pwDefinition": {
            "description": "Text defining this pathway from its constituent parts.",
            "maxLength": 400,
            "type": "string",
            "example": "AGP: 14L, K6, K, G (ANG APRN TO TWY K), GUARD (MAIN)"
          },
          "pwLastChangedDate": {
            "format": "date-time",
            "description": "The datetime of the most recent change made to this Pathway data, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "pwLastChangedBy": {
            "description": "The name of the person who made the most recent change to this Pathway data.",
            "maxLength": 32,
            "type": "string",
            "example": "John Smith"
          }
        }
      },
      "Port_Abridged": {
        "description": "Properties and characteristics of a maritime port, which includes location, port identifiers, and remarks.",
        "required": [
          "classificationMarking",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system if not provided on create operations.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "026dd511-8ba5-47d3-9909-836149f87686"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idSite": {
            "description": "Unique identifier of the Site Entity associated with the Port record.",
            "maxLength": 36,
            "type": "string",
            "example": "a150b3ee-884b-b9ac-60a0-6408b4b16088"
          },
          "externalId": {
            "description": "Optional ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "fe4ad5dc-0128-4ce8-b09c-0b404322025e"
          },
          "locode": {
            "description": "The five-character United Nations Code for Trade and Transport Locations (UN/LOCODE) of this port.  The first two letters of the code contains the ISO 3166-1 alpha-2 country designation of the port country. The three remaining characters identify a location within that country.  Letters are preferred, but if necessary digits 2 through 9 may be used, excluding \"0\" and \"1\" to avoid confusion with the letters \"O\" and \"I\" respectively.",
            "maxLength": 5,
            "type": "string",
            "example": "CAVAN"
          },
          "portName": {
            "description": "The name of this port.",
            "maxLength": 64,
            "type": "string",
            "example": "Vancouver"
          },
          "harborType": {
            "description": "The type of harbor for this port. The harbor type refers to how a port is physically positioned.\n\nCOASTAL BREAKWATER (CB)\n\nCOASTAL NATURAL (CN)\n\nCOASTAL TIDE GATE  (CT)\n\nLAKE OR CANAL (LC)\n\nOPEN ROADSTEAD (OR)\n\nRIVER BASIN (RB)\n\nRIVER NATURAL (RN)\n\nRIVER TIDE GATE (RT)\n\nTYPHOON HARBOR  (TH).",
            "maxLength": 64,
            "type": "string",
            "example": "COASTAL NATURAL"
          },
          "harborSize": {
            "format": "double",
            "description": "The size of the harbor for this port measured in square kilometers.",
            "type": "number",
            "example": 160.1
          },
          "maxDraught": {
            "format": "double",
            "description": "Maximum allowed vessel draught. Draught is the principal dimensions of any waterborne vessel defined as the distance between the ship’s keel and the waterline of the vessel measured in meters.",
            "type": "number",
            "example": 18.1
          },
          "avgDuration": {
            "format": "double",
            "description": "Average time for a vessel at this port in hours.",
            "type": "number",
            "example": 41.1
          },
          "tideRange": {
            "format": "double",
            "description": "The tide range of this port in meters.",
            "type": "number",
            "example": 4.1
          },
          "shelter": {
            "description": "The shelter afforded from wind, sea, and swell refers to the area where normal port operations are conducted, usually the wharf area. Shelter afforded by the anchorage area may be given for ports where cargo is handled by lighters. Values given are EXCELLENT, FAIR, GOOD, POOR, or NONE.",
            "maxLength": 36,
            "type": "string",
            "example": "EXCELLENT"
          },
          "pilotReqd": {
            "description": "Flag indicating whether a pilot is required at this port.",
            "type": "boolean",
            "example": true
          },
          "lat": {
            "format": "double",
            "description": "WGS84 latitude of the location, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 45.23
          },
          "lon": {
            "format": "double",
            "description": "WGS84 longitude of the location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": 179.1
          },
          "countryCode": {
            "description": "The country where this port is located.",
            "maxLength": 4,
            "type": "string",
            "example": "US"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 64,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          }
        }
      },
      "Port_Full": {
        "description": "Properties and characteristics of a maritime port, which includes location, port identifiers, and remarks.",
        "required": [
          "classificationMarking",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system if not provided on create operations.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "026dd511-8ba5-47d3-9909-836149f87686"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idSite": {
            "description": "Unique identifier of the Site Entity associated with the Port record.",
            "maxLength": 36,
            "type": "string",
            "example": "a150b3ee-884b-b9ac-60a0-6408b4b16088"
          },
          "externalId": {
            "description": "Optional ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "fe4ad5dc-0128-4ce8-b09c-0b404322025e"
          },
          "locode": {
            "description": "The five-character United Nations Code for Trade and Transport Locations (UN/LOCODE) of this port.  The first two letters of the code contains the ISO 3166-1 alpha-2 country designation of the port country. The three remaining characters identify a location within that country.  Letters are preferred, but if necessary digits 2 through 9 may be used, excluding \"0\" and \"1\" to avoid confusion with the letters \"O\" and \"I\" respectively.",
            "maxLength": 5,
            "type": "string",
            "example": "CAVAN"
          },
          "portName": {
            "description": "The name of this port.",
            "maxLength": 64,
            "type": "string",
            "example": "Vancouver"
          },
          "harborType": {
            "description": "The type of harbor for this port. The harbor type refers to how a port is physically positioned.\n\nCOASTAL BREAKWATER (CB)\n\nCOASTAL NATURAL (CN)\n\nCOASTAL TIDE GATE  (CT)\n\nLAKE OR CANAL (LC)\n\nOPEN ROADSTEAD (OR)\n\nRIVER BASIN (RB)\n\nRIVER NATURAL (RN)\n\nRIVER TIDE GATE (RT)\n\nTYPHOON HARBOR  (TH).",
            "maxLength": 64,
            "type": "string",
            "example": "COASTAL NATURAL"
          },
          "harborSize": {
            "format": "double",
            "description": "The size of the harbor for this port measured in square kilometers.",
            "type": "number",
            "example": 160.1
          },
          "maxDraught": {
            "format": "double",
            "description": "Maximum allowed vessel draught. Draught is the principal dimensions of any waterborne vessel defined as the distance between the ship’s keel and the waterline of the vessel measured in meters.",
            "type": "number",
            "example": 18.1
          },
          "avgDuration": {
            "format": "double",
            "description": "Average time for a vessel at this port in hours.",
            "type": "number",
            "example": 41.1
          },
          "tideRange": {
            "format": "double",
            "description": "The tide range of this port in meters.",
            "type": "number",
            "example": 4.1
          },
          "shelter": {
            "description": "The shelter afforded from wind, sea, and swell refers to the area where normal port operations are conducted, usually the wharf area. Shelter afforded by the anchorage area may be given for ports where cargo is handled by lighters. Values given are EXCELLENT, FAIR, GOOD, POOR, or NONE.",
            "maxLength": 36,
            "type": "string",
            "example": "EXCELLENT"
          },
          "pilotReqd": {
            "description": "Flag indicating whether a pilot is required at this port.",
            "type": "boolean",
            "example": true
          },
          "lat": {
            "format": "double",
            "description": "WGS84 latitude of the location, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 45.23
          },
          "lon": {
            "format": "double",
            "description": "WGS84 longitude of the location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": 179.1
          },
          "countryCode": {
            "description": "The country where this port is located.",
            "maxLength": 4,
            "type": "string",
            "example": "US"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 64,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          }
        }
      },
      "Port_Ingest": {
        "description": "Properties and characteristics of a maritime port, which includes location, port identifiers, and remarks.",
        "required": [
          "classificationMarking",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system if not provided on create operations.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "026dd511-8ba5-47d3-9909-836149f87686"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idSite": {
            "description": "Unique identifier of the Site Entity associated with the Port record.",
            "maxLength": 36,
            "type": "string",
            "example": "a150b3ee-884b-b9ac-60a0-6408b4b16088"
          },
          "externalId": {
            "description": "Optional ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.",
            "maxLength": 36,
            "type": "string",
            "example": "fe4ad5dc-0128-4ce8-b09c-0b404322025e"
          },
          "locode": {
            "description": "The five-character United Nations Code for Trade and Transport Locations (UN/LOCODE) of this port.  The first two letters of the code contains the ISO 3166-1 alpha-2 country designation of the port country. The three remaining characters identify a location within that country.  Letters are preferred, but if necessary digits 2 through 9 may be used, excluding \"0\" and \"1\" to avoid confusion with the letters \"O\" and \"I\" respectively.",
            "maxLength": 5,
            "type": "string",
            "example": "CAVAN"
          },
          "portName": {
            "description": "The name of this port.",
            "maxLength": 64,
            "type": "string",
            "example": "Vancouver"
          },
          "harborType": {
            "description": "The type of harbor for this port. The harbor type refers to how a port is physically positioned.\n\nCOASTAL BREAKWATER (CB)\n\nCOASTAL NATURAL (CN)\n\nCOASTAL TIDE GATE  (CT)\n\nLAKE OR CANAL (LC)\n\nOPEN ROADSTEAD (OR)\n\nRIVER BASIN (RB)\n\nRIVER NATURAL (RN)\n\nRIVER TIDE GATE (RT)\n\nTYPHOON HARBOR  (TH).",
            "maxLength": 64,
            "type": "string",
            "example": "COASTAL NATURAL"
          },
          "harborSize": {
            "format": "double",
            "description": "The size of the harbor for this port measured in square kilometers.",
            "type": "number",
            "example": 160.1
          },
          "maxDraught": {
            "format": "double",
            "description": "Maximum allowed vessel draught. Draught is the principal dimensions of any waterborne vessel defined as the distance between the ship’s keel and the waterline of the vessel measured in meters.",
            "type": "number",
            "example": 18.1
          },
          "avgDuration": {
            "format": "double",
            "description": "Average time for a vessel at this port in hours.",
            "type": "number",
            "example": 41.1
          },
          "tideRange": {
            "format": "double",
            "description": "The tide range of this port in meters.",
            "type": "number",
            "example": 4.1
          },
          "shelter": {
            "description": "The shelter afforded from wind, sea, and swell refers to the area where normal port operations are conducted, usually the wharf area. Shelter afforded by the anchorage area may be given for ports where cargo is handled by lighters. Values given are EXCELLENT, FAIR, GOOD, POOR, or NONE.",
            "maxLength": 36,
            "type": "string",
            "example": "EXCELLENT"
          },
          "pilotReqd": {
            "description": "Flag indicating whether a pilot is required at this port.",
            "type": "boolean",
            "example": true
          },
          "lat": {
            "format": "double",
            "description": "WGS84 latitude of the location, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 45.23
          },
          "lon": {
            "format": "double",
            "description": "WGS84 longitude of the location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": 179.1
          },
          "countryCode": {
            "description": "The country where this port is located.",
            "maxLength": 4,
            "type": "string",
            "example": "US"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 64,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          }
        }
      },
      "RFBand_Full": {
        "description": "Details on a particular Radio Frequency (RF) band, also known as a carrier, which may be in use by any type of Entity for communications or operations.",
        "required": [
          "idEntity",
          "classificationMarking",
          "name",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "RFBAND-ID"
          },
          "idEntity": {
            "description": "Unique identifier of the parent Entity which uses this band.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ENTITY-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "name": {
            "description": "RF Band name.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "BAND_NAME"
          },
          "band": {
            "description": "Name of the band of this RF range (e.g. X,K,Ku,Ka,L,S,C,UHF,VHF,EHF,SHF,UNK,VLF,HF,E,Q,V,W). See RFBandType for more details and descriptions of each band name.",
            "maxLength": 5,
            "type": "string",
            "example": "Ku"
          },
          "mode": {
            "description": "RF Band mode (e.g. TX, RX).",
            "maxLength": 4,
            "enum": [
              "TX",
              "RX"
            ],
            "type": "string",
            "example": "TX"
          },
          "purpose": {
            "description": "Purpose or use of the RF Band -- COMM = communications, TTC = Telemetry/Tracking/Control, OPS = Operations, OTHER = Other).",
            "maxLength": 16,
            "enum": [
              "COMM",
              "TTC",
              "OPS",
              "OTHER"
            ],
            "type": "string",
            "example": "TTC"
          },
          "freqMin": {
            "format": "double",
            "description": "Start/minimum of transmit RF frequency range, if applicable, in Mhz.",
            "type": "number",
            "example": 50.23
          },
          "freqMax": {
            "format": "double",
            "description": "End/maximum of transmit RF frequency range, if applicable, in Mhz.",
            "type": "number",
            "example": 2000.23
          },
          "centerFreq": {
            "format": "double",
            "description": "Center frequency of RF frequency range, if applicable, in Mhz.",
            "type": "number",
            "example": 1000.23
          },
          "peakGain": {
            "format": "double",
            "description": "RF Range maximum gain, in dBi.",
            "type": "number",
            "example": 120.23
          },
          "edgeGain": {
            "format": "double",
            "description": "RF Range edge gain, in dBi.",
            "type": "number",
            "example": 100.23
          },
          "bandwidth": {
            "format": "double",
            "description": "RF Band frequency range bandwidth in Mhz.",
            "type": "number",
            "example": 100.23
          },
          "beamwidth": {
            "format": "double",
            "description": "Angle between the half-power (-3 dB) points of the main lobe of the antenna, in degrees.",
            "type": "number",
            "example": 45.23
          },
          "polarization": {
            "description": "Transponder polarization e.g. H - (Horizontally Polarized) Perpendicular to Earth's surface, V - (Vertically Polarized) Parallel to Earth's surface, L - (Left Hand Circularly Polarized) Rotating left relative to the Earth's surface, R - (Right Hand Circularly Polarized) Rotating right relative to the Earth's surface.",
            "maxLength": 4,
            "enum": [
              "H",
              "V",
              "R",
              "L"
            ],
            "type": "string",
            "example": "H"
          },
          "erp": {
            "format": "double",
            "description": "Effective Radiated Power (ERP) is the total power in decibel watts radiated by an actual antenna relative to a half-wave dipole rather than a theoretical isotropic antenna. A half-wave dipole has a gain of 2.15 dB compared to an isotropic antenna.  EIRP(dB) = ERP (dB)+2.15 dB or EIRP (W) = 1.64*ERP(W). Effective radiated power and effective isotropic radiated power both measure the amount of power a radio transmitter and antenna (or other source of electromagnetic waves) radiates in a specific direction: in the direction of maximum signal strength (the \"main lobe\") of its radiation pattern.",
            "type": "number",
            "example": 2.23
          },
          "eirp": {
            "format": "double",
            "description": "EIRP is defined as the RMS power input in decibel watts required to a lossless half-wave dipole antenna to give the same maximum power density far from the antenna as the actual transmitter. It is equal to the power input to the transmitter's antenna multiplied by the antenna gain relative to a half-wave dipole. Effective radiated power and effective isotropic radiated power both measure the amount of power a radio transmitter and antenna (or other source of electromagnetic waves) radiates in a specific direction: in the direction of maximum signal strength (the \"main lobe\") of its radiation pattern.",
            "type": "number",
            "example": 2.23
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          }
        }
      },
      "Site_Abridged": {
        "description": "Properties and characteristics of a site entity, such as an airbase, airfield, naval station, etc.",
        "required": [
          "classificationMarking",
          "name",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "SITE-ID"
          },
          "idEntity": {
            "description": "Unique identifier of the parent entity. idEntity is required for Put.",
            "maxLength": 36,
            "type": "string",
            "example": "ENTITY-ID"
          },
          "idParentSite": {
            "description": "Unique identifier of the Parent Site record associated with this Site record.",
            "maxLength": 36,
            "type": "string",
            "example": "ID-Parent-Site"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "origSiteID": {
            "description": "Unique identifier of the Site record from the originating system.",
            "maxLength": 36,
            "type": "string",
            "example": "ORIG-SITE-ID"
          },
          "origLzId": {
            "description": "Unique identifier of the LZ record from the originating system.",
            "maxLength": 36,
            "type": "string",
            "example": "ORIG-LZ-ID"
          },
          "pin": {
            "description": "Site number of a specific electronic site or its associated equipment.",
            "maxLength": 5,
            "type": "string",
            "example": "25200"
          },
          "type": {
            "description": "The type of this site (AIRBASE, AIRFIELD, AIRPORT, NAVAL STATION, etc.).",
            "maxLength": 16,
            "type": "string",
            "example": "AIRBASE"
          },
          "usage": {
            "description": "The use authorization type of this site (e.g MILITARY, CIVIL, JOINT-USE, etc.).",
            "maxLength": 16,
            "type": "string",
            "example": "MILITARY"
          },
          "lzUsage": {
            "description": "Indicates the normal usage of the Landing Zone (LZ).  Intended as, but not constrained to MIDB Helocopter Landing Area usage value definitions:\n\nAF - Airfield\n\nFD - Field\n\nHC - High Crop.  1 meter and over.\n\nHY - Highway\n\nLB - Lake Bed\n\nLC - Low Crop.  0-1 meters\n\nO - Other. Explain In Remarks.\n\nPD - Paddy\n\nPK - Park\n\nPS - Pasture\n\nRB - Riverbed\n\nSP - Sport Field\n\nU - Unknown\n\nZ - Inconclusive Analysis.",
            "maxLength": 3,
            "type": "string",
            "example": "AF"
          },
          "name": {
            "description": "The name of this site.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "Site Name"
          },
          "coordDatum": {
            "description": "A mathematical model of the earth used to calculate coordinates on a map. US Forces use the World Geodetic System 1984 (WGS 84), but also use maps by allied countries with local datums. The datum must be specified to ensure accuracy of coordinates. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 3,
            "type": "string",
            "example": "WGS"
          },
          "coord": {
            "description": "Indicates any of the magnitudes that serve to define the position of a point by reference to a fixed figure, system of lines, etc.\n\nPos. 1-2.  Latitude Degrees     [00-90]\n\nPos. 3-4.  Latitude Minutes     [00-59]\n\nPos. 5-6.  Latitude Seconds     [00-59]\n\nPos. 7-9.  Latitude Thousandths Of Seconds   [000-999]  \n\nPos. 10. Latitude Hemisphere       [NS] \n\nPos. 11-13. Longitude Degrees     [00-180] \n\nPos. 14-15. Longitude Minutes     [00-59] \n\nPos. 16-17. Longitude Seconds     [00-59] \n\nPos. 18-20. Longitude Thousandths Of Seconds      [000-999]\n\nPos. 21. Longitude Hemisphere     [EW]\n\nPos. 1-21.  Unknown Latitude and Unknown Longitude [000000000U000000000U].",
            "maxLength": 21,
            "type": "string",
            "example": "340000000N0430000000E"
          },
          "coordDerivAcc": {
            "format": "double",
            "description": "Indicates the plus or minus error assessed against the method used to derive the coordinate.",
            "type": "number",
            "example": 12.345
          },
          "osuffix": {
            "description": "The O-suffix associated with this site. The O-suffix is a five-character alpha/numeric system used to identify a site, or demographic area, within an installation. The Installation Basic Encyclopedia (beNumber), in conjunction with the O-suffix, uniquely identifies the Site. The Installation beNumber and oSuffix are also used in conjunction with the catCode to classify the function or purpose of the facility.",
            "maxLength": 5,
            "type": "string",
            "example": "BB002"
          },
          "iata": {
            "description": "The International Air Transport Association (IATA) code of this site, if applicable.",
            "maxLength": 3,
            "type": "string",
            "example": "AAA"
          },
          "icao": {
            "description": "The International Civil Aviation Organization (ICAO) code of this site, if applicable.",
            "maxLength": 4,
            "type": "string",
            "example": "ICA1"
          },
          "faa": {
            "description": "The Federal Aviation Administration (FAA) Location ID of this site, if applicable.",
            "maxLength": 5,
            "type": "string",
            "example": "FAA1"
          },
          "airDefArea": {
            "description": "Air Defense District (ADD) or Air Defense Area (ADA) in which the geographic coordinates reside.",
            "maxLength": 5,
            "type": "string",
            "example": "AL006"
          },
          "utm": {
            "description": "Universal Transverse Mercator (UTM) grid coordinates.\n\nPos. 1-2, UTM Zone Column   [01-60\n\nPos. 3, UTM Zone Row   [C-HJ-NP-X]\n\nPos. 4, UTM False Easting   [0-9]\n\nPos. 5-9, UTM Meter Easting    [0-9][0-9][0-9][0-9][0-9]\n\nPos. 10-11, UTM False Northing    [0-9][0-9]\n\nPos. 12-16, UTM Meter Northing    [0-9][0-9][0-9][0-9][0-9].",
            "maxLength": 16,
            "type": "string",
            "example": "19P4390691376966"
          },
          "milGridSys": {
            "description": "Indicates the grid system used in the development of the milGrid coordinates. Values are:\n\nUPS - Universal Polar System\n\nUTM - Universal Transverse Mercator.",
            "maxLength": 3,
            "type": "string",
            "example": "UTM"
          },
          "milGrid": {
            "description": "The Military Grid Reference System is the geocoordinate standard used by NATO militaries for locating points on Earth. The MGRS is derived from the Universal Transverse Mercator (UTM) grid system and the Universal Polar Stereographic (UPS) grid system, but uses a different labeling convention. The MGRS is used as geocode for the entire Earth. Example of an milgrid coordinate, or grid reference, would be 4QFJ12345678, which consists of three parts:\n\n4Q (grid zone designator, GZD)\n\nFJ (the 100,000-meter square identifier)\n\n12345678 (numerical location; easting is 1234 and northing is 5678, in this case specifying a location with 10 m resolution).",
            "maxLength": 15,
            "type": "string",
            "example": "4QFJ12345678"
          },
          "catCode": {
            "description": "The category code that represents the associated site purpose within the target system.",
            "maxLength": 16,
            "type": "string",
            "example": "20345"
          },
          "catText": {
            "description": "Textual Description of Site catCode.",
            "maxLength": 148,
            "type": "string",
            "example": "Radar Facility, General"
          },
          "wac": {
            "description": "World Aeronautical Chart identifier for the area in which a designated place is located.",
            "maxLength": 4,
            "type": "string",
            "example": "0427"
          },
          "polSubdiv": {
            "description": "Political subdivision in which the geographic coordinates reside. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 7,
            "type": "string",
            "example": "IZO7"
          },
          "geoArea": {
            "description": "Geographical region code used by the Requirements Management System (RMS) as specified by National Geospatial Agency (NGA) in Flight Information Publications (FIPS) 10-4, Appendix 3 - Country Code and Geographic Region Codes. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 2,
            "type": "string",
            "example": "E2"
          },
          "geoidalMslSep": {
            "format": "double",
            "description": "The distance between Mean Sea Level and a referenced ellipsoid, in meters.",
            "type": "number",
            "example": 12.34
          },
          "allegiance": {
            "description": "The DoD Standard Country Code designator for the country or political entity to which the site owes its allegiance. This field will be set to \"OTHR\" if the source value does not match a UDL Country code value (ISO-3166-ALPHA-2).",
            "maxLength": 4,
            "type": "string",
            "example": "OTHR"
          },
          "altAllegiance": {
            "description": "Specifies an alternate allegiance code if the data provider code is not part of an official Country Code standard such as ISO-3166 or FIPS. This field will be set to the value provided by the source and should be used for all Queries specifying allegiance.",
            "maxLength": 4,
            "type": "string",
            "example": "HL"
          },
          "classRating": {
            "description": "Indicates the importance of the entity to the OES or MIR system.  This data element is restricted to update by DIA (DB-4). Valid values are:\n\n0 - Does not meet criteria above\n\n1 - Primary importance to system\n\n2 - Secondary importance to system\n\n3 - Tertiary importance to system\n\nO - Other. Explain in Remarks.",
            "maxLength": 1,
            "type": "string",
            "example": "1"
          },
          "fpa": {
            "description": "Functional Production Area (FPA) under the Shared Production Program (SPP). Producers are defined per country per FPA. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 5,
            "type": "string",
            "example": "EOB"
          },
          "beNumber": {
            "description": "The Basic Encyclopedia Number associated with the Site. Uniquely identifies the installation of a site. The beNumber is generated based on the value input for the COORD to determine the appropriate World Aeronautical Chart (WAC) location identifier, the system assigned record originator and a one-up-number.",
            "maxLength": 10,
            "type": "string",
            "example": "0427RT1030"
          },
          "runways": {
            "format": "int16",
            "description": "The number of runways at the site, if applicable.",
            "type": "integer",
            "example": 5
          },
          "maxRunwayLength": {
            "format": "int32",
            "description": "The length of the longest runway at this site, if applicable, in meters.",
            "type": "integer",
            "example": 1000
          },
          "condition": {
            "description": "The physical manner of being or state of existence of the entity. A physical condition that must be considered in the determining of a course of action. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "RDY"
          },
          "conditionAvail": {
            "description": "Availability of the entity relative to its condition. Indicates the reason the entity is not fully operational. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "A"
          },
          "operStatus": {
            "description": "The Degree to which an entity is ready to perform the overall operational mission(s) for which it was organized and equipped. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 3,
            "type": "string",
            "example": "OPR"
          },
          "grade": {
            "format": "int32",
            "description": "Indicates the amount or degree of deviation from the horizontal represented as a percent.  Grade is determined by the formula: vertical distance (VD) divided by horizontal distance (HD) times 100. VD is the difference between the highest and  lowest elevation within the entity. HD is the linear distance between the highest and lowest elevation.",
            "type": "integer",
            "example": 5
          },
          "activity": {
            "description": "Indicates the function or mission of an entity, which that entity may or may not be engaged in at any particular time. Typically refers to a unit, organization, or installation/site performing a specific function or mission such as a redistribution center or naval shipyard. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 3,
            "type": "string",
            "example": "OCC"
          },
          "functPrimary": {
            "description": "Principal operational function being performed. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "JG"
          },
          "msnPrimary": {
            "description": "Indicates the principal type of mission that an entity is organized and equipped to perform. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "AA"
          },
          "msnPrimarySpec": {
            "description": "Indicates the principal specialty type of mission that an entity is organized and equipped to perform. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "AB"
          },
          "nucCap": {
            "description": "A sites ability to conduct nuclear warfare. Valid Values are:\n\nA - Nuclear Ammo Or Warheads Available\n\nN - No Nuclear Offense\n\nO - Other. Explain in Remarks\n\nU - Unknown\n\nW - Nuclear Weapons Available\n\nY - Nuclear Warfare Offensive Capability\n\nZ - Inconclusive Analysis.",
            "maxLength": 1,
            "type": "string",
            "example": "A"
          },
          "ident": {
            "description": "Estimated identity of the Site (ASSUMED FRIEND, FRIEND, HOSTILE, FAKER, JOKER, NEUTRAL, PENDING, SUSPECT, UNKNOWN): \n\nASSUMED FRIEND: Track assumed to be a friend due to the object characteristics, behavior, and/or origin.\n\nFRIEND: Track object supporting friendly forces and belonging to a declared friendly nation or entity.\n\nHOSTILE: Track object belonging to an opposing nation, party, group, or entity deemed to contribute to a threat to friendly forces or their mission due to its behavior, characteristics, nationality, or origin.\n\nFAKER: Friendly track, object, or entity acting as an exercise hostile.\n\nJOKER: Friendly track, object, or entity acting as an exercise suspect.\n\nNEUTRAL: Track object whose characteristics, behavior, nationality, and/or origin indicate that it is neither supporting nor opposing friendly forces or their mission.\n\nPENDING: Track object which has not been evaluated.\n\nSUSPECT: Track object deemed potentially hostile due to the object characteristics, behavior, nationality, and/or origin.\n\nUNKNOWN: Track object which has been evaluated and does not meet criteria for any standard identity.",
            "maxLength": 32,
            "type": "string",
            "example": "FRIEND"
          },
          "elevMsl": {
            "format": "double",
            "description": "Ground elevation of the geographic coordinates referenced to (above or below) Mean Sea Level (MSL) vertical datum, in meters.",
            "type": "number",
            "example": 123.45
          },
          "elevMslConfLvl": {
            "format": "int32",
            "description": "Indicates the confidence level expressed as a percent that a specific geometric spatial element, ELEVATION_MSL linear accuracy, has been vertically positioned to within a specified vertical accuracy.",
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "example": 50
          },
          "elevMslDerivAcc": {
            "format": "double",
            "description": "Indicates the plus or minus error assessed against the method used to derive the elevation.",
            "type": "number",
            "example": 12.34
          },
          "vegHt": {
            "format": "double",
            "description": "Maximum expected height of the vegetation in the Landing Zone (LZ), in meters.",
            "type": "number",
            "example": 3
          },
          "vegType": {
            "description": "The predominant vegetation found in the Landing Zone (LZ). The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "FR"
          },
          "popArea": {
            "description": "Indicates whether the facility is in or outside of a populated area. True, the facility is in or within 5 NM of a populated area. False, the facility is outside a populated area.",
            "type": "boolean",
            "example": true
          },
          "popAreaProx": {
            "format": "double",
            "description": "Indicates the distance to nearest populated area (over 1,000 people) in nautical miles.",
            "type": "number",
            "example": 12.345
          },
          "notes": {
            "description": "Optional notes/comments for the site.",
            "maxLength": 1024,
            "type": "string",
            "example": "Example Notes"
          },
          "resProd": {
            "description": "Responsible Producer - Organization that is responsible for the maintenance of the record.",
            "maxLength": 4,
            "type": "string",
            "example": "RT"
          },
          "eval": {
            "format": "int32",
            "description": "Eval represents the Intelligence Confidence Level or the Reliability/degree of confidence that the analyst has assigned to the data within this record. The numerical range is from 1 to 9 with 1 representing the highest confidence level.",
            "type": "integer",
            "example": 7
          },
          "reviewDate": {
            "format": "date",
            "description": "Date on which the data in the record was last reviewed by the responsible analyst for accuracy and currency, in ISO8601 UTC format. This date cannot be greater than the current date.",
            "type": "string",
            "example": "2008-06-10"
          },
          "recStatus": {
            "description": "Validity and currency of the data in the record to be used in conjunction with the other elements in the record as defined by SOPs.\n\nA - Active\n\nI - Inactive\n\nK - Acknowledged\n\nL - Local\n\nQ - A nominated (NOM) or Data Change Request (DCR) record\n\nR - Production reduced by CMD decision\n\nW - Working Record.",
            "maxLength": 1,
            "type": "string",
            "example": "A"
          },
          "symCode": {
            "description": "A standard scheme for symbol coding enabling the transfer, display and use of symbols and graphics among information systems, as per MIL-STD 2525B, and supported by the element ident.",
            "maxLength": 15,
            "type": "string",
            "example": "SOGPU----------"
          },
          "referenceDoc": {
            "description": "The reference documentation that specifies the usage and enumerations contained in this record. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 128,
            "type": "string",
            "example": "Provider Reference Documentation"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "Site_Full": {
        "description": "Properties and characteristics of a site entity, such as an airbase, airfield, naval station, etc.",
        "required": [
          "classificationMarking",
          "name",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "SITE-ID"
          },
          "entity": {
            "$ref": "#/components/schemas/Entity_Full"
          },
          "idEntity": {
            "description": "Unique identifier of the parent entity. idEntity is required for Put.",
            "maxLength": 36,
            "type": "string",
            "example": "ENTITY-ID"
          },
          "idParentSite": {
            "description": "Unique identifier of the Parent Site record associated with this Site record.",
            "maxLength": 36,
            "type": "string",
            "example": "ID-Parent-Site"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "origSiteID": {
            "description": "Unique identifier of the Site record from the originating system.",
            "maxLength": 36,
            "type": "string",
            "example": "ORIG-SITE-ID"
          },
          "origLzId": {
            "description": "Unique identifier of the LZ record from the originating system.",
            "maxLength": 36,
            "type": "string",
            "example": "ORIG-LZ-ID"
          },
          "pin": {
            "description": "Site number of a specific electronic site or its associated equipment.",
            "maxLength": 5,
            "type": "string",
            "example": "25200"
          },
          "type": {
            "description": "The type of this site (AIRBASE, AIRFIELD, AIRPORT, NAVAL STATION, etc.).",
            "maxLength": 16,
            "type": "string",
            "example": "AIRBASE"
          },
          "usage": {
            "description": "The use authorization type of this site (e.g MILITARY, CIVIL, JOINT-USE, etc.).",
            "maxLength": 16,
            "type": "string",
            "example": "MILITARY"
          },
          "lzUsage": {
            "description": "Indicates the normal usage of the Landing Zone (LZ).  Intended as, but not constrained to MIDB Helocopter Landing Area usage value definitions:\n\nAF - Airfield\n\nFD - Field\n\nHC - High Crop.  1 meter and over.\n\nHY - Highway\n\nLB - Lake Bed\n\nLC - Low Crop.  0-1 meters\n\nO - Other. Explain In Remarks.\n\nPD - Paddy\n\nPK - Park\n\nPS - Pasture\n\nRB - Riverbed\n\nSP - Sport Field\n\nU - Unknown\n\nZ - Inconclusive Analysis.",
            "maxLength": 3,
            "type": "string",
            "example": "AF"
          },
          "name": {
            "description": "The name of this site.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "Site Name"
          },
          "coordDatum": {
            "description": "A mathematical model of the earth used to calculate coordinates on a map. US Forces use the World Geodetic System 1984 (WGS 84), but also use maps by allied countries with local datums. The datum must be specified to ensure accuracy of coordinates. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 3,
            "type": "string",
            "example": "WGS"
          },
          "coord": {
            "description": "Indicates any of the magnitudes that serve to define the position of a point by reference to a fixed figure, system of lines, etc.\n\nPos. 1-2.  Latitude Degrees     [00-90]\n\nPos. 3-4.  Latitude Minutes     [00-59]\n\nPos. 5-6.  Latitude Seconds     [00-59]\n\nPos. 7-9.  Latitude Thousandths Of Seconds   [000-999]  \n\nPos. 10. Latitude Hemisphere       [NS] \n\nPos. 11-13. Longitude Degrees     [00-180] \n\nPos. 14-15. Longitude Minutes     [00-59] \n\nPos. 16-17. Longitude Seconds     [00-59] \n\nPos. 18-20. Longitude Thousandths Of Seconds      [000-999]\n\nPos. 21. Longitude Hemisphere     [EW]\n\nPos. 1-21.  Unknown Latitude and Unknown Longitude [000000000U000000000U].",
            "maxLength": 21,
            "type": "string",
            "example": "340000000N0430000000E"
          },
          "coordDerivAcc": {
            "format": "double",
            "description": "Indicates the plus or minus error assessed against the method used to derive the coordinate.",
            "type": "number",
            "example": 12.345
          },
          "osuffix": {
            "description": "The O-suffix associated with this site. The O-suffix is a five-character alpha/numeric system used to identify a site, or demographic area, within an installation. The Installation Basic Encyclopedia (beNumber), in conjunction with the O-suffix, uniquely identifies the Site. The Installation beNumber and oSuffix are also used in conjunction with the catCode to classify the function or purpose of the facility.",
            "maxLength": 5,
            "type": "string",
            "example": "BB002"
          },
          "iata": {
            "description": "The International Air Transport Association (IATA) code of this site, if applicable.",
            "maxLength": 3,
            "type": "string",
            "example": "AAA"
          },
          "icao": {
            "description": "The International Civil Aviation Organization (ICAO) code of this site, if applicable.",
            "maxLength": 4,
            "type": "string",
            "example": "ICA1"
          },
          "faa": {
            "description": "The Federal Aviation Administration (FAA) Location ID of this site, if applicable.",
            "maxLength": 5,
            "type": "string",
            "example": "FAA1"
          },
          "airDefArea": {
            "description": "Air Defense District (ADD) or Air Defense Area (ADA) in which the geographic coordinates reside.",
            "maxLength": 5,
            "type": "string",
            "example": "AL006"
          },
          "utm": {
            "description": "Universal Transverse Mercator (UTM) grid coordinates.\n\nPos. 1-2, UTM Zone Column   [01-60\n\nPos. 3, UTM Zone Row   [C-HJ-NP-X]\n\nPos. 4, UTM False Easting   [0-9]\n\nPos. 5-9, UTM Meter Easting    [0-9][0-9][0-9][0-9][0-9]\n\nPos. 10-11, UTM False Northing    [0-9][0-9]\n\nPos. 12-16, UTM Meter Northing    [0-9][0-9][0-9][0-9][0-9].",
            "maxLength": 16,
            "type": "string",
            "example": "19P4390691376966"
          },
          "milGridSys": {
            "description": "Indicates the grid system used in the development of the milGrid coordinates. Values are:\n\nUPS - Universal Polar System\n\nUTM - Universal Transverse Mercator.",
            "maxLength": 3,
            "type": "string",
            "example": "UTM"
          },
          "milGrid": {
            "description": "The Military Grid Reference System is the geocoordinate standard used by NATO militaries for locating points on Earth. The MGRS is derived from the Universal Transverse Mercator (UTM) grid system and the Universal Polar Stereographic (UPS) grid system, but uses a different labeling convention. The MGRS is used as geocode for the entire Earth. Example of an milgrid coordinate, or grid reference, would be 4QFJ12345678, which consists of three parts:\n\n4Q (grid zone designator, GZD)\n\nFJ (the 100,000-meter square identifier)\n\n12345678 (numerical location; easting is 1234 and northing is 5678, in this case specifying a location with 10 m resolution).",
            "maxLength": 15,
            "type": "string",
            "example": "4QFJ12345678"
          },
          "catCode": {
            "description": "The category code that represents the associated site purpose within the target system.",
            "maxLength": 16,
            "type": "string",
            "example": "20345"
          },
          "catText": {
            "description": "Textual Description of Site catCode.",
            "maxLength": 148,
            "type": "string",
            "example": "Radar Facility, General"
          },
          "wac": {
            "description": "World Aeronautical Chart identifier for the area in which a designated place is located.",
            "maxLength": 4,
            "type": "string",
            "example": "0427"
          },
          "polSubdiv": {
            "description": "Political subdivision in which the geographic coordinates reside. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 7,
            "type": "string",
            "example": "IZO7"
          },
          "geoArea": {
            "description": "Geographical region code used by the Requirements Management System (RMS) as specified by National Geospatial Agency (NGA) in Flight Information Publications (FIPS) 10-4, Appendix 3 - Country Code and Geographic Region Codes. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 2,
            "type": "string",
            "example": "E2"
          },
          "geoidalMslSep": {
            "format": "double",
            "description": "The distance between Mean Sea Level and a referenced ellipsoid, in meters.",
            "type": "number",
            "example": 12.34
          },
          "allegiance": {
            "description": "The DoD Standard Country Code designator for the country or political entity to which the site owes its allegiance. This field will be set to \"OTHR\" if the source value does not match a UDL Country code value (ISO-3166-ALPHA-2).",
            "maxLength": 4,
            "type": "string",
            "example": "OTHR"
          },
          "altAllegiance": {
            "description": "Specifies an alternate allegiance code if the data provider code is not part of an official Country Code standard such as ISO-3166 or FIPS. This field will be set to the value provided by the source and should be used for all Queries specifying allegiance.",
            "maxLength": 4,
            "type": "string",
            "example": "HL"
          },
          "classRating": {
            "description": "Indicates the importance of the entity to the OES or MIR system.  This data element is restricted to update by DIA (DB-4). Valid values are:\n\n0 - Does not meet criteria above\n\n1 - Primary importance to system\n\n2 - Secondary importance to system\n\n3 - Tertiary importance to system\n\nO - Other. Explain in Remarks.",
            "maxLength": 1,
            "type": "string",
            "example": "1"
          },
          "fpa": {
            "description": "Functional Production Area (FPA) under the Shared Production Program (SPP). Producers are defined per country per FPA. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 5,
            "type": "string",
            "example": "EOB"
          },
          "beNumber": {
            "description": "The Basic Encyclopedia Number associated with the Site. Uniquely identifies the installation of a site. The beNumber is generated based on the value input for the COORD to determine the appropriate World Aeronautical Chart (WAC) location identifier, the system assigned record originator and a one-up-number.",
            "maxLength": 10,
            "type": "string",
            "example": "0427RT1030"
          },
          "runways": {
            "format": "int16",
            "description": "The number of runways at the site, if applicable.",
            "type": "integer",
            "example": 5
          },
          "maxRunwayLength": {
            "format": "int32",
            "description": "The length of the longest runway at this site, if applicable, in meters.",
            "type": "integer",
            "example": 1000
          },
          "condition": {
            "description": "The physical manner of being or state of existence of the entity. A physical condition that must be considered in the determining of a course of action. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "RDY"
          },
          "conditionAvail": {
            "description": "Availability of the entity relative to its condition. Indicates the reason the entity is not fully operational. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "A"
          },
          "operStatus": {
            "description": "The Degree to which an entity is ready to perform the overall operational mission(s) for which it was organized and equipped. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 3,
            "type": "string",
            "example": "OPR"
          },
          "grade": {
            "format": "int32",
            "description": "Indicates the amount or degree of deviation from the horizontal represented as a percent.  Grade is determined by the formula: vertical distance (VD) divided by horizontal distance (HD) times 100. VD is the difference between the highest and  lowest elevation within the entity. HD is the linear distance between the highest and lowest elevation.",
            "type": "integer",
            "example": 5
          },
          "activity": {
            "description": "Indicates the function or mission of an entity, which that entity may or may not be engaged in at any particular time. Typically refers to a unit, organization, or installation/site performing a specific function or mission such as a redistribution center or naval shipyard. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 3,
            "type": "string",
            "example": "OCC"
          },
          "functPrimary": {
            "description": "Principal operational function being performed. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "JG"
          },
          "msnPrimary": {
            "description": "Indicates the principal type of mission that an entity is organized and equipped to perform. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "AA"
          },
          "msnPrimarySpec": {
            "description": "Indicates the principal specialty type of mission that an entity is organized and equipped to perform. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "AB"
          },
          "nucCap": {
            "description": "A sites ability to conduct nuclear warfare. Valid Values are:\n\nA - Nuclear Ammo Or Warheads Available\n\nN - No Nuclear Offense\n\nO - Other. Explain in Remarks\n\nU - Unknown\n\nW - Nuclear Weapons Available\n\nY - Nuclear Warfare Offensive Capability\n\nZ - Inconclusive Analysis.",
            "maxLength": 1,
            "type": "string",
            "example": "A"
          },
          "ident": {
            "description": "Estimated identity of the Site (ASSUMED FRIEND, FRIEND, HOSTILE, FAKER, JOKER, NEUTRAL, PENDING, SUSPECT, UNKNOWN): \n\nASSUMED FRIEND: Track assumed to be a friend due to the object characteristics, behavior, and/or origin.\n\nFRIEND: Track object supporting friendly forces and belonging to a declared friendly nation or entity.\n\nHOSTILE: Track object belonging to an opposing nation, party, group, or entity deemed to contribute to a threat to friendly forces or their mission due to its behavior, characteristics, nationality, or origin.\n\nFAKER: Friendly track, object, or entity acting as an exercise hostile.\n\nJOKER: Friendly track, object, or entity acting as an exercise suspect.\n\nNEUTRAL: Track object whose characteristics, behavior, nationality, and/or origin indicate that it is neither supporting nor opposing friendly forces or their mission.\n\nPENDING: Track object which has not been evaluated.\n\nSUSPECT: Track object deemed potentially hostile due to the object characteristics, behavior, nationality, and/or origin.\n\nUNKNOWN: Track object which has been evaluated and does not meet criteria for any standard identity.",
            "maxLength": 32,
            "type": "string",
            "example": "FRIEND"
          },
          "elevMsl": {
            "format": "double",
            "description": "Ground elevation of the geographic coordinates referenced to (above or below) Mean Sea Level (MSL) vertical datum, in meters.",
            "type": "number",
            "example": 123.45
          },
          "elevMslConfLvl": {
            "format": "int32",
            "description": "Indicates the confidence level expressed as a percent that a specific geometric spatial element, ELEVATION_MSL linear accuracy, has been vertically positioned to within a specified vertical accuracy.",
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "example": 50
          },
          "elevMslDerivAcc": {
            "format": "double",
            "description": "Indicates the plus or minus error assessed against the method used to derive the elevation.",
            "type": "number",
            "example": 12.34
          },
          "vegHt": {
            "format": "double",
            "description": "Maximum expected height of the vegetation in the Landing Zone (LZ), in meters.",
            "type": "number",
            "example": 3
          },
          "vegType": {
            "description": "The predominant vegetation found in the Landing Zone (LZ). The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "FR"
          },
          "popArea": {
            "description": "Indicates whether the facility is in or outside of a populated area. True, the facility is in or within 5 NM of a populated area. False, the facility is outside a populated area.",
            "type": "boolean",
            "example": true
          },
          "popAreaProx": {
            "format": "double",
            "description": "Indicates the distance to nearest populated area (over 1,000 people) in nautical miles.",
            "type": "number",
            "example": 12.345
          },
          "notes": {
            "description": "Optional notes/comments for the site.",
            "maxLength": 1024,
            "type": "string",
            "example": "Example Notes"
          },
          "resProd": {
            "description": "Responsible Producer - Organization that is responsible for the maintenance of the record.",
            "maxLength": 4,
            "type": "string",
            "example": "RT"
          },
          "eval": {
            "format": "int32",
            "description": "Eval represents the Intelligence Confidence Level or the Reliability/degree of confidence that the analyst has assigned to the data within this record. The numerical range is from 1 to 9 with 1 representing the highest confidence level.",
            "type": "integer",
            "example": 7
          },
          "reviewDate": {
            "format": "date",
            "description": "Date on which the data in the record was last reviewed by the responsible analyst for accuracy and currency, in ISO8601 UTC format. This date cannot be greater than the current date.",
            "type": "string",
            "example": "2008-06-10"
          },
          "recStatus": {
            "description": "Validity and currency of the data in the record to be used in conjunction with the other elements in the record as defined by SOPs.\n\nA - Active\n\nI - Inactive\n\nK - Acknowledged\n\nL - Local\n\nQ - A nominated (NOM) or Data Change Request (DCR) record\n\nR - Production reduced by CMD decision\n\nW - Working Record.",
            "maxLength": 1,
            "type": "string",
            "example": "A"
          },
          "symCode": {
            "description": "A standard scheme for symbol coding enabling the transfer, display and use of symbols and graphics among information systems, as per MIL-STD 2525B, and supported by the element ident.",
            "maxLength": 15,
            "type": "string",
            "example": "SOGPU----------"
          },
          "referenceDoc": {
            "description": "The reference documentation that specifies the usage and enumerations contained in this record. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 128,
            "type": "string",
            "example": "Provider Reference Documentation"
          },
          "siteRemarks": {
            "description": "Remarks contain amplifying information for a specific service. The information may contain context and interpretations for consumer use.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SiteRemark_Full"
            },
            "readOnly": true
          },
          "siteOperations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SiteOperations_Full"
            },
            "readOnly": true
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "Site_Ingest": {
        "description": "Properties and characteristics of a site entity, such as an airbase, airfield, naval station, etc.",
        "required": [
          "classificationMarking",
          "name",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "SITE-ID"
          },
          "entity": {
            "$ref": "#/components/schemas/Entity_Ingest"
          },
          "idEntity": {
            "description": "Unique identifier of the parent entity. idEntity is required for Put.",
            "maxLength": 36,
            "type": "string",
            "example": "ENTITY-ID"
          },
          "idParentSite": {
            "description": "Unique identifier of the Parent Site record associated with this Site record.",
            "maxLength": 36,
            "type": "string",
            "example": "ID-Parent-Site"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "origSiteID": {
            "description": "Unique identifier of the Site record from the originating system.",
            "maxLength": 36,
            "type": "string",
            "example": "ORIG-SITE-ID"
          },
          "origLzId": {
            "description": "Unique identifier of the LZ record from the originating system.",
            "maxLength": 36,
            "type": "string",
            "example": "ORIG-LZ-ID"
          },
          "pin": {
            "description": "Site number of a specific electronic site or its associated equipment.",
            "maxLength": 5,
            "type": "string",
            "example": "25200"
          },
          "type": {
            "description": "The type of this site (AIRBASE, AIRFIELD, AIRPORT, NAVAL STATION, etc.).",
            "maxLength": 16,
            "type": "string",
            "example": "AIRBASE"
          },
          "usage": {
            "description": "The use authorization type of this site (e.g MILITARY, CIVIL, JOINT-USE, etc.).",
            "maxLength": 16,
            "type": "string",
            "example": "MILITARY"
          },
          "lzUsage": {
            "description": "Indicates the normal usage of the Landing Zone (LZ).  Intended as, but not constrained to MIDB Helocopter Landing Area usage value definitions:\n\nAF - Airfield\n\nFD - Field\n\nHC - High Crop.  1 meter and over.\n\nHY - Highway\n\nLB - Lake Bed\n\nLC - Low Crop.  0-1 meters\n\nO - Other. Explain In Remarks.\n\nPD - Paddy\n\nPK - Park\n\nPS - Pasture\n\nRB - Riverbed\n\nSP - Sport Field\n\nU - Unknown\n\nZ - Inconclusive Analysis.",
            "maxLength": 3,
            "type": "string",
            "example": "AF"
          },
          "name": {
            "description": "The name of this site.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "Site Name"
          },
          "coordDatum": {
            "description": "A mathematical model of the earth used to calculate coordinates on a map. US Forces use the World Geodetic System 1984 (WGS 84), but also use maps by allied countries with local datums. The datum must be specified to ensure accuracy of coordinates. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 3,
            "type": "string",
            "example": "WGS"
          },
          "coord": {
            "description": "Indicates any of the magnitudes that serve to define the position of a point by reference to a fixed figure, system of lines, etc.\n\nPos. 1-2.  Latitude Degrees     [00-90]\n\nPos. 3-4.  Latitude Minutes     [00-59]\n\nPos. 5-6.  Latitude Seconds     [00-59]\n\nPos. 7-9.  Latitude Thousandths Of Seconds   [000-999]  \n\nPos. 10. Latitude Hemisphere       [NS] \n\nPos. 11-13. Longitude Degrees     [00-180] \n\nPos. 14-15. Longitude Minutes     [00-59] \n\nPos. 16-17. Longitude Seconds     [00-59] \n\nPos. 18-20. Longitude Thousandths Of Seconds      [000-999]\n\nPos. 21. Longitude Hemisphere     [EW]\n\nPos. 1-21.  Unknown Latitude and Unknown Longitude [000000000U000000000U].",
            "maxLength": 21,
            "type": "string",
            "example": "340000000N0430000000E"
          },
          "coordDerivAcc": {
            "format": "double",
            "description": "Indicates the plus or minus error assessed against the method used to derive the coordinate.",
            "type": "number",
            "example": 12.345
          },
          "osuffix": {
            "description": "The O-suffix associated with this site. The O-suffix is a five-character alpha/numeric system used to identify a site, or demographic area, within an installation. The Installation Basic Encyclopedia (beNumber), in conjunction with the O-suffix, uniquely identifies the Site. The Installation beNumber and oSuffix are also used in conjunction with the catCode to classify the function or purpose of the facility.",
            "maxLength": 5,
            "type": "string",
            "example": "BB002"
          },
          "iata": {
            "description": "The International Air Transport Association (IATA) code of this site, if applicable.",
            "maxLength": 3,
            "type": "string",
            "example": "AAA"
          },
          "icao": {
            "description": "The International Civil Aviation Organization (ICAO) code of this site, if applicable.",
            "maxLength": 4,
            "type": "string",
            "example": "ICA1"
          },
          "faa": {
            "description": "The Federal Aviation Administration (FAA) Location ID of this site, if applicable.",
            "maxLength": 5,
            "type": "string",
            "example": "FAA1"
          },
          "airDefArea": {
            "description": "Air Defense District (ADD) or Air Defense Area (ADA) in which the geographic coordinates reside.",
            "maxLength": 5,
            "type": "string",
            "example": "AL006"
          },
          "utm": {
            "description": "Universal Transverse Mercator (UTM) grid coordinates.\n\nPos. 1-2, UTM Zone Column   [01-60\n\nPos. 3, UTM Zone Row   [C-HJ-NP-X]\n\nPos. 4, UTM False Easting   [0-9]\n\nPos. 5-9, UTM Meter Easting    [0-9][0-9][0-9][0-9][0-9]\n\nPos. 10-11, UTM False Northing    [0-9][0-9]\n\nPos. 12-16, UTM Meter Northing    [0-9][0-9][0-9][0-9][0-9].",
            "maxLength": 16,
            "type": "string",
            "example": "19P4390691376966"
          },
          "milGridSys": {
            "description": "Indicates the grid system used in the development of the milGrid coordinates. Values are:\n\nUPS - Universal Polar System\n\nUTM - Universal Transverse Mercator.",
            "maxLength": 3,
            "type": "string",
            "example": "UTM"
          },
          "milGrid": {
            "description": "The Military Grid Reference System is the geocoordinate standard used by NATO militaries for locating points on Earth. The MGRS is derived from the Universal Transverse Mercator (UTM) grid system and the Universal Polar Stereographic (UPS) grid system, but uses a different labeling convention. The MGRS is used as geocode for the entire Earth. Example of an milgrid coordinate, or grid reference, would be 4QFJ12345678, which consists of three parts:\n\n4Q (grid zone designator, GZD)\n\nFJ (the 100,000-meter square identifier)\n\n12345678 (numerical location; easting is 1234 and northing is 5678, in this case specifying a location with 10 m resolution).",
            "maxLength": 15,
            "type": "string",
            "example": "4QFJ12345678"
          },
          "catCode": {
            "description": "The category code that represents the associated site purpose within the target system.",
            "maxLength": 16,
            "type": "string",
            "example": "20345"
          },
          "catText": {
            "description": "Textual Description of Site catCode.",
            "maxLength": 148,
            "type": "string",
            "example": "Radar Facility, General"
          },
          "wac": {
            "description": "World Aeronautical Chart identifier for the area in which a designated place is located.",
            "maxLength": 4,
            "type": "string",
            "example": "0427"
          },
          "polSubdiv": {
            "description": "Political subdivision in which the geographic coordinates reside. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 7,
            "type": "string",
            "example": "IZO7"
          },
          "geoArea": {
            "description": "Geographical region code used by the Requirements Management System (RMS) as specified by National Geospatial Agency (NGA) in Flight Information Publications (FIPS) 10-4, Appendix 3 - Country Code and Geographic Region Codes. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 2,
            "type": "string",
            "example": "E2"
          },
          "geoidalMslSep": {
            "format": "double",
            "description": "The distance between Mean Sea Level and a referenced ellipsoid, in meters.",
            "type": "number",
            "example": 12.34
          },
          "allegiance": {
            "description": "The DoD Standard Country Code designator for the country or political entity to which the site owes its allegiance. This field will be set to \"OTHR\" if the source value does not match a UDL Country code value (ISO-3166-ALPHA-2).",
            "maxLength": 4,
            "type": "string",
            "example": "OTHR"
          },
          "altAllegiance": {
            "description": "Specifies an alternate allegiance code if the data provider code is not part of an official Country Code standard such as ISO-3166 or FIPS. This field will be set to the value provided by the source and should be used for all Queries specifying allegiance.",
            "maxLength": 4,
            "type": "string",
            "example": "HL"
          },
          "classRating": {
            "description": "Indicates the importance of the entity to the OES or MIR system.  This data element is restricted to update by DIA (DB-4). Valid values are:\n\n0 - Does not meet criteria above\n\n1 - Primary importance to system\n\n2 - Secondary importance to system\n\n3 - Tertiary importance to system\n\nO - Other. Explain in Remarks.",
            "maxLength": 1,
            "type": "string",
            "example": "1"
          },
          "fpa": {
            "description": "Functional Production Area (FPA) under the Shared Production Program (SPP). Producers are defined per country per FPA. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 5,
            "type": "string",
            "example": "EOB"
          },
          "beNumber": {
            "description": "The Basic Encyclopedia Number associated with the Site. Uniquely identifies the installation of a site. The beNumber is generated based on the value input for the COORD to determine the appropriate World Aeronautical Chart (WAC) location identifier, the system assigned record originator and a one-up-number.",
            "maxLength": 10,
            "type": "string",
            "example": "0427RT1030"
          },
          "runways": {
            "format": "int16",
            "description": "The number of runways at the site, if applicable.",
            "type": "integer",
            "example": 5
          },
          "maxRunwayLength": {
            "format": "int32",
            "description": "The length of the longest runway at this site, if applicable, in meters.",
            "type": "integer",
            "example": 1000
          },
          "condition": {
            "description": "The physical manner of being or state of existence of the entity. A physical condition that must be considered in the determining of a course of action. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "RDY"
          },
          "conditionAvail": {
            "description": "Availability of the entity relative to its condition. Indicates the reason the entity is not fully operational. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "A"
          },
          "operStatus": {
            "description": "The Degree to which an entity is ready to perform the overall operational mission(s) for which it was organized and equipped. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 3,
            "type": "string",
            "example": "OPR"
          },
          "grade": {
            "format": "int32",
            "description": "Indicates the amount or degree of deviation from the horizontal represented as a percent.  Grade is determined by the formula: vertical distance (VD) divided by horizontal distance (HD) times 100. VD is the difference between the highest and  lowest elevation within the entity. HD is the linear distance between the highest and lowest elevation.",
            "type": "integer",
            "example": 5
          },
          "activity": {
            "description": "Indicates the function or mission of an entity, which that entity may or may not be engaged in at any particular time. Typically refers to a unit, organization, or installation/site performing a specific function or mission such as a redistribution center or naval shipyard. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 3,
            "type": "string",
            "example": "OCC"
          },
          "functPrimary": {
            "description": "Principal operational function being performed. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "JG"
          },
          "msnPrimary": {
            "description": "Indicates the principal type of mission that an entity is organized and equipped to perform. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "AA"
          },
          "msnPrimarySpec": {
            "description": "Indicates the principal specialty type of mission that an entity is organized and equipped to perform. The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field.  If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "AB"
          },
          "nucCap": {
            "description": "A sites ability to conduct nuclear warfare. Valid Values are:\n\nA - Nuclear Ammo Or Warheads Available\n\nN - No Nuclear Offense\n\nO - Other. Explain in Remarks\n\nU - Unknown\n\nW - Nuclear Weapons Available\n\nY - Nuclear Warfare Offensive Capability\n\nZ - Inconclusive Analysis.",
            "maxLength": 1,
            "type": "string",
            "example": "A"
          },
          "ident": {
            "description": "Estimated identity of the Site (ASSUMED FRIEND, FRIEND, HOSTILE, FAKER, JOKER, NEUTRAL, PENDING, SUSPECT, UNKNOWN): \n\nASSUMED FRIEND: Track assumed to be a friend due to the object characteristics, behavior, and/or origin.\n\nFRIEND: Track object supporting friendly forces and belonging to a declared friendly nation or entity.\n\nHOSTILE: Track object belonging to an opposing nation, party, group, or entity deemed to contribute to a threat to friendly forces or their mission due to its behavior, characteristics, nationality, or origin.\n\nFAKER: Friendly track, object, or entity acting as an exercise hostile.\n\nJOKER: Friendly track, object, or entity acting as an exercise suspect.\n\nNEUTRAL: Track object whose characteristics, behavior, nationality, and/or origin indicate that it is neither supporting nor opposing friendly forces or their mission.\n\nPENDING: Track object which has not been evaluated.\n\nSUSPECT: Track object deemed potentially hostile due to the object characteristics, behavior, nationality, and/or origin.\n\nUNKNOWN: Track object which has been evaluated and does not meet criteria for any standard identity.",
            "maxLength": 32,
            "type": "string",
            "example": "FRIEND"
          },
          "elevMsl": {
            "format": "double",
            "description": "Ground elevation of the geographic coordinates referenced to (above or below) Mean Sea Level (MSL) vertical datum, in meters.",
            "type": "number",
            "example": 123.45
          },
          "elevMslConfLvl": {
            "format": "int32",
            "description": "Indicates the confidence level expressed as a percent that a specific geometric spatial element, ELEVATION_MSL linear accuracy, has been vertically positioned to within a specified vertical accuracy.",
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "example": 50
          },
          "elevMslDerivAcc": {
            "format": "double",
            "description": "Indicates the plus or minus error assessed against the method used to derive the elevation.",
            "type": "number",
            "example": 12.34
          },
          "vegHt": {
            "format": "double",
            "description": "Maximum expected height of the vegetation in the Landing Zone (LZ), in meters.",
            "type": "number",
            "example": 3
          },
          "vegType": {
            "description": "The predominant vegetation found in the Landing Zone (LZ). The specific usage and enumerations contained in this field may be found in the documentation provided in the referenceDoc field. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 4,
            "type": "string",
            "example": "FR"
          },
          "popArea": {
            "description": "Indicates whether the facility is in or outside of a populated area. True, the facility is in or within 5 NM of a populated area. False, the facility is outside a populated area.",
            "type": "boolean",
            "example": true
          },
          "popAreaProx": {
            "format": "double",
            "description": "Indicates the distance to nearest populated area (over 1,000 people) in nautical miles.",
            "type": "number",
            "example": 12.345
          },
          "notes": {
            "description": "Optional notes/comments for the site.",
            "maxLength": 1024,
            "type": "string",
            "example": "Example Notes"
          },
          "resProd": {
            "description": "Responsible Producer - Organization that is responsible for the maintenance of the record.",
            "maxLength": 4,
            "type": "string",
            "example": "RT"
          },
          "eval": {
            "format": "int32",
            "description": "Eval represents the Intelligence Confidence Level or the Reliability/degree of confidence that the analyst has assigned to the data within this record. The numerical range is from 1 to 9 with 1 representing the highest confidence level.",
            "type": "integer",
            "example": 7
          },
          "reviewDate": {
            "format": "date",
            "description": "Date on which the data in the record was last reviewed by the responsible analyst for accuracy and currency, in ISO8601 UTC format. This date cannot be greater than the current date.",
            "type": "string",
            "example": "2008-06-10"
          },
          "recStatus": {
            "description": "Validity and currency of the data in the record to be used in conjunction with the other elements in the record as defined by SOPs.\n\nA - Active\n\nI - Inactive\n\nK - Acknowledged\n\nL - Local\n\nQ - A nominated (NOM) or Data Change Request (DCR) record\n\nR - Production reduced by CMD decision\n\nW - Working Record.",
            "maxLength": 1,
            "type": "string",
            "example": "A"
          },
          "symCode": {
            "description": "A standard scheme for symbol coding enabling the transfer, display and use of symbols and graphics among information systems, as per MIL-STD 2525B, and supported by the element ident.",
            "maxLength": 15,
            "type": "string",
            "example": "SOGPU----------"
          },
          "referenceDoc": {
            "description": "The reference documentation that specifies the usage and enumerations contained in this record. If referenceDoc not provided, users may consult the data provider.",
            "maxLength": 128,
            "type": "string",
            "example": "Provider Reference Documentation"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "SiteOperations_Abridged": {
        "description": "Site operating details concerning the hours of operation, operational limitations, site navigation, and waivers associated with the Site.",
        "required": [
          "classificationMarking",
          "idSite",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "3f28f60b-3a50-2aef-ac88-8e9d0e39912b"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idSite": {
            "description": "The ID of the parent site.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "a150b3ee-884b-b9ac-60a0-6408b4b16088"
          },
          "dailyOperations": {
            "description": "Collection providing hours of operation and other information specific to a day of the week.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DailyOperation_Abridged"
            }
          },
          "dopsLastChangedDate": {
            "format": "date-time",
            "description": "The datetime of the most recent change made to data in the DailyOperations collection, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "dopsLastChangedBy": {
            "description": "The name of the person who made the most recent change to data in the DailyOperations collection.",
            "maxLength": 50,
            "type": "string",
            "example": "John Smith"
          },
          "dopsLastChangedReason": {
            "description": "The reason for the most recent change to data in the dailyOperations collection.",
            "maxLength": 200,
            "type": "string",
            "example": "Example reason for change."
          },
          "maximumOnGrounds": {
            "description": "Collection providing maximum on ground (MOG) information for specific aircraft at the site associated with this SiteOperations record.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaximumOnGround_Abridged"
            }
          },
          "mogsLastChangedDate": {
            "format": "date-time",
            "description": "The datetime of the most recent change made to data in the MaximumOnGrounds collection, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "mogsLastChangedBy": {
            "description": "The name of the person who made the most recent change to data in the MaximumOnGrounds collection.",
            "maxLength": 50,
            "type": "string",
            "example": "Jane Doe"
          },
          "mogsLastChangedReason": {
            "description": "The reason for the most recent change to data in the MaximumOnGrounds collection.",
            "maxLength": 200,
            "type": "string",
            "example": "Example reason for change."
          },
          "operationalDeviations": {
            "description": "Collection providing relevant information in the event of deviations/exceptions to normal operations.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OperationalDeviation_Abridged"
            }
          },
          "waivers": {
            "description": "Collection documenting operational waivers that have been issued for the Site associated with this record.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Waiver_Abridged"
            }
          },
          "pathways": {
            "description": "Collection detailing operational pathways at the Site associated with this SiteOperations record.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Pathway_Abridged"
            }
          },
          "operationalPlannings": {
            "description": "Collection of planning information associated with this SiteOperations record.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OperationalPlanning_Abridged"
            }
          },
          "idLaunchSite": {
            "description": "Id of the associated launchSite entity.",
            "maxLength": 36,
            "type": "string",
            "example": "b150b3ee-884b-b9ac-60a0-6408b4b16088"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "SiteOperations_Full": {
        "description": "Site operating details concerning the hours of operation, operational limitations, site navigation, and waivers associated with the Site.",
        "required": [
          "classificationMarking",
          "idSite",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "3f28f60b-3a50-2aef-ac88-8e9d0e39912b"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idSite": {
            "description": "The ID of the parent site.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "a150b3ee-884b-b9ac-60a0-6408b4b16088"
          },
          "dailyOperations": {
            "description": "Collection providing hours of operation and other information specific to a day of the week.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DailyOperation_Full"
            }
          },
          "dopsLastChangedDate": {
            "format": "date-time",
            "description": "The datetime of the most recent change made to data in the DailyOperations collection, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "dopsLastChangedBy": {
            "description": "The name of the person who made the most recent change to data in the DailyOperations collection.",
            "maxLength": 50,
            "type": "string",
            "example": "John Smith"
          },
          "dopsLastChangedReason": {
            "description": "The reason for the most recent change to data in the dailyOperations collection.",
            "maxLength": 200,
            "type": "string",
            "example": "Example reason for change."
          },
          "maximumOnGrounds": {
            "description": "Collection providing maximum on ground (MOG) information for specific aircraft at the site associated with this SiteOperations record.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaximumOnGround_Full"
            }
          },
          "mogsLastChangedDate": {
            "format": "date-time",
            "description": "The datetime of the most recent change made to data in the MaximumOnGrounds collection, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "mogsLastChangedBy": {
            "description": "The name of the person who made the most recent change to data in the MaximumOnGrounds collection.",
            "maxLength": 50,
            "type": "string",
            "example": "Jane Doe"
          },
          "mogsLastChangedReason": {
            "description": "The reason for the most recent change to data in the MaximumOnGrounds collection.",
            "maxLength": 200,
            "type": "string",
            "example": "Example reason for change."
          },
          "operationalDeviations": {
            "description": "Collection providing relevant information in the event of deviations/exceptions to normal operations.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OperationalDeviation_Full"
            }
          },
          "waivers": {
            "description": "Collection documenting operational waivers that have been issued for the Site associated with this record.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Waiver_Full"
            }
          },
          "pathways": {
            "description": "Collection detailing operational pathways at the Site associated with this SiteOperations record.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Pathway_Full"
            }
          },
          "operationalPlannings": {
            "description": "Collection of planning information associated with this SiteOperations record.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OperationalPlanning_Full"
            }
          },
          "idLaunchSite": {
            "description": "Id of the associated launchSite entity.",
            "maxLength": 36,
            "type": "string",
            "example": "b150b3ee-884b-b9ac-60a0-6408b4b16088"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "SiteOperations_Ingest": {
        "description": "Site operating details concerning the hours of operation, operational limitations, site navigation, and waivers associated with the Site.",
        "required": [
          "classificationMarking",
          "idSite",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "3f28f60b-3a50-2aef-ac88-8e9d0e39912b"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idSite": {
            "description": "The ID of the parent site.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "a150b3ee-884b-b9ac-60a0-6408b4b16088"
          },
          "dailyOperations": {
            "description": "Collection providing hours of operation and other information specific to a day of the week.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DailyOperation_Ingest"
            }
          },
          "dopsLastChangedDate": {
            "format": "date-time",
            "description": "The datetime of the most recent change made to data in the DailyOperations collection, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "dopsLastChangedBy": {
            "description": "The name of the person who made the most recent change to data in the DailyOperations collection.",
            "maxLength": 50,
            "type": "string",
            "example": "John Smith"
          },
          "dopsLastChangedReason": {
            "description": "The reason for the most recent change to data in the dailyOperations collection.",
            "maxLength": 200,
            "type": "string",
            "example": "Example reason for change."
          },
          "maximumOnGrounds": {
            "description": "Collection providing maximum on ground (MOG) information for specific aircraft at the site associated with this SiteOperations record.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaximumOnGround_Ingest"
            }
          },
          "mogsLastChangedDate": {
            "format": "date-time",
            "description": "The datetime of the most recent change made to data in the MaximumOnGrounds collection, in ISO 8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "mogsLastChangedBy": {
            "description": "The name of the person who made the most recent change to data in the MaximumOnGrounds collection.",
            "maxLength": 50,
            "type": "string",
            "example": "Jane Doe"
          },
          "mogsLastChangedReason": {
            "description": "The reason for the most recent change to data in the MaximumOnGrounds collection.",
            "maxLength": 200,
            "type": "string",
            "example": "Example reason for change."
          },
          "operationalDeviations": {
            "description": "Collection providing relevant information in the event of deviations/exceptions to normal operations.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OperationalDeviation_Ingest"
            }
          },
          "waivers": {
            "description": "Collection documenting operational waivers that have been issued for the Site associated with this record.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Waiver_Ingest"
            }
          },
          "pathways": {
            "description": "Collection detailing operational pathways at the Site associated with this SiteOperations record.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Pathway_Ingest"
            }
          },
          "operationalPlannings": {
            "description": "Collection of planning information associated with this SiteOperations record.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OperationalPlanning_Ingest"
            }
          },
          "idLaunchSite": {
            "description": "Id of the associated launchSite entity.",
            "maxLength": 36,
            "type": "string",
            "example": "b150b3ee-884b-b9ac-60a0-6408b4b16088"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "SiteRemark_Abridged": {
        "description": "Remarks contain amplifying information for a specific service. The information may contain context and interpretations for consumer use.\n",
        "required": [
          "classificationMarking",
          "idSite",
          "text",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "5000a3ef-8e39-2551-80f1-b3cd1895fe7b"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idSite": {
            "description": "The ID of the site to which this remark applies.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "SITE-ID"
          },
          "origRmkId": {
            "description": "Unique identifier of the Site Remark record from the originating system.",
            "maxLength": 36,
            "type": "string",
            "example": "123456ABC"
          },
          "name": {
            "description": "The name of the remark.",
            "maxLength": 64,
            "type": "string",
            "example": "Remark name"
          },
          "type": {
            "description": "The remark type (e.g. Caution, Information, Misc, Restriction, etc.).",
            "maxLength": 64,
            "type": "string",
            "example": "Restriction"
          },
          "text": {
            "description": "The text of the remark.",
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "example": "This is a remark"
          },
          "code": {
            "description": "The remark type identifier. \nFor example, the Mobility Air Forces (MAF) remark code, defined in the Airfield Suitability and Restriction Report (ASRR).",
            "maxLength": 16,
            "type": "string",
            "example": "M"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "SiteRemark_Full": {
        "description": "Remarks contain amplifying information for a specific service. The information may contain context and interpretations for consumer use.\n",
        "required": [
          "classificationMarking",
          "idSite",
          "text",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "5000a3ef-8e39-2551-80f1-b3cd1895fe7b"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idSite": {
            "description": "The ID of the site to which this remark applies.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "SITE-ID"
          },
          "origRmkId": {
            "description": "Unique identifier of the Site Remark record from the originating system.",
            "maxLength": 36,
            "type": "string",
            "example": "123456ABC"
          },
          "name": {
            "description": "The name of the remark.",
            "maxLength": 64,
            "type": "string",
            "example": "Remark name"
          },
          "type": {
            "description": "The remark type (e.g. Caution, Information, Misc, Restriction, etc.).",
            "maxLength": 64,
            "type": "string",
            "example": "Restriction"
          },
          "text": {
            "description": "The text of the remark.",
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "example": "This is a remark"
          },
          "code": {
            "description": "The remark type identifier. \nFor example, the Mobility Air Forces (MAF) remark code, defined in the Airfield Suitability and Restriction Report (ASRR).",
            "maxLength": 16,
            "type": "string",
            "example": "M"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "SiteRemark_Ingest": {
        "description": "Remarks contain amplifying information for a specific service. The information may contain context and interpretations for consumer use.\n",
        "required": [
          "classificationMarking",
          "idSite",
          "text",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "5000a3ef-8e39-2551-80f1-b3cd1895fe7b"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idSite": {
            "description": "The ID of the site to which this remark applies.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "SITE-ID"
          },
          "origRmkId": {
            "description": "Unique identifier of the Site Remark record from the originating system.",
            "maxLength": 36,
            "type": "string",
            "example": "123456ABC"
          },
          "name": {
            "description": "The name of the remark.",
            "maxLength": 64,
            "type": "string",
            "example": "Remark name"
          },
          "type": {
            "description": "The remark type (e.g. Caution, Information, Misc, Restriction, etc.).",
            "maxLength": 64,
            "type": "string",
            "example": "Restriction"
          },
          "text": {
            "description": "The text of the remark.",
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "example": "This is a remark"
          },
          "code": {
            "description": "The remark type identifier. \nFor example, the Mobility Air Forces (MAF) remark code, defined in the Airfield Suitability and Restriction Report (ASRR).",
            "maxLength": 16,
            "type": "string",
            "example": "M"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "SiteStatus_Abridged": {
        "required": [
          "classificationMarking",
          "idSite",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "SITESTATUS-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idSite": {
            "description": "The ID of the site, if this status is associated with a fixed site or platform.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "41e3e554-9790-40b9-bd7b-f30d864dcad8"
          },
          "siteType": {
            "description": "Optional site type or further detail of type.  Intended for, but not limited to, Link-16 site type specifications (e.g. ADOC, GACC, SOC, TACC, etc.).",
            "maxLength": 36,
            "type": "string",
            "example": "ADOC"
          },
          "mobileAltId": {
            "description": "Alternate Identifier for a mobile or transportable platform provided by source.",
            "maxLength": 36,
            "type": "string",
            "example": "MOBILEALT-ID"
          },
          "poiid": {
            "description": "The POI (point of interest) ID related to this platform, if available.",
            "maxLength": 36,
            "type": "string",
            "example": "d4a91864-6140-4b8d-67cd-45421c75f696"
          },
          "trackId": {
            "description": "The track ID related to this platform (if mobile or transportable), if available.",
            "maxLength": 36,
            "type": "string",
            "example": "PCM4923-1656174732-4-1-257"
          },
          "trackRefL16": {
            "description": "Link-16 specific reference track number.",
            "maxLength": 5,
            "type": "string",
            "example": "TrkNm"
          },
          "opsCapability": {
            "description": "The operational status of the platform (e.g. Fully Operational, Partially Operational, Not Operational, etc.).",
            "maxLength": 24,
            "type": "string",
            "example": "Fully Operational"
          },
          "instStatus": {
            "description": "The status of the installation.\n\nFMC - Fully Mission Capable\n\n PMC - Partially Mission Capable\n\nNMC - Non Mission Capable\n\nUNK - Unknown.",
            "maxLength": 3,
            "enum": [
              "FMC",
              "PMC",
              "NMC",
              "UNK"
            ],
            "type": "string",
            "example": "PMC"
          },
          "fpcon": {
            "description": "Force Protection Condition (FPCON).\n\n\n\nNORMAL - Applies when a general global threat of possible terrorist activity exists and warrants a routine security posture.\n\nALPHA - Applies when an increased general threat of possible terrorist activity against personnel or facilities. Nature and extent of threat are unpredictable.\n\nBRAVO - Applies when an increased or predictable threat of terrorist activity exists.\n\nCHARLIE - Applies when an incident occurs or intelligence is received indicating some form of terrorist action against personnel and facilities is imminent.\n\nDELTA - Applies in the immediate area where an attack has occurred or when intelligence is received indicating terrorist action against a location is imminent.",
            "maxLength": 7,
            "enum": [
              "NORMAL",
              "ALPHA",
              "BRAVO",
              "CHARLIE",
              "DELTA"
            ],
            "type": "string",
            "example": "BRAVO"
          },
          "hpcon": {
            "description": "Health Protection Condition (HPCON).\n\n\n\n0 - Routine, no community transmission.\n\nALPHA - Limited, community transmission beginning.\n\nBRAVO - Moderate, increased community transmission.\n\nCHARLIE - Substantial, sustained community transmission.\n\nDELTA - Severe, widespread community transmission.",
            "maxLength": 7,
            "enum": [
              "0",
              "ALPHA",
              "BRAVO",
              "CHARLIE",
              "DELTA"
            ],
            "type": "string",
            "example": "CHARLIE"
          },
          "cpcon": {
            "description": "Cyberspace Protection Condition (CPCON).\n\n\n\n1 - VERY HIGH - Critical functions.\n\n2 - HIGH - Critical and essential functions.\n\n3 - MEDIUM - Critical, essential, and support functions.\n\n4 - LOW - All functions.\n\n5 - VERY LOW - All functions.",
            "maxLength": 1,
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5"
            ],
            "type": "string",
            "example": "4"
          },
          "reportTime": {
            "format": "date-time",
            "description": "Time of report, in ISO8601 UTC format.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123Z"
          },
          "timeFunction": {
            "description": "Description of the time function associated with the reportTime (e.g. Activation, Deactivation, Arrival, Departure, etc.), if applicable.",
            "maxLength": 24,
            "type": "string",
            "example": "Activation"
          },
          "weatherMessage": {
            "description": "Description of the current weather conditions over a site.",
            "maxLength": 512,
            "type": "string",
            "example": "Heavy rain"
          },
          "pes": {
            "description": "Position Engagement Status flag, Indicating whether this platform is initiating multiple simultaneous engagements.  A value of 1/True indicates the platform is initiating multiple simultaneous engagements.",
            "type": "boolean",
            "example": true
          },
          "hotInventory": {
            "format": "int32",
            "description": "Estimated number of hot missiles of all types remaining in weapons system inventory.",
            "type": "integer",
            "example": 1
          },
          "coldInventory": {
            "format": "int32",
            "description": "Estimated number of cold missiles of all types remaining in weapons system inventory.",
            "type": "integer",
            "example": 1
          },
          "samMode": {
            "description": "The state of a SAM unit (e.g. Initialization, Standby, Reorientation, etc.).",
            "maxLength": 48,
            "type": "string",
            "example": "Initialization"
          },
          "radiateMode": {
            "description": "SAM sensor radar surveillance mode (Active, Passive, Off).",
            "maxLength": 24,
            "type": "string",
            "example": "Active"
          },
          "opsImpairment": {
            "description": "The primary component degrading the operational capability of the platform or system.",
            "maxLength": 48,
            "type": "string",
            "example": "opsImpairment"
          },
          "commImpairment": {
            "description": "The communications component causing the platform or system to be less than fully operational.",
            "maxLength": 24,
            "type": "string",
            "example": "commImpairment"
          },
          "cat": {
            "description": "Crisis Action Team (CAT).\n\n\n\nCOLD - Not in use.\n\nWARM - Facility prepped/possible skeleton crew.\n\nHOT - Fully active.\n\n",
            "maxLength": 4,
            "enum": [
              "COLD",
              "WARM",
              "HOT"
            ],
            "type": "string",
            "example": "COLD"
          },
          "eoc": {
            "description": "Emergency Operations Center (EOC) status.\n\n\n\nCOLD - Not in use.\n\nWARM - Facility prepped/possible skeleton crew.\n\nHOT - Fully active.\n\n",
            "maxLength": 4,
            "enum": [
              "COLD",
              "WARM",
              "HOT"
            ],
            "type": "string",
            "example": "WARM"
          },
          "link": {
            "description": "Array of Link item(s) for which status is available and reported (ATDL, IJMS,  LINK-1, LINK-11, LINK-11B, LINK-16).  This array must be the same length as the linkStatus array.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ATDL",
              "IJMS",
              "LINK-1"
            ]
          },
          "linkStatus": {
            "description": "Array of the status (AVAILABLE, DEGRADED, NOT AVAILABLE, etc.) for each links in the link array. This array must be the same length as the link array, and the status must correspond to the appropriate position index in the link array.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "AVAILABLE",
              "DEGRADED",
              "NOT AVAILABLE"
            ]
          },
          "radarSystem": {
            "description": "Array of radar system(s) for which status is available and reported (ACQUISITION, IFFSIF, ILLUMINATING, MODE-4, PRIMARY SURVEILLANCE, SECONDARY SURVEILLANCE, TERTIARY SURVEILLANCE). This array must be the same length as the radarStatus array.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ILLUMINATING",
              "MODE-4",
              "MODE-3"
            ]
          },
          "radarStatus": {
            "description": "Array of the status (NON-OPERATIONAL, OPERATIONAL, OFF) for each radar system in the radarSystem array. This array must be the same length as the radarSystem array, and the status must correspond to the appropriate position index in the radarSystem array.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "OPERATIONAL",
              "OFF",
              "NON-OPERATIONAL"
            ]
          },
          "missile": {
            "description": "Array of specific missile types for which an estimated inventory count is available (e.g. GMD TYPE A, HARPOON, TOMAHAWK, etc.).  This array must be the same length as the missileInventory array.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "GMD",
              "HARPOON",
              "JAVELIN"
            ]
          },
          "missileInventory": {
            "description": "Array of the quantity of each of the missile items.  This array must be the same length as the missile array, and the values must correspond to appropriate position index in the missile array.",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "example": [
              5,
              10,
              100
            ]
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "SiteStatus_Full": {
        "required": [
          "classificationMarking",
          "idSite",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "SITESTATUS-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idSite": {
            "description": "The ID of the site, if this status is associated with a fixed site or platform.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "41e3e554-9790-40b9-bd7b-f30d864dcad8"
          },
          "siteType": {
            "description": "Optional site type or further detail of type.  Intended for, but not limited to, Link-16 site type specifications (e.g. ADOC, GACC, SOC, TACC, etc.).",
            "maxLength": 36,
            "type": "string",
            "example": "ADOC"
          },
          "mobileAltId": {
            "description": "Alternate Identifier for a mobile or transportable platform provided by source.",
            "maxLength": 36,
            "type": "string",
            "example": "MOBILEALT-ID"
          },
          "poiid": {
            "description": "The POI (point of interest) ID related to this platform, if available.",
            "maxLength": 36,
            "type": "string",
            "example": "d4a91864-6140-4b8d-67cd-45421c75f696"
          },
          "trackId": {
            "description": "The track ID related to this platform (if mobile or transportable), if available.",
            "maxLength": 36,
            "type": "string",
            "example": "PCM4923-1656174732-4-1-257"
          },
          "trackRefL16": {
            "description": "Link-16 specific reference track number.",
            "maxLength": 5,
            "type": "string",
            "example": "TrkNm"
          },
          "opsCapability": {
            "description": "The operational status of the platform (e.g. Fully Operational, Partially Operational, Not Operational, etc.).",
            "maxLength": 24,
            "type": "string",
            "example": "Fully Operational"
          },
          "instStatus": {
            "description": "The status of the installation.\n\nFMC - Fully Mission Capable\n\n PMC - Partially Mission Capable\n\nNMC - Non Mission Capable\n\nUNK - Unknown.",
            "maxLength": 3,
            "enum": [
              "FMC",
              "PMC",
              "NMC",
              "UNK"
            ],
            "type": "string",
            "example": "PMC"
          },
          "fpcon": {
            "description": "Force Protection Condition (FPCON).\n\n\n\nNORMAL - Applies when a general global threat of possible terrorist activity exists and warrants a routine security posture.\n\nALPHA - Applies when an increased general threat of possible terrorist activity against personnel or facilities. Nature and extent of threat are unpredictable.\n\nBRAVO - Applies when an increased or predictable threat of terrorist activity exists.\n\nCHARLIE - Applies when an incident occurs or intelligence is received indicating some form of terrorist action against personnel and facilities is imminent.\n\nDELTA - Applies in the immediate area where an attack has occurred or when intelligence is received indicating terrorist action against a location is imminent.",
            "maxLength": 7,
            "enum": [
              "NORMAL",
              "ALPHA",
              "BRAVO",
              "CHARLIE",
              "DELTA"
            ],
            "type": "string",
            "example": "BRAVO"
          },
          "hpcon": {
            "description": "Health Protection Condition (HPCON).\n\n\n\n0 - Routine, no community transmission.\n\nALPHA - Limited, community transmission beginning.\n\nBRAVO - Moderate, increased community transmission.\n\nCHARLIE - Substantial, sustained community transmission.\n\nDELTA - Severe, widespread community transmission.",
            "maxLength": 7,
            "enum": [
              "0",
              "ALPHA",
              "BRAVO",
              "CHARLIE",
              "DELTA"
            ],
            "type": "string",
            "example": "CHARLIE"
          },
          "cpcon": {
            "description": "Cyberspace Protection Condition (CPCON).\n\n\n\n1 - VERY HIGH - Critical functions.\n\n2 - HIGH - Critical and essential functions.\n\n3 - MEDIUM - Critical, essential, and support functions.\n\n4 - LOW - All functions.\n\n5 - VERY LOW - All functions.",
            "maxLength": 1,
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5"
            ],
            "type": "string",
            "example": "4"
          },
          "reportTime": {
            "format": "date-time",
            "description": "Time of report, in ISO8601 UTC format.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123Z"
          },
          "timeFunction": {
            "description": "Description of the time function associated with the reportTime (e.g. Activation, Deactivation, Arrival, Departure, etc.), if applicable.",
            "maxLength": 24,
            "type": "string",
            "example": "Activation"
          },
          "weatherMessage": {
            "description": "Description of the current weather conditions over a site.",
            "maxLength": 512,
            "type": "string",
            "example": "Heavy rain"
          },
          "pes": {
            "description": "Position Engagement Status flag, Indicating whether this platform is initiating multiple simultaneous engagements.  A value of 1/True indicates the platform is initiating multiple simultaneous engagements.",
            "type": "boolean",
            "example": true
          },
          "hotInventory": {
            "format": "int32",
            "description": "Estimated number of hot missiles of all types remaining in weapons system inventory.",
            "type": "integer",
            "example": 1
          },
          "coldInventory": {
            "format": "int32",
            "description": "Estimated number of cold missiles of all types remaining in weapons system inventory.",
            "type": "integer",
            "example": 1
          },
          "samMode": {
            "description": "The state of a SAM unit (e.g. Initialization, Standby, Reorientation, etc.).",
            "maxLength": 48,
            "type": "string",
            "example": "Initialization"
          },
          "radiateMode": {
            "description": "SAM sensor radar surveillance mode (Active, Passive, Off).",
            "maxLength": 24,
            "type": "string",
            "example": "Active"
          },
          "opsImpairment": {
            "description": "The primary component degrading the operational capability of the platform or system.",
            "maxLength": 48,
            "type": "string",
            "example": "opsImpairment"
          },
          "commImpairment": {
            "description": "The communications component causing the platform or system to be less than fully operational.",
            "maxLength": 24,
            "type": "string",
            "example": "commImpairment"
          },
          "cat": {
            "description": "Crisis Action Team (CAT).\n\n\n\nCOLD - Not in use.\n\nWARM - Facility prepped/possible skeleton crew.\n\nHOT - Fully active.\n\n",
            "maxLength": 4,
            "enum": [
              "COLD",
              "WARM",
              "HOT"
            ],
            "type": "string",
            "example": "COLD"
          },
          "eoc": {
            "description": "Emergency Operations Center (EOC) status.\n\n\n\nCOLD - Not in use.\n\nWARM - Facility prepped/possible skeleton crew.\n\nHOT - Fully active.\n\n",
            "maxLength": 4,
            "enum": [
              "COLD",
              "WARM",
              "HOT"
            ],
            "type": "string",
            "example": "WARM"
          },
          "link": {
            "description": "Array of Link item(s) for which status is available and reported (ATDL, IJMS,  LINK-1, LINK-11, LINK-11B, LINK-16).  This array must be the same length as the linkStatus array.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ATDL",
              "IJMS",
              "LINK-1"
            ]
          },
          "linkStatus": {
            "description": "Array of the status (AVAILABLE, DEGRADED, NOT AVAILABLE, etc.) for each links in the link array. This array must be the same length as the link array, and the status must correspond to the appropriate position index in the link array.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "AVAILABLE",
              "DEGRADED",
              "NOT AVAILABLE"
            ]
          },
          "radarSystem": {
            "description": "Array of radar system(s) for which status is available and reported (ACQUISITION, IFFSIF, ILLUMINATING, MODE-4, PRIMARY SURVEILLANCE, SECONDARY SURVEILLANCE, TERTIARY SURVEILLANCE). This array must be the same length as the radarStatus array.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ILLUMINATING",
              "MODE-4",
              "MODE-3"
            ]
          },
          "radarStatus": {
            "description": "Array of the status (NON-OPERATIONAL, OPERATIONAL, OFF) for each radar system in the radarSystem array. This array must be the same length as the radarSystem array, and the status must correspond to the appropriate position index in the radarSystem array.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "OPERATIONAL",
              "OFF",
              "NON-OPERATIONAL"
            ]
          },
          "missile": {
            "description": "Array of specific missile types for which an estimated inventory count is available (e.g. GMD TYPE A, HARPOON, TOMAHAWK, etc.).  This array must be the same length as the missileInventory array.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "GMD",
              "HARPOON",
              "JAVELIN"
            ]
          },
          "missileInventory": {
            "description": "Array of the quantity of each of the missile items.  This array must be the same length as the missile array, and the values must correspond to appropriate position index in the missile array.",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "example": [
              5,
              10,
              100
            ]
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "SiteStatus_Ingest": {
        "required": [
          "classificationMarking",
          "idSite",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "SITESTATUS-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idSite": {
            "description": "The ID of the site, if this status is associated with a fixed site or platform.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "41e3e554-9790-40b9-bd7b-f30d864dcad8"
          },
          "siteType": {
            "description": "Optional site type or further detail of type.  Intended for, but not limited to, Link-16 site type specifications (e.g. ADOC, GACC, SOC, TACC, etc.).",
            "maxLength": 36,
            "type": "string",
            "example": "ADOC"
          },
          "mobileAltId": {
            "description": "Alternate Identifier for a mobile or transportable platform provided by source.",
            "maxLength": 36,
            "type": "string",
            "example": "MOBILEALT-ID"
          },
          "poiid": {
            "description": "The POI (point of interest) ID related to this platform, if available.",
            "maxLength": 36,
            "type": "string",
            "example": "d4a91864-6140-4b8d-67cd-45421c75f696"
          },
          "trackId": {
            "description": "The track ID related to this platform (if mobile or transportable), if available.",
            "maxLength": 36,
            "type": "string",
            "example": "PCM4923-1656174732-4-1-257"
          },
          "trackRefL16": {
            "description": "Link-16 specific reference track number.",
            "maxLength": 5,
            "type": "string",
            "example": "TrkNm"
          },
          "opsCapability": {
            "description": "The operational status of the platform (e.g. Fully Operational, Partially Operational, Not Operational, etc.).",
            "maxLength": 24,
            "type": "string",
            "example": "Fully Operational"
          },
          "instStatus": {
            "description": "The status of the installation.\n\nFMC - Fully Mission Capable\n\n PMC - Partially Mission Capable\n\nNMC - Non Mission Capable\n\nUNK - Unknown.",
            "maxLength": 3,
            "enum": [
              "FMC",
              "PMC",
              "NMC",
              "UNK"
            ],
            "type": "string",
            "example": "PMC"
          },
          "fpcon": {
            "description": "Force Protection Condition (FPCON).\n\n\n\nNORMAL - Applies when a general global threat of possible terrorist activity exists and warrants a routine security posture.\n\nALPHA - Applies when an increased general threat of possible terrorist activity against personnel or facilities. Nature and extent of threat are unpredictable.\n\nBRAVO - Applies when an increased or predictable threat of terrorist activity exists.\n\nCHARLIE - Applies when an incident occurs or intelligence is received indicating some form of terrorist action against personnel and facilities is imminent.\n\nDELTA - Applies in the immediate area where an attack has occurred or when intelligence is received indicating terrorist action against a location is imminent.",
            "maxLength": 7,
            "enum": [
              "NORMAL",
              "ALPHA",
              "BRAVO",
              "CHARLIE",
              "DELTA"
            ],
            "type": "string",
            "example": "BRAVO"
          },
          "hpcon": {
            "description": "Health Protection Condition (HPCON).\n\n\n\n0 - Routine, no community transmission.\n\nALPHA - Limited, community transmission beginning.\n\nBRAVO - Moderate, increased community transmission.\n\nCHARLIE - Substantial, sustained community transmission.\n\nDELTA - Severe, widespread community transmission.",
            "maxLength": 7,
            "enum": [
              "0",
              "ALPHA",
              "BRAVO",
              "CHARLIE",
              "DELTA"
            ],
            "type": "string",
            "example": "CHARLIE"
          },
          "cpcon": {
            "description": "Cyberspace Protection Condition (CPCON).\n\n\n\n1 - VERY HIGH - Critical functions.\n\n2 - HIGH - Critical and essential functions.\n\n3 - MEDIUM - Critical, essential, and support functions.\n\n4 - LOW - All functions.\n\n5 - VERY LOW - All functions.",
            "maxLength": 1,
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5"
            ],
            "type": "string",
            "example": "4"
          },
          "reportTime": {
            "format": "date-time",
            "description": "Time of report, in ISO8601 UTC format.",
            "type": "string",
            "example": "2021-01-01T01:01:01.123Z"
          },
          "timeFunction": {
            "description": "Description of the time function associated with the reportTime (e.g. Activation, Deactivation, Arrival, Departure, etc.), if applicable.",
            "maxLength": 24,
            "type": "string",
            "example": "Activation"
          },
          "weatherMessage": {
            "description": "Description of the current weather conditions over a site.",
            "maxLength": 512,
            "type": "string",
            "example": "Heavy rain"
          },
          "pes": {
            "description": "Position Engagement Status flag, Indicating whether this platform is initiating multiple simultaneous engagements.  A value of 1/True indicates the platform is initiating multiple simultaneous engagements.",
            "type": "boolean",
            "example": true
          },
          "hotInventory": {
            "format": "int32",
            "description": "Estimated number of hot missiles of all types remaining in weapons system inventory.",
            "type": "integer",
            "example": 1
          },
          "coldInventory": {
            "format": "int32",
            "description": "Estimated number of cold missiles of all types remaining in weapons system inventory.",
            "type": "integer",
            "example": 1
          },
          "samMode": {
            "description": "The state of a SAM unit (e.g. Initialization, Standby, Reorientation, etc.).",
            "maxLength": 48,
            "type": "string",
            "example": "Initialization"
          },
          "radiateMode": {
            "description": "SAM sensor radar surveillance mode (Active, Passive, Off).",
            "maxLength": 24,
            "type": "string",
            "example": "Active"
          },
          "opsImpairment": {
            "description": "The primary component degrading the operational capability of the platform or system.",
            "maxLength": 48,
            "type": "string",
            "example": "opsImpairment"
          },
          "commImpairment": {
            "description": "The communications component causing the platform or system to be less than fully operational.",
            "maxLength": 24,
            "type": "string",
            "example": "commImpairment"
          },
          "cat": {
            "description": "Crisis Action Team (CAT).\n\n\n\nCOLD - Not in use.\n\nWARM - Facility prepped/possible skeleton crew.\n\nHOT - Fully active.\n\n",
            "maxLength": 4,
            "enum": [
              "COLD",
              "WARM",
              "HOT"
            ],
            "type": "string",
            "example": "COLD"
          },
          "eoc": {
            "description": "Emergency Operations Center (EOC) status.\n\n\n\nCOLD - Not in use.\n\nWARM - Facility prepped/possible skeleton crew.\n\nHOT - Fully active.\n\n",
            "maxLength": 4,
            "enum": [
              "COLD",
              "WARM",
              "HOT"
            ],
            "type": "string",
            "example": "WARM"
          },
          "link": {
            "description": "Array of Link item(s) for which status is available and reported (ATDL, IJMS,  LINK-1, LINK-11, LINK-11B, LINK-16).  This array must be the same length as the linkStatus array.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ATDL",
              "IJMS",
              "LINK-1"
            ]
          },
          "linkStatus": {
            "description": "Array of the status (AVAILABLE, DEGRADED, NOT AVAILABLE, etc.) for each links in the link array. This array must be the same length as the link array, and the status must correspond to the appropriate position index in the link array.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "AVAILABLE",
              "DEGRADED",
              "NOT AVAILABLE"
            ]
          },
          "radarSystem": {
            "description": "Array of radar system(s) for which status is available and reported (ACQUISITION, IFFSIF, ILLUMINATING, MODE-4, PRIMARY SURVEILLANCE, SECONDARY SURVEILLANCE, TERTIARY SURVEILLANCE). This array must be the same length as the radarStatus array.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ILLUMINATING",
              "MODE-4",
              "MODE-3"
            ]
          },
          "radarStatus": {
            "description": "Array of the status (NON-OPERATIONAL, OPERATIONAL, OFF) for each radar system in the radarSystem array. This array must be the same length as the radarSystem array, and the status must correspond to the appropriate position index in the radarSystem array.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "OPERATIONAL",
              "OFF",
              "NON-OPERATIONAL"
            ]
          },
          "missile": {
            "description": "Array of specific missile types for which an estimated inventory count is available (e.g. GMD TYPE A, HARPOON, TOMAHAWK, etc.).  This array must be the same length as the missileInventory array.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "GMD",
              "HARPOON",
              "JAVELIN"
            ]
          },
          "missileInventory": {
            "description": "Array of the quantity of each of the missile items.  This array must be the same length as the missile array, and the values must correspond to appropriate position index in the missile array.",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "example": [
              5,
              10,
              100
            ]
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "SolarArray_Full": {
        "description": "Model representation of information on on-orbit/spacecraft solar arrays. A spacecraft may have multiple solar arrays and each solar array can have multiple 'details' records compiled by different sources.",
        "required": [
          "name",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "SOLARARRAY-ID"
          },
          "name": {
            "description": "Solar Array name.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "Solar1"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "solarArrayDetails": {
            "description": "Read-only collection of additional SolarArrayDetails by various sources for this organization, ignored on create/update. These details must be created separately via the /udl/solararraydetails operations.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SolarArrayDetails_Full"
            },
            "readOnly": true
          }
        }
      },
      "SolarArrayDetails_Full": {
        "description": "Model representation of Information on spacecraft SolarArrayDetails. A SolarArray may have multiple details records compiled by various sources.",
        "required": [
          "idSolarArray",
          "classificationMarking",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "SOLARARRAYDETAILS-ID"
          },
          "idSolarArray": {
            "description": "Unique identifier of the parent SolarArray.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "SOLARARRAY-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "type": {
            "description": "Type of solar array (e.g. U Shaped).",
            "maxLength": 64,
            "type": "string",
            "example": "U Shaped"
          },
          "technology": {
            "description": "Solar array technology (e.g. Ga-As).",
            "maxLength": 64,
            "type": "string",
            "example": "Ga-As"
          },
          "junctionTechnology": {
            "description": "Solar array junction technology (e.g. Triple).",
            "maxLength": 64,
            "type": "string",
            "example": "Triple"
          },
          "manufacturerOrgId": {
            "description": "Unique identifier of the organization that manufactures the solar array.",
            "maxLength": 36,
            "type": "string",
            "example": "MANUFACTURERORG-ID"
          },
          "span": {
            "format": "double",
            "description": "Solar Array span in meters.",
            "type": "number",
            "example": 123.4
          },
          "area": {
            "format": "double",
            "description": "Solar Array area in square meters.",
            "type": "number",
            "example": 123.4
          },
          "description": {
            "description": "Solar array description/notes.",
            "maxLength": 2147483647,
            "type": "string",
            "example": "Example notes"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "ORIG"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "tags": {
            "description": "Optional array of provider/source specific tags for this data, where each element is no longer than 32 characters, used for implementing data owner conditional access controls to restrict access to the data. Should be left null by data providers unless conditional access controls are coordinated with the UDL team.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "TAG1",
              "TAG2"
            ]
          },
          "manufacturerOrg": {
            "$ref": "#/components/schemas/Organization_Full"
          }
        }
      },
      "Status_Full": {
        "description": "Status for a particular Entity. An entity may have multiple status records collected by various sources.",
        "required": [
          "classificationMarking",
          "idEntity",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "STATUS-ID"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "derivedFrom": {
            "description": "The sources or SCG references from which the classification of this data is derived.",
            "maxLength": 128,
            "type": "string",
            "example": "SOME_SOURCE"
          },
          "declassificationDate": {
            "format": "date-time",
            "description": "The declassification date of this data, in ISO 8601 UTC format.",
            "type": "string",
            "example": "2021-01-01T01:02:02.123Z"
          },
          "declassificationString": {
            "description": "Declassification string of this data.",
            "maxLength": 256,
            "type": "string",
            "example": "U"
          },
          "idEntity": {
            "description": "Unique identifier of the parent entity.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "ENTITY-ID"
          },
          "state": {
            "description": "Overall state of the entity, if applicable (e.g. UNKNOWN, DEAD, ACTIVE, RF ACTIVE, STANDBY).",
            "maxLength": 16,
            "enum": [
              "UNKNOWN",
              "DEAD",
              "ACTIVE",
              "RF ACTIVE",
              "STANDBY"
            ],
            "type": "string",
            "example": "ACTIVE"
          },
          "sysCap": {
            "description": "System capability of the entity, if applicable (e.g. FMC, NMC, PMC, UNK).",
            "maxLength": 3,
            "enum": [
              "FMC",
              "NMC",
              "PMC",
              "UNK"
            ],
            "type": "string",
            "example": "FMC"
          },
          "opsCap": {
            "description": "Operation capability of the entity, if applicable (e.g. FMC, NMC, PMC, UNK).",
            "maxLength": 3,
            "enum": [
              "FMC",
              "NMC",
              "PMC",
              "UNK"
            ],
            "type": "string",
            "example": "FMC"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "subStatusCollection": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubStatus_Full"
            }
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "notes": {
            "description": "Comments describing the status creation and or updates to an entity.",
            "type": "string",
            "example": "Example Notes"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "TST1"
          }
        }
      },
      "SubStatus_Full": {
        "description": "Additional sub-system or capability status for the parent entity.",
        "required": [
          "type",
          "classificationMarking",
          "statusId",
          "status",
          "notes",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "SUBSTATUS-ID"
          },
          "type": {
            "description": "Parent entity's sub-system or capability status: mwCap, mdCap, ssCap, etc.",
            "maxLength": 16,
            "minLength": 1,
            "enum": [
              "mwCap",
              "ssCap",
              "mdCap"
            ],
            "type": "string",
            "example": "mdCap"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "statusId": {
            "description": "Id of the parent status.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "REF-STATUS-ID"
          },
          "status": {
            "description": "Status of the sub-system/capability, e.g. FMC, NMC, PMC, UNK.",
            "maxLength": 16,
            "minLength": 1,
            "enum": [
              "FMC",
              "NMC",
              "PMC",
              "UNK"
            ],
            "type": "string",
            "example": "FMC"
          },
          "notes": {
            "description": "Descriptions and/or comments associated with the sub-status.",
            "maxLength": 4096,
            "minLength": 1,
            "type": "string",
            "example": "Sample Notes"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "TST1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2018-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          }
        }
      },
      "Surface_Abridged": {
        "description": "Surface information contains properties related to an airfield's runway, taxiway, and parking. The surface types and characteristics can dictate the airfield's capability of hosting a specific aircraft.",
        "required": [
          "classificationMarking",
          "name",
          "type",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "be831d39-1822-da9f-7ace-6cc5643397dc"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "name": {
            "description": "The surface name or identifier.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "West lot"
          },
          "type": {
            "description": "The surface type of this record (e.g. RUNWAY, TAXIWAY, PARKING).",
            "maxLength": 7,
            "minLength": 1,
            "type": "string",
            "example": "PARKING"
          },
          "idSite": {
            "description": "The unique identifier of the Site record that contains location information about this surface.",
            "maxLength": 36,
            "type": "string",
            "example": "SITE-ID"
          },
          "altSiteId": {
            "description": "Alternate site identifier provided by the source.",
            "maxLength": 36,
            "type": "string",
            "example": "ORIG-SITE-ID"
          },
          "primary": {
            "description": "Flag indicating this is the primary runway.  Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "lengthFt": {
            "format": "double",
            "description": "The length of the surface type, in feet.  Applicable for runway and parking surface types.",
            "type": "number",
            "example": 1500.75
          },
          "ldaFt": {
            "format": "double",
            "description": "The landing distance available for the runway, in feet.  Applicable for runway surface types only.",
            "type": "number",
            "example": 475.2
          },
          "widthFt": {
            "format": "double",
            "description": "The width of the surface type, in feet.",
            "type": "number",
            "example": 220.3
          },
          "lengthM": {
            "format": "double",
            "description": "The length of the surface type, in meters.  Applicable for runway and parking surface types.",
            "type": "number",
            "example": 457.5
          },
          "ldaM": {
            "format": "double",
            "description": "The landing distance available for the runway, in meters.  Applicable for runway surface types only.",
            "type": "number",
            "example": 145.75
          },
          "widthM": {
            "format": "double",
            "description": "The width of the surface type, in meters.",
            "type": "number",
            "example": 67.25
          },
          "startLat": {
            "format": "double",
            "description": "WGS-84 latitude of the coordinate representing the start-point of a surface, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 46.757211
          },
          "startLon": {
            "format": "double",
            "description": "WGS-84 longitude of the coordinate representing the start-point of a surface, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": -67.759494
          },
          "endLat": {
            "format": "double",
            "description": "WGS-84 latitude of the coordinate representing the end-point of a surface, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 45.844
          },
          "endLon": {
            "format": "double",
            "description": "WGS-84 longitude of the coordinate representing the end-point of a surface, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": -67.0094
          },
          "pointReference": {
            "description": "Description of the surface and its dimensions or how it is measured or oriented.",
            "maxLength": 256,
            "type": "string",
            "example": "Reference Point Example"
          },
          "material": {
            "description": "The surface material (e.g. Asphalt, Concrete, Dirt).",
            "maxLength": 16,
            "type": "string",
            "example": "Concrete"
          },
          "condition": {
            "description": "The surface condition (e.g. GOOD, FAIR, POOR, SERIOUS, FAILED, CLOSED, UNKNOWN).",
            "maxLength": 16,
            "type": "string",
            "example": "GOOD"
          },
          "rawWBC": {
            "description": "Raw weight bearing capacity value or pavement strength.",
            "maxLength": 16,
            "type": "string",
            "example": "LCN 42"
          },
          "pcn": {
            "description": "Pavement classification number (PCN) and tire pressure code.",
            "maxLength": 16,
            "type": "string",
            "example": "73RBWT"
          },
          "lcn": {
            "format": "int32",
            "description": "Load classification number or pavement rating which ranks aircraft on a scale of 1 to 120.",
            "type": "integer",
            "example": 50
          },
          "sWtKip": {
            "format": "double",
            "description": "The max weight allowable on this surface type for an S-type (single) landing gear configuration, in kilopounds (kip). Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 143.5
          },
          "sWtKipMod": {
            "format": "double",
            "description": "The modified max weight allowable on this surface type for an S-type (single) landing gear configuration, in kilopounds (kip).",
            "type": "number",
            "example": 107.625
          },
          "sWtKipModNote": {
            "description": "User input rationale for the manual modification of the prescribed value indicating the max weight allowable on this surface for an S-type (single) landing gear configuration. For more information, contact the provider source.",
            "maxLength": 280,
            "type": "string",
            "example": "Observed 25% reduction in surface integrity."
          },
          "tWtKip": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a T-type (twin (dual)) landing gear configuration, in kilopounds (kip).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 188.2
          },
          "tWtKipMod": {
            "format": "double",
            "description": "The modified max weight allowable on this surface type for a T-type (twin (dual)) landing gear configuration, in kilopounds (kip).",
            "type": "number",
            "example": 141.15
          },
          "tWtKipModNote": {
            "description": "User input rationale for the manual modification of the prescribed value indicating the max weight allowable on this surface for a T-type (twin(dual)) landing gear configuration. For more information, contact the provider source.",
            "maxLength": 280,
            "type": "string",
            "example": "Observed 25% reduction in surface integrity."
          },
          "stWtKip": {
            "format": "double",
            "description": "The max weight allowable on this surface type for an ST-type (single tandem) landing gear configuration, in kilopounds (kip).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 195.75
          },
          "stWtKipMod": {
            "format": "double",
            "description": "The modified max weight allowable on this surface type for an ST-type (single tandem) landing gear configuration, in kilopounds (kip).",
            "type": "number",
            "example": 146.8125
          },
          "stWtKipModNote": {
            "description": "User input rationale for the manual modification of the prescribed value indicating the max weight allowable on this surface for an ST-type (single tandem) landing gear configuration. For more information, contact the provider source.",
            "maxLength": 280,
            "type": "string",
            "example": "Observed 25% reduction in surface integrity."
          },
          "ttWtKip": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a GDSS TT-type (twin tandem) landing gear configuration, in kilopounds (kip).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 414.9
          },
          "ttWtKipMod": {
            "format": "double",
            "description": "The modified max weight allowable on this surface type for a GDSS TT-type (twin tandem) landing gear configuration, in kilopounds (kip).",
            "type": "number",
            "example": 311.175
          },
          "ttWtKipModNote": {
            "description": "User input rationale for the manual modification of the prescribed value indicating the max weight allowable on this surface for a GDSS TT-type (twin tandem) landing gear configuration. For more information, contact the provider source.",
            "maxLength": 280,
            "type": "string",
            "example": "Observed 25% reduction in surface integrity."
          },
          "ddWtKip": {
            "format": "double",
            "description": "The max weight allowable on this surface type for an FAA 2D-type (twin tandem) landing gear configuration, in kilopounds (kip).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 416.25
          },
          "ddWtKipMod": {
            "format": "double",
            "description": "The modified max weight allowable on this surface type for an FAA 2D-type (twin tandem) landing gear configuration, in kilopounds (kip).",
            "type": "number",
            "example": 312.1875
          },
          "ddWtKipModNote": {
            "description": "User input rationale for the manual modification of the prescribed value indicating the max weight allowable on this surface for an FAA 2D-type (twin tandem) landing gear configuration. For more information, contact the provider source.",
            "maxLength": 280,
            "type": "string",
            "example": "Observed 25% reduction in surface integrity."
          },
          "sbttWtKip": {
            "format": "double",
            "description": "The max weight allowable on this surface type for an SBTT-type (single belly twin tandem) landing gear configuration, in kilopounds (kip).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 603.025
          },
          "sbttWtKipMod": {
            "format": "double",
            "description": "The modified max weight allowable on this surface type for an SBTT-type (single belly twin tandem) landing gear configuration, in kilopounds (kip).",
            "type": "number",
            "example": 452.269
          },
          "sbttWtKipModNote": {
            "description": "User input rationale for the manual modification of the prescribed value indicating the max weight allowable on this surface for an SBTT-type (single belly twin tandem) landing gear configuration. For more information, contact the provider source.",
            "maxLength": 280,
            "type": "string",
            "example": "Observed 25% reduction in surface integrity."
          },
          "tdtWtkip": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a TDT-type (twin delta tandem) landing gear configuration, in kilopounds (kip).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 870.2
          },
          "tdtWtKipMod": {
            "format": "double",
            "description": "The modified max weight allowable on this surface type for a TDT-type (twin delta tandem) landing gear configuration, in kilopounds (kip).",
            "type": "number",
            "example": 652.65
          },
          "tdtWtKipModNote": {
            "description": "User input rationale for the manual modification of the prescribed value indicating the max weight allowable on this surface for a TDT-type (twin delta tandem) landing gear configuration. For more information, contact the provider source.",
            "maxLength": 280,
            "type": "string",
            "example": "Serious 25 percent reduction."
          },
          "trtWtKip": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a TRT-type (triple tandem) landing gear configuration, in kilopounds (kip).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 622.85
          },
          "trtWtKipMod": {
            "format": "double",
            "description": "The modified max weight allowable on this surface type for a TRT-type (triple tandem) landing gear configuration, in kilopounds (kip).",
            "type": "number",
            "example": 467.1375
          },
          "trtWtKipModNote": {
            "description": "User input rationale for the manual modification of the prescribed value indicating the max weight allowable on this surface for a TRT-type (triple tandem) landing gear configuration. For more information, contact the provider source.",
            "maxLength": 280,
            "type": "string",
            "example": "Observed 25% reduction in surface integrity."
          },
          "ddtWtKip": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a DDT-type (double dual tandem) landing gear configuration, in kilopounds (kip).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 833.5
          },
          "ddtWtKipMod": {
            "format": "double",
            "description": "The modified max weight allowable on this surface type for a DDT-type (double dual tandem) landing gear configuration, in kilopounds (kip).",
            "type": "number",
            "example": 625.125
          },
          "ddtWtKipModNote": {
            "description": "User input rationale for the manual modification of the prescribed value indicating the max weight allowable on this surface for a DDT-type (double dual tandem) landing gear configuration. For more information, contact the provider source.",
            "maxLength": 280,
            "type": "string",
            "example": "Observed 25% reduction in surface integrity."
          },
          "sWtKN": {
            "format": "double",
            "description": "The max weight allowable on this surface type for an S-type (single) landing gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 636.4
          },
          "tWtKN": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a T-type (twin (dual)) landing gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 836.45
          },
          "stWtKN": {
            "format": "double",
            "description": "The max weight allowable on this surface type for an ST-type (single tandem) landing gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 867.6
          },
          "ttWtKN": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a GDSS TT-type (twin tandem) landing gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 1842.55
          },
          "ddWtKN": {
            "format": "double",
            "description": "The max weight allowable on this surface type for an FAA 2D-type (twin tandem) landing gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 1850.1
          },
          "sbttWtKN": {
            "format": "double",
            "description": "The max weight allowable on this surface type for an SBTT-type (single belly twin tandem) landing gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 2682.05
          },
          "tdtWtKN": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a TDT-type (twin delta tandem) landing gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 3870.05
          },
          "trtWtKN": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a TRT-type (triple tandem) landing gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 2767.15
          },
          "ddtWtKN": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a DDT-type (double dual tandem) landing gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 3705.44
          },
          "lighting": {
            "description": "Flag indicating the surface has lighting.",
            "type": "boolean",
            "example": true
          },
          "lightsUNKN": {
            "description": "Flag indicating the runway lighting is unknown. Applicable for runway surface types only.",
            "type": "boolean",
            "example": false
          },
          "lightsAPRCH": {
            "description": "Flag indicating the runway has approach lights. Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "lightsRWY": {
            "description": "Flag indicating the runway has edge lighting. Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "lightsSEQFL": {
            "description": "Flag indicating the runway has Sequential Flashing (SEQFL) lights. Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "lightsVASI": {
            "description": "Flag indicating the runway has Visual Approach Slope Indicator (VASI) lights. Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "lightsPAPI": {
            "description": "Flag indicating the runway has Precision Approach Path Indicator (PAPI) lights. Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "lightsOLS": {
            "description": "Flag indicating the runway has Optical Landing System (OLS) lights. Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "lightsREIL": {
            "description": "Flag indicating the runway has Runway End Identifier Lights (REIL). Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "lightsTDZL": {
            "description": "Flag indicating the runway has Touchdown Zone lights. Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "lightsCL": {
            "description": "Flag indicating the runway has centerline lights. Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "obstacle": {
            "description": "Flag indicating that one or more obstacles or obstructions exist in the proximity of this surface.",
            "type": "boolean",
            "example": true
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is REAL, TEST, SIMULATED, or EXERCISE data.",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "Surface_Full": {
        "description": "Surface information contains properties related to an airfield's runway, taxiway, and parking. The surface types and characteristics can dictate the airfield's capability of hosting a specific aircraft.",
        "required": [
          "classificationMarking",
          "name",
          "type",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "be831d39-1822-da9f-7ace-6cc5643397dc"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "name": {
            "description": "The surface name or identifier.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "West lot"
          },
          "type": {
            "description": "The surface type of this record (e.g. RUNWAY, TAXIWAY, PARKING).",
            "maxLength": 7,
            "minLength": 1,
            "type": "string",
            "example": "PARKING"
          },
          "idSite": {
            "description": "The unique identifier of the Site record that contains location information about this surface.",
            "maxLength": 36,
            "type": "string",
            "example": "SITE-ID"
          },
          "altSiteId": {
            "description": "Alternate site identifier provided by the source.",
            "maxLength": 36,
            "type": "string",
            "example": "ORIG-SITE-ID"
          },
          "primary": {
            "description": "Flag indicating this is the primary runway.  Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "lengthFt": {
            "format": "double",
            "description": "The length of the surface type, in feet.  Applicable for runway and parking surface types.",
            "type": "number",
            "example": 1500.75
          },
          "ldaFt": {
            "format": "double",
            "description": "The landing distance available for the runway, in feet.  Applicable for runway surface types only.",
            "type": "number",
            "example": 475.2
          },
          "widthFt": {
            "format": "double",
            "description": "The width of the surface type, in feet.",
            "type": "number",
            "example": 220.3
          },
          "lengthM": {
            "format": "double",
            "description": "The length of the surface type, in meters.  Applicable for runway and parking surface types.",
            "type": "number",
            "example": 457.5
          },
          "ldaM": {
            "format": "double",
            "description": "The landing distance available for the runway, in meters.  Applicable for runway surface types only.",
            "type": "number",
            "example": 145.75
          },
          "widthM": {
            "format": "double",
            "description": "The width of the surface type, in meters.",
            "type": "number",
            "example": 67.25
          },
          "startLat": {
            "format": "double",
            "description": "WGS-84 latitude of the coordinate representing the start-point of a surface, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 46.757211
          },
          "startLon": {
            "format": "double",
            "description": "WGS-84 longitude of the coordinate representing the start-point of a surface, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": -67.759494
          },
          "endLat": {
            "format": "double",
            "description": "WGS-84 latitude of the coordinate representing the end-point of a surface, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 45.844
          },
          "endLon": {
            "format": "double",
            "description": "WGS-84 longitude of the coordinate representing the end-point of a surface, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": -67.0094
          },
          "pointReference": {
            "description": "Description of the surface and its dimensions or how it is measured or oriented.",
            "maxLength": 256,
            "type": "string",
            "example": "Reference Point Example"
          },
          "material": {
            "description": "The surface material (e.g. Asphalt, Concrete, Dirt).",
            "maxLength": 16,
            "type": "string",
            "example": "Concrete"
          },
          "condition": {
            "description": "The surface condition (e.g. GOOD, FAIR, POOR, SERIOUS, FAILED, CLOSED, UNKNOWN).",
            "maxLength": 16,
            "type": "string",
            "example": "GOOD"
          },
          "rawWBC": {
            "description": "Raw weight bearing capacity value or pavement strength.",
            "maxLength": 16,
            "type": "string",
            "example": "LCN 42"
          },
          "pcn": {
            "description": "Pavement classification number (PCN) and tire pressure code.",
            "maxLength": 16,
            "type": "string",
            "example": "73RBWT"
          },
          "lcn": {
            "format": "int32",
            "description": "Load classification number or pavement rating which ranks aircraft on a scale of 1 to 120.",
            "type": "integer",
            "example": 50
          },
          "sWtKip": {
            "format": "double",
            "description": "The max weight allowable on this surface type for an S-type (single) landing gear configuration, in kilopounds (kip). Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 143.5
          },
          "sWtKipMod": {
            "format": "double",
            "description": "The modified max weight allowable on this surface type for an S-type (single) landing gear configuration, in kilopounds (kip).",
            "type": "number",
            "example": 107.625
          },
          "sWtKipModNote": {
            "description": "User input rationale for the manual modification of the prescribed value indicating the max weight allowable on this surface for an S-type (single) landing gear configuration. For more information, contact the provider source.",
            "maxLength": 280,
            "type": "string",
            "example": "Observed 25% reduction in surface integrity."
          },
          "tWtKip": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a T-type (twin (dual)) landing gear configuration, in kilopounds (kip).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 188.2
          },
          "tWtKipMod": {
            "format": "double",
            "description": "The modified max weight allowable on this surface type for a T-type (twin (dual)) landing gear configuration, in kilopounds (kip).",
            "type": "number",
            "example": 141.15
          },
          "tWtKipModNote": {
            "description": "User input rationale for the manual modification of the prescribed value indicating the max weight allowable on this surface for a T-type (twin(dual)) landing gear configuration. For more information, contact the provider source.",
            "maxLength": 280,
            "type": "string",
            "example": "Observed 25% reduction in surface integrity."
          },
          "stWtKip": {
            "format": "double",
            "description": "The max weight allowable on this surface type for an ST-type (single tandem) landing gear configuration, in kilopounds (kip).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 195.75
          },
          "stWtKipMod": {
            "format": "double",
            "description": "The modified max weight allowable on this surface type for an ST-type (single tandem) landing gear configuration, in kilopounds (kip).",
            "type": "number",
            "example": 146.8125
          },
          "stWtKipModNote": {
            "description": "User input rationale for the manual modification of the prescribed value indicating the max weight allowable on this surface for an ST-type (single tandem) landing gear configuration. For more information, contact the provider source.",
            "maxLength": 280,
            "type": "string",
            "example": "Observed 25% reduction in surface integrity."
          },
          "ttWtKip": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a GDSS TT-type (twin tandem) landing gear configuration, in kilopounds (kip).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 414.9
          },
          "ttWtKipMod": {
            "format": "double",
            "description": "The modified max weight allowable on this surface type for a GDSS TT-type (twin tandem) landing gear configuration, in kilopounds (kip).",
            "type": "number",
            "example": 311.175
          },
          "ttWtKipModNote": {
            "description": "User input rationale for the manual modification of the prescribed value indicating the max weight allowable on this surface for a GDSS TT-type (twin tandem) landing gear configuration. For more information, contact the provider source.",
            "maxLength": 280,
            "type": "string",
            "example": "Observed 25% reduction in surface integrity."
          },
          "ddWtKip": {
            "format": "double",
            "description": "The max weight allowable on this surface type for an FAA 2D-type (twin tandem) landing gear configuration, in kilopounds (kip).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 416.25
          },
          "ddWtKipMod": {
            "format": "double",
            "description": "The modified max weight allowable on this surface type for an FAA 2D-type (twin tandem) landing gear configuration, in kilopounds (kip).",
            "type": "number",
            "example": 312.1875
          },
          "ddWtKipModNote": {
            "description": "User input rationale for the manual modification of the prescribed value indicating the max weight allowable on this surface for an FAA 2D-type (twin tandem) landing gear configuration. For more information, contact the provider source.",
            "maxLength": 280,
            "type": "string",
            "example": "Observed 25% reduction in surface integrity."
          },
          "sbttWtKip": {
            "format": "double",
            "description": "The max weight allowable on this surface type for an SBTT-type (single belly twin tandem) landing gear configuration, in kilopounds (kip).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 603.025
          },
          "sbttWtKipMod": {
            "format": "double",
            "description": "The modified max weight allowable on this surface type for an SBTT-type (single belly twin tandem) landing gear configuration, in kilopounds (kip).",
            "type": "number",
            "example": 452.269
          },
          "sbttWtKipModNote": {
            "description": "User input rationale for the manual modification of the prescribed value indicating the max weight allowable on this surface for an SBTT-type (single belly twin tandem) landing gear configuration. For more information, contact the provider source.",
            "maxLength": 280,
            "type": "string",
            "example": "Observed 25% reduction in surface integrity."
          },
          "tdtWtkip": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a TDT-type (twin delta tandem) landing gear configuration, in kilopounds (kip).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 870.2
          },
          "tdtWtKipMod": {
            "format": "double",
            "description": "The modified max weight allowable on this surface type for a TDT-type (twin delta tandem) landing gear configuration, in kilopounds (kip).",
            "type": "number",
            "example": 652.65
          },
          "tdtWtKipModNote": {
            "description": "User input rationale for the manual modification of the prescribed value indicating the max weight allowable on this surface for a TDT-type (twin delta tandem) landing gear configuration. For more information, contact the provider source.",
            "maxLength": 280,
            "type": "string",
            "example": "Serious 25 percent reduction."
          },
          "trtWtKip": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a TRT-type (triple tandem) landing gear configuration, in kilopounds (kip).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 622.85
          },
          "trtWtKipMod": {
            "format": "double",
            "description": "The modified max weight allowable on this surface type for a TRT-type (triple tandem) landing gear configuration, in kilopounds (kip).",
            "type": "number",
            "example": 467.1375
          },
          "trtWtKipModNote": {
            "description": "User input rationale for the manual modification of the prescribed value indicating the max weight allowable on this surface for a TRT-type (triple tandem) landing gear configuration. For more information, contact the provider source.",
            "maxLength": 280,
            "type": "string",
            "example": "Observed 25% reduction in surface integrity."
          },
          "ddtWtKip": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a DDT-type (double dual tandem) landing gear configuration, in kilopounds (kip).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 833.5
          },
          "ddtWtKipMod": {
            "format": "double",
            "description": "The modified max weight allowable on this surface type for a DDT-type (double dual tandem) landing gear configuration, in kilopounds (kip).",
            "type": "number",
            "example": 625.125
          },
          "ddtWtKipModNote": {
            "description": "User input rationale for the manual modification of the prescribed value indicating the max weight allowable on this surface for a DDT-type (double dual tandem) landing gear configuration. For more information, contact the provider source.",
            "maxLength": 280,
            "type": "string",
            "example": "Observed 25% reduction in surface integrity."
          },
          "sWtKN": {
            "format": "double",
            "description": "The max weight allowable on this surface type for an S-type (single) landing gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 636.4
          },
          "tWtKN": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a T-type (twin (dual)) landing gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 836.45
          },
          "stWtKN": {
            "format": "double",
            "description": "The max weight allowable on this surface type for an ST-type (single tandem) landing gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 867.6
          },
          "ttWtKN": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a GDSS TT-type (twin tandem) landing gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 1842.55
          },
          "ddWtKN": {
            "format": "double",
            "description": "The max weight allowable on this surface type for an FAA 2D-type (twin tandem) landing gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 1850.1
          },
          "sbttWtKN": {
            "format": "double",
            "description": "The max weight allowable on this surface type for an SBTT-type (single belly twin tandem) landing gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 2682.05
          },
          "tdtWtKN": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a TDT-type (twin delta tandem) landing gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 3870.05
          },
          "trtWtKN": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a TRT-type (triple tandem) landing gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 2767.15
          },
          "ddtWtKN": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a DDT-type (double dual tandem) landing gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 3705.44
          },
          "lighting": {
            "description": "Flag indicating the surface has lighting.",
            "type": "boolean",
            "example": true
          },
          "lightsUNKN": {
            "description": "Flag indicating the runway lighting is unknown. Applicable for runway surface types only.",
            "type": "boolean",
            "example": false
          },
          "lightsAPRCH": {
            "description": "Flag indicating the runway has approach lights. Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "lightsRWY": {
            "description": "Flag indicating the runway has edge lighting. Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "lightsSEQFL": {
            "description": "Flag indicating the runway has Sequential Flashing (SEQFL) lights. Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "lightsVASI": {
            "description": "Flag indicating the runway has Visual Approach Slope Indicator (VASI) lights. Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "lightsPAPI": {
            "description": "Flag indicating the runway has Precision Approach Path Indicator (PAPI) lights. Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "lightsOLS": {
            "description": "Flag indicating the runway has Optical Landing System (OLS) lights. Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "lightsREIL": {
            "description": "Flag indicating the runway has Runway End Identifier Lights (REIL). Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "lightsTDZL": {
            "description": "Flag indicating the runway has Touchdown Zone lights. Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "lightsCL": {
            "description": "Flag indicating the runway has centerline lights. Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "obstacle": {
            "description": "Flag indicating that one or more obstacles or obstructions exist in the proximity of this surface.",
            "type": "boolean",
            "example": true
          },
          "surfaceObstructions": {
            "description": "An array of SurfaceNavigation objects representing information about obstructions proximal to this surface. This is a read-only field that will be populated with any associated SurfaceObstruction objects for queries that return the full schema.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurfaceObstruction_Full"
            },
            "readOnly": true
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is REAL, TEST, SIMULATED, or EXERCISE data.",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "Surface_Ingest": {
        "description": "Surface information contains properties related to an airfield's runway, taxiway, and parking. The surface types and characteristics can dictate the airfield's capability of hosting a specific aircraft.",
        "required": [
          "classificationMarking",
          "name",
          "type",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "be831d39-1822-da9f-7ace-6cc5643397dc"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "name": {
            "description": "The surface name or identifier.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "West lot"
          },
          "type": {
            "description": "The surface type of this record (e.g. RUNWAY, TAXIWAY, PARKING).",
            "maxLength": 7,
            "minLength": 1,
            "type": "string",
            "example": "PARKING"
          },
          "idSite": {
            "description": "The unique identifier of the Site record that contains location information about this surface.",
            "maxLength": 36,
            "type": "string",
            "example": "SITE-ID"
          },
          "altSiteId": {
            "description": "Alternate site identifier provided by the source.",
            "maxLength": 36,
            "type": "string",
            "example": "ORIG-SITE-ID"
          },
          "primary": {
            "description": "Flag indicating this is the primary runway.  Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "lengthFt": {
            "format": "double",
            "description": "The length of the surface type, in feet.  Applicable for runway and parking surface types.",
            "type": "number",
            "example": 1500.75
          },
          "ldaFt": {
            "format": "double",
            "description": "The landing distance available for the runway, in feet.  Applicable for runway surface types only.",
            "type": "number",
            "example": 475.2
          },
          "widthFt": {
            "format": "double",
            "description": "The width of the surface type, in feet.",
            "type": "number",
            "example": 220.3
          },
          "lengthM": {
            "format": "double",
            "description": "The length of the surface type, in meters.  Applicable for runway and parking surface types.",
            "type": "number",
            "example": 457.5
          },
          "ldaM": {
            "format": "double",
            "description": "The landing distance available for the runway, in meters.  Applicable for runway surface types only.",
            "type": "number",
            "example": 145.75
          },
          "widthM": {
            "format": "double",
            "description": "The width of the surface type, in meters.",
            "type": "number",
            "example": 67.25
          },
          "startLat": {
            "format": "double",
            "description": "WGS-84 latitude of the coordinate representing the start-point of a surface, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 46.757211
          },
          "startLon": {
            "format": "double",
            "description": "WGS-84 longitude of the coordinate representing the start-point of a surface, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": -67.759494
          },
          "endLat": {
            "format": "double",
            "description": "WGS-84 latitude of the coordinate representing the end-point of a surface, in degrees. -90 to 90 degrees (negative values south of equator).",
            "type": "number",
            "example": 45.844
          },
          "endLon": {
            "format": "double",
            "description": "WGS-84 longitude of the coordinate representing the end-point of a surface, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).",
            "type": "number",
            "example": -67.0094
          },
          "pointReference": {
            "description": "Description of the surface and its dimensions or how it is measured or oriented.",
            "maxLength": 256,
            "type": "string",
            "example": "Reference Point Example"
          },
          "material": {
            "description": "The surface material (e.g. Asphalt, Concrete, Dirt).",
            "maxLength": 16,
            "type": "string",
            "example": "Concrete"
          },
          "condition": {
            "description": "The surface condition (e.g. GOOD, FAIR, POOR, SERIOUS, FAILED, CLOSED, UNKNOWN).",
            "maxLength": 16,
            "type": "string",
            "example": "GOOD"
          },
          "rawWBC": {
            "description": "Raw weight bearing capacity value or pavement strength.",
            "maxLength": 16,
            "type": "string",
            "example": "LCN 42"
          },
          "pcn": {
            "description": "Pavement classification number (PCN) and tire pressure code.",
            "maxLength": 16,
            "type": "string",
            "example": "73RBWT"
          },
          "lcn": {
            "format": "int32",
            "description": "Load classification number or pavement rating which ranks aircraft on a scale of 1 to 120.",
            "type": "integer",
            "example": 50
          },
          "sWtKip": {
            "format": "double",
            "description": "The max weight allowable on this surface type for an S-type (single) landing gear configuration, in kilopounds (kip). Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 143.5
          },
          "sWtKipMod": {
            "format": "double",
            "description": "The modified max weight allowable on this surface type for an S-type (single) landing gear configuration, in kilopounds (kip).",
            "type": "number",
            "example": 107.625
          },
          "sWtKipModNote": {
            "description": "User input rationale for the manual modification of the prescribed value indicating the max weight allowable on this surface for an S-type (single) landing gear configuration. For more information, contact the provider source.",
            "maxLength": 280,
            "type": "string",
            "example": "Observed 25% reduction in surface integrity."
          },
          "tWtKip": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a T-type (twin (dual)) landing gear configuration, in kilopounds (kip).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 188.2
          },
          "tWtKipMod": {
            "format": "double",
            "description": "The modified max weight allowable on this surface type for a T-type (twin (dual)) landing gear configuration, in kilopounds (kip).",
            "type": "number",
            "example": 141.15
          },
          "tWtKipModNote": {
            "description": "User input rationale for the manual modification of the prescribed value indicating the max weight allowable on this surface for a T-type (twin(dual)) landing gear configuration. For more information, contact the provider source.",
            "maxLength": 280,
            "type": "string",
            "example": "Observed 25% reduction in surface integrity."
          },
          "stWtKip": {
            "format": "double",
            "description": "The max weight allowable on this surface type for an ST-type (single tandem) landing gear configuration, in kilopounds (kip).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 195.75
          },
          "stWtKipMod": {
            "format": "double",
            "description": "The modified max weight allowable on this surface type for an ST-type (single tandem) landing gear configuration, in kilopounds (kip).",
            "type": "number",
            "example": 146.8125
          },
          "stWtKipModNote": {
            "description": "User input rationale for the manual modification of the prescribed value indicating the max weight allowable on this surface for an ST-type (single tandem) landing gear configuration. For more information, contact the provider source.",
            "maxLength": 280,
            "type": "string",
            "example": "Observed 25% reduction in surface integrity."
          },
          "ttWtKip": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a GDSS TT-type (twin tandem) landing gear configuration, in kilopounds (kip).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 414.9
          },
          "ttWtKipMod": {
            "format": "double",
            "description": "The modified max weight allowable on this surface type for a GDSS TT-type (twin tandem) landing gear configuration, in kilopounds (kip).",
            "type": "number",
            "example": 311.175
          },
          "ttWtKipModNote": {
            "description": "User input rationale for the manual modification of the prescribed value indicating the max weight allowable on this surface for a GDSS TT-type (twin tandem) landing gear configuration. For more information, contact the provider source.",
            "maxLength": 280,
            "type": "string",
            "example": "Observed 25% reduction in surface integrity."
          },
          "ddWtKip": {
            "format": "double",
            "description": "The max weight allowable on this surface type for an FAA 2D-type (twin tandem) landing gear configuration, in kilopounds (kip).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 416.25
          },
          "ddWtKipMod": {
            "format": "double",
            "description": "The modified max weight allowable on this surface type for an FAA 2D-type (twin tandem) landing gear configuration, in kilopounds (kip).",
            "type": "number",
            "example": 312.1875
          },
          "ddWtKipModNote": {
            "description": "User input rationale for the manual modification of the prescribed value indicating the max weight allowable on this surface for an FAA 2D-type (twin tandem) landing gear configuration. For more information, contact the provider source.",
            "maxLength": 280,
            "type": "string",
            "example": "Observed 25% reduction in surface integrity."
          },
          "sbttWtKip": {
            "format": "double",
            "description": "The max weight allowable on this surface type for an SBTT-type (single belly twin tandem) landing gear configuration, in kilopounds (kip).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 603.025
          },
          "sbttWtKipMod": {
            "format": "double",
            "description": "The modified max weight allowable on this surface type for an SBTT-type (single belly twin tandem) landing gear configuration, in kilopounds (kip).",
            "type": "number",
            "example": 452.269
          },
          "sbttWtKipModNote": {
            "description": "User input rationale for the manual modification of the prescribed value indicating the max weight allowable on this surface for an SBTT-type (single belly twin tandem) landing gear configuration. For more information, contact the provider source.",
            "maxLength": 280,
            "type": "string",
            "example": "Observed 25% reduction in surface integrity."
          },
          "tdtWtkip": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a TDT-type (twin delta tandem) landing gear configuration, in kilopounds (kip).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 870.2
          },
          "tdtWtKipMod": {
            "format": "double",
            "description": "The modified max weight allowable on this surface type for a TDT-type (twin delta tandem) landing gear configuration, in kilopounds (kip).",
            "type": "number",
            "example": 652.65
          },
          "tdtWtKipModNote": {
            "description": "User input rationale for the manual modification of the prescribed value indicating the max weight allowable on this surface for a TDT-type (twin delta tandem) landing gear configuration. For more information, contact the provider source.",
            "maxLength": 280,
            "type": "string",
            "example": "Serious 25 percent reduction."
          },
          "trtWtKip": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a TRT-type (triple tandem) landing gear configuration, in kilopounds (kip).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 622.85
          },
          "trtWtKipMod": {
            "format": "double",
            "description": "The modified max weight allowable on this surface type for a TRT-type (triple tandem) landing gear configuration, in kilopounds (kip).",
            "type": "number",
            "example": 467.1375
          },
          "trtWtKipModNote": {
            "description": "User input rationale for the manual modification of the prescribed value indicating the max weight allowable on this surface for a TRT-type (triple tandem) landing gear configuration. For more information, contact the provider source.",
            "maxLength": 280,
            "type": "string",
            "example": "Observed 25% reduction in surface integrity."
          },
          "ddtWtKip": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a DDT-type (double dual tandem) landing gear configuration, in kilopounds (kip).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 833.5
          },
          "ddtWtKipMod": {
            "format": "double",
            "description": "The modified max weight allowable on this surface type for a DDT-type (double dual tandem) landing gear configuration, in kilopounds (kip).",
            "type": "number",
            "example": 625.125
          },
          "ddtWtKipModNote": {
            "description": "User input rationale for the manual modification of the prescribed value indicating the max weight allowable on this surface for a DDT-type (double dual tandem) landing gear configuration. For more information, contact the provider source.",
            "maxLength": 280,
            "type": "string",
            "example": "Observed 25% reduction in surface integrity."
          },
          "sWtKN": {
            "format": "double",
            "description": "The max weight allowable on this surface type for an S-type (single) landing gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 636.4
          },
          "tWtKN": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a T-type (twin (dual)) landing gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 836.45
          },
          "stWtKN": {
            "format": "double",
            "description": "The max weight allowable on this surface type for an ST-type (single tandem) landing gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 867.6
          },
          "ttWtKN": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a GDSS TT-type (twin tandem) landing gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 1842.55
          },
          "ddWtKN": {
            "format": "double",
            "description": "The max weight allowable on this surface type for an FAA 2D-type (twin tandem) landing gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 1850.1
          },
          "sbttWtKN": {
            "format": "double",
            "description": "The max weight allowable on this surface type for an SBTT-type (single belly twin tandem) landing gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 2682.05
          },
          "tdtWtKN": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a TDT-type (twin delta tandem) landing gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 3870.05
          },
          "trtWtKN": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a TRT-type (triple tandem) landing gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 2767.15
          },
          "ddtWtKN": {
            "format": "double",
            "description": "The max weight allowable on this surface type for a DDT-type (double dual tandem) landing gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.",
            "type": "number",
            "example": 3705.44
          },
          "lighting": {
            "description": "Flag indicating the surface has lighting.",
            "type": "boolean",
            "example": true
          },
          "lightsUNKN": {
            "description": "Flag indicating the runway lighting is unknown. Applicable for runway surface types only.",
            "type": "boolean",
            "example": false
          },
          "lightsAPRCH": {
            "description": "Flag indicating the runway has approach lights. Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "lightsRWY": {
            "description": "Flag indicating the runway has edge lighting. Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "lightsSEQFL": {
            "description": "Flag indicating the runway has Sequential Flashing (SEQFL) lights. Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "lightsVASI": {
            "description": "Flag indicating the runway has Visual Approach Slope Indicator (VASI) lights. Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "lightsPAPI": {
            "description": "Flag indicating the runway has Precision Approach Path Indicator (PAPI) lights. Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "lightsOLS": {
            "description": "Flag indicating the runway has Optical Landing System (OLS) lights. Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "lightsREIL": {
            "description": "Flag indicating the runway has Runway End Identifier Lights (REIL). Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "lightsTDZL": {
            "description": "Flag indicating the runway has Touchdown Zone lights. Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "lightsCL": {
            "description": "Flag indicating the runway has centerline lights. Applicable for runway surface types only.",
            "type": "boolean",
            "example": true
          },
          "obstacle": {
            "description": "Flag indicating that one or more obstacles or obstructions exist in the proximity of this surface.",
            "type": "boolean",
            "example": true
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is REAL, TEST, SIMULATED, or EXERCISE data.",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "SurfaceObstruction_Abridged": {
        "required": [
          "classificationMarking",
          "idSurface",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "be831d39-1822-da9f-7ace-6cc5643397dc"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idSurface": {
            "description": "The unique identifier of the associated surface record. This field is required when posting, updating, or deleting a SurfaceObstruction record.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "be831d39-1822-da9f-7ace-6cc5643397dc"
          },
          "idNavigationalObstruction": {
            "description": "The unique identifier of the associated NavigationalObstruction record.",
            "maxLength": 36,
            "type": "string",
            "example": "a2831d39-1822-da9f-7ace-6cc5643397da"
          },
          "obstructionSideCode": {
            "description": "A code that indicates which side of the surface end is affected by this obstruction.",
            "maxLength": 1,
            "type": "string",
            "example": "F"
          },
          "obstructionDesc": {
            "description": "Description of this surface obstruction.",
            "maxLength": 256,
            "type": "string",
            "example": "PYLON"
          },
          "obstructionHeight": {
            "format": "double",
            "description": "The height above ground level of the surface obstruction, in feet.",
            "type": "number",
            "example": 35.25
          },
          "distanceFromEdge": {
            "format": "double",
            "description": "The distance from the surface edge to this obstruction, in feet.",
            "type": "number",
            "example": 15.8
          },
          "distanceFromCenterLine": {
            "format": "double",
            "description": "The distance from the surface center line to this obstruction, in feet.",
            "type": "number",
            "example": 17.8
          },
          "distanceFromThreshold": {
            "format": "double",
            "description": "The distance from the surface threshold to this obstruction, in feet.",
            "type": "number",
            "example": 19.5
          },
          "advisoryRequired": {
            "description": "Array of all vehicles that are affected by this obstruction at the surface end-point, and require an advisory for usage.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "C20",
              "C17"
            ]
          },
          "approvalRequired": {
            "description": "Array of all vehicles that are affected by this obstruction at the surface end-point, and require an approval for usage.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "C20",
              "C17"
            ]
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is REAL, TEST, SIMULATED, or EXERCISE data.",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "SurfaceObstruction_Full": {
        "required": [
          "classificationMarking",
          "idSurface",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "be831d39-1822-da9f-7ace-6cc5643397dc"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idSurface": {
            "description": "The unique identifier of the associated surface record. This field is required when posting, updating, or deleting a SurfaceObstruction record.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "be831d39-1822-da9f-7ace-6cc5643397dc"
          },
          "idNavigationalObstruction": {
            "description": "The unique identifier of the associated NavigationalObstruction record.",
            "maxLength": 36,
            "type": "string",
            "example": "a2831d39-1822-da9f-7ace-6cc5643397da"
          },
          "obstructionSideCode": {
            "description": "A code that indicates which side of the surface end is affected by this obstruction.",
            "maxLength": 1,
            "type": "string",
            "example": "F"
          },
          "obstructionDesc": {
            "description": "Description of this surface obstruction.",
            "maxLength": 256,
            "type": "string",
            "example": "PYLON"
          },
          "obstructionHeight": {
            "format": "double",
            "description": "The height above ground level of the surface obstruction, in feet.",
            "type": "number",
            "example": 35.25
          },
          "distanceFromEdge": {
            "format": "double",
            "description": "The distance from the surface edge to this obstruction, in feet.",
            "type": "number",
            "example": 15.8
          },
          "distanceFromCenterLine": {
            "format": "double",
            "description": "The distance from the surface center line to this obstruction, in feet.",
            "type": "number",
            "example": 17.8
          },
          "distanceFromThreshold": {
            "format": "double",
            "description": "The distance from the surface threshold to this obstruction, in feet.",
            "type": "number",
            "example": 19.5
          },
          "advisoryRequired": {
            "description": "Array of all vehicles that are affected by this obstruction at the surface end-point, and require an advisory for usage.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "C20",
              "C17"
            ]
          },
          "approvalRequired": {
            "description": "Array of all vehicles that are affected by this obstruction at the surface end-point, and require an approval for usage.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "C20",
              "C17"
            ]
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "updatedAt": {
            "format": "date-time",
            "description": "Time the row was last updated in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "updatedBy": {
            "description": "Application user who updated the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is REAL, TEST, SIMULATED, or EXERCISE data.",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "SurfaceObstruction_Ingest": {
        "required": [
          "classificationMarking",
          "idSurface",
          "source",
          "dataMode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the record, auto-generated by the system.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "be831d39-1822-da9f-7ace-6cc5643397dc"
          },
          "classificationMarking": {
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "example": "U"
          },
          "idSurface": {
            "description": "The unique identifier of the associated surface record. This field is required when posting, updating, or deleting a SurfaceObstruction record.",
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "example": "be831d39-1822-da9f-7ace-6cc5643397dc"
          },
          "idNavigationalObstruction": {
            "description": "The unique identifier of the associated NavigationalObstruction record.",
            "maxLength": 36,
            "type": "string",
            "example": "a2831d39-1822-da9f-7ace-6cc5643397da"
          },
          "obstructionSideCode": {
            "description": "A code that indicates which side of the surface end is affected by this obstruction.",
            "maxLength": 1,
            "type": "string",
            "example": "F"
          },
          "obstructionDesc": {
            "description": "Description of this surface obstruction.",
            "maxLength": 256,
            "type": "string",
            "example": "PYLON"
          },
          "obstructionHeight": {
            "format": "double",
            "description": "The height above ground level of the surface obstruction, in feet.",
            "type": "number",
            "example": 35.25
          },
          "distanceFromEdge": {
            "format": "double",
            "description": "The distance from the surface edge to this obstruction, in feet.",
            "type": "number",
            "example": 15.8
          },
          "distanceFromCenterLine": {
            "format": "double",
            "description": "The distance from the surface center line to this obstruction, in feet.",
            "type": "number",
            "example": 17.8
          },
          "distanceFromThreshold": {
            "format": "double",
            "description": "The distance from the surface threshold to this obstruction, in feet.",
            "type": "number",
            "example": 19.5
          },
          "advisoryRequired": {
            "description": "Array of all vehicles that are affected by this obstruction at the surface end-point, and require an advisory for usage.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "C20",
              "C17"
            ]
          },
          "approvalRequired": {
            "description": "Array of all vehicles that are affected by this obstruction at the surface end-point, and require an approval for usage.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "C20",
              "C17"
            ]
          },
          "createdAt": {
            "format": "date-time",
            "description": "Time the row was created in the database, auto-populated by the system.",
            "type": "string",
            "readOnly": true,
            "example": "2022-01-01T16:00:00.123Z"
          },
          "createdBy": {
            "description": "Application user who created the row in the database, auto-populated by the system.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "some.user"
          },
          "source": {
            "description": "Source of the data.",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "example": "Bluestaq"
          },
          "sourceDL": {
            "description": "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.",
            "maxLength": 64,
            "type": "string",
            "readOnly": true,
            "example": "AXE"
          },
          "origin": {
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.",
            "maxLength": 64,
            "type": "string",
            "example": "THIRD_PARTY_DATASOURCE"
          },
          "origNetwork": {
            "description": "The originating source network on which this record was created, auto-populated by the system.",
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "readOnly": true,
            "example": "OPS1"
          },
          "dataMode": {
            "description": "Indicator of whether the data is REAL, TEST, SIMULATED, or EXERCISE data.",
            "maxLength": 32,
            "minLength": 1,
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ],
            "type": "string",
            "example": "TEST"
          }
        }
      },
      "Waiver_Abridged": {
        "description": "Collection documenting operational waivers that have been issued for the Site associated with this record.",
        "type": "object",
        "properties": {
          "issueDate": {
            "format": "date-time",
            "description": "The issue date of this waiver, in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "expirationDate": {
            "format": "date-time",
            "description": "The expiration date of this waiver, in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "issuerName": {
            "description": "The name of the person who issued this waiver.",
            "maxLength": 32,
            "type": "string",
            "example": "John Smith"
          },
          "waiverDescription": {
            "description": "The description of this waiver.",
            "maxLength": 128,
            "type": "string",
            "example": "Example waiver description"
          },
          "requestingUnit": {
            "description": "The unit requesting this waiver.",
            "maxLength": 24,
            "type": "string",
            "example": "2A1"
          },
          "requesterName": {
            "description": "The name of the person requesting this waiver.",
            "maxLength": 32,
            "type": "string",
            "example": "Jane Doe"
          },
          "requesterPhoneNumber": {
            "description": "The phone number of the person requesting this waiver.",
            "maxLength": 24,
            "type": "string",
            "example": "808-123-4567"
          },
          "waiverAppliesTo": {
            "description": "Description of the entities to which this waiver applies.",
            "maxLength": 50,
            "type": "string",
            "example": "C017A"
          },
          "hasExpired": {
            "description": "Boolean indicating whether or not this waiver has expired.",
            "type": "boolean",
            "example": false
          },
          "waiverLastChangedDate": {
            "format": "date-time",
            "description": "The datetime of the most recent change made to this waiver data, in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "waiverLastChangedBy": {
            "description": "The name of the person who made the most recent change to this Waiver data.",
            "maxLength": 32,
            "type": "string",
            "example": "J. Appleseed"
          }
        }
      },
      "Waiver_Full": {
        "description": "Collection documenting operational waivers that have been issued for the Site associated with this record.",
        "type": "object",
        "properties": {
          "issueDate": {
            "format": "date-time",
            "description": "The issue date of this waiver, in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "expirationDate": {
            "format": "date-time",
            "description": "The expiration date of this waiver, in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "issuerName": {
            "description": "The name of the person who issued this waiver.",
            "maxLength": 32,
            "type": "string",
            "example": "John Smith"
          },
          "waiverDescription": {
            "description": "The description of this waiver.",
            "maxLength": 128,
            "type": "string",
            "example": "Example waiver description"
          },
          "requestingUnit": {
            "description": "The unit requesting this waiver.",
            "maxLength": 24,
            "type": "string",
            "example": "2A1"
          },
          "requesterName": {
            "description": "The name of the person requesting this waiver.",
            "maxLength": 32,
            "type": "string",
            "example": "Jane Doe"
          },
          "requesterPhoneNumber": {
            "description": "The phone number of the person requesting this waiver.",
            "maxLength": 24,
            "type": "string",
            "example": "808-123-4567"
          },
          "waiverAppliesTo": {
            "description": "Description of the entities to which this waiver applies.",
            "maxLength": 50,
            "type": "string",
            "example": "C017A"
          },
          "hasExpired": {
            "description": "Boolean indicating whether or not this waiver has expired.",
            "type": "boolean",
            "example": false
          },
          "waiverLastChangedDate": {
            "format": "date-time",
            "description": "The datetime of the most recent change made to this waiver data, in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "waiverLastChangedBy": {
            "description": "The name of the person who made the most recent change to this Waiver data.",
            "maxLength": 32,
            "type": "string",
            "example": "J. Appleseed"
          }
        }
      },
      "Waiver_Ingest": {
        "description": "Collection documenting operational waivers that have been issued for the Site associated with this record.",
        "type": "object",
        "properties": {
          "issueDate": {
            "format": "date-time",
            "description": "The issue date of this waiver, in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "expirationDate": {
            "format": "date-time",
            "description": "The expiration date of this waiver, in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "issuerName": {
            "description": "The name of the person who issued this waiver.",
            "maxLength": 32,
            "type": "string",
            "example": "John Smith"
          },
          "waiverDescription": {
            "description": "The description of this waiver.",
            "maxLength": 128,
            "type": "string",
            "example": "Example waiver description"
          },
          "requestingUnit": {
            "description": "The unit requesting this waiver.",
            "maxLength": 24,
            "type": "string",
            "example": "2A1"
          },
          "requesterName": {
            "description": "The name of the person requesting this waiver.",
            "maxLength": 32,
            "type": "string",
            "example": "Jane Doe"
          },
          "requesterPhoneNumber": {
            "description": "The phone number of the person requesting this waiver.",
            "maxLength": 24,
            "type": "string",
            "example": "808-123-4567"
          },
          "waiverAppliesTo": {
            "description": "Description of the entities to which this waiver applies.",
            "maxLength": 50,
            "type": "string",
            "example": "C017A"
          },
          "hasExpired": {
            "description": "Boolean indicating whether or not this waiver has expired.",
            "type": "boolean",
            "example": false
          },
          "waiverLastChangedDate": {
            "format": "date-time",
            "description": "The datetime of the most recent change made to this waiver data, in ISO8601 UTC format with millisecond precision.",
            "type": "string",
            "example": "2024-01-01T16:00:00.000Z"
          },
          "waiverLastChangedBy": {
            "description": "The name of the person who made the most recent change to this Waiver data.",
            "maxLength": 32,
            "type": "string",
            "example": "J. Appleseed"
          }
        }
      }
    }
  }
}